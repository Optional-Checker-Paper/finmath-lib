var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":82,"id":15905,"methods":[{"el":43,"sc":2,"sl":39},{"el":81,"sc":2,"sl":55}],"name":"EuropeanOptionDeltaPathwise","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1022":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]},"test_1299":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]},"test_277":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]},"test_450":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]},"test_714":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]},"test_802":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]},"test_938":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]},"test_983":{"methods":[{"sl":39},{"sl":55}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":42},{"sl":57},{"sl":63},{"sl":64},{"sl":67},{"sl":68},{"sl":71},{"sl":72},{"sl":73},{"sl":76},{"sl":77},{"sl":78},{"sl":80}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [], [], [], [], [], [], [], [], [], [], [], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [], [], [], [], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [983, 450, 1299, 277, 714, 938, 1022, 802], [], [983, 450, 1299, 277, 714, 938, 1022, 802], [], []]