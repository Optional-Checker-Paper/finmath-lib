var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":44,"id":15360,"methods":[{"el":27,"sc":2,"sl":25},{"el":43,"sc":2,"sl":32}],"name":"AbstractAssetMonteCarloProduct","sl":20}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_123":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0]","pass":true,"statements":[{"sl":26}]},"test_127":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_132":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_138":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_140":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_150":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0.05]","pass":true,"statements":[{"sl":26}]},"test_151":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_152":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_162":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_170":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_19":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[0]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_190":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_215":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_232":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_258":{"methods":[{"sl":25},{"sl":32}],"name":"testProductImplementation","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_262":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_282":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_284":{"methods":[{"sl":25}],"name":"testHedgePerformance[MonteCarloAssetModel [model=BlackScholesModel [initialValue=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@50de0926,\n ID=0], riskFreeRate=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@2473b9ce,\n ID=1], volatility=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@60438a68,\n ID=2], randomVariableFactory=RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.0, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=false, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]], initialState=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@140e5a13,\n ID=3]], drift=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@3439f68d,\n ID=6]], factorLoadings=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@60438a68,\n ID=2]]]]-EuropeanOption [maturity=5.0, strike=1.2840254166877414, underlyingIndex=0, nameOfUnderliyng=null]]","pass":true,"statements":[{"sl":26}]},"test_294":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_307":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0.01]","pass":true,"statements":[{"sl":26}]},"test_312":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_323":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_328":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_329":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_332":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_333":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_340":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_355":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[1]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_359":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_360":{"methods":[{"sl":25},{"sl":32}],"name":"hTest","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_380":{"methods":[{"sl":25}],"name":"testHedgePerformance","pass":true,"statements":[{"sl":26}]},"test_383":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloAsianOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_397":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_399":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_402":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_41":{"methods":[{"sl":25}],"name":"testHedgePerformance[MonteCarloAssetModel [model=BlackScholesModel [initialValue=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@50de0926,\n ID=0], riskFreeRate=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@2473b9ce,\n ID=1], volatility=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@60438a68,\n ID=2], randomVariableFactory=RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.0, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=false, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]], initialState=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@140e5a13,\n ID=3]], drift=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@3439f68d,\n ID=6]], factorLoadings=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@60438a68,\n ID=2]]]]-AbstractMonteCarloProduct [currency=null]]","pass":true,"statements":[{"sl":26}]},"test_423":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_44":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_459":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloBermudanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_467":{"methods":[{"sl":25},{"sl":32}],"name":"test[xi=0.5}]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_468":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_494":{"methods":[{"sl":25}],"name":"testSensitivities","pass":true,"statements":[{"sl":26}]},"test_5":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_501":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_503":{"methods":[{"sl":25},{"sl":32}],"name":"bsTest","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_506":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_508":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_512":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_515":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloEuropeanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_520":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloAsianOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_523":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_527":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloBermudanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_53":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloEuropeanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_533":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_535":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[2]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_557":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_566":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_579":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_585":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_592":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_644":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_70":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_77":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_78":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_87":{"methods":[{"sl":25},{"sl":32}],"name":"test[xi=0}]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_90":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_93":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_99":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [151, 557, 644, 258, 140, 90, 332, 423, 329, 132, 77, 99, 467, 380, 515, 503, 44, 340, 215, 506, 397, 383, 262, 162, 527, 323, 328, 123, 592, 399, 282, 150, 494, 312, 138, 152, 459, 307, 501, 284, 585, 170, 78, 41, 232, 87, 359, 512, 566, 190, 508, 294, 468, 360, 402, 533, 523, 520, 579, 5, 333, 53, 93, 70, 127], [151, 557, 644, 258, 140, 90, 332, 423, 329, 132, 77, 99, 467, 380, 515, 503, 44, 340, 215, 506, 397, 383, 262, 162, 527, 323, 328, 123, 592, 399, 282, 150, 494, 312, 138, 152, 459, 307, 501, 284, 585, 170, 78, 41, 232, 87, 359, 512, 566, 190, 508, 294, 468, 360, 402, 533, 523, 520, 579, 5, 333, 53, 93, 70, 127], [], [], [], [], [], [151, 557, 355, 644, 258, 140, 90, 332, 423, 329, 132, 77, 99, 467, 19, 503, 44, 340, 215, 506, 397, 262, 162, 323, 328, 592, 399, 282, 312, 138, 152, 501, 585, 170, 78, 535, 87, 359, 512, 566, 508, 294, 468, 360, 402, 533, 579, 5, 333, 70, 127], [], [], [151, 557, 355, 644, 258, 140, 90, 332, 423, 329, 132, 77, 99, 467, 19, 503, 44, 340, 215, 506, 397, 262, 162, 323, 328, 592, 399, 282, 312, 138, 152, 501, 585, 170, 78, 535, 87, 359, 512, 566, 508, 294, 468, 360, 402, 533, 579, 5, 333, 70, 127], [151, 557, 355, 644, 258, 140, 90, 332, 423, 329, 132, 77, 99, 467, 19, 503, 44, 340, 215, 506, 397, 262, 162, 323, 328, 592, 399, 282, 312, 138, 152, 501, 585, 170, 78, 535, 87, 359, 512, 566, 508, 294, 468, 360, 402, 533, 579, 5, 333, 70, 127], [], [], [], [], [], [], [], []]