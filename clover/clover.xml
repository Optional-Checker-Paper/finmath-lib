<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1666617593817" clover="4.4.1">
   <project name="finmath lib 6.0.9-SNAPSHOT" timestamp="1666616199609">
      <metrics coveredelements="15843" complexity="10192" loc="104147" methods="5446" classes="718" statements="25013" packages="84" coveredconditionals="2814" coveredmethods="2232" elements="37875" ncloc="56712" files="595" conditionals="7416" coveredstatements="10797"/>
      <package name="net.finmath.montecarlo.interestrate">
         <metrics coveredelements="68" complexity="103" loc="1150" methods="92" classes="10" statements="145" coveredconditionals="2" coveredmethods="27" elements="253" ncloc="544" files="10" conditionals="16" coveredstatements="39"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/CalibrationProduct.java" name="CalibrationProduct.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="12" loc="107" coveredmethods="8" methods="11" elements="31" classes="1" ncloc="56" statements="18" conditionals="2" coveredstatements="13"/>
            <class name="CalibrationProduct">
               <metrics coveredelements="21" coveredconditionals="0" complexity="12" coveredmethods="8" methods="11" elements="31" statements="18" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,RandomVariable,double,int)" num="35" count="3021" type="method"/>
            <line num="36" count="3021" type="stmt"/>
            <line num="37" count="3021" type="stmt"/>
            <line num="38" count="3021" type="stmt"/>
            <line num="39" count="3021" type="stmt"/>
            <line num="40" count="3021" type="stmt"/>
            <line num="41" count="3021" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,RandomVariable,double)" num="44" count="3021" type="method"/>
            <line num="45" count="3021" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,double,double)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(AbstractLIBORMonteCarloProduct,RandomVariable,double)" num="52" count="3021" type="method"/>
            <line num="53" count="3021" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(AbstractLIBORMonteCarloProduct,double,double)" num="56" count="2244" type="method"/>
            <line num="57" count="2244" type="stmt"/>
            <line complexity="2" visibility="public" signature="getName() : String" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProduct() : AbstractLIBORMonteCarloProduct" num="76" count="372323" type="method"/>
            <line num="77" count="372322" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTargetValue() : RandomVariable" num="83" count="347593" type="method"/>
            <line num="84" count="347685" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeight() : double" num="90" count="345281" type="method"/>
            <line num="91" count="345379" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPriority() : Integer" num="97" count="231247" type="method"/>
            <line num="98" count="231246" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMarketModel.java" name="LIBORMarketModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORMarketModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/LIBORModel.java" name="LIBORModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="74" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/LIBORModelMonteCarloSimulationModel.java" name="LIBORModelMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="66" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORModelMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMonteCarloSimulationFromLIBORModel.java" name="LIBORMonteCarloSimulationFromLIBORModel.java">
            <metrics coveredelements="47" coveredconditionals="2" complexity="31" loc="206" coveredmethods="19" methods="27" elements="77" classes="1" ncloc="144" statements="44" conditionals="6" coveredstatements="26"/>
            <class name="LIBORMonteCarloSimulationFromLIBORModel">
               <metrics coveredelements="47" coveredconditionals="2" complexity="31" coveredmethods="19" methods="27" elements="77" statements="44" conditionals="6" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromLIBORModel(MonteCarloProcess)" num="32" count="75" type="method"/>
            <line num="33" count="75" type="stmt"/>
            <line num="35" count="75" type="stmt"/>
            <line num="36" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromLIBORModel(LIBORModel,MonteCarloProcess)" num="45" count="3191" type="method"/>
            <line num="47" count="3191" type="stmt"/>
            <line num="48" count="3190" type="stmt"/>
            <line num="49" count="3189" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="52" count="3082" type="method"/>
            <line num="54" count="3082" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="57" count="594850" type="method"/>
            <line num="59" count="594850" type="stmt"/>
            <line num="60" count="594804" type="stmt"/>
            <line falsecount="593875" truecount="948" num="60" type="cond"/>
            <line num="61" count="948" type="stmt"/>
            <line num="63" count="594909" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="66" count="6" type="method"/>
            <line num="68" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="71" count="300" type="method"/>
            <line num="73" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="76" count="21665" type="method"/>
            <line num="78" count="21718" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="86" count="60608" type="method"/>
            <line num="88" count="60603" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="91" count="599167" type="method"/>
            <line num="93" count="599187" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="96" count="466355" type="method"/>
            <line num="98" count="466328" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="106" count="1400" type="method"/>
            <line num="108" count="1400" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="122" count="5387214" type="method"/>
            <line num="125" count="5387755" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="128" count="4965" type="method"/>
            <line num="130" count="4965" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="133" count="569" type="method"/>
            <line num="135" count="569" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="138" count="874" type="method"/>
            <line num="140" count="874" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="147" count="1637" type="method"/>
            <line num="149" count="1637" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="152" count="632115" type="method"/>
            <line num="154" count="632190" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : LIBORModel" num="157" count="27882625" type="method"/>
            <line num="159" count="27887482" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModelMonteCarloSimulationModel" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : LIBORModelMonteCarloSimulationModel" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="202" count="5" type="method"/>
            <line num="204" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMonteCarloSimulationFromTermStructureModel.java" name="LIBORMonteCarloSimulationFromTermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="195" coveredmethods="0" methods="26" elements="68" classes="1" ncloc="131" statements="38" conditionals="4" coveredstatements="0"/>
            <class name="LIBORMonteCarloSimulationFromTermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="26" elements="68" statements="38" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromTermStructureModel(TermStructureModel,MonteCarloProcess)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromTermStructureModel(MonteCarloProcess)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModelMonteCarloSimulationModel" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : TermStructureMonteCarloSimulationModel" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/ShortRateModel.java" name="ShortRateModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureModel.java" name="TermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="109" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="23" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureMonteCarloSimulationFromTermStructureModel.java" name="TermStructureMonteCarloSimulationFromTermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="165" coveredmethods="0" methods="20" elements="56" classes="1" ncloc="107" statements="32" conditionals="4" coveredstatements="0"/>
            <class name="TermStructureMonteCarloSimulationFromTermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="20" elements="56" statements="32" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructureMonteCarloSimulationFromTermStructureModel(TermStructureModel,MonteCarloProcess)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TermStructureMonteCarloSimulationFromTermStructureModel(MonteCarloProcess)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : TermStructureMonteCarloSimulationModel" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : TermStructureMonteCarloSimulationModel" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureMonteCarloSimulationModel.java" name="TermStructureMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="142" coveredmethods="0" methods="6" elements="17" classes="1" ncloc="40" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getForwardRate(LocalDateTime,LocalDateTime,LocalDateTime) : RandomVariable" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNumeraire(LocalDateTime) : RandomVariable" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLIBOR(LocalDateTime,LocalDateTime,LocalDateTime) : RandomVariable" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLIBOR(double,double,double) : RandomVariable" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNumberOfFactors() : int" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getBrownianMotion() : BrownianMotion" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation">
         <metrics coveredelements="13" complexity="10" loc="273" methods="10" classes="4" statements="11" coveredconditionals="0" coveredmethods="6" elements="21" ncloc="76" files="4" conditionals="0" coveredstatements="7"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/AbstractRandomVariableDifferentiableFactory.java" name="AbstractRandomVariableDifferentiableFactory.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="70" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="AbstractRandomVariableDifferentiableFactory">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRandomVariableDifferentiableFactory(RandomVariableFactory)" num="35" count="1081" type="method"/>
            <line num="36" count="1081" type="stmt"/>
            <line num="37" count="1081" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractRandomVariableDifferentiableFactory()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariableDifferentiable" num="44" count="375240" type="method"/>
            <line num="46" count="375240" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariableNonDifferentiable(double,double) : RandomVariable" num="55" count="375454" type="method"/>
            <line num="57" count="375452" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariableNonDifferentiable(double,double[]) : RandomVariable" num="60" count="17588" type="method"/>
            <line num="62" count="17588" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="65" count="28" type="method"/>
            <line num="67" count="28" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/IndependentModelParameterProvider.java" name="IndependentModelParameterProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IndependentModelParameterProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiable.java" name="RandomVariableDifferentiable.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="106" coveredmethods="1" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="RandomVariableDifferentiable">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="getGradient() : Map&lt;Long, RandomVariable&gt;" num="64" count="1657" type="method"/>
            <line num="65" count="1657" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTangents() : Map&lt;Long, RandomVariable&gt;" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getCloneIndependent() : RandomVariableDifferentiable" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableFactory.java" name="RandomVariableDifferentiableFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="66" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.rootfinder">
         <metrics coveredelements="152" complexity="61" loc="828" methods="35" classes="11" statements="148" coveredconditionals="23" coveredmethods="26" elements="219" ncloc="365" files="10" conditionals="36" coveredstatements="103"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/AbstractRootFinder.java" name="AbstractRootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="18" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="AbstractRootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setValueAndDerivative(double,double) : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/BisectionSearch.java" name="BisectionSearch.java">
            <metrics coveredelements="38" coveredconditionals="7" complexity="11" loc="140" coveredmethods="7" methods="7" elements="40" classes="1" ncloc="62" statements="25" conditionals="8" coveredstatements="24"/>
            <class name="BisectionSearch">
               <metrics coveredelements="38" coveredconditionals="7" complexity="11" coveredmethods="7" methods="7" elements="40" statements="25" conditionals="8" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="BisectionSearch(double,double)" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="49" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="58" count="43" type="method"/>
            <line num="60" count="43" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValue(double) : void" num="66" count="43" type="method"/>
            <line num="68" count="43" type="stmt"/>
            <line falsecount="41" truecount="2" num="68" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="74" type="cond"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="88" count="41" type="stmt"/>
            <line falsecount="21" truecount="20" num="88" type="cond"/>
            <line num="92" count="20" type="stmt"/>
            <line num="93" count="20" type="stmt"/>
            <line num="98" count="21" type="stmt"/>
            <line num="99" count="21" type="stmt"/>
            <line num="103" count="41" type="stmt"/>
            <line num="106" count="41" type="stmt"/>
            <line falsecount="41" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="41" type="stmt"/>
            <line num="114" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="120" count="1" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="128" count="45" type="method"/>
            <line num="130" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="136" count="43" type="method"/>
            <line num="138" count="43" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/NewtonsMethod.java" name="NewtonsMethod.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="8" loc="95" coveredmethods="7" methods="7" elements="21" classes="1" ncloc="42" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="NewtonsMethod">
               <metrics coveredelements="21" coveredconditionals="2" complexity="8" coveredmethods="7" methods="7" elements="21" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="NewtonsMethod(double)" num="28" count="7051" type="method"/>
            <line num="29" count="7051" type="stmt"/>
            <line num="30" count="7051" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="36" count="7053" type="method"/>
            <line num="38" count="7053" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="44" count="2238095" type="method"/>
            <line num="46" count="2238784" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValueAndDerivative(double,double) : void" num="57" count="2252759" type="method"/>
            <line num="60" count="2254302" type="stmt"/>
            <line falsecount="2219052" truecount="35673" num="60" type="cond"/>
            <line num="62" count="35674" type="stmt"/>
            <line num="63" count="35675" type="stmt"/>
            <line num="67" count="2255511" type="stmt"/>
            <line num="69" count="2255961" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="75" count="2243681" type="method"/>
            <line num="77" count="2244722" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="83" count="2255612" type="method"/>
            <line num="85" count="2256686" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="91" count="2247767" type="method"/>
            <line num="93" count="2248633" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/RiddersMethod.java" name="RiddersMethod.java">
            <metrics coveredelements="73" coveredconditionals="12" complexity="25" loc="208" coveredmethods="8" methods="9" elements="101" classes="1" ncloc="122" statements="70" conditionals="22" coveredstatements="53"/>
            <class name="RiddersMethod">
               <metrics coveredelements="73" coveredconditionals="12" complexity="25" coveredmethods="8" methods="9" elements="101" statements="70" conditionals="22" coveredstatements="53"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RiddersMethod(double,double)" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="67" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="75" count="24" type="method"/>
            <line num="77" count="24" type="stmt"/>
            <line complexity="12" visibility="public" signature="setValue(double) : void" num="83" count="24" type="method"/>
            <line num="85" count="24" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="119" type="cond"/>
            <line num="120" count="11" type="stmt"/>
            <line num="121" count="11" type="stmt"/>
            <line num="122" count="11" type="stmt"/>
            <line num="124" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="124" type="cond"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="131" count="11" type="stmt"/>
            <line falsecount="1" truecount="10" num="131" type="cond"/>
            <line num="133" count="10" type="stmt"/>
            <line num="134" count="10" type="stmt"/>
            <line num="136" count="10" type="stmt"/>
            <line num="137" count="10" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="139" type="cond"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="11" type="stmt"/>
            <line num="160" count="11" type="stmt"/>
            <line num="161" count="11" type="stmt"/>
            <line num="166" count="11" type="stmt"/>
            <line num="169" count="24" type="stmt"/>
            <line falsecount="1" truecount="23" num="169" type="cond"/>
            <line num="171" count="23" type="stmt"/>
            <line num="174" count="23" type="stmt"/>
            <line num="177" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="183" count="1" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="191" count="26" type="method"/>
            <line num="193" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="199" count="24" type="method"/>
            <line num="201" count="24" type="stmt"/>
            <line complexity="4" visibility="private" signature="sign(double,double) : double" num="204" count="12" type="method"/>
            <line num="206" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="206" type="cond"/>
            <line falsecount="11" truecount="1" num="206" type="cond"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/RootFinder.java" name="RootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/RootFinderWithDerivative.java" name="RootFinderWithDerivative.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RootFinderWithDerivative">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/SecantMethod.java" name="SecantMethod.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="5" loc="88" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="34" statements="14" conditionals="2" coveredstatements="14"/>
            <class name="SecantMethod">
               <metrics coveredelements="20" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="SecantMethod(double,double)" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="38" count="25" type="method"/>
            <line num="41" count="25" type="stmt"/>
            <line num="42" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValue(double) : void" num="50" count="15" type="method"/>
            <line num="53" count="15" type="stmt"/>
            <line num="54" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="54" type="cond"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="14" type="stmt"/>
            <line num="64" count="15" type="stmt"/>
            <line num="65" count="15" type="stmt"/>
            <line num="67" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValueAndDerivative(double,double) : void" num="79" count="10" type="method"/>
            <line num="82" count="10" type="stmt"/>
            <line num="83" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/StochasticNewtonMethod.java" name="StochasticNewtonMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="92" coveredmethods="0" methods="7" elements="35" classes="2" ncloc="60" statements="26" conditionals="2" coveredstatements="0"/>
            <class name="StochasticNewtonMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="35" statements="26" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="StochasticNewtonMethod.MethodForAccuracy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticNewtonMethod(RandomVariable,MethodForAccuracy)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : RandomVariable" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValueAndDerivative(RandomVariable,RandomVariable) : void" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : RandomVariable" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/StochasticRootFinder.java" name="StochasticRootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticRootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/rootfinder/StochasticRootFinderUsingDerivative.java" name="StochasticRootFinderUsingDerivative.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticRootFinderUsingDerivative">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.fouriermethod">
         <metrics coveredelements="0" complexity="0" loc="25" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="6" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/CharacteristicFunction.java" name="CharacteristicFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CharacteristicFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.finitedifference.solvers">
         <metrics coveredelements="112" complexity="16" loc="174" methods="4" classes="1" statements="88" coveredconditionals="22" coveredmethods="4" elements="116" ncloc="134" files="1" conditionals="24" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/solvers/FDMThetaMethod.java" name="FDMThetaMethod.java">
            <metrics coveredelements="112" coveredconditionals="22" complexity="16" loc="174" coveredmethods="4" methods="4" elements="116" classes="1" ncloc="134" statements="88" conditionals="24" coveredstatements="86"/>
            <class name="FDMThetaMethod">
               <metrics coveredelements="112" coveredconditionals="22" complexity="16" coveredmethods="4" methods="4" elements="116" statements="88" conditionals="24" coveredstatements="86"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMThetaMethod(FiniteDifference1DModel,FiniteDifference1DBoundary,double,double,double)" num="31" count="5" type="method"/>
            <line num="32" count="5" type="stmt"/>
            <line num="33" count="5" type="stmt"/>
            <line num="34" count="5" type="stmt"/>
            <line num="35" count="5" type="stmt"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,double,DoubleUnaryOperator) : double[][]" num="39" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line num="50" count="5" type="stmt"/>
            <line num="52" count="5" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="56" count="5" type="stmt"/>
            <line num="57" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line falsecount="5" truecount="675" num="58" type="cond"/>
            <line num="59" count="675" type="stmt"/>
            <line num="63" count="5" type="stmt"/>
            <line num="64" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line falsecount="5" truecount="270" num="65" type="cond"/>
            <line num="66" count="270" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="73" count="5" type="stmt"/>
            <line num="74" count="5" type="stmt"/>
            <line num="75" count="5" type="stmt"/>
            <line falsecount="5" truecount="675" num="75" type="cond"/>
            <line num="76" count="675" type="stmt"/>
            <line falsecount="675" truecount="93045" num="76" type="cond"/>
            <line num="77" count="93045" type="stmt"/>
            <line falsecount="92370" truecount="675" num="77" type="cond"/>
            <line num="78" count="675" type="stmt"/>
            <line num="79" count="675" type="stmt"/>
            <line num="80" count="675" type="stmt"/>
            <line num="81" count="92370" type="stmt"/>
            <line falsecount="91700" truecount="670" num="81" type="cond"/>
            <line num="82" count="670" type="stmt"/>
            <line num="83" count="670" type="stmt"/>
            <line num="84" count="91700" type="stmt"/>
            <line falsecount="91030" truecount="670" num="84" type="cond"/>
            <line num="85" count="670" type="stmt"/>
            <line num="86" count="670" type="stmt"/>
            <line num="88" count="91030" type="stmt"/>
            <line num="89" count="91030" type="stmt"/>
            <line num="90" count="91030" type="stmt"/>
            <line num="91" count="91030" type="stmt"/>
            <line num="95" count="5" type="stmt"/>
            <line num="96" count="5" type="stmt"/>
            <line num="97" count="5" type="stmt"/>
            <line num="98" count="5" type="stmt"/>
            <line num="99" count="5" type="stmt"/>
            <line num="100" count="5" type="stmt"/>
            <line num="103" count="5" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line num="105" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line falsecount="5" truecount="675" num="106" type="cond"/>
            <line num="107" count="675" type="stmt"/>
            <line num="108" count="675" type="stmt"/>
            <line num="109" count="675" type="stmt"/>
            <line num="113" count="5" type="stmt"/>
            <line falsecount="5" truecount="265" num="113" type="cond"/>
            <line num="114" count="265" type="stmt"/>
            <line num="115" count="265" type="stmt"/>
            <line num="116" count="265" type="stmt"/>
            <line falsecount="265" truecount="37935" num="116" type="cond"/>
            <line num="117" count="37935" type="stmt"/>
            <line num="119" count="37935" type="stmt"/>
            <line num="122" count="265" type="stmt"/>
            <line num="123" count="265" type="stmt"/>
            <line num="124" count="265" type="stmt"/>
            <line num="125" count="265" type="stmt"/>
            <line num="126" count="265" type="stmt"/>
            <line num="127" count="265" type="stmt"/>
            <line num="129" count="265" type="stmt"/>
            <line num="130" count="265" type="stmt"/>
            <line num="131" count="265" type="stmt"/>
            <line num="133" count="265" type="stmt"/>
            <line num="135" count="265" type="stmt"/>
            <line num="137" count="265" type="stmt"/>
            <line num="140" count="265" type="stmt"/>
            <line num="141" count="265" type="stmt"/>
            <line num="143" count="265" type="stmt"/>
            <line num="145" count="265" type="stmt"/>
            <line num="147" count="265" type="stmt"/>
            <line num="149" count="265" type="stmt"/>
            <line num="150" count="265" type="stmt"/>
            <line num="151" count="265" type="stmt"/>
            <line num="153" count="5" type="stmt"/>
            <line num="154" count="5" type="stmt"/>
            <line num="155" count="5" type="stmt"/>
            <line num="156" count="5" type="stmt"/>
            <line num="157" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="timeReversedLowerBoundary(double,double) : double" num="164" count="530" type="method"/>
            <line num="165" count="530" type="stmt"/>
            <line complexity="1" visibility="private" signature="timeReversedUpperBoundary(double,double) : double" num="168" count="795" type="method"/>
            <line num="169" count="795" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate.products">
         <metrics coveredelements="83" complexity="35" loc="507" methods="23" classes="5" statements="104" coveredconditionals="8" coveredmethods="12" elements="145" ncloc="242" files="5" conditionals="18" coveredstatements="63"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/Bond.java" name="Bond.java">
            <metrics coveredelements="21" coveredconditionals="1" complexity="8" loc="108" coveredmethods="3" methods="6" elements="29" classes="1" ncloc="50" statements="21" conditionals="2" coveredstatements="17"/>
            <class name="Bond">
               <metrics coveredelements="21" coveredconditionals="1" complexity="8" coveredmethods="3" methods="6" elements="29" statements="21" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(LocalDateTime,String,double)" num="33" count="3" type="method"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(String,double)" num="44" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="58" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line num="62" count="3" type="stmt"/>
            <line num="63" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line num="71" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaturity(double) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/BondWithForeignNumeraire.java" name="BondWithForeignNumeraire.java">
            <metrics coveredelements="20" coveredconditionals="1" complexity="6" loc="91" coveredmethods="3" methods="4" elements="24" classes="1" ncloc="41" statements="18" conditionals="2" coveredstatements="16"/>
            <class name="BondWithForeignNumeraire">
               <metrics coveredelements="20" coveredconditionals="1" complexity="6" coveredmethods="3" methods="4" elements="24" statements="18" conditionals="2" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="BondWithForeignNumeraire(LocalDateTime,String,double)" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BondWithForeignNumeraire(String,double)" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="57" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/ForwardRateAgreementGeneralized.java" name="ForwardRateAgreementGeneralized.java">
            <metrics coveredelements="38" coveredconditionals="6" complexity="9" loc="121" coveredmethods="4" methods="4" elements="42" classes="1" ncloc="64" statements="30" conditionals="8" coveredstatements="28"/>
            <class name="ForwardRateAgreementGeneralized">
               <metrics coveredelements="38" coveredconditionals="6" complexity="9" coveredmethods="4" methods="4" elements="42" statements="30" conditionals="8" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(LocalDateTime,String,double,double,double,RandomVariable,RandomVariable,RandomVariable)" num="38" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(LocalDateTime,String,double,double,double)" num="60" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(String,double,double,double)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="78" count="5" type="method"/>
            <line num="81" count="5" type="stmt"/>
            <line num="82" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="90" count="5" type="stmt"/>
            <line num="91" count="5" type="stmt"/>
            <line num="94" count="5" type="stmt"/>
            <line num="97" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="97" type="cond"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="100" type="cond"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="5" type="stmt"/>
            <line num="111" count="5" type="stmt"/>
            <line num="114" count="5" type="stmt"/>
            <line num="115" count="5" type="stmt"/>
            <line num="116" count="5" type="stmt"/>
            <line num="119" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/HybridAssetMonteCarloProduct.java" name="HybridAssetMonteCarloProduct.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="5" loc="82" coveredmethods="2" methods="5" elements="10" classes="1" ncloc="29" statements="5" conditionals="0" coveredstatements="2"/>
            <class name="HybridAssetMonteCarloProduct">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="HybridAssetMonteCarloProduct()" num="29" count="7" type="method"/>
            <line num="30" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueForModifiedData(double,MonteCarloSimulationModel,Map&lt;String, Object&gt;) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,HybridAssetMonteCarloSimulation) : Map&lt;String, Object&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="66" count="9" type="method"/>
            <line num="68" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorDrift(LIBORModelMonteCarloSimulationModel,LIBORModelMonteCarloSimulationModel) : FactorTransform" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/WorstOfExpressCertificate.java" name="WorstOfExpressCertificate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="105" coveredmethods="0" methods="4" elements="40" classes="1" ncloc="58" statements="30" conditionals="6" coveredstatements="0"/>
            <class name="WorstOfExpressCertificate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="40" statements="30" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WorstOfExpressCertificate(double,double[],double[],double[],double[],double)" num="29" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,HybridAssetLIBORModelMonteCarloSimulation) : double" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getWorstPerformance(HybridAssetLIBORModelMonteCarloSimulation,double,double[]) : RandomVariable" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="103" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.products">
         <metrics coveredelements="0" complexity="13" loc="133" methods="6" classes="1" statements="30" coveredconditionals="0" coveredmethods="0" elements="44" ncloc="76" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/products/PortfolioMonteCarloProduct.java" name="PortfolioMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="6" elements="44" classes="1" ncloc="76" statements="30" conditionals="8" coveredstatements="0"/>
            <class name="PortfolioMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="6" elements="44" statements="30" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[],double[],Optional&lt;Integer&gt;)" num="45" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[],double[])" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[])" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="weightsOfOne(int) : double[]" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.products">
         <metrics coveredelements="352" complexity="172" loc="1702" methods="81" classes="13" statements="398" coveredconditionals="74" coveredmethods="34" elements="627" ncloc="847" files="13" conditionals="148" coveredstatements="244"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/AbstractAnalyticProduct.java" name="AbstractAnalyticProduct.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="31" coveredmethods="1" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="AbstractAnalyticProduct">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel) : double" num="28" count="25028316" type="method"/>
            <line num="29" count="25036453" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/AnalyticProduct.java" name="AnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/Cap.java" name="Cap.java">
            <metrics coveredelements="105" coveredconditionals="22" complexity="36" loc="314" coveredmethods="6" methods="11" elements="146" classes="1" ncloc="172" statements="97" conditionals="38" coveredstatements="77"/>
            <class name="Cap">
               <metrics coveredelements="105" coveredconditionals="22" complexity="36" coveredmethods="6" methods="11" elements="146" statements="97" conditionals="38" coveredstatements="77"/>
            </class>
            <line complexity="1" visibility="public" signature="Cap(Schedule,String,double,boolean,String,String,QuotingConvention)" num="71" count="130" type="method"/>
            <line num="72" count="130" type="stmt"/>
            <line num="73" count="130" type="stmt"/>
            <line num="74" count="130" type="stmt"/>
            <line num="75" count="130" type="stmt"/>
            <line num="76" count="130" type="stmt"/>
            <line num="77" count="130" type="stmt"/>
            <line num="78" count="130" type="stmt"/>
            <line num="79" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cap(Schedule,String,double,boolean,String,String)" num="95" count="78" type="method"/>
            <line num="96" count="78" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AnalyticModel) : double" num="99" count="34578" type="method"/>
            <line num="101" count="34578" type="stmt"/>
            <line falsecount="34500" truecount="78" num="101" type="cond"/>
            <line num="102" count="78" type="stmt"/>
            <line num="104" count="34501" type="stmt"/>
            <line complexity="14" visibility="public" signature="getValueAsPrice(double,AnalyticModel) : double" num="115" count="3262470" type="method"/>
            <line num="116" count="3262598" type="stmt"/>
            <line num="117" count="3262226" type="stmt"/>
            <line num="119" count="3261548" type="stmt"/>
            <line num="120" count="3261677" type="stmt"/>
            <line falsecount="3261764" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="130" count="3261863" type="stmt"/>
            <line num="131" count="3261949" type="stmt"/>
            <line falsecount="3262559" truecount="51858938" num="131" type="cond"/>
            <line num="132" count="51878491" type="stmt"/>
            <line num="133" count="51816218" type="stmt"/>
            <line num="134" count="51763321" type="stmt"/>
            <line num="141" count="51727676" type="stmt"/>
            <line falsecount="51748296" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="51762253" type="stmt"/>
            <line num="146" count="51776228" type="stmt"/>
            <line falsecount="0" truecount="51790193" num="146" type="cond"/>
            <line num="147" count="51800430" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="51933421" type="stmt"/>
            <line falsecount="0" truecount="51955430" num="159" type="cond"/>
            <line num="160" count="51938689" type="stmt"/>
            <line num="162" count="51958354" type="stmt"/>
            <line num="163" count="51962539" type="stmt"/>
            <line falsecount="3081" truecount="51963974" num="163" type="cond"/>
            <line num="164" count="51969551" type="stmt"/>
            <line num="167" count="51975030" type="stmt"/>
            <line num="168" count="51909705" type="stmt"/>
            <line falsecount="51914543" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="51924687" type="stmt"/>
            <line falsecount="32242199" truecount="19620916" num="171" type="cond"/>
            <line num="172" count="19623645" type="stmt"/>
            <line num="173" count="19625605" type="stmt"/>
            <line num="177" count="32245725" type="stmt"/>
            <line num="178" count="32251473" type="stmt"/>
            <line num="182" count="3262665" type="stmt"/>
            <line complexity="6" visibility="public" signature="getATMForward(AnalyticModel,boolean) : double" num="198" count="52520084" type="method"/>
            <line num="199" count="52532267" type="stmt"/>
            <line falsecount="12552451" truecount="40019142" num="199" type="cond"/>
            <line num="200" count="40020201" type="stmt"/>
            <line num="203" count="12552154" type="stmt"/>
            <line num="204" count="12553113" type="stmt"/>
            <line falsecount="12553775" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="12554412" type="stmt"/>
            <line num="215" count="12521280" type="stmt"/>
            <line num="217" count="12516893" type="stmt"/>
            <line num="218" count="12539311" type="stmt"/>
            <line num="219" count="12558989" type="stmt"/>
            <line num="221" count="12555895" type="stmt"/>
            <line complexity="7" visibility="public" signature="getImpliedVolatility(double,AnalyticModel,VolatilitySurface.QuotingConvention) : double" num="232" count="34500" type="method"/>
            <line num="233" count="34500" type="stmt"/>
            <line num="234" count="34498" type="stmt"/>
            <line num="235" count="34492" type="stmt"/>
            <line falsecount="34497" truecount="541209" num="235" type="cond"/>
            <line num="236" count="541247" type="stmt"/>
            <line num="237" count="541187" type="stmt"/>
            <line num="239" count="541117" type="stmt"/>
            <line falsecount="541142" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="243" count="541164" type="stmt"/>
            <line num="244" count="541189" type="stmt"/>
            <line falsecount="0" truecount="541189" num="244" type="cond"/>
            <line num="245" count="541210" type="stmt"/>
            <line num="248" count="541352" type="stmt"/>
            <line num="249" count="541279" type="stmt"/>
            <line num="250" count="541205" type="stmt"/>
            <line num="251" count="541211" type="stmt"/>
            <line num="254" count="34466" type="stmt"/>
            <line num="256" count="34498" type="stmt"/>
            <line num="257" count="34496" type="stmt"/>
            <line num="258" count="34499" type="stmt"/>
            <line num="259" count="34495" type="stmt"/>
            <line falsecount="34502" truecount="3227856" num="259" type="cond"/>
            <line num="260" count="3227986" type="stmt"/>
            <line num="261" count="3227774" type="stmt"/>
            <line num="262" count="3227818" type="stmt"/>
            <line num="263" count="3228034" type="stmt"/>
            <line num="264" count="3228277" type="stmt"/>
            <line num="265" count="3228374" type="stmt"/>
            <line num="266" count="3228931" type="stmt"/>
            <line num="267" count="3227827" type="stmt"/>
            <line num="268" count="3228810" type="stmt"/>
            <line num="269" count="3229029" type="stmt"/>
            <line num="271" count="34502" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="279" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="18" coveredconditionals="5" complexity="6" loc="60" coveredmethods="2" methods="2" elements="23" classes="1" ncloc="29" statements="13" conditionals="8" coveredstatements="11"/>
            <class name="Cashflow">
               <metrics coveredelements="18" coveredconditionals="5" complexity="6" coveredmethods="2" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean,String)" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : double" num="44" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="55" type="cond"/>
            <line num="56" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="56" type="cond"/>
            <line num="58" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/Deposit.java" name="Deposit.java">
            <metrics coveredelements="39" coveredconditionals="9" complexity="16" loc="132" coveredmethods="3" methods="9" elements="63" classes="1" ncloc="78" statements="40" conditionals="14" coveredstatements="27"/>
            <class name="Deposit">
               <metrics coveredelements="39" coveredconditionals="9" complexity="16" coveredmethods="3" methods="9" elements="63" statements="40" conditionals="14" coveredstatements="27"/>
            </class>
            <line complexity="2" visibility="public" signature="Deposit(Schedule,double,String)" num="38" count="133" type="method"/>
            <line num="39" count="133" type="stmt"/>
            <line num="40" count="133" type="stmt"/>
            <line num="41" count="133" type="stmt"/>
            <line num="42" count="133" type="stmt"/>
            <line num="45" count="133" type="stmt"/>
            <line falsecount="133" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : double" num="50" count="84871" type="method"/>
            <line num="52" count="84871" type="stmt"/>
            <line falsecount="84867" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="84869" type="stmt"/>
            <line num="57" count="84604" type="stmt"/>
            <line falsecount="84614" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="84623" type="stmt"/>
            <line num="63" count="84241" type="stmt"/>
            <line falsecount="84245" truecount="1" num="63" type="cond"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="84253" type="stmt"/>
            <line num="68" count="84135" type="stmt"/>
            <line num="69" count="84056" type="stmt"/>
            <line num="70" count="84666" type="stmt"/>
            <line num="72" count="84449" type="stmt"/>
            <line falsecount="84466" truecount="1" num="72" type="cond"/>
            <line num="73" count="1" type="stmt"/>
            <line num="76" count="84190" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : double" num="86" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRate() : double" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEndTime() : double" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingTime() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/Forward.java" name="Forward.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="80" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="40" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="Forward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="32" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Forward(double,double,String,double,String)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/ForwardRateAgreement.java" name="ForwardRateAgreement.java">
            <metrics coveredelements="32" coveredconditionals="7" complexity="15" loc="116" coveredmethods="3" methods="4" elements="55" classes="1" ncloc="61" statements="33" conditionals="18" coveredstatements="22"/>
            <class name="ForwardRateAgreement">
               <metrics coveredelements="32" coveredconditionals="7" complexity="15" coveredmethods="3" methods="4" elements="55" statements="33" conditionals="18" coveredstatements="22"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String,boolean)" num="40" count="120" type="method"/>
            <line num="41" count="120" type="stmt"/>
            <line num="42" count="120" type="stmt"/>
            <line num="43" count="120" type="stmt"/>
            <line num="44" count="120" type="stmt"/>
            <line num="45" count="120" type="stmt"/>
            <line num="46" count="120" type="stmt"/>
            <line num="49" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String)" num="62" count="120" type="method"/>
            <line num="63" count="120" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,AnalyticModel) : double" num="66" count="79592" type="method"/>
            <line num="68" count="79589" type="stmt"/>
            <line falsecount="79587" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="79585" type="stmt"/>
            <line num="73" count="79529" type="stmt"/>
            <line falsecount="79532" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="79530" type="stmt"/>
            <line num="78" count="79444" type="stmt"/>
            <line falsecount="79449" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="79448" type="stmt"/>
            <line num="83" count="79346" type="stmt"/>
            <line num="84" count="79328" type="stmt"/>
            <line num="86" count="79265" type="stmt"/>
            <line num="87" count="79312" type="stmt"/>
            <line falsecount="0" truecount="79312" num="87" type="cond"/>
            <line num="88" count="79313" type="stmt"/>
            <line num="92" count="79270" type="stmt"/>
            <line falsecount="0" truecount="79271" num="92" type="cond"/>
            <line num="93" count="79273" type="stmt"/>
            <line falsecount="0" truecount="79276" num="93" type="cond"/>
            <line num="94" count="79359" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : double" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/MarketForwardRateAgreement.java" name="MarketForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="91" coveredmethods="0" methods="2" elements="33" classes="1" ncloc="41" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="MarketForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="33" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketForwardRateAgreement(double,double,String,double,String)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : double" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/Performance.java" name="Performance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="55" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="23" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Performance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Performance(AbstractAnalyticProduct,AbstractAnalyticProduct)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="141" coveredmethods="0" methods="8" elements="30" classes="1" ncloc="54" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="30" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(Portfolio,List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(AnalyticProduct,double)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;)" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : List&lt;AnalyticProduct&gt;" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : List&lt;Double&gt;" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/Swap.java" name="Swap.java">
            <metrics coveredelements="48" coveredconditionals="7" complexity="19" loc="210" coveredmethods="8" methods="13" elements="65" classes="1" ncloc="112" statements="42" conditionals="10" coveredstatements="33"/>
            <class name="Swap">
               <metrics coveredelements="48" coveredconditionals="7" complexity="19" coveredmethods="8" methods="13" elements="65" statements="42" conditionals="10" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(AnalyticProduct,AnalyticProduct)" num="48" count="416" type="method"/>
            <line num="49" count="416" type="stmt"/>
            <line num="50" count="416" type="stmt"/>
            <line num="51" count="416" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String,boolean)" num="67" count="201" type="method"/>
            <line num="75" count="201" type="stmt"/>
            <line num="76" count="201" type="stmt"/>
            <line num="77" count="201" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String)" num="92" count="201" type="method"/>
            <line num="98" count="201" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,double,String,Schedule,String,String)" num="111" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="121" count="288156" type="method"/>
            <line num="124" count="288162" type="stmt"/>
            <line num="125" count="286734" type="stmt"/>
            <line num="127" count="286784" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurve) : double" num="130" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurve,DiscountCurve) : double" num="134" count="4602" type="method"/>
            <line num="135" count="4602" type="stmt"/>
            <line num="136" count="4602" type="stmt"/>
            <line falsecount="0" truecount="4602" num="136" type="cond"/>
            <line num="137" count="4602" type="stmt"/>
            <line num="139" count="4602" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurve) : double" num="142" count="3" type="method"/>
            <line num="143" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurve,AnalyticModel) : double" num="146" count="423191" type="method"/>
            <line num="147" count="423210" type="stmt"/>
            <line falsecount="420431" truecount="2762" num="147" type="cond"/>
            <line num="148" count="423132" type="stmt"/>
            <line falsecount="417645" truecount="5555" num="148" type="cond"/>
            <line num="149" count="5555" type="stmt"/>
            <line num="150" count="5555" type="stmt"/>
            <line num="153" count="423219" type="stmt"/>
            <line num="154" count="423123" type="stmt"/>
            <line num="156" count="423225" type="stmt"/>
            <line num="157" count="423251" type="stmt"/>
            <line falsecount="423263" truecount="8382767" num="157" type="cond"/>
            <line num="158" count="8385408" type="stmt"/>
            <line num="159" count="8375316" type="stmt"/>
            <line num="160" count="8365528" type="stmt"/>
            <line num="162" count="8357059" type="stmt"/>
            <line num="163" count="8388399" type="stmt"/>
            <line num="165" count="8387187" type="stmt"/>
            <line num="168" count="423272" type="stmt"/>
            <line num="170" count="423271" type="stmt"/>
            <line num="173" count="423273" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : AnalyticProduct" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : AnalyticProduct" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescriptor() : InterestRateSwapProductDescriptor" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/SwapAnnuity.java" name="SwapAnnuity.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="10" loc="137" coveredmethods="5" methods="8" elements="34" classes="1" ncloc="57" statements="22" conditionals="4" coveredstatements="15"/>
            <class name="SwapAnnuity">
               <metrics coveredelements="23" coveredconditionals="3" complexity="10" coveredmethods="5" methods="8" elements="34" statements="22" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapAnnuity(Schedule,String)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,DiscountCurve) : double" num="57" count="285255" type="method"/>
            <line num="58" count="285271" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,ForwardCurve) : double" num="70" count="2765" type="method"/>
            <line num="71" count="2765" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,DiscountCurve) : double" num="83" count="285196" type="method"/>
            <line num="84" count="285221" type="stmt"/>
            <line num="85" count="285226" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,ForwardCurve) : double" num="99" count="2765" type="method"/>
            <line num="100" count="2765" type="stmt"/>
            <line num="101" count="2765" type="stmt"/>
            <line num="102" count="2765" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSwapAnnuity(double,Schedule,DiscountCurve,AnalyticModel) : double" num="117" count="924879" type="method"/>
            <line num="118" count="924926" type="stmt"/>
            <line num="119" count="924976" type="stmt"/>
            <line falsecount="924867" truecount="14254105" num="119" type="cond"/>
            <line num="120" count="14263504" type="stmt"/>
            <line num="121" count="14241347" type="stmt"/>
            <line falsecount="14251549" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="14256130" type="stmt"/>
            <line num="126" count="14232863" type="stmt"/>
            <line num="127" count="14257541" type="stmt"/>
            <line num="129" count="924933" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="85" coveredconditionals="21" complexity="39" loc="306" coveredmethods="6" methods="17" elements="131" classes="1" ncloc="160" statements="78" conditionals="36" coveredstatements="58"/>
            <class name="SwapLeg">
               <metrics coveredelements="85" coveredconditionals="21" complexity="39" coveredmethods="6" methods="17" elements="131" statements="78" conditionals="36" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapLeg(LocalDateTime,Schedule,String,double[],double[],String,boolean)" num="61" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double[],double[],String,boolean)" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double[],double[],String,boolean)" num="100" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double,String,String,boolean)" num="115" count="25069183" type="method"/>
            <line num="116" count="25067346" type="stmt"/>
            <line num="117" count="25070865" type="stmt"/>
            <line num="118" count="25074467" type="stmt"/>
            <line num="119" count="25076405" type="stmt"/>
            <line num="120" count="25082971" type="stmt"/>
            <line num="121" count="25082669" type="stmt"/>
            <line falsecount="25083147" truecount="0" num="121" type="cond"/>
            <line num="122" count="25084835" type="stmt"/>
            <line num="124" count="25086581" type="stmt"/>
            <line num="125" count="25063350" type="stmt"/>
            <line num="126" count="25088170" type="stmt"/>
            <line num="127" count="25090136" type="stmt"/>
            <line num="128" count="25064078" type="stmt"/>
            <line num="129" count="25075898" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,String,boolean)" num="142" count="25044287" type="method"/>
            <line num="143" count="25032352" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,boolean)" num="155" count="25014673" type="method"/>
            <line num="156" count="25004448" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double,String)" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String)" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="20" visibility="public" signature="getValue(double,AnalyticModel) : double" num="184" count="25609170" type="method"/>
            <line num="186" count="25613450" type="stmt"/>
            <line falsecount="25615537" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="25618274" type="stmt"/>
            <line num="191" count="25537666" type="stmt"/>
            <line falsecount="25555411" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="25562124" type="stmt"/>
            <line num="198" count="25572013" type="stmt"/>
            <line num="199" count="25508973" type="stmt"/>
            <line num="200" count="25452232" type="stmt"/>
            <line falsecount="5304" truecount="25461563" num="200" type="cond"/>
            <line num="201" count="25470830" type="stmt"/>
            <line num="204" count="25466330" type="stmt"/>
            <line num="205" count="25484854" type="stmt"/>
            <line falsecount="0" truecount="25500769" num="205" type="cond"/>
            <line num="206" count="25516293" type="stmt"/>
            <line num="207" count="25476849" type="stmt"/>
            <line falsecount="25493298" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="212" count="25498950" type="stmt"/>
            <line num="213" count="25434756" type="stmt"/>
            <line falsecount="25441358" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="25457375" type="stmt"/>
            <line falsecount="25469361" truecount="0" num="217" type="cond"/>
            <line num="219" count="25491564" type="stmt"/>
            <line num="220" count="25502603" type="stmt"/>
            <line falsecount="25571352" truecount="450468227" num="220" type="cond"/>
            <line num="221" count="455634659" type="stmt"/>
            <line num="222" count="443310764" type="stmt"/>
            <line num="223" count="435282635" type="stmt"/>
            <line num="224" count="424620285" type="stmt"/>
            <line num="225" count="413718918" type="stmt"/>
            <line num="227" count="401561658" type="stmt"/>
            <line num="228" count="405336839" type="stmt"/>
            <line falsecount="218687399" truecount="222959941" num="228" type="cond"/>
            <line num="229" count="224582403" type="stmt"/>
            <line num="236" count="440961007" type="stmt"/>
            <line falsecount="0" truecount="445534957" num="236" type="cond"/>
            <line num="237" count="449899964" type="stmt"/>
            <line falsecount="452389363" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="455092885" type="stmt"/>
            <line falsecount="0" truecount="460656718" num="241" type="cond"/>
            <line num="242" count="459784135" type="stmt"/>
            <line num="245" count="464468066" type="stmt"/>
            <line falsecount="448394420" truecount="15901091" num="245" type="cond"/>
            <line num="246" count="16014660" type="stmt"/>
            <line falsecount="0" truecount="16101122" num="246" type="cond"/>
            <line num="247" count="14991067" type="stmt"/>
            <line falsecount="5216" truecount="15647188" num="247" type="cond"/>
            <line num="251" count="25577435" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreads() : double[]" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSpread() : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="287" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwapLegProductDescriptor" num="302" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.annuitymapping">
         <metrics coveredelements="267" complexity="63" loc="894" methods="34" classes="9" statements="220" coveredconditionals="41" coveredmethods="28" elements="300" ncloc="470" files="8" conditionals="46" coveredstatements="198"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMapping.java" name="AnnuityMapping.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="55" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnnuityMapping">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnuityMapping.AnnuityMappingType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMappingFactory.java" name="AnnuityMappingFactory.java">
            <metrics coveredelements="35" coveredconditionals="3" complexity="11" loc="155" coveredmethods="3" methods="5" elements="46" classes="1" ncloc="74" statements="37" conditionals="4" coveredstatements="29"/>
            <class name="AnnuityMappingFactory">
               <metrics coveredelements="35" coveredconditionals="3" complexity="11" coveredmethods="3" methods="5" elements="46" statements="37" conditionals="4" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="buildAnnuityMapping(double,Schedule,Schedule,String,String,String,AnnuityMappingType,VolatilityCubeModel) : AnnuityMapping" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildAnnuityMapping(double,Schedule,Schedule,String,String,String,AnnuityMappingType,VolatilityCubeModel,double,double,int) : AnnuityMapping" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityMappingFactory(Schedule,Schedule,String,String,String)" num="87" count="156" type="method"/>
            <line num="89" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityMappingFactory(Schedule,Schedule,String,String,String,double,double,double,int)" num="105" count="20742" type="method"/>
            <line num="108" count="20745" type="stmt"/>
            <line num="109" count="20742" type="stmt"/>
            <line num="110" count="20741" type="stmt"/>
            <line num="111" count="20739" type="stmt"/>
            <line num="112" count="20747" type="stmt"/>
            <line num="113" count="20747" type="stmt"/>
            <line num="114" count="20746" type="stmt"/>
            <line num="115" count="20746" type="stmt"/>
            <line num="116" count="20739" type="stmt"/>
            <line num="117" count="20743" type="stmt"/>
            <line complexity="7" visibility="public" signature="build(AnnuityMappingType,VolatilityCubeModel) : AnnuityMapping" num="128" count="20744" type="method"/>
            <line num="130" count="20741" type="stmt"/>
            <line num="131" count="20740" type="stmt"/>
            <line num="132" count="20740" type="stmt"/>
            <line falsecount="20588" truecount="156" num="132" type="cond"/>
            <line num="133" count="156" type="stmt"/>
            <line falsecount="156" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="156" type="stmt"/>
            <line num="139" count="156" type="stmt"/>
            <line num="142" count="20745" type="stmt"/>
            <line num="143" count="20742" type="stmt"/>
            <line num="144" count="20440" type="stmt"/>
            <line num="144" count="20438" type="stmt"/>
            <line num="145" count="20442" type="stmt"/>
            <line num="146" count="152" type="stmt"/>
            <line num="146" count="152" type="stmt"/>
            <line num="147" count="152" type="stmt"/>
            <line num="148" count="152" type="stmt"/>
            <line num="148" count="152" type="stmt"/>
            <line num="148" count="152" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="20744" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/BasicPiterbargAnnuityMapping.java" name="BasicPiterbargAnnuityMapping.java">
            <metrics coveredelements="164" coveredconditionals="34" complexity="27" loc="344" coveredmethods="10" methods="10" elements="164" classes="1" ncloc="205" statements="120" conditionals="34" coveredstatements="120"/>
            <class name="BasicPiterbargAnnuityMapping">
               <metrics coveredelements="164" coveredconditionals="34" complexity="27" coveredmethods="10" methods="10" elements="164" statements="120" conditionals="34" coveredstatements="120"/>
            </class>
            <line complexity="1" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,VolatilityCubeModel,String,String)" num="51" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String)" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String,double,double,int)" num="83" count="20581" type="method"/>
            <line num="85" count="20584" type="stmt"/>
            <line num="86" count="20580" type="stmt"/>
            <line num="88" count="20577" type="stmt"/>
            <line num="89" count="20584" type="stmt"/>
            <line num="90" count="20587" type="stmt"/>
            <line num="91" count="20586" type="stmt"/>
            <line falsecount="20579" truecount="212962" num="91" type="cond"/>
            <line num="92" count="212964" type="stmt"/>
            <line num="93" count="212938" type="stmt"/>
            <line num="95" count="20579" type="stmt"/>
            <line num="97" count="20581" type="stmt"/>
            <line num="98" count="20595" type="stmt"/>
            <line num="100" count="20588" type="stmt"/>
            <line num="101" count="20598" type="stmt"/>
            <line num="104" count="20592" type="stmt"/>
            <line falsecount="20593" truecount="1" num="104" type="cond"/>
            <line num="105" count="1" type="stmt"/>
            <line num="109" count="20596" type="stmt"/>
            <line num="112" count="20595" type="stmt"/>
            <line num="113" count="20594" type="stmt"/>
            <line num="114" count="20595" type="stmt"/>
            <line num="116" count="20590" type="stmt"/>
            <line num="117" count="20590" type="stmt"/>
            <line num="118" count="20590" type="stmt"/>
            <line num="120" count="20594" type="stmt"/>
            <line falsecount="20598" truecount="213369" num="120" type="cond"/>
            <line num="122" count="213372" type="stmt"/>
            <line num="123" count="213334" type="stmt"/>
            <line num="125" count="213332" type="stmt"/>
            <line falsecount="213369" truecount="1694604" num="125" type="cond"/>
            <line num="126" count="1694579" type="stmt"/>
            <line num="127" count="1694567" type="stmt"/>
            <line num="129" count="213372" type="stmt"/>
            <line num="131" count="20597" type="stmt"/>
            <line num="132" count="20596" type="stmt"/>
            <line num="135" count="20597" type="stmt"/>
            <line num="137" count="20590" type="stmt"/>
            <line falsecount="106" truecount="20484" num="137" type="cond"/>
            <line num="138" count="20486" type="stmt"/>
            <line num="140" count="20594" type="stmt"/>
            <line num="144" count="20593" type="stmt"/>
            <line num="146" count="20589" type="stmt"/>
            <line num="148" count="20593" type="stmt"/>
            <line falsecount="106" truecount="20485" num="148" type="cond"/>
            <line num="149" count="20486" type="stmt"/>
            <line num="152" count="20590" type="stmt"/>
            <line complexity="1" visibility="private" signature="BasicPiterbargAnnuityMapping(int,double[],double[],double[],double[],double[],double[],NormalizingFunction)" num="167" count="20594" type="method"/>
            <line num="169" count="20595" type="stmt"/>
            <line num="170" count="20591" type="stmt"/>
            <line num="171" count="20596" type="stmt"/>
            <line num="172" count="20595" type="stmt"/>
            <line num="173" count="20597" type="stmt"/>
            <line num="174" count="20595" type="stmt"/>
            <line num="175" count="20596" type="stmt"/>
            <line num="176" count="20596" type="stmt"/>
            <line num="177" count="20592" type="stmt"/>
            <line num="178" count="20592" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double) : double" num="181" count="3172870" type="method"/>
            <line num="184" count="3173830" type="stmt"/>
            <line num="185" count="3174489" type="stmt"/>
            <line num="186" count="3175531" type="stmt"/>
            <line num="188" count="3176261" type="stmt"/>
            <line num="189" count="3177081" type="stmt"/>
            <line falsecount="3188219" truecount="36351361" num="189" type="cond"/>
            <line num="190" count="36362020" type="stmt"/>
            <line num="193" count="3188714" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFirstDerivative(double) : double" num="196" count="4109092" type="method"/>
            <line num="199" count="4109856" type="stmt"/>
            <line num="200" count="4110633" type="stmt"/>
            <line num="201" count="4111432" type="stmt"/>
            <line num="203" count="4112259" type="stmt"/>
            <line num="204" count="4112910" type="stmt"/>
            <line num="205" count="4113574" type="stmt"/>
            <line falsecount="4124923" truecount="55685971" num="205" type="cond"/>
            <line num="206" count="55703005" type="stmt"/>
            <line num="207" count="55713987" type="stmt"/>
            <line num="211" count="4125192" type="stmt"/>
            <line num="214" count="4125398" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSecondDerivative(double) : double" num="217" count="5519426" type="method"/>
            <line num="220" count="5520584" type="stmt"/>
            <line num="221" count="5521029" type="stmt"/>
            <line num="222" count="5521533" type="stmt"/>
            <line num="224" count="5521853" type="stmt"/>
            <line num="225" count="5522451" type="stmt"/>
            <line num="226" count="5522879" type="stmt"/>
            <line num="227" count="5523231" type="stmt"/>
            <line falsecount="5529920" truecount="70984908" num="227" type="cond"/>
            <line num="228" count="71014048" type="stmt"/>
            <line num="229" count="70993828" type="stmt"/>
            <line num="231" count="71003347" type="stmt"/>
            <line num="235" count="5530109" type="stmt"/>
            <line num="238" count="5530242" type="stmt"/>
            <line num="243" count="5530028" type="stmt"/>
            <line complexity="6" visibility="private" signature="findExponentialDriverMeans(double[],double,double,VolatilityCube,VolatilityCubeModel) : double[]" num="257" count="20595" type="method"/>
            <line num="260" count="20585" type="stmt"/>
            <line num="261" count="20591" type="stmt"/>
            <line num="262" count="20596" type="stmt"/>
            <line falsecount="20593" truecount="213330" num="262" type="cond"/>
            <line num="263" count="213341" type="stmt"/>
            <line num="267" count="20594" type="stmt"/>
            <line num="268" count="20593" type="stmt"/>
            <line num="270" count="20595" type="stmt"/>
            <line num="273" count="20590" type="stmt"/>
            <line num="274" count="20589" type="stmt"/>
            <line num="275" count="20595" type="stmt"/>
            <line falsecount="20594" truecount="213340" num="275" type="cond"/>
            <line num="276" count="213344" type="stmt"/>
            <line num="277" count="213338" type="stmt"/>
            <line num="280" count="20591" type="stmt"/>
            <line falsecount="20591" truecount="192765" num="280" type="cond"/>
            <line num="286" count="192761" type="stmt"/>
            <line num="287" count="192762" type="stmt"/>
            <line falsecount="192769" truecount="1481193" num="287" type="cond"/>
            <line num="288" count="1481206" type="stmt"/>
            <line num="289" count="1481163" type="stmt"/>
            <line num="291" count="192773" type="stmt"/>
            <line falsecount="192768" truecount="1481197" num="291" type="cond"/>
            <line num="292" count="1481210" type="stmt"/>
            <line num="297" count="192767" type="stmt"/>
            <line num="298" count="192762" type="stmt"/>
            <line num="299" count="192768" type="stmt"/>
            <line num="300" count="192769" type="stmt"/>
            <line num="302" count="20594" type="stmt"/>
            <line complexity="3" visibility="private" signature="getAnnuities(Schedule,String,AnalyticModel) : double[]" num="313" count="20590" type="method"/>
            <line num="314" count="20589" type="stmt"/>
            <line num="315" count="20591" type="stmt"/>
            <line falsecount="20593" truecount="213212" num="315" type="cond"/>
            <line num="316" count="213231" type="stmt"/>
            <line num="317" count="213246" type="stmt"/>
            <line falsecount="213174" truecount="1692747" num="317" type="cond"/>
            <line num="318" count="1692826" type="stmt"/>
            <line num="320" count="213186" type="stmt"/>
            <line num="321" count="213184" type="stmt"/>
            <line num="323" count="20593" type="stmt"/>
            <line complexity="2" visibility="private" signature="getForwardSwapRates(Schedule,String,AnalyticModel) : double[]" num="334" count="20595" type="method"/>
            <line num="335" count="20594" type="stmt"/>
            <line num="336" count="20594" type="stmt"/>
            <line num="337" count="20590" type="stmt"/>
            <line falsecount="20596" truecount="213212" num="337" type="cond"/>
            <line num="338" count="213219" type="stmt"/>
            <line num="339" count="213211" type="stmt"/>
            <line num="341" count="20594" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/ConstantNormalizer.java" name="ConstantNormalizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="27" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ConstantNormalizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/ExponentialNormalizer.java" name="ExponentialNormalizer.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="19" classes="1" ncloc="39" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ExponentialNormalizer">
               <metrics coveredelements="19" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="19" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialNormalizer(Schedule,Schedule,String,String,String,VolatilityCubeModel)" num="36" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentialNormalizer(double,double)" num="52" count="41185" type="method"/>
            <line num="53" count="41188" type="stmt"/>
            <line num="54" count="41190" type="stmt"/>
            <line num="55" count="41186" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="58" count="15807465" type="method"/>
            <line num="60" count="15810568" type="stmt"/>
            <line num="61" count="15811853" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="64" count="4125206" type="method"/>
            <line num="66" count="4125615" type="stmt"/>
            <line num="67" count="4125679" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="70" count="8484061" type="method"/>
            <line num="72" count="8485898" type="stmt"/>
            <line num="73" count="8486768" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/MultiPiterbargAnnuityMapping.java" name="MultiPiterbargAnnuityMapping.java">
            <metrics coveredelements="26" coveredconditionals="1" complexity="9" loc="113" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="64" statements="20" conditionals="2" coveredstatements="19"/>
            <class name="MultiPiterbargAnnuityMapping">
               <metrics coveredelements="26" coveredconditionals="1" complexity="9" coveredmethods="6" methods="6" elements="28" statements="20" conditionals="2" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="MultiPiterbargAnnuityMapping(Schedule,Schedule,VolatilityCubeModel,String,String,String)" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String,String,double,double,int)" num="66" count="20437" type="method"/>
            <line num="69" count="20441" type="stmt"/>
            <line num="72" count="20437" type="stmt"/>
            <line num="73" count="20436" type="stmt"/>
            <line num="74" count="20437" type="stmt"/>
            <line num="75" count="20430" type="stmt"/>
            <line num="77" count="20429" type="stmt"/>
            <line num="79" count="20434" type="stmt"/>
            <line num="80" count="20434" type="stmt"/>
            <line num="82" count="20424" type="stmt"/>
            <line num="84" count="20443" type="stmt"/>
            <line num="85" count="20443" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="88" count="2950728" type="method"/>
            <line num="90" count="2951802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="93" count="3407637" type="method"/>
            <line num="95" count="3408249" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="98" count="1962706" type="method"/>
            <line num="100" count="1962777" type="stmt"/>
            <line complexity="4" visibility="private" signature="getOffsetCode(String) : String" num="104" count="20436" type="method"/>
            <line num="105" count="20432" type="stmt"/>
            <line num="106" count="20441" type="stmt"/>
            <line num="107" count="20441" type="stmt"/>
            <line falsecount="20433" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="20437" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/NormalizingFunction.java" name="NormalizingFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NormalizingFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/annuitymapping/SimplifiedLinearAnnuityMapping.java" name="SimplifiedLinearAnnuityMapping.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="8" loc="88" coveredmethods="4" methods="5" elements="37" classes="1" ncloc="56" statements="26" conditionals="6" coveredstatements="16"/>
            <class name="SimplifiedLinearAnnuityMapping">
               <metrics coveredelements="23" coveredconditionals="3" complexity="8" coveredmethods="4" methods="5" elements="37" statements="26" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="2" visibility="public" signature="SimplifiedLinearAnnuityMapping(Schedule,double,double,double)" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="SimplifiedLinearAnnuityMapping(Schedule,Schedule,AnalyticModel,String)" num="48" count="153" type="method"/>
            <line num="49" count="153" type="stmt"/>
            <line num="51" count="153" type="stmt"/>
            <line num="52" count="153" type="stmt"/>
            <line falsecount="153" truecount="3060" num="52" type="cond"/>
            <line num="53" count="3060" type="stmt"/>
            <line num="55" count="153" type="stmt"/>
            <line num="57" count="153" type="stmt"/>
            <line falsecount="153" truecount="0" num="58" type="cond"/>
            <line num="61" count="153" type="stmt"/>
            <line num="63" count="153" type="stmt"/>
            <line num="65" count="153" type="stmt"/>
            <line num="66" count="153" type="stmt"/>
            <line num="68" count="153" type="stmt"/>
            <line num="69" count="153" type="stmt"/>
            <line num="70" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="73" count="200099" type="method"/>
            <line num="75" count="200099" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="78" count="700544" type="method"/>
            <line num="80" count="700544" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="83" count="601744" type="method"/>
            <line num="85" count="601744" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.products">
         <metrics coveredelements="265" complexity="74" loc="930" methods="52" classes="8" statements="194" coveredconditionals="35" coveredmethods="49" elements="290" ncloc="473" files="8" conditionals="44" coveredstatements="181"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/AbstractAnalyticVolatilityCubeProduct.java" name="AbstractAnalyticVolatilityCubeProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="41" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="21" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractAnalyticVolatilityCubeProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel) : double" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/AbstractSingleSwapRateProduct.java" name="AbstractSingleSwapRateProduct.java">
            <metrics coveredelements="65" coveredconditionals="7" complexity="19" loc="270" coveredmethods="14" methods="14" elements="70" classes="1" ncloc="112" statements="46" conditionals="10" coveredstatements="44"/>
            <class name="AbstractSingleSwapRateProduct">
               <metrics coveredelements="65" coveredconditionals="7" complexity="19" coveredmethods="14" methods="14" elements="70" statements="46" conditionals="10" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractSingleSwapRateProduct(Schedule,Schedule,String,String,String)" num="54" count="64235" type="method"/>
            <line num="56" count="64236" type="stmt"/>
            <line num="57" count="64232" type="stmt"/>
            <line num="58" count="64234" type="stmt"/>
            <line num="59" count="64229" type="stmt"/>
            <line num="60" count="64233" type="stmt"/>
            <line num="61" count="64234" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIntegrationParameters(double,double,int) : void" num="71" count="62818" type="method"/>
            <line num="72" count="62816" type="stmt"/>
            <line num="73" count="62810" type="stmt"/>
            <line num="74" count="62809" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationLowerBound() : double" num="80" count="996" type="method"/>
            <line num="81" count="996" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationUpperBound() : double" num="87" count="996" type="method"/>
            <line num="88" count="996" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationNumberOfEvaluationPoints() : int" num="94" count="996" type="method"/>
            <line num="95" count="996" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,VolatilityCubeModel) : double" num="99" count="42334" type="method"/>
            <line num="101" count="42332" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,AnnuityMapping,VolatilityCubeModel) : double" num="117" count="64373" type="method"/>
            <line num="119" count="64372" type="stmt"/>
            <line falsecount="64369" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="64372" type="stmt"/>
            <line num="125" count="64370" type="stmt"/>
            <line num="127" count="64367" type="stmt"/>
            <line falsecount="23195" truecount="41175" num="127" type="cond"/>
            <line num="128" count="41175" type="stmt"/>
            <line num="130" count="23194" type="stmt"/>
            <line num="132" count="64361" type="stmt"/>
            <line num="135" count="64379" type="stmt"/>
            <line falsecount="22043" truecount="42343" num="135" type="cond"/>
            <line num="137" count="64387" type="stmt"/>
            <line num="138" count="64389" type="stmt"/>
            <line num="141" count="64389" type="stmt"/>
            <line falsecount="64388" truecount="0" num="141" type="cond"/>
            <line num="145" count="64383" type="stmt"/>
            <line num="146" count="64374" type="stmt"/>
            <line num="148" count="64369" type="stmt"/>
            <line num="149" count="64388" type="stmt"/>
            <line num="151" count="64384" type="stmt"/>
            <line num="152" count="64378" type="stmt"/>
            <line num="154" count="64393" type="stmt"/>
            <line num="156" count="64384" type="stmt"/>
            <line falsecount="64380" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="64383" type="stmt"/>
            <line complexity="1" visibility="protected" signature="valuePut(double,VolatilityCubeModel,double) : double" num="215" count="5456354" type="method"/>
            <line num="216" count="5457822" type="stmt"/>
            <line complexity="1" visibility="protected" signature="valueCall(double,VolatilityCubeModel,double) : double" num="227" count="10891098" type="method"/>
            <line num="228" count="10895289" type="stmt"/>
            <line num="229" count="10870686" type="stmt"/>
            <line num="230" count="10820196" type="stmt"/>
            <line num="231" count="10842410" type="stmt"/>
            <line num="232" count="10886074" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixSchedule() : Schedule" num="238" count="291968216" type="method"/>
            <line num="239" count="292082730" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatSchedule() : Schedule" num="245" count="65511" type="method"/>
            <line num="246" count="65515" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="252" count="83517" type="method"/>
            <line num="253" count="83518" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="259" count="88707" type="method"/>
            <line num="260" count="88711" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubeName() : String" num="266" count="10951205" type="method"/>
            <line num="267" count="10955335" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/AnalyticVolatilityCubeProduct.java" name="AnalyticVolatilityCubeProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticVolatilityCubeProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/AnnuityDummyProduct.java" name="AnnuityDummyProduct.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="7" loc="85" coveredmethods="6" methods="6" elements="21" classes="1" ncloc="45" statements="13" conditionals="2" coveredstatements="13"/>
            <class name="AnnuityDummyProduct">
               <metrics coveredelements="21" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="21" statements="13" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="AnnuityDummyProduct(Schedule,Schedule,String,String,String,AnnuityMappingType)" num="32" count="3" type="method"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityDummyProduct(Schedule,Schedule,String,String,String,AnnuityMapping)" num="49" count="20589" type="method"/>
            <line num="51" count="20591" type="stmt"/>
            <line num="52" count="20589" type="stmt"/>
            <line num="53" count="20593" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="56" count="20600" type="method"/>
            <line num="59" count="20600" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="62" count="2961874" type="method"/>
            <line num="65" count="2962564" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="68" count="20600" type="method"/>
            <line num="71" count="20599" type="stmt"/>
            <line complexity="2" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="74" count="20600" type="method"/>
            <line num="77" count="20597" type="stmt"/>
            <line falsecount="3" truecount="20593" num="77" type="cond"/>
            <line num="78" count="20597" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/CashSettledPayerSwaption.java" name="CashSettledPayerSwaption.java">
            <metrics coveredelements="75" coveredconditionals="13" complexity="17" loc="182" coveredmethods="9" methods="9" elements="82" classes="1" ncloc="106" statements="57" conditionals="16" coveredstatements="53"/>
            <class name="CashSettledPayerSwaption">
               <metrics coveredelements="75" coveredconditionals="13" complexity="17" coveredmethods="9" methods="9" elements="82" statements="57" conditionals="16" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="CashSettledPayerSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType)" num="32" count="675" type="method"/>
            <line num="34" count="675" type="stmt"/>
            <line num="35" count="675" type="stmt"/>
            <line num="36" count="675" type="stmt"/>
            <line complexity="1" visibility="public" signature="CashSettledPayerSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType,double,double,int)" num="53" count="10872" type="method"/>
            <line num="56" count="10870" type="stmt"/>
            <line num="57" count="10871" type="stmt"/>
            <line num="58" count="10872" type="stmt"/>
            <line num="60" count="10874" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="63" count="11550" type="method"/>
            <line num="65" count="11550" type="stmt"/>
            <line num="66" count="11550" type="stmt"/>
            <line num="67" count="11547" type="stmt"/>
            <line complexity="2" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="71" count="1734946" type="method"/>
            <line num="74" count="1735370" type="stmt"/>
            <line falsecount="830518" truecount="906583" num="74" type="cond"/>
            <line num="75" count="906654" type="stmt"/>
            <line num="78" count="830564" type="stmt"/>
            <line num="79" count="828835" type="stmt"/>
            <line num="80" count="828303" type="stmt"/>
            <line num="81" count="828239" type="stmt"/>
            <line num="83" count="828344" type="stmt"/>
            <line num="85" count="829001" type="stmt"/>
            <line complexity="2" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="89" count="11548" type="method"/>
            <line num="91" count="11547" type="stmt"/>
            <line num="92" count="11547" type="stmt"/>
            <line falsecount="2402" truecount="9146" num="92" type="cond"/>
            <line num="93" count="9146" type="stmt"/>
            <line num="95" count="2402" type="stmt"/>
            <line num="97" count="11549" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="100" count="500" type="method"/>
            <line num="103" count="500" type="stmt"/>
            <line num="105" count="500" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="114" count="4150740" type="method"/>
            <line num="116" count="4153303" type="stmt"/>
            <line num="117" count="4145898" type="stmt"/>
            <line num="118" count="4148572" type="stmt"/>
            <line falsecount="4125451" truecount="49062844" num="118" type="cond"/>
            <line num="119" count="49073255" type="stmt"/>
            <line num="121" count="4128139" type="stmt"/>
            <line num="123" count="4121583" type="stmt"/>
            <line falsecount="4123499" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="4124465" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionFirstDerivative(double) : double" num="136" count="2489433" type="method"/>
            <line num="138" count="2490400" type="stmt"/>
            <line num="139" count="2486965" type="stmt"/>
            <line num="140" count="2487634" type="stmt"/>
            <line falsecount="2470071" truecount="29343728" num="140" type="cond"/>
            <line num="141" count="29347254" type="stmt"/>
            <line num="143" count="2470852" type="stmt"/>
            <line num="145" count="2468655" type="stmt"/>
            <line falsecount="2469440" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="2470497" type="stmt"/>
            <line num="149" count="2473290" type="stmt"/>
            <line num="150" count="2474257" type="stmt"/>
            <line num="151" count="2471943" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionSecondDerivative(double) : double" num="161" count="830859" type="method"/>
            <line num="163" count="830973" type="stmt"/>
            <line num="164" count="830511" type="stmt"/>
            <line num="165" count="830610" type="stmt"/>
            <line falsecount="829054" truecount="9904102" num="165" type="cond"/>
            <line num="166" count="9904308" type="stmt"/>
            <line num="168" count="829131" type="stmt"/>
            <line num="170" count="829217" type="stmt"/>
            <line num="171" count="829286" type="stmt"/>
            <line falsecount="829408" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="829506" type="stmt"/>
            <line num="176" count="829766" type="stmt"/>
            <line num="177" count="829849" type="stmt"/>
            <line num="179" count="828329" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/CashSettledReceiverSwaption.java" name="CashSettledReceiverSwaption.java">
            <metrics coveredelements="75" coveredconditionals="13" complexity="17" loc="182" coveredmethods="9" methods="9" elements="82" classes="1" ncloc="106" statements="57" conditionals="16" coveredstatements="53"/>
            <class name="CashSettledReceiverSwaption">
               <metrics coveredelements="75" coveredconditionals="13" complexity="17" coveredmethods="9" methods="9" elements="82" statements="57" conditionals="16" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="CashSettledReceiverSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType)" num="32" count="672" type="method"/>
            <line num="34" count="672" type="stmt"/>
            <line num="35" count="672" type="stmt"/>
            <line num="36" count="672" type="stmt"/>
            <line complexity="1" visibility="public" signature="CashSettledReceiverSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType,double,double,int)" num="53" count="10818" type="method"/>
            <line num="56" count="10818" type="stmt"/>
            <line num="57" count="10818" type="stmt"/>
            <line num="58" count="10818" type="stmt"/>
            <line num="60" count="10819" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="63" count="11493" type="method"/>
            <line num="65" count="11493" type="stmt"/>
            <line num="66" count="11493" type="stmt"/>
            <line num="67" count="11488" type="stmt"/>
            <line complexity="2" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="71" count="1727346" type="method"/>
            <line num="74" count="1727712" type="stmt"/>
            <line falsecount="829864" truecount="899375" num="74" type="cond"/>
            <line num="75" count="899421" type="stmt"/>
            <line num="78" count="829882" type="stmt"/>
            <line num="79" count="828102" type="stmt"/>
            <line num="80" count="828521" type="stmt"/>
            <line num="81" count="828388" type="stmt"/>
            <line num="83" count="828435" type="stmt"/>
            <line num="85" count="828881" type="stmt"/>
            <line complexity="2" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="89" count="11487" type="method"/>
            <line num="91" count="11487" type="stmt"/>
            <line num="92" count="11490" type="stmt"/>
            <line falsecount="11343" truecount="147" num="92" type="cond"/>
            <line num="93" count="147" type="stmt"/>
            <line num="95" count="11345" type="stmt"/>
            <line num="97" count="11491" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="100" count="496" type="method"/>
            <line num="103" count="496" type="stmt"/>
            <line num="105" count="496" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="114" count="4143651" type="method"/>
            <line num="116" count="4146056" type="stmt"/>
            <line num="117" count="4138369" type="stmt"/>
            <line num="118" count="4141482" type="stmt"/>
            <line falsecount="4124416" truecount="48975382" num="118" type="cond"/>
            <line num="119" count="49037927" type="stmt"/>
            <line num="121" count="4129156" type="stmt"/>
            <line num="123" count="4123105" type="stmt"/>
            <line falsecount="4125359" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="4127127" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionFirstDerivative(double) : double" num="136" count="2486979" type="method"/>
            <line num="138" count="2487841" type="stmt"/>
            <line num="139" count="2484558" type="stmt"/>
            <line num="140" count="2485023" type="stmt"/>
            <line falsecount="2466693" truecount="29351175" num="140" type="cond"/>
            <line num="141" count="29355622" type="stmt"/>
            <line num="143" count="2467703" type="stmt"/>
            <line num="145" count="2463963" type="stmt"/>
            <line falsecount="2464863" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="2466156" type="stmt"/>
            <line num="149" count="2468882" type="stmt"/>
            <line num="150" count="2469905" type="stmt"/>
            <line num="151" count="2477084" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionSecondDerivative(double) : double" num="161" count="830174" type="method"/>
            <line num="163" count="830273" type="stmt"/>
            <line num="164" count="829821" type="stmt"/>
            <line num="165" count="829864" type="stmt"/>
            <line falsecount="828294" truecount="9926010" num="165" type="cond"/>
            <line num="166" count="9926249" type="stmt"/>
            <line num="168" count="828391" type="stmt"/>
            <line num="170" count="828475" type="stmt"/>
            <line num="171" count="828564" type="stmt"/>
            <line falsecount="828694" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="828789" type="stmt"/>
            <line num="176" count="829023" type="stmt"/>
            <line num="177" count="829101" type="stmt"/>
            <line num="179" count="828538" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/ConstantMaturitySwap.java" name="ConstantMaturitySwap.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="6" loc="88" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="45" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="ConstantMaturitySwap">
               <metrics coveredelements="18" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwap(Schedule,Schedule,String,String,String,AnnuityMappingType)" num="30" count="3" type="method"/>
            <line num="32" count="3" type="stmt"/>
            <line num="33" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="36" count="153" type="method"/>
            <line num="38" count="153" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="41" count="1502694" type="method"/>
            <line num="43" count="1502694" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="46" count="153" type="method"/>
            <line num="48" count="153" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="51" count="153" type="method"/>
            <line num="54" count="153" type="stmt"/>
            <line num="55" count="153" type="stmt"/>
            <line complexity="1" visibility="public" signature="analyticApproximation(double,double,double,double,double,double) : double" num="70" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/products/NormalizingDummyProduct.java" name="NormalizingDummyProduct.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="5" loc="58" coveredmethods="5" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="NormalizingDummyProduct">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NormalizingDummyProduct(Schedule,Schedule,String,String,String,NormalizingFunction)" num="29" count="20593" type="method"/>
            <line num="31" count="20595" type="stmt"/>
            <line num="32" count="20592" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="35" count="20596" type="method"/>
            <line num="38" count="20597" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="41" count="2959500" type="method"/>
            <line num="44" count="2960466" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="47" count="20598" type="method"/>
            <line num="50" count="20598" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="53" count="20599" type="method"/>
            <line num="55" count="20597" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet.tenorconversion">
         <metrics coveredelements="0" complexity="53" loc="411" methods="13" classes="3" statements="154" coveredconditionals="0" coveredmethods="0" elements="241" ncloc="317" files="3" conditionals="74" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/CorrelationProvider.java" name="CorrelationProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CorrelationProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/CorrelationProviderTenorBasis.java" name="CorrelationProviderTenorBasis.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="217" coveredmethods="0" methods="11" elements="123" classes="1" ncloc="170" statements="78" conditionals="34" coveredstatements="0"/>
            <class name="CorrelationProviderTenorBasis">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="11" elements="123" statements="78" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CorrelationProviderTenorBasis(CapVolMarketData,CapVolMarketData)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get6MCorrelation(double,double,AnalyticModel) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="16" visibility="public" signature="get3MCorrelation(double,double,AnalyticModel) : double" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="get1MCorrelation(double,double,AnalyticModel) : double" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getiCap3MCapletVolMatrix() : double[][]" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getiCap6MCapletVolMatrix() : double[][]" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationMatrix3M() : double[][]" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationMatrix6M() : double[][]" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getICap3MCapletVolBootrapper() : CapletVolBootstrapping" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getICap6MCapletVolBootrapper() : CapletVolBootstrapping" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCorrelation(int,double,double,AnalyticModel,String) : double" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/TenorConverter.java" name="TenorConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="183" coveredmethods="0" methods="2" elements="118" classes="1" ncloc="141" statements="76" conditionals="40" coveredstatements="0"/>
            <class name="TenorConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="2" elements="118" statements="76" conditionals="40" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="TenorConverter(CorrelationProvider,int,int,double[],double[],double[][],CapTenorStructure,AnalyticModel,String,String,String)" num="50" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="21" visibility="public" signature="convertTenor() : double[][]" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.modelfactory">
         <metrics coveredelements="169" complexity="66" loc="823" methods="53" classes="19" statements="142" coveredconditionals="19" coveredmethods="38" elements="221" ncloc="523" files="6" conditionals="26" coveredstatements="112"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/modelfactory/AnalyticModelFactory.java" name="AnalyticModelFactory.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="59" coveredmethods="3" methods="4" elements="8" classes="2" ncloc="32" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="AnalyticModelFactory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AnalyticModelFactory.DescribedAnalyticModel">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(AnalyticModelDescriptor) : DescribedModel&lt;AnalyticModelDescriptor&gt;" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DescribedAnalyticModel(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : AnalyticModelDescriptor" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="50" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/modelfactory/AssetModelFourierMethodFactory.java" name="AssetModelFourierMethodFactory.java">
            <metrics coveredelements="46" coveredconditionals="7" complexity="18" loc="220" coveredmethods="10" methods="14" elements="57" classes="5" ncloc="143" statements="35" conditionals="8" coveredstatements="29"/>
            <class name="AssetModelFourierMethodFactory">
               <metrics coveredelements="22" coveredconditionals="7" complexity="6" coveredmethods="2" methods="2" elements="25" statements="15" conditionals="8" coveredstatements="13"/>
            </class>
            <class name="AssetModelFourierMethodFactory.BlackScholesModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.HestonModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.MertonModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.VarianceGammaModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AssetModelFourierMethodFactory()" num="30" count="6" type="method"/>
            <line num="31" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="getModelFromDescriptor(AssetModelDescriptor) : DescribedModel&lt;? extends AssetModelDescriptor&gt;" num="34" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="37" type="cond"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="41" type="cond"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="45" type="cond"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="49" type="cond"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="BlackScholesModelFourier(BlackScholesModelDescriptor)" num="81" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="97" count="2" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="HestonModelFourier(HestonModelDescriptor)" num="121" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="141" count="2" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="MertonModelFourier(MertonModelDescriptor)" num="159" count="1" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : MertonModelDescriptor" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="177" count="1" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="VarianceGammaModelFourier(VarianceGammaModelDescriptor)" num="196" count="1" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : VarianceGammaModelDescriptor" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="213" count="1" type="method"/>
            <line num="216" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/modelfactory/AssetModelMonteCarloFactory.java" name="AssetModelMonteCarloFactory.java">
            <metrics coveredelements="56" coveredconditionals="8" complexity="21" loc="251" coveredmethods="11" methods="16" elements="74" classes="5" ncloc="150" statements="48" conditionals="10" coveredstatements="37"/>
            <class name="AssetModelMonteCarloFactory">
               <metrics coveredelements="32" coveredconditionals="8" complexity="9" coveredmethods="3" methods="4" elements="42" statements="28" conditionals="10" coveredstatements="21"/>
            </class>
            <class name="AssetModelMonteCarloFactory.BlackScholesModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.HestonModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.MertonModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.VarianceGammaModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements,Scheme)" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(IndependentIncrements)" num="69" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getModelFromDescriptor(AssetModelDescriptor) : DescribedModel&lt;? extends AssetModelDescriptor&gt;" num="76" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="79" type="cond"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="83" type="cond"/>
            <line num="84" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="90" type="cond"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="94" type="cond"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="BlackScholesModelMonteCarlo(BlackScholesModelDescriptor,RandomVariableFactory,IndependentIncrements)" num="126" count="1" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="144" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="HestonModelMonteCarlo(HestonModelDescriptor,Scheme,RandomVariableFactory,IndependentIncrements)" num="171" count="1" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="184" count="1" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="MertonModelMonteCarlo(MertonModelDescriptor,RandomVariableFactory,IndependentIncrements)" num="202" count="1" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : MertonModelDescriptor" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="215" count="1" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="VarianceGammaModelMonteCarlo(VarianceGammaModelDescriptor,IndependentIncrements)" num="233" count="1" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : VarianceGammaModelDescriptor" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="245" count="1" type="method"/>
            <line num="248" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/modelfactory/BlackScholesModelMonteCarloFactory.java" name="BlackScholesModelMonteCarloFactory.java">
            <metrics coveredelements="13" coveredconditionals="1" complexity="6" loc="86" coveredmethods="4" methods="5" elements="18" classes="2" ncloc="55" statements="11" conditionals="2" coveredstatements="8"/>
            <class name="BlackScholesModelMonteCarloFactory">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="BlackScholesModelMonteCarloFactory.BlackScholesMonteCarloModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements)" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(BlackScholesModelDescriptor) : DescribedModel&lt;BlackScholesModelDescriptor&gt;" num="40" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="BlackScholesMonteCarloModel(ProcessModel,MonteCarloProcess)" num="62" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="73" type="cond"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/modelfactory/BlackScholesModelMonteCarloFiniteDifference1D.java" name="BlackScholesModelMonteCarloFiniteDifference1D.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="11" loc="123" coveredmethods="6" methods="9" elements="45" classes="3" ncloc="87" statements="32" conditionals="4" coveredstatements="26"/>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D">
               <metrics coveredelements="12" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D.BlackScholesFDModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D.BlackScholesFDModel.FDCallOptionProduct">
               <metrics coveredelements="16" coveredconditionals="1" complexity="5" coveredmethods="2" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelMonteCarloFiniteDifference1D(double)" num="33" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(BlackScholesModelDescriptor) : DescribedModel&lt;BlackScholesModelDescriptor&gt;" num="38" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="BlackScholesFDModel()" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="66" type="cond"/>
            <line complexity="1" visibility="package" signature="FDCallOptionProduct()" num="70" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="83" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetProductDescriptor" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/modelfactory/HestonModelMonteCarloFactory.java" name="HestonModelMonteCarloFactory.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="6" loc="84" coveredmethods="4" methods="5" elements="19" classes="2" ncloc="56" statements="12" conditionals="2" coveredstatements="9"/>
            <class name="HestonModelMonteCarloFactory">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="HestonModelMonteCarloFactory.HestonMonteCarloModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModelMonteCarloFactory(Scheme,RandomVariableFactory,IndependentIncrements)" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(HestonModelDescriptor) : DescribedModel&lt;HestonModelDescriptor&gt;" num="45" count="1" type="method"/>
            <line complexity="1" visibility="package" signature="HestonMonteCarloModel(ProcessModel,MonteCarloProcess)" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="66" type="cond"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration">
         <metrics coveredelements="136" complexity="41" loc="547" methods="26" classes="11" statements="132" coveredconditionals="18" coveredmethods="17" elements="182" ncloc="286" files="10" conditionals="24" coveredstatements="101"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/BoundConstraint.java" name="BoundConstraint.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="6" loc="50" coveredmethods="4" methods="4" elements="15" classes="1" ncloc="27" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="BoundConstraint">
               <metrics coveredelements="15" coveredconditionals="2" complexity="6" coveredmethods="4" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BoundConstraint(double,double)" num="13" count="8" type="method"/>
            <line num="14" count="8" type="stmt"/>
            <line num="15" count="8" type="stmt"/>
            <line num="16" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double" num="23" count="2011" type="method"/>
            <line num="25" count="2011" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double" num="32" count="2017" type="method"/>
            <line num="34" count="2020" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(double) : double" num="37" count="1003" type="method"/>
            <line num="40" count="1003" type="stmt"/>
            <line falsecount="871" truecount="132" num="40" type="cond"/>
            <line num="41" count="132" type="stmt"/>
            <line num="43" count="132" type="stmt"/>
            <line num="46" count="871" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/CalibratedModel.java" name="CalibratedModel.java">
            <metrics coveredelements="113" coveredconditionals="16" complexity="24" loc="306" coveredmethods="10" methods="11" elements="139" classes="2" ncloc="184" statements="106" conditionals="22" coveredstatements="87"/>
            <class name="CalibratedModel">
               <metrics coveredelements="98" coveredconditionals="16" complexity="18" coveredmethods="5" methods="5" elements="122" statements="95" conditionals="22" coveredstatements="77"/>
            </class>
            <class name="CalibratedModel.OptimizationResult">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratedModel(OptionSurfaceData,CalibratableProcess,OptimizerFactory,EuropeanOptionSmile,double[],double[])" num="64" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibration() : OptimizationResult" num="84" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="87" count="249" type="method"/>
            <line num="91" count="249" type="stmt"/>
            <line num="92" count="249" type="stmt"/>
            <line num="94" count="248" type="stmt"/>
            <line num="95" count="248" type="stmt"/>
            <line num="97" count="249" type="stmt"/>
            <line num="99" count="249" type="stmt"/>
            <line num="101" count="248" type="stmt"/>
            <line falsecount="249" truecount="498" num="101" type="cond"/>
            <line num="103" count="497" type="stmt"/>
            <line num="105" count="498" type="stmt"/>
            <line num="107" count="498" type="stmt"/>
            <line num="108" count="497" type="stmt"/>
            <line num="110" count="498" type="stmt"/>
            <line falsecount="498" truecount="4980" num="110" type="cond"/>
            <line num="112" count="4980" type="stmt"/>
            <line falsecount="0" truecount="4980" num="112" type="cond"/>
            <line num="114" count="4980" type="stmt"/>
            <line num="115" count="4980" type="stmt"/>
            <line num="116" count="4979" type="stmt"/>
            <line num="117" count="4980" type="stmt"/>
            <line num="118" count="4979" type="stmt"/>
            <line num="119" count="4979" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="249" type="stmt"/>
            <line num="141" count="4980" type="stmt"/>
            <line falsecount="249" truecount="4980" num="141" type="cond"/>
            <line num="145" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="formatTargetValuesForOptimizer() : double[]" num="167" count="2" type="method"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="174" type="cond"/>
            <line num="175" count="4" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="180" type="cond"/>
            <line num="181" count="40" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line complexity="6" visibility="private" signature="outputCalibrationResult(double[]) : ArrayList&lt;String&gt;" num="194" count="2" type="method"/>
            <line num="196" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="214" type="cond"/>
            <line num="215" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="219" count="4" type="stmt"/>
            <line num="221" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="224" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="224" type="cond"/>
            <line num="225" count="40" type="stmt"/>
            <line num="226" count="40" type="stmt"/>
            <line num="228" count="40" type="stmt"/>
            <line falsecount="0" truecount="40" num="228" type="cond"/>
            <line num="230" count="40" type="stmt"/>
            <line num="231" count="40" type="stmt"/>
            <line num="232" count="40" type="stmt"/>
            <line num="233" count="40" type="stmt"/>
            <line num="234" count="40" type="stmt"/>
            <line num="235" count="40" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="40" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizationResult(CalibratableProcess,double[],int,double,ArrayList&lt;String&gt;)" num="274" count="2" type="method"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : CalibratableProcess" num="284" count="2" type="method"/>
            <line num="285" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="292" count="2" type="method"/>
            <line num="293" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="296" count="4" type="method"/>
            <line num="297" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibrationOutput() : ArrayList&lt;String&gt;" num="300" count="2" type="method"/>
            <line num="301" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/Constraint.java" name="Constraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Constraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/NegativityConstraint.java" name="NegativityConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="20" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="NegativityConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NegativityConstraint()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/ParameterInformation.java" name="ParameterInformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterInformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/PositivityConstraint.java" name="PositivityConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="19" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="PositivityConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PositivityConstraint()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/ScalarConstraint.java" name="ScalarConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScalarConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/ScalarParameterInformation.java" name="ScalarParameterInformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScalarParameterInformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/ScalarParameterInformationImplementation.java" name="ScalarParameterInformationImplementation.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="55" coveredmethods="3" methods="5" elements="16" classes="1" ncloc="28" statements="11" conditionals="0" coveredstatements="5"/>
            <class name="ScalarParameterInformationImplementation">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(boolean,ScalarConstraint)" num="19" count="8" type="method"/>
            <line num="20" count="8" type="stmt"/>
            <line num="21" count="8" type="stmt"/>
            <line num="22" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(boolean)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(ScalarConstraint)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIsParameterToCalibrate() : boolean" num="46" count="1003" type="method"/>
            <line num="48" count="1003" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraint() : ScalarConstraint" num="51" count="5032" type="method"/>
            <line num="53" count="5032" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/Unconstrained.java" name="Unconstrained.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="20" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Unconstrained">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Unconstrained()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time">
         <metrics coveredelements="380" complexity="211" loc="2433" methods="123" classes="17" statements="419" coveredconditionals="53" coveredmethods="87" elements="668" ncloc="1210" files="12" conditionals="126" coveredstatements="240"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/FloatingpointDate.java" name="FloatingpointDate.java">
            <metrics coveredelements="16" coveredconditionals="3" complexity="7" loc="117" coveredmethods="4" methods="5" elements="19" classes="1" ncloc="32" statements="10" conditionals="4" coveredstatements="9"/>
            <class name="FloatingpointDate">
               <metrics coveredelements="16" coveredconditionals="3" complexity="7" coveredmethods="4" methods="5" elements="19" statements="10" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="FloatingpointDate()" num="53" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getDateFromFloatingPointDate(LocalDateTime,double) : LocalDateTime" num="67" count="6173780" type="method"/>
            <line num="68" count="6173780" type="stmt"/>
            <line falsecount="6173779" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="6173779" type="stmt"/>
            <line num="73" count="6173779" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingPointDateFromDate(LocalDateTime,LocalDateTime) : double" num="83" count="6178762" type="method"/>
            <line num="84" count="6178757" type="stmt"/>
            <line num="85" count="6178872" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDateFromFloatingPointDate(LocalDate,double) : LocalDate" num="100" count="8641" type="method"/>
            <line num="101" count="8641" type="stmt"/>
            <line falsecount="8498" truecount="144" num="101" type="cond"/>
            <line num="102" count="144" type="stmt"/>
            <line num="104" count="8499" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingPointDateFromDate(LocalDate,LocalDate) : double" num="114" count="637794383" type="method"/>
            <line num="115" count="647720044" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/Period.java" name="Period.java">
            <metrics coveredelements="39" coveredconditionals="10" complexity="26" loc="121" coveredmethods="7" methods="9" elements="86" classes="1" ncloc="87" statements="43" conditionals="34" coveredstatements="22"/>
            <class name="Period">
               <metrics coveredelements="39" coveredconditionals="10" complexity="26" coveredmethods="7" methods="9" elements="86" statements="43" conditionals="34" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="Period(LocalDate,LocalDate,LocalDate,LocalDate)" num="36" count="190253444" type="method"/>
            <line num="38" count="187286905" type="stmt"/>
            <line num="39" count="190752353" type="stmt"/>
            <line num="40" count="191103517" type="stmt"/>
            <line num="41" count="191369059" type="stmt"/>
            <line num="42" count="191656192" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing() : LocalDate" num="45" count="179261746" type="method"/>
            <line num="46" count="181324009" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment() : LocalDate" num="49" count="174041550" type="method"/>
            <line num="50" count="176720743" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : LocalDate" num="53" count="302386978" type="method"/>
            <line num="54" count="310359547" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : LocalDate" num="57" count="306322115" type="method"/>
            <line num="58" count="312997387" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(Period) : int" num="61" count="54" type="method"/>
            <line num="63" count="54" type="stmt"/>
            <line complexity="5" visibility="public" signature="hashCode() : int" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="equals(Object) : boolean" num="77" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/RegularSchedule.java" name="RegularSchedule.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="14" loc="99" coveredmethods="8" methods="14" elements="29" classes="1" ncloc="64" statements="15" conditionals="0" coveredstatements="8"/>
            <class name="RegularSchedule">
               <metrics coveredelements="16" coveredconditionals="0" complexity="14" coveredmethods="8" methods="14" elements="29" statements="15" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="RegularSchedule(TimeDiscretization)" num="30" count="868985" type="method"/>
            <line num="31" count="868993" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="34" count="5318" type="method"/>
            <line num="36" count="5319" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : ArrayList&lt;Period&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountconvention() : DayCountConvention" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="49" count="17674565" type="method"/>
            <line num="51" count="17702952" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriod(int) : Period" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing(int) : double" num="59" count="5980825" type="method"/>
            <line num="61" count="5982533" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment(int) : double" num="64" count="16784570" type="method"/>
            <line num="66" count="16795954" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart(int) : double" num="69" count="43834" type="method"/>
            <line num="71" count="43875" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd(int) : double" num="74" count="43675" type="method"/>
            <line num="76" count="43688" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength(int) : double" num="79" count="16759408" type="method"/>
            <line num="81" count="16772327" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Period&gt;" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(double) : int" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(LocalDate) : int" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/Schedule.java" name="Schedule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="127" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Schedule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/ScheduleFromPeriods.java" name="ScheduleFromPeriods.java">
            <metrics coveredelements="51" coveredconditionals="5" complexity="23" loc="159" coveredmethods="14" methods="16" elements="69" classes="1" ncloc="114" statements="41" conditionals="12" coveredstatements="32"/>
            <class name="ScheduleFromPeriods">
               <metrics coveredelements="51" coveredconditionals="5" complexity="23" coveredmethods="14" methods="16" elements="69" statements="41" conditionals="12" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleFromPeriods(LocalDate,DayCountConvention,Period)" num="45" count="213208" type="method"/>
            <line num="46" count="213194" type="stmt"/>
            <line complexity="3" visibility="public" signature="ScheduleFromPeriods(LocalDate,List&lt;Period&gt;,DayCountConvention)" num="49" count="10332362" type="method"/>
            <line num="50" count="10329830" type="stmt"/>
            <line num="51" count="10333407" type="stmt"/>
            <line falsecount="10333678" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="10333993" type="stmt"/>
            <line num="56" count="10335749" type="stmt"/>
            <line num="57" count="10336316" type="stmt"/>
            <line num="60" count="10336711" type="stmt"/>
            <line num="61" count="10338953" type="stmt"/>
            <line num="62" count="10341329" type="stmt"/>
            <line num="63" count="10342413" type="stmt"/>
            <line num="64" count="10342966" type="stmt"/>
            <line num="65" count="10344429" type="stmt"/>
            <line falsecount="10262813" truecount="175041074" num="65" type="cond"/>
            <line num="66" count="177576821" type="stmt"/>
            <line num="67" count="171101829" type="stmt"/>
            <line num="68" count="169344940" type="stmt"/>
            <line num="69" count="168708893" type="stmt"/>
            <line num="70" count="168742442" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="74" count="25762428" type="method"/>
            <line num="76" count="25765797" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="79" count="4" type="method"/>
            <line num="81" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountconvention() : DayCountConvention" num="84" count="214727" type="method"/>
            <line num="86" count="214739" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="89" count="703336747" type="method"/>
            <line num="91" count="706832689" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriod(int) : Period" num="94" count="1694486" type="method"/>
            <line num="96" count="1694566" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing(int) : double" num="99" count="525390220" type="method"/>
            <line num="101" count="527949655" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment(int) : double" num="104" count="497338038" type="method"/>
            <line num="106" count="499666312" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart(int) : double" num="109" count="444896632" type="method"/>
            <line num="111" count="447152551" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd(int) : double" num="114" count="436599659" type="method"/>
            <line num="116" count="437302269" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength(int) : double" num="119" count="635718389" type="method"/>
            <line num="121" count="637828717" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Period&gt;" num="124" count="1" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="getPeriodIndex(double) : int" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(LocalDate) : int" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="148" count="3" type="method"/>
            <line num="150" count="3" type="stmt"/>
            <line num="151" count="3" type="stmt"/>
            <line falsecount="3" truecount="42" num="151" type="cond"/>
            <line num="152" count="42" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/ScheduleGenerator.java" name="ScheduleGenerator.java">
            <metrics coveredelements="126" coveredconditionals="28" complexity="56" loc="838" coveredmethods="8" methods="14" elements="214" classes="4" ncloc="477" statements="154" conditionals="46" coveredstatements="90"/>
            <class name="ScheduleGenerator">
               <metrics coveredelements="98" coveredconditionals="15" complexity="43" coveredmethods="7" methods="13" elements="164" statements="129" conditionals="22" coveredstatements="76"/>
            </class>
            <class name="ScheduleGenerator.Frequency">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ScheduleGenerator.DaycountConvention">
               <metrics coveredelements="28" coveredconditionals="13" complexity="13" coveredmethods="1" methods="1" elements="50" statements="25" conditionals="24" coveredstatements="14"/>
            </class>
            <class name="ScheduleGenerator.ShortPeriodConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="13" visibility="public" signature="getEnum(String) : DaycountConvention" num="90" count="1263" type="method"/>
            <line num="91" count="1263" type="stmt"/>
            <line falsecount="1263" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="1263" type="stmt"/>
            <line falsecount="1263" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="1263" type="stmt"/>
            <line falsecount="1263" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1263" type="stmt"/>
            <line falsecount="1263" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="1263" type="stmt"/>
            <line falsecount="1011" truecount="252" num="103" type="cond"/>
            <line num="104" count="252" type="stmt"/>
            <line num="106" count="1011" type="stmt"/>
            <line falsecount="1002" truecount="9" num="106" type="cond"/>
            <line num="107" count="9" type="stmt"/>
            <line num="109" count="1002" type="stmt"/>
            <line falsecount="1002" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="1002" type="stmt"/>
            <line falsecount="1002" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="1002" type="stmt"/>
            <line falsecount="13" truecount="989" num="115" type="cond"/>
            <line num="116" count="989" type="stmt"/>
            <line num="118" count="13" type="stmt"/>
            <line falsecount="0" truecount="13" num="118" type="cond"/>
            <line num="119" count="13" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleGenerator()" num="144" count="0" type="method"/>
            <line complexity="29" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean) : Schedule" num="172" count="10053191" type="method"/>
            <line num="189" count="10060302" type="stmt"/>
            <line num="191" count="10065963" type="stmt"/>
            <line num="192" count="10069138" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="375" type="stmt"/>
            <line num="197" count="375" type="stmt"/>
            <line num="198" count="375" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="10071166" type="stmt"/>
            <line num="203" count="10074847" type="stmt"/>
            <line num="204" count="10036033" type="stmt"/>
            <line num="205" count="15" type="stmt"/>
            <line num="206" count="15" type="stmt"/>
            <line num="207" count="15" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="10040203" type="stmt"/>
            <line num="216" count="10042304" type="stmt"/>
            <line num="217" count="10044261" type="stmt"/>
            <line num="218" count="10045742" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="250" type="stmt"/>
            <line num="229" count="250" type="stmt"/>
            <line num="230" count="250" type="stmt"/>
            <line num="231" count="10017381" type="stmt"/>
            <line num="232" count="10021221" type="stmt"/>
            <line num="233" count="10024247" type="stmt"/>
            <line num="234" count="30750" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="30751" type="stmt"/>
            <line num="237" count="30750" type="stmt"/>
            <line num="238" count="3804" type="stmt"/>
            <line num="239" count="3804" type="stmt"/>
            <line num="240" count="3804" type="stmt"/>
            <line num="244" count="10062333" type="stmt"/>
            <line falsecount="10068389" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="10072322" type="stmt"/>
            <line falsecount="1555" truecount="10073914" num="247" type="cond"/>
            <line num="251" count="10077189" type="stmt"/>
            <line num="252" count="10080336" type="stmt"/>
            <line num="253" count="10081028" type="stmt"/>
            <line num="255" count="10083181" type="stmt"/>
            <line num="256" count="10092534" type="stmt"/>
            <line falsecount="10109353" truecount="193233791" num="256" type="cond"/>
            <line num="257" count="194746547" type="stmt"/>
            <line num="260" count="194935764" type="stmt"/>
            <line falsecount="195119893" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="269" count="196065233" type="stmt"/>
            <line num="274" count="200916088" type="stmt"/>
            <line falsecount="201545808" truecount="8610" num="274" type="cond"/>
            <line num="275" count="8610" type="stmt"/>
            <line num="276" count="8610" type="stmt"/>
            <line num="280" count="201791553" type="stmt"/>
            <line num="283" count="187532977" type="stmt"/>
            <line falsecount="189905814" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="288" count="190670626" type="stmt"/>
            <line num="292" count="187674159" type="stmt"/>
            <line num="296" count="185368990" type="stmt"/>
            <line num="298" count="184097312" type="stmt"/>
            <line num="299" count="190660512" type="stmt"/>
            <line num="305" count="1555" type="stmt"/>
            <line num="306" count="1555" type="stmt"/>
            <line num="307" count="1555" type="stmt"/>
            <line num="309" count="1555" type="stmt"/>
            <line num="310" count="1555" type="stmt"/>
            <line falsecount="1555" truecount="33710" num="310" type="cond"/>
            <line num="311" count="33710" type="stmt"/>
            <line num="314" count="33710" type="stmt"/>
            <line falsecount="33710" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="323" count="33710" type="stmt"/>
            <line num="329" count="33710" type="stmt"/>
            <line falsecount="33429" truecount="281" num="329" type="cond"/>
            <line num="330" count="281" type="stmt"/>
            <line num="331" count="281" type="stmt"/>
            <line num="335" count="33710" type="stmt"/>
            <line num="338" count="33710" type="stmt"/>
            <line falsecount="33710" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="343" count="33710" type="stmt"/>
            <line num="347" count="33710" type="stmt"/>
            <line num="351" count="33710" type="stmt"/>
            <line num="353" count="33710" type="stmt"/>
            <line num="354" count="33710" type="stmt"/>
            <line num="358" count="10115798" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int) : Schedule" num="385" count="1322" type="method"/>
            <line num="398" count="1322" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="424" count="1262" type="method"/>
            <line num="437" count="1262" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(Date,Date,Date,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="474" count="2" type="method"/>
            <line num="487" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="520" count="1249" type="method"/>
            <line num="535" count="1249" type="stmt"/>
            <line num="536" count="1249" type="stmt"/>
            <line num="537" count="1249" type="stmt"/>
            <line num="539" count="1249" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int,boolean) : Schedule" num="561" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="613" count="1249" type="method"/>
            <line num="628" count="1249" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="648" count="1" type="method"/>
            <line num="662" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="createScheduleFromConventions(LocalDate,String,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="681" count="0" type="method"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,String,double,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="745" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,String,double,String,String) : Schedule" num="789" count="0" type="method"/>
            <line num="799" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDateFromDateAndOffset(LocalDate,double) : LocalDate" num="823" count="0" type="method"/>
            <line num="826" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/ScheduleMetaData.java" name="ScheduleMetaData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="46" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ScheduleMetaData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleMetaData(Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="36" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/SchedulePrototype.java" name="SchedulePrototype.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="23" loc="237" coveredmethods="12" methods="15" elements="82" classes="2" ncloc="111" statements="61" conditionals="6" coveredstatements="27"/>
            <class name="SchedulePrototype">
               <metrics coveredelements="39" coveredconditionals="0" complexity="23" coveredmethods="12" methods="15" elements="82" statements="61" conditionals="6" coveredstatements="27"/>
            </class>
            <class name="SchedulePrototype.OffsetUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="getOffsetCodeFromSchedule(Schedule) : String" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getOffsetCodeFromCurveName(String) : String" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SchedulePrototype(Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="104" count="13" type="method"/>
            <line num="108" count="13" type="stmt"/>
            <line num="109" count="13" type="stmt"/>
            <line num="110" count="13" type="stmt"/>
            <line num="111" count="13" type="stmt"/>
            <line num="112" count="13" type="stmt"/>
            <line num="113" count="13" type="stmt"/>
            <line num="114" count="13" type="stmt"/>
            <line num="115" count="13" type="stmt"/>
            <line num="116" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateScheduleDescriptor(LocalDate,LocalDate) : ScheduleDescriptor" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateSchedule(LocalDate,LocalDate,LocalDate) : Schedule" num="139" count="10097205" type="method"/>
            <line num="140" count="10105573" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateSchedule(LocalDate,int,int) : Schedule" num="152" count="4188" type="method"/>
            <line num="153" count="4188" type="stmt"/>
            <line complexity="5" visibility="public" signature="generateSchedule(LocalDate,int,int,OffsetUnit) : Schedule" num="165" count="4188" type="method"/>
            <line num="167" count="4188" type="stmt"/>
            <line num="168" count="4188" type="stmt"/>
            <line num="170" count="4188" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="4188" type="stmt"/>
            <line num="172" count="4188" type="stmt"/>
            <line num="172" count="4188" type="stmt"/>
            <line num="172" count="4188" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="4188" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFrequency() : Frequency" num="184" count="10109791" type="method"/>
            <line num="185" count="10113081" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DaycountConvention" num="191" count="10087292" type="method"/>
            <line num="192" count="10089357" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShortPeriodConvention() : ShortPeriodConvention" num="198" count="10074042" type="method"/>
            <line num="199" count="10077845" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDateRollConvention() : DateRollConvention" num="205" count="10069044" type="method"/>
            <line num="206" count="10070756" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBusinessdayCalendar() : BusinessdayCalendar" num="212" count="10063671" type="method"/>
            <line num="213" count="10064628" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingOffsetDays() : int" num="219" count="10059442" type="method"/>
            <line num="220" count="10060761" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetDays() : int" num="226" count="10055958" type="method"/>
            <line num="227" count="10057642" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseEndOfMonth() : boolean" num="233" count="10054132" type="method"/>
            <line num="234" count="10056098" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/Tenor.java" name="Tenor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Tenor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/TenorFromArray.java" name="TenorFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="10" elements="35" classes="1" ncloc="53" statements="19" conditionals="6" coveredstatements="0"/>
            <class name="TenorFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="10" elements="35" statements="19" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TenorFromArray(LocalDate[],LocalDate)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createTimeDiscretizationFromDates(LocalDate[],LocalDate) : double[]" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(Double[])" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double,int,double)" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double,double,double,ShortPeriodLocation)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(int) : LocalDate" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/TimeDiscretization.java" name="TimeDiscretization.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="131" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TimeDiscretization">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="doubleStream() : DoubleStream" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/TimeDiscretizationFromArray.java" name="TimeDiscretizationFromArray.java">
            <metrics coveredelements="93" coveredconditionals="7" complexity="47" loc="387" coveredmethods="34" methods="38" elements="130" classes="2" ncloc="209" statements="74" conditionals="18" coveredstatements="52"/>
            <class name="TimeDiscretizationFromArray">
               <metrics coveredelements="93" coveredconditionals="7" complexity="47" coveredmethods="34" methods="38" elements="130" statements="74" conditionals="18" coveredstatements="52"/>
            </class>
            <class name="TimeDiscretizationFromArray.ShortPeriodLocation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,double,boolean)" num="56" count="15100" type="method"/>
            <line num="57" count="15100" type="stmt"/>
            <line num="58" count="15100" type="stmt"/>
            <line num="59" count="15100" type="stmt"/>
            <line falsecount="0" truecount="15100" num="59" type="cond"/>
            <line num="60" count="15100" type="stmt"/>
            <line num="62" count="15100" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,double)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,boolean)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream)" num="91" count="15077" type="method"/>
            <line num="92" count="15077" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;,double,boolean)" num="102" count="9" type="method"/>
            <line num="103" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;,double)" num="113" count="13" type="method"/>
            <line num="114" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;)" num="122" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,double,boolean)" num="134" count="9" type="method"/>
            <line num="135" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,double)" num="145" count="7" type="method"/>
            <line num="146" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,boolean)" num="156" count="2" type="method"/>
            <line num="157" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;)" num="166" count="2" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double)" num="176" count="13005" type="method"/>
            <line num="177" count="13005" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Double[])" num="186" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Double[],double)" num="197" count="10" type="method"/>
            <line num="198" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double,int,double)" num="209" count="2070" type="method"/>
            <line num="210" count="2070" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="211" count="178092" type="method"/>
            <line num="213" count="178092" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double,double,double,ShortPeriodLocation)" num="226" count="2" type="method"/>
            <line num="227" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getEquidistantStreamWithStub(double,double,double,ShortPeriodLocation) : DoubleStream" num="230" count="2" type="method"/>
            <line num="231" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="233" type="cond"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="235" count="7" type="method"/>
            <line num="237" count="7" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="243" count="7" type="method"/>
            <line num="245" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimes() : int" num="250" count="952089972" type="method"/>
            <line num="252" count="952302054" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimeSteps() : int" num="255" count="603137880" type="method"/>
            <line num="257" count="603255314" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="260" count="1771336311" type="method"/>
            <line num="262" count="1771725362" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeStep(int) : double" num="265" count="43304927" type="method"/>
            <line num="267" count="43319310" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="270" count="141264968" type="method"/>
            <line num="272" count="141319529" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeIndexNearestLessOrEqual(double) : int" num="275" count="111445765" type="method"/>
            <line num="277" count="111522349" type="stmt"/>
            <line num="278" count="111237117" type="stmt"/>
            <line falsecount="7324575" truecount="104323628" num="278" type="cond"/>
            <line num="279" count="104372198" type="stmt"/>
            <line num="281" count="111445290" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeIndexNearestGreaterOrEqual(double) : int" num="284" count="3" type="method"/>
            <line num="286" count="3" type="stmt"/>
            <line num="287" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDoubleArray() : double[]" num="293" count="271" type="method"/>
            <line num="296" count="271" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsArrayList() : ArrayList&lt;Double&gt;" num="299" count="35" type="method"/>
            <line num="301" count="35" type="stmt"/>
            <line num="302" count="35" type="stmt"/>
            <line num="303" count="2019" type="stmt"/>
            <line num="305" count="35" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeShiftedTimeDiscretization(double) : TimeDiscretization" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="union(TimeDiscretization) : TimeDiscretization" num="323" count="3" type="method"/>
            <line num="325" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="intersect(TimeDiscretization) : TimeDiscretization" num="330" count="3" type="method"/>
            <line num="332" count="3" type="stmt"/>
            <line num="333" count="3" type="stmt"/>
            <line num="335" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTickSize() : double" num="338" count="8" type="method"/>
            <line num="340" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="343" count="32" type="method"/>
            <line num="345" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="348" count="15" type="method"/>
            <line num="350" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="366" count="1" type="method"/>
            <line num="368" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="368" type="cond"/>
            <line num="369" count="1" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="roundToTimeTickSize(double) : double" num="384" count="252171055" type="method"/>
            <line num="385" count="252310863" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.stochastic">
         <metrics coveredelements="118" complexity="211" loc="1867" methods="187" classes="7" statements="248" coveredconditionals="10" coveredmethods="48" elements="479" ncloc="978" files="7" conditionals="44" coveredstatements="60"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/stochastic/ConditionalExpectationEstimator.java" name="ConditionalExpectationEstimator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ConditionalExpectationEstimator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/stochastic/RandomOperator.java" name="RandomOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="72" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="RandomOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="compose(RandomOperator) : RandomOperator" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="andThen(RandomOperator) : RandomOperator" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="identity() : RandomOperator" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/stochastic/RandomVariable.java" name="RandomVariable.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="13" loc="685" coveredmethods="5" methods="11" elements="33" classes="1" ncloc="117" statements="18" conditionals="4" coveredstatements="9"/>
            <class name="RandomVariable">
               <metrics coveredelements="16" coveredconditionals="2" complexity="13" coveredmethods="5" methods="11" elements="33" statements="18" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="getValues() : RandomVariable" num="83" count="19029379" type="method"/>
            <line num="83" count="19030139" type="stmt"/>
            <line complexity="1" visibility="package" signature="appy(RandomOperator) : RandomVariable" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="bus(double) : RandomVariable" num="389" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="vid(double) : RandomVariable" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectation() : RandomVariable" num="437" count="7" type="method"/>
            <line num="438" count="7" type="stmt"/>
            <line complexity="1" visibility="package" signature="variance() : RandomVariable" num="447" count="3" type="method"/>
            <line num="449" count="3" type="stmt"/>
            <line num="450" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="covariance(RandomVariable) : RandomVariable" num="460" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="471" count="23" type="method"/>
            <line num="473" count="23" type="stmt"/>
            <line complexity="1" visibility="package" signature="expm1() : RandomVariable" num="498" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="addSumProduct(RandomVariable[],RandomVariable[]) : RandomVariable" num="655" count="50283361" type="method"/>
            <line num="657" count="50343470" type="stmt"/>
            <line num="658" count="50362386" type="stmt"/>
            <line falsecount="50337036" truecount="56358485" num="658" type="cond"/>
            <line num="659" count="56366772" type="stmt"/>
            <line num="661" count="50380345" type="stmt"/>
            <line complexity="2" visibility="package" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="670" count="0" type="method"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="673" type="cond"/>
            <line num="674" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/stochastic/RandomVariableAccumulator.java" name="RandomVariableAccumulator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableAccumulator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/stochastic/RandomVariableArray.java" name="RandomVariableArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="92" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="42" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="RandomVariableArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="27" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="getLevel() : int" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="toDoubleArray() : Object" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariableArray" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/stochastic/RandomVariableArrayImplementation.java" name="RandomVariableArrayImplementation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="118" loc="600" coveredmethods="0" methods="104" elements="265" classes="1" ncloc="505" statements="137" conditionals="24" coveredstatements="0"/>
            <class name="RandomVariableArrayImplementation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="118" coveredmethods="0" methods="104" elements="265" statements="137" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(RandomVariable[]) : RandomVariableArray" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="RandomVariableArrayImplementation(RandomVariable[])" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLevel(RandomVariable) : int" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfElements() : int" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElement(int) : RandomVariable" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="map(RandomOperator) : RandomVariableArray" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sumProduct(RandomVariableArray) : RandomVariable" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(RandomVariable) : boolean" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFiltrationTime() : double" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isDeterministic() : boolean" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : double" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : double" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="274" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="294" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="314" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="344" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="371" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="384" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="394" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="404" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="424" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="441" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="444" count="0" type="method"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="451" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="481" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="494" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="501" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="514" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="521" count="0" type="method"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="531" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="544" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="554" count="0" type="method"/>
            <line num="556" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="564" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="581" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="584" count="0" type="method"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="594" count="0" type="method"/>
            <line num="596" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/stochastic/Scalar.java" name="Scalar.java">
            <metrics coveredelements="102" coveredconditionals="8" complexity="69" loc="369" coveredmethods="43" methods="65" elements="146" classes="1" ncloc="283" statements="73" conditionals="8" coveredstatements="51"/>
            <class name="Scalar">
               <metrics coveredelements="102" coveredconditionals="8" complexity="69" coveredmethods="43" methods="65" elements="146" statements="73" conditionals="8" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="Scalar(double)" num="27" count="190290814" type="method"/>
            <line num="28" count="190164103" type="stmt"/>
            <line num="29" count="190379163" type="stmt"/>
            <line complexity="2" visibility="public" signature="arrayOf(double[]) : Scalar[]" num="35" count="1704" type="method"/>
            <line num="36" count="1704" type="stmt"/>
            <line num="37" count="1704" type="stmt"/>
            <line falsecount="1704" truecount="66762" num="37" type="cond"/>
            <line num="38" count="66762" type="stmt"/>
            <line num="40" count="1704" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="43" count="6" type="method"/>
            <line num="45" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="48" count="123465820" type="method"/>
            <line num="50" count="123479773" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="53" count="123114550" type="method"/>
            <line num="55" count="123174994" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="58" count="2147483647" type="method"/>
            <line num="60" count="2147483647" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="63" count="644261" type="method"/>
            <line num="65" count="644323" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="68" count="148600716" type="method"/>
            <line num="70" count="148619949" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="78" count="116383272" type="method"/>
            <line num="80" count="116401400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="103" count="771933" type="method"/>
            <line num="105" count="771922" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="108" count="2" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="113" count="17" type="method"/>
            <line num="115" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="138" count="12" type="method"/>
            <line num="140" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="178" count="75" type="method"/>
            <line num="180" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="189" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="196" count="334634" type="method"/>
            <line num="198" count="334631" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="201" count="139" type="method"/>
            <line num="203" count="139" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="206" count="28892879" type="method"/>
            <line num="208" count="28917605" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="211" count="1277700" type="method"/>
            <line num="213" count="1278217" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="216" count="113274214" type="method"/>
            <line num="218" count="113394675" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="221" count="388496" type="method"/>
            <line num="223" count="388697" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="226" count="19225" type="method"/>
            <line num="228" count="19229" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="231" count="1296" type="method"/>
            <line num="233" count="1296" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="236" count="950008" type="method"/>
            <line num="238" count="950434" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="241" count="51265" type="method"/>
            <line num="243" count="51286" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="246" count="8954512" type="method"/>
            <line num="248" count="8958512" type="stmt"/>
            <line complexity="1" visibility="public" signature="expm1() : RandomVariable" num="251" count="226944" type="method"/>
            <line num="253" count="227115" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="256" count="203125" type="method"/>
            <line num="258" count="203179" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="271" count="16542176" type="method"/>
            <line num="273" count="16578923" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="276" count="1163826" type="method"/>
            <line num="278" count="1164302" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="286" count="58490450" type="method"/>
            <line num="288" count="58519631" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="291" count="1157055" type="method"/>
            <line num="293" count="1157683" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="301" count="19" type="method"/>
            <line num="303" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="306" count="14" type="method"/>
            <line num="308" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="311" count="5724" type="method"/>
            <line num="313" count="5724" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="316" count="25827300" type="method"/>
            <line num="318" count="25827296" type="stmt"/>
            <line falsecount="25827243" truecount="40" num="318" type="cond"/>
            <line num="319" count="40" type="stmt"/>
            <line num="322" count="25827255" type="stmt"/>
            <line complexity="2" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="326" count="418755" type="method"/>
            <line num="328" count="418952" type="stmt"/>
            <line falsecount="101523" truecount="317605" num="328" type="cond"/>
            <line num="329" count="317708" type="stmt"/>
            <line num="331" count="101523" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="335" count="2160577" type="method"/>
            <line num="337" count="2160645" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="340" count="91872" type="method"/>
            <line num="342" count="91889" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="345" count="8486767" type="method"/>
            <line num="347" count="8489179" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="350" count="28570076" type="method"/>
            <line num="352" count="28570728" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="355" count="3" type="method"/>
            <line num="357" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="360" count="1" type="method"/>
            <line num="362" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="isNaN() : RandomVariable" num="365" count="5" type="method"/>
            <line num="367" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="367" type="cond"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor.xmlparser">
         <metrics coveredelements="73" complexity="44" loc="425" methods="9" classes="3" statements="144" coveredconditionals="11" coveredmethods="7" elements="207" ncloc="249" files="3" conditionals="54" coveredstatements="55"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/xmlparser/FIPXMLParser.java" name="FIPXMLParser.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="21" loc="198" coveredmethods="3" methods="5" elements="99" classes="1" ncloc="116" statements="64" conditionals="30" coveredstatements="5"/>
            <class name="FIPXMLParser">
               <metrics coveredelements="8" coveredconditionals="0" complexity="21" coveredmethods="3" methods="5" elements="99" statements="64" conditionals="30" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="FIPXMLParser()" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="FIPXMLParser(boolean,String)" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductDescriptor(File) : ProductDescriptor" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="getSwapProductDescriptor(File) : InterestRateSwapProductDescriptor" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getSwapLegProductDescriptor(Element,String,String,DayCountConvention) : InterestRateSwapLegProductDescriptor" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/xmlparser/FPMLParser.java" name="FPMLParser.java">
            <metrics coveredelements="65" coveredconditionals="11" complexity="23" loc="196" coveredmethods="4" methods="4" elements="108" classes="1" ncloc="124" statements="80" conditionals="24" coveredstatements="50"/>
            <class name="FPMLParser">
               <metrics coveredelements="65" coveredconditionals="11" complexity="23" coveredmethods="4" methods="4" elements="108" statements="80" conditionals="24" coveredstatements="50"/>
            </class>
            <line complexity="1" visibility="public" signature="FPMLParser(String,String)" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="getProductDescriptor(File) : ProductDescriptor" num="55" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line falsecount="0" truecount="4" num="75" type="cond"/>
            <line num="76" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="76" type="cond"/>
            <line num="77" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="79" type="cond"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getSwapProductDescriptor(Element) : ProductDescriptor" num="103" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="109" type="cond"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="114" type="cond"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="getSwapLegProductDescriptor(Element) : InterestRateSwapLegProductDescriptor" num="130" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="141" type="cond"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/xmlparser/XMLParser.java" name="XMLParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="XMLParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.calibration">
         <metrics coveredelements="95" complexity="106" loc="1314" methods="47" classes="6" statements="286" coveredconditionals="13" coveredmethods="9" elements="423" ncloc="624" files="5" conditionals="90" coveredstatements="73"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/calibration/CalibratedCurves.java" name="CalibratedCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="73" loc="841" coveredmethods="0" methods="29" elements="275" classes="2" ncloc="407" statements="182" conditionals="64" coveredstatements="0"/>
            <class name="CalibratedCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="63" coveredmethods="0" methods="23" elements="229" statements="144" conditionals="62" coveredstatements="0"/>
            </class>
            <class name="CalibratedCurves.CalibrationSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="46" statements="38" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 95()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="142" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="183" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,double[],String,double,String,String,double)" num="211" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,String,double)" num="246" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneShifted(double) : CalibrationSpec" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(List&lt;CalibrationSpec&gt;,AnalyticModel,double,double)" num="318" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double,double)" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double)" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols)" num="410" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(Collection&lt;CalibrationSpec&gt;)" num="422" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[])" num="434" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getCalibrationProductForSpec(CalibrationSpec) : AnalyticProduct" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="460" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="474" type="cond"/>
            <line num="475" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="489" type="cond"/>
            <line num="491" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="495" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="502" type="cond"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="508" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AnalyticModel" num="528" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="538" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastNumberOfInterations() : int" num="547" count="0" type="method"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(String,double) : CalibratedCurves" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="566" type="cond"/>
            <line num="567" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Map&lt;String,Double&gt;) : CalibratedCurves" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="591" type="cond"/>
            <line num="592" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Pattern,double) : CalibratedCurves" num="617" count="0" type="method"/>
            <line num="619" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="623" type="cond"/>
            <line num="624" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneShiftedForRegExp(String,double) : CalibratedCurves" num="649" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastAccuracy() : double" num="658" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCalibrationProductForSymbol(String) : AnalyticProduct" num="670" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="calibrate(double) : int" num="687" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="add(CalibrationSpec) : String" num="702" count="0" type="method"/>
            <line num="704" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="718" type="cond"/>
            <line num="719" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line num="727" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="727" type="cond"/>
            <line num="728" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="738" type="cond"/>
            <line num="740" count="0" type="stmt"/>
            <line num="747" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createDiscountCurve(String) : DiscountCurveInterface" num="764" count="0" type="method"/>
            <line num="765" count="0" type="stmt"/>
            <line num="766" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="766" type="cond"/>
            <line num="767" count="0" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="18" visibility="private" signature="createForwardCurve(Schedule,String) : String" num="781" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line num="791" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="793" type="cond"/>
            <line num="794" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="796" type="cond"/>
            <line num="797" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="800" type="cond"/>
            <line num="801" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="808" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="810" type="cond"/>
            <line num="811" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/calibration/ParameterAggregation.java" name="ParameterAggregation.java">
            <metrics coveredelements="28" coveredconditionals="3" complexity="13" loc="140" coveredmethods="3" methods="9" elements="51" classes="1" ncloc="74" statements="34" conditionals="8" coveredstatements="22"/>
            <class name="ParameterAggregation">
               <metrics coveredelements="28" coveredconditionals="3" complexity="13" coveredmethods="3" methods="9" elements="51" statements="34" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterAggregation()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(Set&lt;E&gt;)" num="50" count="6" type="method"/>
            <line num="51" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(E[])" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : void" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(E) : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="82" count="6" type="method"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="87" type="cond"/>
            <line num="88" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="95" count="6" type="stmt"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="98" type="cond"/>
            <line num="99" count="6" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line num="104" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameter(RandomVariable[]) : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getObjectsToModifyForParameter(RandomVariable[]) : Map&lt;E, RandomVariable[]&gt;" num="121" count="348" type="method"/>
            <line num="122" count="348" type="stmt"/>
            <line num="123" count="348" type="stmt"/>
            <line num="124" count="348" type="stmt"/>
            <line num="125" count="348" type="stmt"/>
            <line num="126" count="348" type="stmt"/>
            <line falsecount="0" truecount="348" num="126" type="cond"/>
            <line num="128" count="348" type="stmt"/>
            <line num="129" count="348" type="stmt"/>
            <line num="130" count="348" type="stmt"/>
            <line num="133" count="348" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/calibration/ParameterObject.java" name="ParameterObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/calibration/ParameterTransformation.java" name="ParameterTransformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterTransformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/calibration/Solver.java" name="Solver.java">
            <metrics coveredelements="67" coveredconditionals="10" complexity="20" loc="248" coveredmethods="6" methods="9" elements="97" classes="1" ncloc="129" statements="70" conditionals="18" coveredstatements="51"/>
            <class name="Solver">
               <metrics coveredelements="67" coveredconditionals="10" complexity="20" coveredmethods="6" methods="9" elements="97" statements="70" conditionals="18" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,StochasticOptimizerFactory)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,double)" num="85" count="6" type="method"/>
            <line num="86" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line num="88" count="6" type="stmt"/>
            <line num="89" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="93" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,double,double)" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,double,double)" num="119" count="6" type="method"/>
            <line num="120" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;)" num="130" count="6" type="method"/>
            <line num="131" count="6" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCalibratedModel(Set&lt;ParameterObject&gt;) : AnalyticModel" num="145" count="6" type="method"/>
            <line num="146" count="6" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line num="152" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line num="158" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="168" count="342" type="method"/>
            <line num="170" count="342" type="stmt"/>
            <line num="171" count="342" type="stmt"/>
            <line num="172" count="342" type="stmt"/>
            <line falsecount="342" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="342" type="stmt"/>
            <line num="179" count="342" type="stmt"/>
            <line num="180" count="342" type="stmt"/>
            <line falsecount="342" truecount="1587" num="180" type="cond"/>
            <line num="181" count="1587" type="stmt"/>
            <line num="183" count="342" type="stmt"/>
            <line falsecount="342" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="194" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="194" type="cond"/>
            <line num="195" count="6" type="stmt"/>
            <line num="196" count="6" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line num="200" count="6" type="stmt"/>
            <line num="202" count="6" type="stmt"/>
            <line num="204" count="6" type="stmt"/>
            <line num="205" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line num="210" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="213" count="6" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="6" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line falsecount="6" truecount="27" num="219" type="cond"/>
            <line num="220" count="27" type="stmt"/>
            <line num="221" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="27" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="228" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="236" count="6" type="method"/>
            <line num="237" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves.locallinearregression">
         <metrics coveredelements="0" complexity="33" loc="355" methods="16" classes="3" statements="94" coveredconditionals="0" coveredmethods="0" elements="136" ncloc="211" files="2" conditionals="26" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/locallinearregression/CurveEstimation.java" name="CurveEstimation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="229" coveredmethods="0" methods="4" elements="85" classes="2" ncloc="143" statements="67" conditionals="14" coveredstatements="0"/>
            <class name="CurveEstimation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="4" elements="85" statements="67" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="CurveEstimation.Distribution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CurveEstimation(LocalDate,double,double[],double[],double[],double,Distribution)" num="68" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CurveEstimation(LocalDate,double,double[],double[],double[],double)" num="108" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRegressionCurve() : Curve" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="solveEquationSystem() : DoubleMatrix" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/locallinearregression/Partition.java" name="Partition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="126" coveredmethods="0" methods="12" elements="51" classes="1" ncloc="68" statements="27" conditionals="12" coveredstatements="0"/>
            <class name="Partition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="12" elements="51" statements="27" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="Partition(double[],double)" num="29" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Partition(double[])" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getIntervalNumber(double) : int" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="d(double) : double" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferencePoints() : double[]" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntervalReferencePoint(int) : double" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoints() : double[]" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoint(int) : double" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLength() : int" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIntervals() : int" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntervalLength(int) : double" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeight() : double" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products.smile">
         <metrics coveredelements="67" complexity="21" loc="325" methods="16" classes="3" statements="73" coveredconditionals="6" coveredmethods="10" elements="99" ncloc="171" files="3" conditionals="10" coveredstatements="51"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/products/smile/EuropeanOptionSmile.java" name="EuropeanOptionSmile.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="12" loc="118" coveredmethods="6" methods="10" elements="35" classes="1" ncloc="66" statements="21" conditionals="4" coveredstatements="9"/>
            <class name="EuropeanOptionSmile">
               <metrics coveredelements="15" coveredconditionals="0" complexity="12" coveredmethods="6" methods="10" elements="35" statements="21" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmile(String,double,double[])" num="30" count="505" type="method"/>
            <line num="31" count="505" type="stmt"/>
            <line num="32" count="506" type="stmt"/>
            <line num="33" count="507" type="stmt"/>
            <line num="34" count="507" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmile(double,double[])" num="37" count="506" type="method"/>
            <line num="38" count="507" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="41" count="504" type="method"/>
            <line num="43" count="504" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingName() : String" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="54" count="504" type="method"/>
            <line num="56" count="504" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="59" count="505" type="method"/>
            <line num="61" count="504" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="77" count="2057811" type="method"/>
            <line num="79" count="2058434" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDescriptors(LocalDate) : Map&lt;Double, SingleAssetEuropeanOptionProductDescriptor&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDescriptor(LocalDate,int) : SingleAssetEuropeanOptionProductDescriptor" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/products/smile/EuropeanOptionSmileByCarrMadan.java" name="EuropeanOptionSmileByCarrMadan.java">
            <metrics coveredelements="52" coveredconditionals="6" complexity="9" loc="154" coveredmethods="4" methods="6" elements="64" classes="1" ncloc="93" statements="52" conditionals="6" coveredstatements="42"/>
            <class name="EuropeanOptionSmileByCarrMadan">
               <metrics coveredelements="52" coveredconditionals="6" complexity="9" coveredmethods="4" methods="6" elements="64" statements="52" conditionals="6" coveredstatements="42"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(double,double[])" num="51" count="507" type="method"/>
            <line num="52" count="507" type="stmt"/>
            <line num="53" count="506" type="stmt"/>
            <line num="54" count="507" type="stmt"/>
            <line num="55" count="507" type="stmt"/>
            <line num="56" count="507" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(String,double,double[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(String,double,double[],int,double,InterpolationMethod,ExtrapolationMethod)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,CharacteristicFunctionModel) : Map&lt;String, Function&lt;Double, Double&gt;&gt;" num="77" count="505" type="method"/>
            <line num="80" count="505" type="stmt"/>
            <line num="82" count="504" type="stmt"/>
            <line num="84" count="505" type="stmt"/>
            <line num="85" count="505" type="stmt"/>
            <line num="87" count="504" type="stmt"/>
            <line num="89" count="505" type="stmt"/>
            <line falsecount="505" truecount="2049946" num="89" type="cond"/>
            <line num="91" count="2049393" type="stmt"/>
            <line num="94" count="2049739" type="stmt"/>
            <line num="97" count="2048696" type="stmt"/>
            <line num="99" count="2056195" type="stmt"/>
            <line num="100" count="2055758" type="stmt"/>
            <line num="101" count="2056018" type="stmt"/>
            <line num="103" count="2060796" type="stmt"/>
            <line num="104" count="2061261" type="stmt"/>
            <line falsecount="2060664" truecount="505" num="104" type="cond"/>
            <line num="105" count="505" type="stmt"/>
            <line num="107" count="2059984" type="stmt"/>
            <line num="109" count="2059886" type="stmt"/>
            <line num="111" count="2050536" type="stmt"/>
            <line num="115" count="505" type="stmt"/>
            <line num="116" count="505" type="stmt"/>
            <line num="117" count="505" type="stmt"/>
            <line num="120" count="505" type="stmt"/>
            <line num="121" count="505" type="stmt"/>
            <line num="122" count="505" type="stmt"/>
            <line num="124" count="505" type="stmt"/>
            <line falsecount="505" truecount="2011003" num="124" type="cond"/>
            <line num="125" count="2012153" type="stmt"/>
            <line num="126" count="2013474" type="stmt"/>
            <line num="127" count="2005966" type="stmt"/>
            <line num="130" count="505" type="stmt"/>
            <line num="132" count="505" type="stmt"/>
            <line num="133" count="505" type="stmt"/>
            <line num="135" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : Double" num="137" count="5079" type="method"/>
            <line num="139" count="5079" type="stmt"/>
            <line num="144" count="505" type="stmt"/>
            <line num="145" count="505" type="stmt"/>
            <line num="146" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double,double[]) : EuropeanOptionSmile" num="149" count="501" type="method"/>
            <line num="151" count="501" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/products/smile/SmileByIntegralTransform.java" name="SmileByIntegralTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SmileByIntegralTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.products">
         <metrics coveredelements="68" complexity="117" loc="1240" methods="62" classes="12" statements="273" coveredconditionals="15" coveredmethods="8" elements="429" ncloc="616" files="12" conditionals="94" coveredstatements="45"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/AbstractAnalyticProduct.java" name="AbstractAnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="33" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="AbstractAnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel) : RandomVariable" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/AnalyticProduct.java" name="AnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="2" elements="23" classes="1" ncloc="30" statements="13" conditionals="8" coveredstatements="0"/>
            <class name="Cashflow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean,String)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/Deposit.java" name="Deposit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="137" coveredmethods="0" methods="9" elements="65" classes="1" ncloc="82" statements="42" conditionals="14" coveredstatements="0"/>
            <class name="Deposit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="9" elements="65" statements="42" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="Deposit(Schedule,double,String)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : RandomVariable" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRate() : double" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEndTime() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingTime() : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/Forward.java" name="Forward.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="81" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="41" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="Forward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="32" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Forward(double,double,String,double,String)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/ForwardRateAgreement.java" name="ForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="118" coveredmethods="0" methods="4" elements="55" classes="1" ncloc="63" statements="33" conditionals="18" coveredstatements="0"/>
            <class name="ForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="55" statements="33" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String,boolean)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String)" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : RandomVariable" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/MarketForwardRateAgreement.java" name="MarketForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="92" coveredmethods="0" methods="2" elements="33" classes="1" ncloc="42" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="MarketForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="33" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketForwardRateAgreement(double,double,String,double,String)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/Performance.java" name="Performance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="56" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="24" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Performance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Performance(AbstractAnalyticProduct,AbstractAnalyticProduct)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="152" coveredmethods="0" methods="9" elements="36" classes="1" ncloc="62" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="36" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(Portfolio,List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(AnalyticProduct,double)" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;)" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(AnalyticProduct) : RandomVariable" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : RandomVariable" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : List&lt;AnalyticProduct&gt;" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : List&lt;Double&gt;" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/Swap.java" name="Swap.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="15" loc="180" coveredmethods="4" methods="11" elements="59" classes="1" ncloc="96" statements="40" conditionals="8" coveredstatements="10"/>
            <class name="Swap">
               <metrics coveredelements="14" coveredconditionals="0" complexity="15" coveredmethods="4" methods="11" elements="59" statements="40" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(AnalyticProduct,AnalyticProduct)" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String,boolean)" num="61" count="27" type="method"/>
            <line num="69" count="27" type="stmt"/>
            <line num="70" count="27" type="stmt"/>
            <line num="71" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String)" num="86" count="27" type="method"/>
            <line num="93" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="96" count="1642" type="method"/>
            <line num="99" count="1642" type="stmt"/>
            <line num="100" count="1642" type="stmt"/>
            <line num="102" count="1642" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurveInterface) : RandomVariable" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurveInterface,DiscountCurveInterface) : RandomVariable" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurveInterface) : RandomVariable" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurveInterface,AnalyticModel) : RandomVariable" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : AnalyticProduct" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : AnalyticProduct" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/SwapAnnuity.java" name="SwapAnnuity.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="139" coveredmethods="0" methods="8" elements="34" classes="1" ncloc="59" statements="22" conditionals="4" coveredstatements="0"/>
            <class name="SwapAnnuity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="34" statements="22" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapAnnuity(Schedule,String)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,DiscountCurveInterface) : RandomVariable" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,ForwardCurveInterface) : RandomVariable" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,DiscountCurveInterface) : RandomVariable" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,ForwardCurveInterface) : RandomVariable" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSwapAnnuity(double,Schedule,DiscountCurveInterface,AnalyticModel) : RandomVariable" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="54" coveredconditionals="15" complexity="23" loc="161" coveredmethods="4" methods="10" elements="77" classes="1" ncloc="95" statements="45" conditionals="22" coveredstatements="35"/>
            <class name="SwapLeg">
               <metrics coveredelements="54" coveredconditionals="15" complexity="23" coveredmethods="4" methods="10" elements="77" statements="45" conditionals="22" coveredstatements="35"/>
            </class>
            <line complexity="2" visibility="public" signature="SwapLeg(Schedule,String,double,String,String,boolean)" num="44" count="56" type="method"/>
            <line num="45" count="56" type="stmt"/>
            <line num="46" count="56" type="stmt"/>
            <line num="47" count="56" type="stmt"/>
            <line num="48" count="56" type="stmt"/>
            <line num="49" count="56" type="stmt"/>
            <line num="50" count="56" type="stmt"/>
            <line falsecount="56" truecount="0" num="50" type="cond"/>
            <line num="51" count="56" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,boolean)" num="63" count="54" type="method"/>
            <line num="64" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String)" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="80" count="3284" type="method"/>
            <line num="82" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="3284" type="stmt"/>
            <line num="87" count="3284" type="stmt"/>
            <line num="88" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="3284" type="stmt"/>
            <line num="96" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="3284" type="stmt"/>
            <line num="101" count="3284" type="stmt"/>
            <line falsecount="3284" truecount="17588" num="101" type="cond"/>
            <line num="102" count="17588" type="stmt"/>
            <line num="103" count="17588" type="stmt"/>
            <line num="104" count="17588" type="stmt"/>
            <line num="105" count="17588" type="stmt"/>
            <line num="106" count="17588" type="stmt"/>
            <line num="108" count="17588" type="stmt"/>
            <line num="109" count="17588" type="stmt"/>
            <line falsecount="8794" truecount="8794" num="109" type="cond"/>
            <line num="110" count="8794" type="stmt"/>
            <line num="114" count="17588" type="stmt"/>
            <line num="115" count="17588" type="stmt"/>
            <line falsecount="0" truecount="17588" num="115" type="cond"/>
            <line num="116" count="17588" type="stmt"/>
            <line num="119" count="17588" type="stmt"/>
            <line falsecount="20" truecount="17568" num="119" type="cond"/>
            <line num="120" count="17568" type="stmt"/>
            <line falsecount="0" truecount="17568" num="120" type="cond"/>
            <line num="121" count="17568" type="stmt"/>
            <line num="123" count="17568" type="stmt"/>
            <line falsecount="3282" truecount="14286" num="123" type="cond"/>
            <line num="124" count="14286" type="stmt"/>
            <line num="129" count="3284" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpread() : double" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model.curves">
         <metrics coveredelements="345" complexity="212" loc="2410" methods="120" classes="17" statements="468" coveredconditionals="53" coveredmethods="62" elements="736" ncloc="1112" files="11" conditionals="148" coveredstatements="230"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/AbstractCurve.java" name="AbstractCurve.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="9" loc="85" coveredmethods="5" methods="8" elements="23" classes="1" ncloc="43" statements="13" conditionals="2" coveredstatements="7"/>
            <class name="AbstractCurve">
               <metrics coveredelements="12" coveredconditionals="0" complexity="9" coveredmethods="5" methods="8" elements="23" statements="13" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCurve(String,LocalDate)" num="28" count="18" type="method"/>
            <line num="29" count="18" type="stmt"/>
            <line num="30" count="18" type="stmt"/>
            <line num="31" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="37" count="397" type="method"/>
            <line num="39" count="397" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="42" count="42" type="method"/>
            <line num="44" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double[]) : RandomVariable[]" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AbstractCurve" num="70" count="345" type="method"/>
            <line num="72" count="345" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/AbstractForwardCurve.java" name="AbstractForwardCurve.java">
            <metrics coveredelements="30" coveredconditionals="1" complexity="13" loc="178" coveredmethods="9" methods="10" elements="48" classes="1" ncloc="91" statements="32" conditionals="6" coveredstatements="20"/>
            <class name="AbstractForwardCurve">
               <metrics coveredelements="30" coveredconditionals="1" complexity="13" coveredmethods="9" methods="10" elements="48" statements="32" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,String)" num="52" count="6" type="method"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,String)" num="82" count="6" type="method"/>
            <line num="88" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,double,String)" num="99" count="5" type="method"/>
            <line num="100" count="5" type="stmt"/>
            <line num="101" count="5" type="stmt"/>
            <line num="102" count="5" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line num="105" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="112" count="3" type="method"/>
            <line num="114" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPaymentOffset(double) : double" num="120" count="6769" type="method"/>
            <line num="122" count="6769" type="stmt"/>
            <line falsecount="0" truecount="6769" num="122" type="cond"/>
            <line num="123" count="6769" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : RandomVariable[]" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="162" count="3" type="method"/>
            <line num="164" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetCode() : String" num="167" count="6772" type="method"/>
            <line num="168" count="6772" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentBusinessdayCalendar() : BusinessdayCalendar" num="171" count="3" type="method"/>
            <line num="172" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPaymentDateRollConvention() : BusinessdayCalendar.DateRollConvention" num="175" count="3" type="method"/>
            <line num="176" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/Curve.java" name="Curve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Curve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/CurveBuilder.java" name="CurveBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CurveBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/CurveInterpolation.java" name="CurveInterpolation.java">
            <metrics coveredelements="148" coveredconditionals="29" complexity="64" loc="565" coveredmethods="16" methods="33" elements="227" classes="6" ncloc="328" statements="148" conditionals="46" coveredstatements="103"/>
            <class name="CurveInterpolation">
               <metrics coveredelements="137" coveredconditionals="28" complexity="51" coveredmethods="13" methods="22" elements="188" statements="124" conditionals="42" coveredstatements="96"/>
            </class>
            <class name="CurveInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.InterpolationEntity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.Point">
               <metrics coveredelements="11" coveredconditionals="1" complexity="5" coveredmethods="3" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="CurveInterpolation.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Point(double,RandomVariable,boolean)" num="122" count="2206" type="method"/>
            <line num="123" count="2206" type="stmt"/>
            <line num="124" count="2206" type="stmt"/>
            <line num="125" count="2206" type="stmt"/>
            <line num="126" count="2206" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(Point) : int" num="129" count="1293" type="method"/>
            <line num="132" count="1293" type="stmt"/>
            <line falsecount="0" truecount="1293" num="132" type="cond"/>
            <line num="133" count="1293" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="142" count="1725" type="method"/>
            <line num="144" count="1725" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String,LocalDate)" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(CurveInterpolation)" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationMethod(InterpolationMethod) : CurveBuilder" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExtrapolationMethod(ExtrapolationMethod) : CurveBuilder" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationEntity(InterpolationEntity) : CurveBuilder" num="222" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,RandomVariable,boolean) : CurveBuilder" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,double[],RandomVariable[])" num="264" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="293" count="17" type="method"/>
            <line num="299" count="17" type="stmt"/>
            <line num="300" count="17" type="stmt"/>
            <line num="301" count="17" type="stmt"/>
            <line num="302" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="CurveInterpolation(String,LocalDate)" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="317" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="323" count="99697" type="method"/>
            <line num="326" count="99697" type="stmt"/>
            <line falsecount="356" truecount="99341" num="326" type="cond"/>
            <line num="327" count="99697" type="stmt"/>
            <line falsecount="99341" truecount="356" num="327" type="cond"/>
            <line num="328" count="356" type="stmt"/>
            <line num="329" count="356" type="stmt"/>
            <line num="331" count="99697" type="stmt"/>
            <line num="332" count="99697" type="stmt"/>
            <line falsecount="3666" truecount="96031" num="332" type="cond"/>
            <line num="333" count="96031" type="stmt"/>
            <line num="336" count="3666" type="stmt"/>
            <line num="337" count="3666" type="stmt"/>
            <line num="338" count="3666" type="stmt"/>
            <line complexity="3" visibility="private" signature="getInterpolationEntityValue(double) : RandomVariable" num="341" count="3666" type="method"/>
            <line num="343" count="3666" type="stmt"/>
            <line num="345" count="3666" type="stmt"/>
            <line falsecount="3310" truecount="356" num="345" type="cond"/>
            <line num="346" count="356" type="stmt"/>
            <line num="347" count="356" type="stmt"/>
            <line num="348" count="356" type="stmt"/>
            <line falsecount="356" truecount="1887" num="348" type="cond"/>
            <line num="349" count="1887" type="stmt"/>
            <line num="350" count="1887" type="stmt"/>
            <line num="352" count="356" type="stmt"/>
            <line num="360" count="3666" type="stmt"/>
            <line complexity="12" visibility="protected" signature="addPoint(double,RandomVariable,boolean) : void" num="372" count="165" type="method"/>
            <line num="373" count="165" type="stmt"/>
            <line num="374" count="165" type="stmt"/>
            <line falsecount="162" truecount="3" num="374" type="cond"/>
            <line num="375" count="3" type="stmt"/>
            <line num="375" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line num="376" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="376" type="cond"/>
            <line falsecount="0" truecount="3" num="376" type="cond"/>
            <line num="377" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="377" type="cond"/>
            <line num="378" count="3" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="162" type="stmt"/>
            <line num="386" count="162" type="stmt"/>
            <line num="387" count="162" type="stmt"/>
            <line falsecount="162" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="398" count="162" type="stmt"/>
            <line num="399" count="162" type="stmt"/>
            <line num="401" count="162" type="stmt"/>
            <line falsecount="5" truecount="157" num="401" type="cond"/>
            <line num="403" count="157" type="stmt"/>
            <line num="404" count="157" type="stmt"/>
            <line falsecount="157" truecount="0" num="404" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="157" type="stmt"/>
            <line num="410" count="162" type="stmt"/>
            <line num="411" count="162" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="420" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExtrapolationMethod() : ExtrapolationMethod" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntity() : InterpolationEntity" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeIndex(double) : int" num="442" count="162" type="method"/>
            <line num="443" count="162" type="stmt"/>
            <line num="444" count="162" type="stmt"/>
            <line num="445" count="162" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getParameterIndex(double) : int" num="448" count="157" type="method"/>
            <line num="449" count="157" type="stmt"/>
            <line num="450" count="157" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="454" count="714" type="method"/>
            <line num="456" count="714" type="stmt"/>
            <line num="457" count="714" type="stmt"/>
            <line falsecount="714" truecount="3309" num="457" type="cond"/>
            <line num="458" count="3309" type="stmt"/>
            <line num="460" count="714" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(RandomVariable[]) : void" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setParameterPrivate(RandomVariable[]) : void" num="469" count="345" type="method"/>
            <line num="470" count="345" type="stmt"/>
            <line falsecount="345" truecount="1599" num="470" type="cond"/>
            <line num="471" count="1599" type="stmt"/>
            <line num="473" count="345" type="stmt"/>
            <line num="474" count="345" type="stmt"/>
            <line complexity="5" visibility="private" signature="interpolationEntityFromValue(RandomVariable,double) : RandomVariable" num="477" count="1761" type="method"/>
            <line num="478" count="1761" type="stmt"/>
            <line num="479" count="1230" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="1230" type="stmt"/>
            <line num="482" count="519" type="stmt"/>
            <line num="483" count="519" type="stmt"/>
            <line num="484" count="12" type="stmt"/>
            <line num="485" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="485" type="cond"/>
            <line num="486" count="0" type="stmt"/>
            <line num="488" count="12" type="stmt"/>
            <line complexity="4" visibility="private" signature="valueFromInterpolationEntity(RandomVariable,double) : RandomVariable" num="493" count="7017" type="method"/>
            <line num="494" count="7017" type="stmt"/>
            <line num="495" count="4521" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="4521" type="stmt"/>
            <line num="498" count="2478" type="stmt"/>
            <line num="499" count="2478" type="stmt"/>
            <line num="500" count="18" type="stmt"/>
            <line num="501" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : CurveInterpolation" num="505" count="345" type="method"/>
            <line num="507" count="345" type="stmt"/>
            <line num="509" count="345" type="stmt"/>
            <line num="510" count="345" type="stmt"/>
            <line num="511" count="345" type="stmt"/>
            <line num="512" count="345" type="stmt"/>
            <line num="513" count="345" type="stmt"/>
            <line num="514" count="1725" type="stmt"/>
            <line num="515" count="1725" type="stmt"/>
            <line num="516" count="1725" type="stmt"/>
            <line falsecount="126" truecount="1599" num="516" type="cond"/>
            <line num="517" count="1599" type="stmt"/>
            <line num="521" count="345" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="524" count="348" type="method"/>
            <line num="526" count="348" type="stmt"/>
            <line falsecount="345" truecount="3" num="526" type="cond"/>
            <line num="527" count="3" type="stmt"/>
            <line num="529" count="345" type="stmt"/>
            <line num="530" count="345" type="stmt"/>
            <line num="532" count="345" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="535" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="541" count="9" type="method"/>
            <line num="546" count="9" type="stmt"/>
            <line num="547" count="9" type="stmt"/>
            <line num="548" count="9" type="stmt"/>
            <line num="549" count="42" type="stmt"/>
            <line num="550" count="42" type="stmt"/>
            <line num="551" count="42" type="stmt"/>
            <line num="554" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="560" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveFromForwardCurve.java" name="DiscountCurveFromForwardCurve.java">
            <metrics coveredelements="25" coveredconditionals="5" complexity="27" loc="214" coveredmethods="3" methods="12" elements="96" classes="1" ncloc="110" statements="54" conditionals="30" coveredstatements="17"/>
            <class name="DiscountCurveFromForwardCurve">
               <metrics coveredelements="25" coveredconditionals="5" complexity="27" coveredmethods="3" methods="12" elements="96" statements="54" conditionals="30" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String,double)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurveInterface,double)" num="72" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String)" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurveInterface)" num="103" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : RandomVariable" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : RandomVariable" num="118" count="62" type="method"/>
            <line num="120" count="62" type="stmt"/>
            <line num="121" count="62" type="stmt"/>
            <line falsecount="0" truecount="62" num="121" type="cond"/>
            <line num="122" count="62" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="62" type="stmt"/>
            <line falsecount="62" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="62" type="stmt"/>
            <line num="131" count="62" type="stmt"/>
            <line num="132" count="62" type="stmt"/>
            <line num="133" count="62" type="stmt"/>
            <line falsecount="62" truecount="342" num="133" type="cond"/>
            <line num="134" count="342" type="stmt"/>
            <line num="135" count="342" type="stmt"/>
            <line falsecount="342" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="342" type="stmt"/>
            <line num="139" count="342" type="stmt"/>
            <line num="142" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(RandomVariable[]) : void" num="158" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveInterface.java" name="DiscountCurveInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurveInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveInterpolation.java" name="DiscountCurveInterpolation.java">
            <metrics coveredelements="43" coveredconditionals="6" complexity="42" loc="507" coveredmethods="13" methods="26" elements="150" classes="1" ncloc="220" statements="94" conditionals="30" coveredstatements="24"/>
            <class name="DiscountCurveInterpolation">
               <metrics coveredelements="43" coveredconditionals="6" complexity="42" coveredmethods="13" methods="26" elements="150" statements="94" conditionals="30" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String)" num="52" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="80" count="3" type="method"/>
            <line num="83" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="99" count="3" type="method"/>
            <line num="104" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="106" type="cond"/>
            <line num="107" count="15" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="125" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="145" count="3" type="method"/>
            <line num="150" count="3" type="stmt"/>
            <line num="151" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="151" type="cond"/>
            <line num="152" count="15" type="stmt"/>
            <line num="155" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="158" count="3" type="method"/>
            <line num="163" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="164" count="15" type="method"/>
            <line num="165" count="15" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[]) : DiscountCurveInterpolation" num="178" count="3" type="method"/>
            <line num="179" count="3" type="stmt"/>
            <line num="181" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="181" type="cond"/>
            <line num="182" count="15" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[]) : DiscountCurveInterpolation" num="188" count="3" type="method"/>
            <line num="189" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="190" count="15" type="method"/>
            <line num="191" count="15" type="stmt"/>
            <line num="193" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="213" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,Date,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="244" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="270" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],RandomVariable[]) : DiscountCurveInterpolation" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="325" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="355" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountFactorsFromForwardRates(String,TimeDiscretization,RandomVariable[]) : DiscountCurveInterface" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="createDiscountCurveFromMonteCarloLiborModel(String,LIBORModelMonteCarloSimulationModel,double) : DiscountCurveInterface" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="createZeroRates(double,double[],LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="416" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="427" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : RandomVariable" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : RandomVariable[]" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addDiscountFactor(double,RandomVariable,boolean) : void" num="489" count="30" type="method"/>
            <line num="490" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="493" count="6" type="method"/>
            <line num="495" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : RandomVariable" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : RandomVariable" num="503" count="93270" type="method"/>
            <line num="505" count="93270" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveFromDiscountCurve.java" name="ForwardCurveFromDiscountCurve.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="15" loc="178" coveredmethods="6" methods="11" elements="40" classes="1" ncloc="69" statements="23" conditionals="6" coveredstatements="14"/>
            <class name="ForwardCurveFromDiscountCurve">
               <metrics coveredelements="23" coveredconditionals="3" complexity="15" coveredmethods="6" methods="11" elements="40" statements="23" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="53" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="74" count="6" type="method"/>
            <line num="75" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention)" num="89" count="6" type="method"/>
            <line num="90" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String)" num="102" count="6" type="method"/>
            <line num="103" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,LocalDate,String)" num="120" count="6" type="method"/>
            <line num="121" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : RandomVariable" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getForward(AnalyticModel,double,double) : RandomVariable" num="134" count="2712" type="method"/>
            <line num="137" count="2712" type="stmt"/>
            <line falsecount="2712" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="2712" type="stmt"/>
            <line num="141" count="2712" type="stmt"/>
            <line falsecount="2712" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="2712" type="stmt"/>
            <line falsecount="2712" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="2712" type="stmt"/>
            <line num="149" count="2712" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveInterface.java" name="ForwardCurveInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="50" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurveInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveInterpolation.java" name="ForwardCurveInterpolation.java">
            <metrics coveredelements="64" coveredconditionals="9" complexity="42" loc="470" coveredmethods="10" methods="20" elements="152" classes="2" ncloc="214" statements="104" conditionals="28" coveredstatements="45"/>
            <class name="ForwardCurveInterpolation">
               <metrics coveredelements="64" coveredconditionals="9" complexity="42" coveredmethods="10" methods="20" elements="152" statements="104" conditionals="28" coveredstatements="45"/>
            </class>
            <class name="ForwardCurveInterpolation.InterpolationEntityForward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String)" num="69" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,InterpolationEntityForward,String)" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,String)" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,double,InterpolationEntityForward,String)" num="121" count="5" type="method"/>
            <line num="122" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="144" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,Date,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="177" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,String,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],RandomVariable[],double) : ForwardCurveInterpolation" num="234" count="2" type="method"/>
            <line num="235" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line falsecount="2" truecount="120" num="237" type="cond"/>
            <line num="238" count="120" type="stmt"/>
            <line num="239" count="120" type="stmt"/>
            <line num="240" count="120" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createForwardCurveFromDiscountFactors(String,double[],RandomVariable[],double) : ForwardCurveInterpolation" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],RandomVariable[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="295" count="3" type="method"/>
            <line num="296" count="3" type="stmt"/>
            <line num="298" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="298" type="cond"/>
            <line num="299" count="15" type="stmt"/>
            <line num="300" count="15" type="stmt"/>
            <line num="301" count="15" type="stmt"/>
            <line num="303" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="317" count="3" type="method"/>
            <line num="318" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="319" count="15" type="method"/>
            <line num="320" count="15" type="stmt"/>
            <line num="322" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="createForwardCurveFromMonteCarloLiborModel(String,LIBORModelMonteCarloSimulationModel,double) : ForwardCurveInterpolation" num="334" count="2" type="method"/>
            <line num="336" count="2" type="stmt"/>
            <line num="338" count="2" type="stmt"/>
            <line num="339" count="2" type="stmt"/>
            <line num="340" count="2" type="stmt"/>
            <line num="341" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="345" type="cond"/>
            <line num="346" count="2" type="stmt"/>
            <line num="347" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="347" type="cond"/>
            <line num="348" count="2" type="stmt"/>
            <line falsecount="2" truecount="120" num="348" type="cond"/>
            <line num="349" count="120" type="stmt"/>
            <line num="350" count="120" type="stmt"/>
            <line num="353" count="2" type="stmt"/>
            <line num="354" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double) : RandomVariable" num="358" count="6427" type="method"/>
            <line num="361" count="6427" type="stmt"/>
            <line num="363" count="6427" type="stmt"/>
            <line num="364" count="6427" type="stmt"/>
            <line num="365" count="6427" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="6427" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double,double) : RandomVariable" num="398" count="6085" type="method"/>
            <line num="405" count="6085" type="stmt"/>
            <line complexity="5" visibility="private" signature="addForward(AnalyticModel,double,RandomVariable,boolean) : void" num="416" count="135" type="method"/>
            <line num="417" count="135" type="stmt"/>
            <line num="418" count="135" type="stmt"/>
            <line num="419" count="135" type="stmt"/>
            <line num="420" count="135" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="135" type="stmt"/>
            <line num="423" count="135" type="stmt"/>
            <line num="424" count="135" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="444" count="135" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addPoint(double,RandomVariable,boolean) : void" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntityForward() : InterpolationEntityForward" num="460" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="464" count="3" type="method"/>
            <line num="466" count="3" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward">
         <metrics coveredelements="473" complexity="256" loc="1485" methods="111" classes="5" statements="442" coveredconditionals="104" coveredmethods="79" elements="711" ncloc="1114" files="2" conditionals="158" coveredstatements="290"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAAD.java" name="RandomVariableDifferentiableAAD.java">
            <metrics coveredelements="449" coveredconditionals="104" complexity="244" loc="1354" coveredmethods="69" methods="99" elements="683" classes="3" ncloc="1045" statements="426" conditionals="158" coveredstatements="276"/>
            <class name="RandomVariableDifferentiableAAD">
               <metrics coveredelements="176" coveredconditionals="23" complexity="113" coveredmethods="60" methods="87" elements="267" statements="138" conditionals="42" coveredstatements="93"/>
            </class>
            <class name="RandomVariableDifferentiableAAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAAD.OperatorTreeNode">
               <metrics coveredelements="273" coveredconditionals="81" complexity="131" coveredmethods="9" methods="12" elements="416" statements="288" conditionals="116" coveredstatements="183"/>
            </class>
            <line complexity="28" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,Object,RandomVariableDifferentiableAADFactory)" num="95" count="12105941" type="method"/>
            <line num="96" count="12100326" type="stmt"/>
            <line num="97" count="12107602" type="stmt"/>
            <line num="98" count="12159312" type="stmt"/>
            <line num="99" count="12159909" type="stmt"/>
            <line num="100" count="12160265" type="stmt"/>
            <line num="101" count="12160336" type="stmt"/>
            <line num="106" count="12160272" type="stmt"/>
            <line falsecount="11665775" truecount="495766" num="106" type="cond"/>
            <line num="108" count="495817" type="stmt"/>
            <line num="110" count="11666006" type="stmt"/>
            <line falsecount="11664592" truecount="1598" num="110" type="cond"/>
            <line num="112" count="1598" type="stmt"/>
            <line num="114" count="11663823" type="stmt"/>
            <line falsecount="5617776" truecount="6046241" num="114" type="cond"/>
            <line num="116" count="6046434" type="stmt"/>
            <line falsecount="6046177" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="6046656" type="stmt"/>
            <line falsecount="353152" truecount="5693743" num="119" type="cond"/>
            <line num="120" count="5693849" type="stmt"/>
            <line num="123" count="5617491" type="stmt"/>
            <line falsecount="5564266" truecount="53745" num="123" type="cond"/>
            <line num="125" count="53744" type="stmt"/>
            <line falsecount="8515" truecount="45237" num="125" type="cond"/>
            <line num="126" count="45237" type="stmt"/>
            <line num="129" count="5564381" type="stmt"/>
            <line falsecount="986200" truecount="4578644" num="129" type="cond"/>
            <line num="131" count="4578981" type="stmt"/>
            <line num="133" count="4578937" type="stmt"/>
            <line falsecount="1373623" truecount="3205246" num="133" type="cond"/>
            <line num="134" count="3205244" type="stmt"/>
            <line num="136" count="4578728" type="stmt"/>
            <line falsecount="3426439" truecount="1152213" num="136" type="cond"/>
            <line num="137" count="1152231" type="stmt"/>
            <line num="140" count="986370" type="stmt"/>
            <line falsecount="951134" truecount="35250" num="140" type="cond"/>
            <line num="142" count="35247" type="stmt"/>
            <line falsecount="35248" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="35249" type="stmt"/>
            <line falsecount="35248" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="35251" type="stmt"/>
            <line falsecount="35250" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="951109" type="stmt"/>
            <line falsecount="941001" truecount="10044" num="152" type="cond"/>
            <line num="153" count="10044" type="stmt"/>
            <line falsecount="10044" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="12161238" type="stmt"/>
            <line complexity="11" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="165" count="43605055" type="method"/>
            <line num="166" count="43605055" type="stmt"/>
            <line falsecount="43605055" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="43605055" type="stmt"/>
            <line falsecount="43605055" truecount="105576554" num="171" type="cond"/>
            <line num="172" count="105576554" type="stmt"/>
            <line num="173" count="105576554" type="stmt"/>
            <line falsecount="22289539" truecount="83287015" num="173" type="cond"/>
            <line num="174" count="83287015" type="stmt"/>
            <line num="176" count="83287015" type="stmt"/>
            <line num="177" count="83287015" type="stmt"/>
            <line num="178" count="83287015" type="stmt"/>
            <line num="183" count="83287015" type="stmt"/>
            <line num="184" count="1301" type="stmt"/>
            <line num="186" count="1301" type="stmt"/>
            <line num="187" count="1301" type="stmt"/>
            <line num="188" count="122" type="stmt"/>
            <line num="190" count="122" type="stmt"/>
            <line num="191" count="122" type="stmt"/>
            <line num="192" count="122" type="stmt"/>
            <line num="193" count="372" type="stmt"/>
            <line num="195" count="372" type="stmt"/>
            <line falsecount="371" truecount="1" num="195" type="cond"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="372" type="stmt"/>
            <line num="199" count="83285220" type="stmt"/>
            <line num="201" count="83285220" type="stmt"/>
            <line num="207" count="83287015" type="stmt"/>
            <line falsecount="35799838" truecount="47487177" num="207" type="cond"/>
            <line num="209" count="47487177" type="stmt"/>
            <line num="213" count="35799838" type="stmt"/>
            <line num="216" count="83287015" type="stmt"/>
            <line complexity="70" visibility="private" signature="getPartialDerivative(OperatorTreeNode,int) : RandomVariable" num="230" count="83287015" type="method"/>
            <line num="232" count="83287015" type="stmt"/>
            <line falsecount="83287015" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="83287015" type="stmt"/>
            <line falsecount="14337951" truecount="68949064" num="236" type="cond"/>
            <line num="237" count="83287015" type="stmt"/>
            <line falsecount="14340119" truecount="68946896" num="237" type="cond"/>
            <line num="238" count="83287015" type="stmt"/>
            <line falsecount="39458579" truecount="43828436" num="238" type="cond"/>
            <line num="240" count="83287015" type="stmt"/>
            <line num="242" count="83287015" type="stmt"/>
            <line num="244" count="20" type="stmt"/>
            <line num="245" count="20" type="stmt"/>
            <line num="246" count="20" type="stmt"/>
            <line num="247" count="6" type="stmt"/>
            <line num="248" count="6" type="stmt"/>
            <line num="249" count="6" type="stmt"/>
            <line num="250" count="1056" type="stmt"/>
            <line num="251" count="1056" type="stmt"/>
            <line num="252" count="1056" type="stmt"/>
            <line num="253" count="866" type="stmt"/>
            <line num="254" count="866" type="stmt"/>
            <line num="255" count="866" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="1301" type="stmt"/>
            <line num="266" count="1301" type="stmt"/>
            <line num="267" count="1301" type="stmt"/>
            <line num="268" count="122" type="stmt"/>
            <line num="269" count="122" type="stmt"/>
            <line num="270" count="122" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="98" type="stmt"/>
            <line num="296" count="98" type="stmt"/>
            <line num="297" count="98" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="14285934" type="stmt"/>
            <line num="305" count="14285934" type="stmt"/>
            <line num="306" count="14285934" type="stmt"/>
            <line num="307" count="50716" type="stmt"/>
            <line num="308" count="50716" type="stmt"/>
            <line falsecount="145" truecount="50571" num="308" type="cond"/>
            <line num="309" count="50716" type="stmt"/>
            <line num="310" count="21437126" type="stmt"/>
            <line num="311" count="21437126" type="stmt"/>
            <line falsecount="7089435" truecount="14347691" num="311" type="cond"/>
            <line num="312" count="21437126" type="stmt"/>
            <line num="313" count="33646" type="stmt"/>
            <line num="314" count="33646" type="stmt"/>
            <line falsecount="4044" truecount="29602" num="314" type="cond"/>
            <line num="315" count="33646" type="stmt"/>
            <line num="316" count="3644864" type="stmt"/>
            <line num="317" count="3644864" type="stmt"/>
            <line falsecount="4" truecount="3644860" num="317" type="cond"/>
            <line num="318" count="3644860" type="stmt"/>
            <line num="321" count="4" type="stmt"/>
            <line num="323" count="3644864" type="stmt"/>
            <line num="324" count="1315" type="stmt"/>
            <line num="325" count="1315" type="stmt"/>
            <line falsecount="0" truecount="1315" num="325" type="cond"/>
            <line num="326" count="1315" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="1315" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="1509" type="stmt"/>
            <line num="349" count="1509" type="stmt"/>
            <line falsecount="0" truecount="1509" num="349" type="cond"/>
            <line num="350" count="1509" type="stmt"/>
            <line num="351" count="36234258" type="stmt"/>
            <line num="352" count="36234258" type="stmt"/>
            <line falsecount="21661376" truecount="14572882" num="352" type="cond"/>
            <line num="353" count="14572882" type="stmt"/>
            <line num="354" count="21661376" type="stmt"/>
            <line falsecount="7154294" truecount="14507082" num="354" type="cond"/>
            <line num="355" count="14507082" type="stmt"/>
            <line num="357" count="7154294" type="stmt"/>
            <line num="359" count="36234258" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="154994" type="stmt"/>
            <line num="379" count="154994" type="stmt"/>
            <line falsecount="77497" truecount="77497" num="379" type="cond"/>
            <line num="380" count="77497" type="stmt"/>
            <line num="381" count="77497" type="stmt"/>
            <line falsecount="0" truecount="77497" num="381" type="cond"/>
            <line num="382" count="77497" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="154994" type="stmt"/>
            <line num="387" count="7438812" type="stmt"/>
            <line num="388" count="7438812" type="stmt"/>
            <line falsecount="3719406" truecount="3719406" num="388" type="cond"/>
            <line num="389" count="3719406" type="stmt"/>
            <line num="390" count="3719406" type="stmt"/>
            <line falsecount="0" truecount="3719406" num="390" type="cond"/>
            <line num="391" count="3719406" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="7438812" type="stmt"/>
            <line num="396" count="372" type="stmt"/>
            <line num="397" count="372" type="stmt"/>
            <line falsecount="244" truecount="128" num="397" type="cond"/>
            <line num="398" count="128" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="409" count="127" type="stmt"/>
            <line num="415" count="127" type="stmt"/>
            <line num="416" count="127" type="stmt"/>
            <line falsecount="126" truecount="1" num="416" type="cond"/>
            <line num="417" count="1" type="stmt"/>
            <line num="419" count="126" type="stmt"/>
            <line falsecount="5" truecount="121" num="419" type="cond"/>
            <line num="420" count="121" type="stmt"/>
            <line num="421" count="121" type="stmt"/>
            <line num="422" count="121" type="stmt"/>
            <line num="423" count="121" type="stmt"/>
            <line num="426" count="5" type="stmt"/>
            <line num="428" count="127" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="441" count="244" type="stmt"/>
            <line falsecount="122" truecount="122" num="441" type="cond"/>
            <line num="442" count="122" type="stmt"/>
            <line num="444" count="122" type="stmt"/>
            <line num="446" count="372" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="83287015" type="stmt"/>
            <line complexity="2" visibility="private" signature="getDiracDeltaRegression(RandomVariable,RandomVariable) : RandomVariable" num="454" count="1" type="method"/>
            <line num="455" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="460" count="1" type="stmt"/>
            <line num="461" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDensityRegression(RandomVariable) : double" num="478" count="1" type="method"/>
            <line num="479" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="496" type="cond"/>
            <line num="497" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="518" count="1" type="stmt"/>
            <line num="520" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="520" type="cond"/>
            <line num="521" count="50" type="stmt"/>
            <line num="523" count="50" type="stmt"/>
            <line num="524" count="50" type="stmt"/>
            <line num="526" count="50" type="stmt"/>
            <line num="527" count="50" type="stmt"/>
            <line num="529" count="50" type="stmt"/>
            <line num="530" count="50" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="540" count="1" type="stmt"/>
            <line num="542" count="1" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="of(RandomVariable) : OperatorTreeNode" num="549" count="15944688" type="method"/>
            <line num="550" count="15948674" type="stmt"/>
            <line falsecount="9605133" truecount="6357560" num="550" type="cond"/>
            <line complexity="2" visibility="private" signature="getValue(RandomVariable) : RandomVariable" num="553" count="1281146" type="method"/>
            <line num="554" count="1281234" type="stmt"/>
            <line falsecount="0" truecount="1281257" num="554" type="cond"/>
            <line complexity="2" visibility="private" signature="extractOperatorTreeNodes(List&lt;RandomVariable&gt;) : List&lt;OperatorTreeNode&gt;" num="557" count="819302" type="method"/>
            <line num="558" count="819355" type="stmt"/>
            <line falsecount="369316" truecount="450133" num="558" type="cond"/>
            <line complexity="2" visibility="private" signature="extractOperatorValues(List&lt;RandomVariable&gt;) : List&lt;RandomVariable&gt;" num="561" count="819569" type="method"/>
            <line num="562" count="819652" type="stmt"/>
            <line falsecount="369316" truecount="450357" num="562" type="cond"/>
            <line complexity="2" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="565" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory,int)" num="586" count="12091948" type="method"/>
            <line num="587" count="12086596" type="stmt"/>
            <line num="588" count="12094880" type="stmt"/>
            <line num="589" count="12097594" type="stmt"/>
            <line num="590" count="12142432" type="stmt"/>
            <line falsecount="989" truecount="12147928" num="590" type="cond"/>
            <line num="591" count="12149788" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAAD" num="594" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAAD" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(double)" num="602" count="1" type="method"/>
            <line num="603" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable)" num="606" count="988" type="method"/>
            <line num="607" count="988" type="stmt"/>
            <line falsecount="988" truecount="0" num="607" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,RandomVariableDifferentiableAADFactory)" num="610" count="368327" type="method"/>
            <line num="611" count="368327" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,OperatorType,RandomVariableDifferentiableAADFactory)" num="614" count="818642" type="method"/>
            <line num="615" count="818618" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory)" num="618" count="819635" type="method"/>
            <line num="619" count="819620" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory,int)" num="622" count="819705" type="method"/>
            <line num="623" count="819673" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="626" count="17666307" type="method"/>
            <line num="627" count="17681280" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="635" count="33901411" type="method"/>
            <line num="637" count="33921287" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactory() : RandomVariableDifferentiableAADFactory" num="640" count="98934561" type="method"/>
            <line num="641" count="98940144" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="644" count="67563" type="method"/>
            <line num="646" count="67563" type="stmt"/>
            <line complexity="8" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="657" count="1631" type="method"/>
            <line num="661" count="1631" type="stmt"/>
            <line num="663" count="1631" type="stmt"/>
            <line num="666" count="1631" type="stmt"/>
            <line num="668" count="1631" type="stmt"/>
            <line num="670" count="1631" type="stmt"/>
            <line falsecount="1631" truecount="47488808" num="670" type="cond"/>
            <line num="672" count="47488808" type="stmt"/>
            <line num="673" count="47488808" type="stmt"/>
            <line num="674" count="47488808" type="stmt"/>
            <line num="677" count="47488808" type="stmt"/>
            <line num="678" count="47488808" type="stmt"/>
            <line falsecount="3883753" truecount="43605055" num="678" type="cond"/>
            <line num="680" count="43605055" type="stmt"/>
            <line num="683" count="43605055" type="stmt"/>
            <line falsecount="891" truecount="43604164" num="683" type="cond"/>
            <line num="684" count="43604164" type="stmt"/>
            <line num="688" count="43605055" type="stmt"/>
            <line num="690" count="105576554" type="stmt"/>
            <line falsecount="22289539" truecount="83287015" num="690" type="cond"/>
            <line num="691" count="83287015" type="stmt"/>
            <line num="696" count="47488808" type="stmt"/>
            <line falsecount="47488808" truecount="0" num="696" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line num="701" count="1631" type="stmt"/>
            <line complexity="1" visibility="private" signature="isGradientRetainsLeafNodesOnly() : boolean" num="704" count="43605055" type="method"/>
            <line num="705" count="43605055" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="708" count="0" type="method"/>
            <line num="710" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="718" count="1" type="method"/>
            <line num="720" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="723" count="110" type="method"/>
            <line num="725" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="728" count="21015108" type="method"/>
            <line num="730" count="21021443" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="733" count="11220" type="method"/>
            <line num="735" count="11220" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="738" count="1001" type="method"/>
            <line num="740" count="1001" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="743" count="401" type="method"/>
            <line num="745" count="401" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="748" count="375" type="method"/>
            <line num="750" count="375" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="753" count="108" type="method"/>
            <line num="755" count="108" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="758" count="1" type="method"/>
            <line num="760" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="763" count="254" type="method"/>
            <line num="765" count="254" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="768" count="92050" type="method"/>
            <line num="770" count="92051" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="773" count="0" type="method"/>
            <line num="775" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="778" count="53" type="method"/>
            <line num="780" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="783" count="0" type="method"/>
            <line num="785" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="793" count="883" type="method"/>
            <line num="795" count="883" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="798" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="803" count="230" type="method"/>
            <line num="805" count="230" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="808" count="0" type="method"/>
            <line num="810" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="813" count="5" type="method"/>
            <line num="815" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="823" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="828" count="14" type="method"/>
            <line num="830" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="833" count="0" type="method"/>
            <line num="835" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="842" count="338987" type="method"/>
            <line num="844" count="338987" type="stmt"/>
            <line num="845" count="338987" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="848" count="154745" type="method"/>
            <line num="850" count="154923" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="860" count="2050" type="method"/>
            <line num="862" count="2050" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="872" count="34455" type="method"/>
            <line num="874" count="34464" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="884" count="72746" type="method"/>
            <line num="886" count="72759" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="896" count="548349" type="method"/>
            <line num="898" count="548875" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="908" count="40877" type="method"/>
            <line num="910" count="40884" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="920" count="3359" type="method"/>
            <line num="922" count="3359" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="929" count="1598" type="method"/>
            <line num="931" count="1598" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="938" count="916" type="method"/>
            <line num="940" count="916" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="949" count="5774" type="method"/>
            <line num="951" count="5774" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="958" count="519" type="method"/>
            <line num="960" count="519" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="967" count="17075" type="method"/>
            <line num="969" count="17075" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="976" count="2195" type="method"/>
            <line num="978" count="2195" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="985" count="0" type="method"/>
            <line num="987" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="994" count="0" type="method"/>
            <line num="996" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1007" count="345404" type="method"/>
            <line num="1009" count="345810" type="stmt"/>
            <line falsecount="343539" truecount="0" num="1009" type="cond"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1014" count="343816" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1024" count="13875" type="method"/>
            <line num="1026" count="13875" type="stmt"/>
            <line falsecount="13873" truecount="0" num="1026" type="cond"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1031" count="13875" type="stmt"/>
            <line complexity="2" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1041" count="25332" type="method"/>
            <line num="1043" count="25332" type="stmt"/>
            <line falsecount="25332" truecount="0" num="1043" type="cond"/>
            <line num="1045" count="0" type="stmt"/>
            <line num="1048" count="25332" type="stmt"/>
            <line complexity="2" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1058" count="5487950" type="method"/>
            <line num="1060" count="5488432" type="stmt"/>
            <line falsecount="5486124" truecount="0" num="1060" type="cond"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1065" count="5486323" type="stmt"/>
            <line complexity="2" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1075" count="12829" type="method"/>
            <line num="1077" count="12831" type="stmt"/>
            <line falsecount="12829" truecount="0" num="1077" type="cond"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1082" count="12830" type="stmt"/>
            <line complexity="2" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1092" count="0" type="method"/>
            <line num="1094" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1094" type="cond"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1099" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1109" count="261" type="method"/>
            <line num="1111" count="261" type="stmt"/>
            <line falsecount="261" truecount="0" num="1111" type="cond"/>
            <line num="1113" count="0" type="stmt"/>
            <line num="1116" count="261" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1123" count="3" type="method"/>
            <line num="1125" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="1125" type="cond"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1130" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1137" count="35240" type="method"/>
            <line num="1139" count="35245" type="stmt"/>
            <line falsecount="35154" truecount="0" num="1139" type="cond"/>
            <line num="1141" count="0" type="stmt"/>
            <line num="1144" count="35160" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1151" count="378570" type="method"/>
            <line num="1153" count="378577" type="stmt"/>
            <line falsecount="378516" truecount="0" num="1153" type="cond"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1158" count="378522" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1165" count="10044" type="method"/>
            <line num="1167" count="10044" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1177" count="4976" type="method"/>
            <line num="1179" count="4976" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1186" count="98" type="method"/>
            <line num="1188" count="98" type="stmt"/>
            <line complexity="2" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1195" count="353428" type="method"/>
            <line num="1197" count="353689" type="stmt"/>
            <line falsecount="350275" truecount="0" num="1197" type="cond"/>
            <line num="1199" count="0" type="stmt"/>
            <line num="1202" count="350901" type="stmt"/>
            <line complexity="3" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1212" count="4221322" type="method"/>
            <line num="1214" count="4221573" type="stmt"/>
            <line falsecount="4218230" truecount="0" num="1214" type="cond"/>
            <line num="1216" count="0" type="stmt"/>
            <line num="1219" count="4218448" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1229" count="0" type="method"/>
            <line num="1231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1231" type="cond"/>
            <line num="1233" count="0" type="stmt"/>
            <line num="1236" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1243" count="0" type="method"/>
            <line num="1245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1245" type="cond"/>
            <line num="1247" count="0" type="stmt"/>
            <line num="1250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="1261" count="9" type="method"/>
            <line num="1263" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="1266" count="0" type="method"/>
            <line num="1268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="1271" count="0" type="method"/>
            <line num="1273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="1276" count="0" type="method"/>
            <line num="1278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="1281" count="0" type="method"/>
            <line num="1283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1286" count="0" type="method"/>
            <line num="1288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="1291" count="0" type="method"/>
            <line num="1293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="1300" count="0" type="method"/>
            <line num="1302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="1309" count="0" type="method"/>
            <line num="1311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="1318" count="0" type="method"/>
            <line num="1320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="1327" count="0" type="method"/>
            <line num="1329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="1336" count="0" type="method"/>
            <line num="1338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1345" count="26" type="method"/>
            <line num="1347" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneIndependent() : RandomVariableDifferentiable" num="1350" count="988" type="method"/>
            <line num="1352" count="988" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADFactory.java" name="RandomVariableDifferentiableAADFactory.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="12" loc="131" coveredmethods="10" methods="12" elements="28" classes="2" ncloc="69" statements="16" conditionals="0" coveredstatements="14"/>
            <class name="RandomVariableDifferentiableAADFactory">
               <metrics coveredelements="24" coveredconditionals="0" complexity="12" coveredmethods="10" methods="12" elements="28" statements="16" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="RandomVariableDifferentiableAADFactory.DiracDeltaApproximationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(RandomVariableFactory,Map&lt;String, Object&gt;)" num="60" count="1059" type="method"/>
            <line num="61" count="1059" type="stmt"/>
            <line num="67" count="1059" type="stmt"/>
            <line num="68" count="1059" type="stmt"/>
            <line num="69" count="1059" type="stmt"/>
            <line num="71" count="1059" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(Map&lt;String, Object&gt;)" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(RandomVariableFactory)" num="84" count="1027" type="method"/>
            <line num="85" count="1027" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory()" num="88" count="1006" type="method"/>
            <line num="89" count="1006" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="92" count="359319" type="method"/>
            <line num="94" count="359319" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="97" count="9007" type="method"/>
            <line num="99" count="9007" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationMethod() : DiracDeltaApproximationMethod" num="102" count="385" type="method"/>
            <line num="103" count="385" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationWidthPerStdDev() : double" num="106" count="128" type="method"/>
            <line num="107" count="128" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationDensityRegressionWidthPerStdDev() : double" num="110" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBarrierDiracWidth() : double" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isGradientRetainsLeafNodesOnly() : boolean" num="119" count="43605055" type="method"/>
            <line num="120" count="43605055" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="123" count="16" type="method"/>
            <line num="125" count="16" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.randomnumbers">
         <metrics coveredelements="56" complexity="34" loc="426" methods="27" classes="8" statements="69" coveredconditionals="9" coveredmethods="11" elements="110" ncloc="205" files="8" conditionals="14" coveredstatements="36"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/AcceptanceRejectionRandomNumberGenerator.java" name="AcceptanceRejectionRandomNumberGenerator.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="4" loc="61" coveredmethods="2" methods="3" elements="20" classes="1" ncloc="39" statements="15" conditionals="2" coveredstatements="14"/>
            <class name="AcceptanceRejectionRandomNumberGenerator">
               <metrics coveredelements="18" coveredconditionals="2" complexity="4" coveredmethods="2" methods="3" elements="20" statements="15" conditionals="2" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="AcceptanceRejectionRandomNumberGenerator(RandomNumberGenerator,DoubleUnaryOperator,DoubleUnaryOperator,DoubleUnaryOperator,double)" num="30" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNext() : double[]" num="44" count="1000000" type="method"/>
            <line num="46" count="1000000" type="stmt"/>
            <line num="47" count="1000000" type="stmt"/>
            <line num="48" count="1000000" type="stmt"/>
            <line falsecount="1000000" truecount="1315530" num="48" type="cond"/>
            <line num="49" count="1315530" type="stmt"/>
            <line num="50" count="1315530" type="stmt"/>
            <line num="51" count="1315530" type="stmt"/>
            <line num="52" count="1315530" type="stmt"/>
            <line num="54" count="1000000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/HaltonSequence.java" name="HaltonSequence.java">
            <metrics coveredelements="29" coveredconditionals="7" complexity="10" loc="83" coveredmethods="5" methods="6" elements="33" classes="1" ncloc="44" statements="19" conditionals="8" coveredstatements="17"/>
            <class name="HaltonSequence">
               <metrics coveredelements="29" coveredconditionals="7" complexity="10" coveredmethods="5" methods="6" elements="33" statements="19" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="3" visibility="public" signature="HaltonSequence(int[])" num="31" count="2" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line falsecount="2" truecount="3" num="32" type="cond"/>
            <line num="33" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNext() : double[]" num="41" count="2315530" type="method"/>
            <line num="43" count="2315530" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHaltonNumber(long) : double[]" num="51" count="2315530" type="method"/>
            <line num="52" count="2315530" type="stmt"/>
            <line num="53" count="2315530" type="stmt"/>
            <line falsecount="2315530" truecount="3631060" num="53" type="cond"/>
            <line num="54" count="3631060" type="stmt"/>
            <line num="56" count="2315530" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHaltonNumber(long,int) : double" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHaltonNumberForGivenBase(long,int) : double" num="70" count="3631060" type="method"/>
            <line num="71" count="3631060" type="stmt"/>
            <line num="73" count="3631060" type="stmt"/>
            <line num="74" count="3631060" type="stmt"/>
            <line num="75" count="3631060" type="stmt"/>
            <line falsecount="3631060" truecount="60785187" num="75" type="cond"/>
            <line num="76" count="60785187" type="stmt"/>
            <line num="77" count="60785187" type="stmt"/>
            <line num="78" count="60785187" type="stmt"/>
            <line num="81" count="3631060" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/MersenneTwister.java" name="MersenneTwister.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="49" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="MersenneTwister">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="MersenneTwister(long)" num="25" count="395" type="method"/>
            <line num="26" count="395" type="stmt"/>
            <line complexity="1" visibility="public" signature="MersenneTwister()" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="38" count="410006000" type="method"/>
            <line num="40" count="410006000" type="stmt"/>
            <line num="41" count="410006000" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDoubleFast() : double" num="45" count="2147483647" type="method"/>
            <line num="47" count="2147483647" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/RandomNumberGenerator.java" name="RandomNumberGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomNumberGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/RandomNumberGenerator1D.java" name="RandomNumberGenerator1D.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="4" loc="51" coveredmethods="1" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="1"/>
            <class name="RandomNumberGenerator1D">
               <metrics coveredelements="2" coveredconditionals="0" complexity="4" coveredmethods="1" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="nextDoubleFast() : double" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNext() : double[]" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDimension() : int" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAsDouble() : double" num="47" count="4000000" type="method"/>
            <line num="49" count="4000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/SobolSequence.java" name="SobolSequence.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="50" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="SobolSequence">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SobolSequence(int)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNext() : double[]" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/SobolSequence1D.java" name="SobolSequence1D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="31" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SobolSequence1D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SobolSequence1D()" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/randomnumbers/VanDerCorputSequence.java" name="VanDerCorputSequence.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="72" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="39" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="VanDerCorputSequence">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="27" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VanDerCorputSequence(int,int)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VanDerCorputSequence(int)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVanDerCorputNumber(long,int) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves">
         <metrics coveredelements="505" complexity="354" loc="3656" methods="220" classes="29" statements="732" coveredconditionals="84" coveredmethods="96" elements="1166" ncloc="1805" files="21" conditionals="214" coveredstatements="325"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/AbstractCurve.java" name="AbstractCurve.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="9" loc="85" coveredmethods="6" methods="8" elements="23" classes="1" ncloc="44" statements="13" conditionals="2" coveredstatements="8"/>
            <class name="AbstractCurve">
               <metrics coveredelements="14" coveredconditionals="0" complexity="9" coveredmethods="6" methods="8" elements="23" statements="13" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCurve(String,LocalDate)" num="29" count="9090135" type="method"/>
            <line num="30" count="9089127" type="stmt"/>
            <line num="31" count="9090308" type="stmt"/>
            <line num="32" count="9090479" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="38" count="5418940" type="method"/>
            <line num="40" count="5419761" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="43" count="880306173" type="method"/>
            <line num="45" count="883662670" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="51" count="447043" type="method"/>
            <line num="53" count="447049" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double[]) : double[]" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AbstractCurve" num="71" count="16237" type="method"/>
            <line num="73" count="16239" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="26" type="method"/>
            <line num="83" count="26" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/AbstractForwardCurve.java" name="AbstractForwardCurve.java">
            <metrics coveredelements="41" coveredconditionals="4" complexity="13" loc="161" coveredmethods="9" methods="10" elements="48" classes="1" ncloc="81" statements="32" conditionals="6" coveredstatements="28"/>
            <class name="AbstractForwardCurve">
               <metrics coveredelements="41" coveredconditionals="4" complexity="13" coveredmethods="9" methods="10" elements="48" statements="32" conditionals="6" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,String)" num="51" count="61919" type="method"/>
            <line num="56" count="61918" type="stmt"/>
            <line num="57" count="61922" type="stmt"/>
            <line num="58" count="61922" type="stmt"/>
            <line num="59" count="61926" type="stmt"/>
            <line num="61" count="61931" type="stmt"/>
            <line num="63" count="61932" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,String)" num="76" count="61885" type="method"/>
            <line num="77" count="61882" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,double,String)" num="88" count="166" type="method"/>
            <line num="89" count="166" type="stmt"/>
            <line num="90" count="166" type="stmt"/>
            <line num="91" count="166" type="stmt"/>
            <line num="93" count="166" type="stmt"/>
            <line num="94" count="166" type="stmt"/>
            <line num="95" count="166" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="98" count="703329" type="method"/>
            <line num="100" count="703394" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPaymentOffset(double) : double" num="103" count="1192899730" type="method"/>
            <line num="105" count="1225928924" type="stmt"/>
            <line falsecount="1082705436" truecount="28440845" num="105" type="cond"/>
            <line num="106" count="28490610" type="stmt"/>
            <line num="109" count="1107795286" type="stmt"/>
            <line falsecount="7407" truecount="1121128106" num="109" type="cond"/>
            <line num="110" count="1130578588" type="stmt"/>
            <line num="118" count="7408" type="stmt"/>
            <line num="119" count="7408" type="stmt"/>
            <line num="120" count="7409" type="stmt"/>
            <line num="121" count="7409" type="stmt"/>
            <line num="122" count="7409" type="stmt"/>
            <line num="123" count="7411" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="145" count="8" type="method"/>
            <line num="147" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetCode() : String" num="150" count="1226503846" type="method"/>
            <line num="151" count="1249136040" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentBusinessdayCalendar() : BusinessdayCalendar" num="154" count="7416" type="method"/>
            <line num="155" count="7416" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDateRollConvention() : BusinessdayCalendar.DateRollConvention" num="158" count="7415" type="method"/>
            <line num="159" count="7416" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/Curve.java" name="Curve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Curve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/CurveBuilder.java" name="CurveBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CurveBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/CurveFactory.java" name="CurveFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="178" coveredmethods="0" methods="2" elements="106" classes="1" ncloc="112" statements="74" conditionals="30" coveredstatements="0"/>
            <class name="CurveFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="2" elements="106" statements="74" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CurveFactory()" num="32" count="0" type="method"/>
            <line complexity="23" visibility="public" signature="createIndexCurveWithSeasonality(String,LocalDate,Map&lt;LocalDate, Double&gt;,Map&lt;String, Double&gt;,Integer,Map&lt;LocalDate, Double&gt;,String,String) : Curve" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/CurveFromProductOfCurves.java" name="CurveFromProductOfCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="63" coveredmethods="0" methods="5" elements="13" classes="1" ncloc="31" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="CurveFromProductOfCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CurveFromProductOfCurves(String,LocalDate,Curve)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="55" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/CurveInterpolation.java" name="CurveInterpolation.java">
            <metrics coveredelements="177" coveredconditionals="29" complexity="70" loc="592" coveredmethods="29" methods="39" elements="236" classes="6" ncloc="344" statements="151" conditionals="46" coveredstatements="119"/>
            <class name="CurveInterpolation">
               <metrics coveredelements="144" coveredconditionals="28" complexity="53" coveredmethods="18" methods="24" elements="189" statements="123" conditionals="42" coveredstatements="98"/>
            </class>
            <class name="CurveInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.InterpolationEntity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.Point">
               <metrics coveredelements="13" coveredconditionals="1" complexity="9" coveredmethods="4" methods="7" elements="25" statements="14" conditionals="4" coveredstatements="8"/>
            </class>
            <class name="CurveInterpolation.Builder">
               <metrics coveredelements="20" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="package" signature="Point(double,double,boolean)" num="127" count="10129245" type="method"/>
            <line num="128" count="10128684" type="stmt"/>
            <line num="129" count="10129406" type="stmt"/>
            <line num="130" count="10129815" type="stmt"/>
            <line num="131" count="10130098" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(Point) : int" num="134" count="53150" type="method"/>
            <line num="137" count="53150" type="stmt"/>
            <line falsecount="0" truecount="53150" num="137" type="cond"/>
            <line num="138" count="53150" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : double" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : double" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isParameter() : boolean" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="159" count="362" type="method"/>
            <line num="161" count="362" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="164" count="427154" type="method"/>
            <line num="166" count="427395" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="182" count="3229350" type="method"/>
            <line num="183" count="3229440" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String,LocalDate)" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(CurveInterpolation)" num="202" count="581" type="method"/>
            <line num="203" count="581" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="209" count="3229163" type="method"/>
            <line num="211" count="3229270" type="stmt"/>
            <line num="212" count="3229279" type="stmt"/>
            <line num="213" count="3229303" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationMethod(InterpolationMethod) : CurveBuilder" num="222" count="1" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExtrapolationMethod(ExtrapolationMethod) : CurveBuilder" num="233" count="1" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationEntity(InterpolationEntity) : CurveBuilder" num="244" count="1" type="method"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="252" count="3229343" type="method"/>
            <line num="254" count="3229463" type="stmt"/>
            <line num="255" count="3229742" type="stmt"/>
            <line complexity="4" visibility="public" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,double[],double[])" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="309" count="62182" type="method"/>
            <line num="310" count="62183" type="stmt"/>
            <line num="311" count="62190" type="stmt"/>
            <line num="312" count="62182" type="stmt"/>
            <line num="313" count="62192" type="stmt"/>
            <line complexity="1" visibility="private" signature="CurveInterpolation(String,LocalDate)" num="322" count="3229241" type="method"/>
            <line num="323" count="3229102" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="326" count="48240599" type="method"/>
            <line num="329" count="48246154" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double) : double" num="332" count="1241523949" type="method"/>
            <line num="335" count="1273722333" type="stmt"/>
            <line falsecount="3245610" truecount="1287651677" num="335" type="cond"/>
            <line num="336" count="1305224571" type="stmt"/>
            <line falsecount="1313468741" truecount="3245606" num="336" type="cond"/>
            <line num="337" count="3245584" type="stmt"/>
            <line num="338" count="3245631" type="stmt"/>
            <line num="340" count="1327254701" type="stmt"/>
            <line num="341" count="1351345365" type="stmt"/>
            <line falsecount="51116874" truecount="1312071791" num="341" type="cond"/>
            <line num="342" count="1317870737" type="stmt"/>
            <line num="345" count="51113165" type="stmt"/>
            <line num="346" count="51042528" type="stmt"/>
            <line num="347" count="51178185" type="stmt"/>
            <line complexity="3" visibility="private" signature="getInterpolationEntityValue(double) : double" num="350" count="51113770" type="method"/>
            <line num="352" count="51121017" type="stmt"/>
            <line num="354" count="51183953" type="stmt"/>
            <line falsecount="47940840" truecount="3245635" num="354" type="cond"/>
            <line num="355" count="3245655" type="stmt"/>
            <line num="356" count="3245645" type="stmt"/>
            <line num="357" count="3245632" type="stmt"/>
            <line falsecount="3245638" truecount="3659887" num="357" type="cond"/>
            <line num="358" count="3659915" type="stmt"/>
            <line num="359" count="3659932" type="stmt"/>
            <line num="361" count="3245634" type="stmt"/>
            <line num="369" count="51193061" type="stmt"/>
            <line complexity="10" visibility="protected" signature="addPoint(double,double,boolean) : void" num="380" count="3234814" type="method"/>
            <line num="381" count="3234880" type="stmt"/>
            <line num="382" count="3235566" type="stmt"/>
            <line falsecount="3235295" truecount="10" num="382" type="cond"/>
            <line num="383" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="383" type="cond"/>
            <line num="384" count="10" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="390" count="3235298" type="stmt"/>
            <line num="392" count="3234928" type="stmt"/>
            <line num="393" count="3234106" type="stmt"/>
            <line falsecount="3234189" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="404" count="3234272" type="stmt"/>
            <line num="405" count="3233761" type="stmt"/>
            <line num="407" count="3234025" type="stmt"/>
            <line falsecount="237" truecount="3233935" num="407" type="cond"/>
            <line num="409" count="3234024" type="stmt"/>
            <line num="410" count="3233509" type="stmt"/>
            <line falsecount="3233613" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="3233673" type="stmt"/>
            <line num="416" count="3234541" type="stmt"/>
            <line num="417" count="3234675" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExtrapolationMethod() : ExtrapolationMethod" num="435" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntity() : InterpolationEntity" num="444" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoints() : List&lt;Point&gt;" num="453" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimes() : double[]" num="464" count="525" type="method"/>
            <line num="465" count="524" type="stmt"/>
            <line num="466" count="525" type="stmt"/>
            <line falsecount="525" truecount="3144" num="466" type="cond"/>
            <line num="467" count="3144" type="stmt"/>
            <line num="469" count="525" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeIndex(double) : int" num="472" count="3235022" type="method"/>
            <line num="473" count="3235201" type="stmt"/>
            <line num="474" count="3234749" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getParameterIndex(double) : int" num="477" count="3234187" type="method"/>
            <line num="478" count="3234305" type="stmt"/>
            <line num="479" count="3233977" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="482" count="33866" type="method"/>
            <line num="484" count="33866" type="stmt"/>
            <line num="485" count="33860" type="stmt"/>
            <line falsecount="33697" truecount="887427" num="485" type="cond"/>
            <line num="486" count="887583" type="stmt"/>
            <line num="488" count="33693" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setParameterPrivate(double[]) : void" num="496" count="15661" type="method"/>
            <line num="497" count="15661" type="stmt"/>
            <line falsecount="15631" truecount="413132" num="497" type="cond"/>
            <line num="498" count="413198" type="stmt"/>
            <line num="500" count="15631" type="stmt"/>
            <line num="501" count="15632" type="stmt"/>
            <line complexity="5" visibility="private" signature="interpolationEntityFromValue(double,double) : double" num="504" count="3648509" type="method"/>
            <line num="505" count="3648548" type="stmt"/>
            <line num="506" count="235108" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="235029" type="stmt"/>
            <line num="509" count="3414695" type="stmt"/>
            <line num="510" count="3414712" type="stmt"/>
            <line num="511" count="227" type="stmt"/>
            <line num="512" count="227" type="stmt"/>
            <line falsecount="227" truecount="0" num="512" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="227" type="stmt"/>
            <line complexity="4" visibility="private" signature="valueFromInterpolationEntity(double,double) : double" num="520" count="51981327" type="method"/>
            <line num="521" count="52009248" type="stmt"/>
            <line num="522" count="1997691" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="1996507" type="stmt"/>
            <line num="525" count="50040210" type="stmt"/>
            <line num="526" count="50042830" type="stmt"/>
            <line num="527" count="6068" type="stmt"/>
            <line num="528" count="6068" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : CurveInterpolation" num="532" count="16233" type="method"/>
            <line num="534" count="16234" type="stmt"/>
            <line num="536" count="16237" type="stmt"/>
            <line num="537" count="16235" type="stmt"/>
            <line num="538" count="16237" type="stmt"/>
            <line num="539" count="16236" type="stmt"/>
            <line num="540" count="16243" type="stmt"/>
            <line num="541" count="427201" type="stmt"/>
            <line num="542" count="425021" type="stmt"/>
            <line num="543" count="426136" type="stmt"/>
            <line falsecount="5833" truecount="420637" num="543" type="cond"/>
            <line num="544" count="420721" type="stmt"/>
            <line num="548" count="16252" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="551" count="16876" type="method"/>
            <line num="553" count="16877" type="stmt"/>
            <line falsecount="15641" truecount="1201" num="553" type="cond"/>
            <line num="554" count="1202" type="stmt"/>
            <line num="556" count="15648" type="stmt"/>
            <line num="557" count="15666" type="stmt"/>
            <line num="559" count="15627" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="562" count="581" type="method"/>
            <line num="564" count="581" type="stmt"/>
            <line num="565" count="581" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="568" count="24" type="method"/>
            <line num="573" count="24" type="stmt"/>
            <line num="574" count="24" type="stmt"/>
            <line num="575" count="24" type="stmt"/>
            <line num="576" count="186" type="stmt"/>
            <line num="577" count="186" type="stmt"/>
            <line num="578" count="186" type="stmt"/>
            <line num="581" count="24" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="587" count="29" type="method"/>
            <line num="588" count="29" type="stmt"/>
            <line num="590" count="29" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurve.java" name="DiscountCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveFromForwardCurve.java" name="DiscountCurveFromForwardCurve.java">
            <metrics coveredelements="37" coveredconditionals="7" complexity="28" loc="214" coveredmethods="6" methods="12" elements="100" classes="1" ncloc="111" statements="56" conditionals="32" coveredstatements="24"/>
            <class name="DiscountCurveFromForwardCurve">
               <metrics coveredelements="37" coveredconditionals="7" complexity="28" coveredmethods="6" methods="12" elements="100" statements="56" conditionals="32" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String,double)" num="53" count="8535" type="method"/>
            <line num="54" count="8534" type="stmt"/>
            <line num="56" count="8537" type="stmt"/>
            <line num="57" count="8537" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurve,double)" num="71" count="5337898" type="method"/>
            <line num="72" count="5336542" type="stmt"/>
            <line num="74" count="5338370" type="stmt"/>
            <line num="75" count="5338863" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String)" num="88" count="8537" type="method"/>
            <line num="89" count="8537" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurve)" num="102" count="5334432" type="method"/>
            <line num="103" count="5333680" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="106" count="644" type="method"/>
            <line num="108" count="644" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="114" count="21815544" type="method"/>
            <line num="116" count="21836115" type="stmt"/>
            <line num="117" count="21844029" type="stmt"/>
            <line falsecount="206819" truecount="21642640" num="117" type="cond"/>
            <line num="118" count="21646384" type="stmt"/>
            <line num="120" count="206865" type="stmt"/>
            <line falsecount="206890" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="206936" type="stmt"/>
            <line num="126" count="21857204" type="stmt"/>
            <line falsecount="21862333" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="21865269" type="stmt"/>
            <line num="131" count="21876203" type="stmt"/>
            <line num="132" count="21882001" type="stmt"/>
            <line num="133" count="21887419" type="stmt"/>
            <line falsecount="21862441" truecount="637642996" num="133" type="cond"/>
            <line num="134" count="645446847" type="stmt"/>
            <line num="135" count="585447682" type="stmt"/>
            <line falsecount="600597496" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="608886416" type="stmt"/>
            <line num="139" count="609617134" type="stmt"/>
            <line num="142" count="21874085" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="158" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveFromProductOfCurves.java" name="DiscountCurveFromProductOfCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="104" coveredmethods="0" methods="8" elements="31" classes="1" ncloc="56" statements="19" conditionals="4" coveredstatements="0"/>
            <class name="DiscountCurveFromProductOfCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="31" statements="19" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromProductOfCurves(String,LocalDate,String)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromProductOfCurves(String,LocalDate,DiscountCurve)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="95" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveInterpolation.java" name="DiscountCurveInterpolation.java">
            <metrics coveredelements="71" coveredconditionals="16" complexity="34" loc="454" coveredmethods="14" methods="21" elements="110" classes="1" ncloc="168" statements="63" conditionals="26" coveredstatements="41"/>
            <class name="DiscountCurveInterpolation">
               <metrics coveredelements="71" coveredconditionals="16" complexity="34" coveredmethods="14" methods="21" elements="110" statements="63" conditionals="26" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String)" num="42" count="40" type="method"/>
            <line num="43" count="40" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="70" count="51" type="method"/>
            <line num="73" count="51" type="stmt"/>
            <line complexity="4" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="89" count="51" type="method"/>
            <line num="94" count="51" type="stmt"/>
            <line falsecount="51" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="51" type="stmt"/>
            <line falsecount="51" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="51" type="stmt"/>
            <line num="104" count="51" type="stmt"/>
            <line falsecount="51" truecount="233" num="104" type="cond"/>
            <line num="105" count="233" type="stmt"/>
            <line num="108" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="123" count="11" type="method"/>
            <line num="129" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="143" count="11" type="method"/>
            <line num="148" count="11" type="stmt"/>
            <line num="149" count="11" type="stmt"/>
            <line falsecount="11" truecount="58" num="149" type="cond"/>
            <line num="150" count="58" type="stmt"/>
            <line num="153" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[]) : DiscountCurveInterpolation" num="164" count="39" type="method"/>
            <line num="165" count="39" type="stmt"/>
            <line num="167" count="39" type="stmt"/>
            <line falsecount="39" truecount="185" num="167" type="cond"/>
            <line num="168" count="185" type="stmt"/>
            <line num="171" count="39" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="191" count="9" type="method"/>
            <line num="196" count="9" type="stmt"/>
            <line num="198" count="9" type="stmt"/>
            <line falsecount="9" truecount="18" num="198" type="cond"/>
            <line num="199" count="18" type="stmt"/>
            <line num="202" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,Date,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="222" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="247" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="272" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],double[]) : DiscountCurveInterpolation" num="300" count="29" type="method"/>
            <line num="301" count="29" type="stmt"/>
            <line num="303" count="29" type="stmt"/>
            <line falsecount="29" truecount="145" num="303" type="cond"/>
            <line num="304" count="145" type="stmt"/>
            <line num="307" count="29" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="327" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="357" count="18" type="method"/>
            <line num="362" count="18" type="stmt"/>
            <line num="363" count="18" type="stmt"/>
            <line num="365" count="18" type="stmt"/>
            <line falsecount="18" truecount="18" num="365" type="cond"/>
            <line num="366" count="18" type="stmt"/>
            <line num="367" count="18" type="stmt"/>
            <line num="370" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountFactorsFromForwardRates(String,TimeDiscretization,double[]) : DiscountCurve" num="382" count="1" type="method"/>
            <line num="383" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line falsecount="1" truecount="16" num="386" type="cond"/>
            <line num="387" count="16" type="stmt"/>
            <line num="388" count="16" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="397" count="11845" type="method"/>
            <line num="400" count="11845" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="406" count="1130406127" type="method"/>
            <line num="409" count="1179528734" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="420" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="422" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : double[]" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addDiscountFactor(double,double,boolean) : void" num="446" count="434" type="method"/>
            <line num="447" count="434" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="450" count="16" type="method"/>
            <line num="452" count="16" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveNelsonSiegelSvensson.java" name="DiscountCurveNelsonSiegelSvensson.java">
            <metrics coveredelements="38" coveredconditionals="10" complexity="23" loc="178" coveredmethods="7" methods="15" elements="65" classes="1" ncloc="95" statements="34" conditionals="16" coveredstatements="21"/>
            <class name="DiscountCurveNelsonSiegelSvensson">
               <metrics coveredelements="38" coveredconditionals="10" complexity="23" coveredmethods="7" methods="15" elements="65" statements="34" conditionals="16" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveNelsonSiegelSvensson(String,LocalDate,double[],double)" num="50" count="424" type="method"/>
            <line num="51" count="424" type="stmt"/>
            <line num="52" count="424" type="stmt"/>
            <line num="54" count="423" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="57" count="955788" type="method"/>
            <line num="60" count="955921" type="stmt"/>
            <line complexity="7" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="69" count="1125350600" type="method"/>
            <line num="73" count="1150274104" type="stmt"/>
            <line num="75" count="1159122321" type="stmt"/>
            <line num="76" count="1163385735" type="stmt"/>
            <line num="77" count="1166388208" type="stmt"/>
            <line num="78" count="1170255505" type="stmt"/>
            <line num="79" count="1176358324" type="stmt"/>
            <line num="80" count="1184739496" type="stmt"/>
            <line num="82" count="1189319790" type="stmt"/>
            <line falsecount="0" truecount="1173465497" num="82" type="cond"/>
            <line num="83" count="1182233068" type="stmt"/>
            <line falsecount="16937" truecount="1186793689" num="83" type="cond"/>
            <line num="85" count="1186295473" type="stmt"/>
            <line falsecount="0" truecount="1195281253" num="85" type="cond"/>
            <line falsecount="44023830" truecount="1157950163" num="85" type="cond"/>
            <line num="86" count="1209477995" type="stmt"/>
            <line falsecount="16970" truecount="1211400600" num="86" type="cond"/>
            <line falsecount="44053872" truecount="1172341581" num="86" type="cond"/>
            <line num="88" count="1215815085" type="stmt"/>
            <line num="90" count="1222650752" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : double[]" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="146" count="363" type="method"/>
            <line num="148" count="364" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeScaling() : double" num="158" count="351383580" type="method"/>
            <line num="159" count="352197852" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DiscountCurveNelsonSiegelSvensson" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : DiscountCurveNelsonSiegelSvensson" num="167" count="352" type="method"/>
            <line num="169" count="354" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="2" type="method"/>
            <line num="174" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveRenormalized.java" name="DiscountCurveRenormalized.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="103" coveredmethods="0" methods="13" elements="32" classes="1" ncloc="71" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurveRenormalized">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="32" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveRenormalized(String,LocalDate,LocalDate,String)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DiscountCurveRenormalized" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurve.java" name="ForwardCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveFromDiscountCurve.java" name="ForwardCurveFromDiscountCurve.java">
            <metrics coveredelements="28" coveredconditionals="4" complexity="17" loc="215" coveredmethods="7" methods="12" elements="49" classes="1" ncloc="88" statements="29" conditionals="8" coveredstatements="17"/>
            <class name="ForwardCurveFromDiscountCurve">
               <metrics coveredelements="28" coveredconditionals="4" complexity="17" coveredmethods="7" methods="12" elements="49" statements="29" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double)" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="84" count="61877" type="method"/>
            <line num="85" count="61879" type="stmt"/>
            <line num="87" count="61880" type="stmt"/>
            <line num="88" count="61884" type="stmt"/>
            <line num="89" count="61888" type="stmt"/>
            <line num="90" count="61887" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="106" count="61876" type="method"/>
            <line num="107" count="61872" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention)" num="121" count="61869" type="method"/>
            <line num="122" count="61864" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String)" num="134" count="61868" type="method"/>
            <line num="135" count="61866" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,LocalDate,String)" num="152" count="20682" type="method"/>
            <line num="153" count="20681" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : double" num="156" count="595864045" type="method"/>
            <line num="159" count="610541151" type="stmt"/>
            <line num="160" count="541562074" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="166" count="565753507" type="method"/>
            <line num="169" count="573490249" type="stmt"/>
            <line falsecount="578783047" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="594576059" type="stmt"/>
            <line num="173" count="544537769" type="stmt"/>
            <line falsecount="558835056" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="564676114" type="stmt"/>
            <line falsecount="571799738" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="576875502" type="stmt"/>
            <line falsecount="582007288" truecount="0" num="180" type="cond"/>
            <line num="186" count="585342343" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveInterpolation.java" name="ForwardCurveInterpolation.java">
            <metrics coveredelements="71" coveredconditionals="12" complexity="36" loc="409" coveredmethods="12" methods="17" elements="130" classes="2" ncloc="183" statements="91" conditionals="22" coveredstatements="47"/>
            <class name="ForwardCurveInterpolation">
               <metrics coveredelements="71" coveredconditionals="12" complexity="36" coveredmethods="12" methods="17" elements="130" statements="91" conditionals="22" coveredstatements="47"/>
            </class>
            <class name="ForwardCurveInterpolation.InterpolationEntityForward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String)" num="64" count="38" type="method"/>
            <line num="68" count="38" type="stmt"/>
            <line num="70" count="38" type="stmt"/>
            <line num="72" count="38" type="stmt"/>
            <line falsecount="38" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,InterpolationEntityForward,String)" num="86" count="9" type="method"/>
            <line num="87" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,String)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,double,InterpolationEntityForward,String)" num="110" count="166" type="method"/>
            <line num="112" count="166" type="stmt"/>
            <line num="113" count="166" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="134" count="15" type="method"/>
            <line num="139" count="15" type="stmt"/>
            <line num="142" count="15" type="stmt"/>
            <line falsecount="15" truecount="75" num="142" type="cond"/>
            <line num="143" count="75" type="stmt"/>
            <line num="146" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,Date,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="167" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,String,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="205" count="9" type="method"/>
            <line num="206" count="9" type="stmt"/>
            <line num="208" count="9" type="stmt"/>
            <line falsecount="9" truecount="45" num="208" type="cond"/>
            <line num="209" count="45" type="stmt"/>
            <line num="212" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],double) : ForwardCurveInterpolation" num="224" count="160" type="method"/>
            <line num="225" count="160" type="stmt"/>
            <line num="227" count="160" type="stmt"/>
            <line falsecount="160" truecount="4692" num="227" type="cond"/>
            <line num="228" count="4692" type="stmt"/>
            <line num="229" count="4692" type="stmt"/>
            <line num="230" count="4692" type="stmt"/>
            <line num="233" count="160" type="stmt"/>
            <line complexity="4" visibility="public" signature="createForwardCurveFromDiscountFactors(String,double[],double[],double) : ForwardCurveInterpolation" num="252" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="286" count="6" type="method"/>
            <line num="287" count="6" type="stmt"/>
            <line num="289" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="289" type="cond"/>
            <line num="290" count="30" type="stmt"/>
            <line num="291" count="30" type="stmt"/>
            <line num="292" count="30" type="stmt"/>
            <line num="294" count="6" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double) : double" num="297" count="24165044" type="method"/>
            <line num="300" count="24453415" type="stmt"/>
            <line num="302" count="24268703" type="stmt"/>
            <line num="303" count="25207219" type="stmt"/>
            <line num="304" count="25451012" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="25586690" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="337" count="9434305" type="method"/>
            <line num="340" count="9471735" type="stmt"/>
            <line num="341" count="10165302" type="stmt"/>
            <line num="342" count="9165341" type="stmt"/>
            <line falsecount="7809816" truecount="2535603" num="342" type="cond"/>
            <line num="343" count="2539409" type="stmt"/>
            <line num="346" count="8651378" type="stmt"/>
            <line complexity="5" visibility="private" signature="addForward(AnalyticModel,double,double,boolean) : void" num="357" count="4842" type="method"/>
            <line num="358" count="4842" type="stmt"/>
            <line num="359" count="4842" type="stmt"/>
            <line num="360" count="4842" type="stmt"/>
            <line num="361" count="4842" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="4842" type="stmt"/>
            <line num="364" count="4842" type="stmt"/>
            <line num="365" count="4842" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="385" count="4842" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addPoint(double,double,boolean) : void" num="388" count="329" type="method"/>
            <line num="390" count="329" type="stmt"/>
            <line falsecount="329" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="329" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntityForward() : InterpolationEntityForward" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="405" count="8" type="method"/>
            <line num="407" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveNelsonSiegelSvensson.java" name="ForwardCurveNelsonSiegelSvensson.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="18" loc="173" coveredmethods="6" methods="16" elements="53" classes="1" ncloc="97" statements="33" conditionals="4" coveredstatements="20"/>
            <class name="ForwardCurveNelsonSiegelSvensson">
               <metrics coveredelements="28" coveredconditionals="2" complexity="18" coveredmethods="6" methods="16" elements="53" statements="33" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveNelsonSiegelSvensson(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double[],double,double)" num="53" count="33" type="method"/>
            <line num="54" count="33" type="stmt"/>
            <line num="55" count="33" type="stmt"/>
            <line num="56" count="33" type="stmt"/>
            <line num="57" count="33" type="stmt"/>
            <line num="58" count="33" type="stmt"/>
            <line num="59" count="33" type="stmt"/>
            <line num="61" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveNelsonSiegelSvensson(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double[],double)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : double" num="78" count="955757" type="method"/>
            <line num="80" count="955771" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="83" count="347307678" type="method"/>
            <line num="85" count="349715893" type="stmt"/>
            <line num="86" count="344490232" type="stmt"/>
            <line falsecount="1360" truecount="346091015" num="86" type="cond"/>
            <line num="87" count="347173044" type="stmt"/>
            <line num="88" count="344843810" type="stmt"/>
            <line num="89" count="340776654" type="stmt"/>
            <line num="92" count="338583879" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : ForwardCurveNelsonSiegelSvensson" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : ForwardCurveNelsonSiegelSvensson" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="125" count="90200755" type="method"/>
            <line num="127" count="90240844" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffset(double) : double" num="162" count="94018218" type="method"/>
            <line num="164" count="94049715" type="stmt"/>
            <line num="165" count="93897567" type="stmt"/>
            <line num="166" count="93969757" type="stmt"/>
            <line num="167" count="93692951" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDateFromModelTime(double) : LocalDate" num="170" count="762510273" type="method"/>
            <line num="171" count="767083835" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveWithFixings.java" name="ForwardCurveWithFixings.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="89" coveredmethods="0" methods="8" elements="29" classes="1" ncloc="50" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ForwardCurveWithFixings">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="29" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveWithFixings(ForwardCurve,ForwardCurve,double,double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getForward(AnalyticModel,double) : double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffset(double) : double" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : ForwardCurveWithFixings" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/IndexCurveFromDiscountCurve.java" name="IndexCurveFromDiscountCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="55" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="IndexCurveFromDiscountCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IndexCurveFromDiscountCurve(String,double,DiscountCurve)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/PiecewiseCurve.java" name="PiecewiseCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="162" coveredmethods="0" methods="17" elements="48" classes="2" ncloc="96" statements="29" conditionals="2" coveredstatements="0"/>
            <class name="PiecewiseCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="15" elements="40" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="PiecewiseCurve.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(PiecewiseCurve)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PiecewiseCurve(Curve,Curve,double,double)" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCurve() : Curve" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartCurve() : Curve" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartStartTime() : double" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartEndTime() : double" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AnalyticModel,double) : double" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : PiecewiseCurve" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : Builder" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/curves/SeasonalCurve.java" name="SeasonalCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="212" coveredmethods="0" methods="12" elements="81" classes="2" ncloc="116" statements="59" conditionals="10" coveredstatements="0"/>
            <class name="SeasonalCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="10" elements="73" statements="53" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="SeasonalCurve.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(SeasonalCurve)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SeasonalCurve(String,LocalDate,Map&lt;LocalDate, Double&gt;,int)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SeasonalCurve(String,LocalDate,Curve)" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : SeasonalCurve" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : Builder" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeSeasonalAdjustments(LocalDate,Map&lt;LocalDate, Double&gt;,int) : double[]" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="computeSeasonalAdjustments(double[],int,int) : double[]" num="176" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.components">
         <metrics coveredelements="308" complexity="177" loc="2261" methods="94" classes="17" statements="552" coveredconditionals="41" coveredmethods="38" elements="772" ncloc="1171" files="17" conditionals="126" coveredstatements="229"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AbstractPeriod.java" name="AbstractPeriod.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="14" loc="170" coveredmethods="9" methods="14" elements="36" classes="1" ncloc="82" statements="22" conditionals="0" coveredstatements="17"/>
            <class name="AbstractPeriod">
               <metrics coveredelements="26" coveredconditionals="0" complexity="14" coveredmethods="9" methods="14" elements="36" statements="22" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractPeriod(LocalDateTime,double,double,double,double,Notional,AbstractProductComponent,double)" num="49" count="3441" type="method"/>
            <line num="52" count="3441" type="stmt"/>
            <line num="53" count="3441" type="stmt"/>
            <line num="54" count="3441" type="stmt"/>
            <line num="55" count="3441" type="stmt"/>
            <line num="56" count="3441" type="stmt"/>
            <line num="57" count="3441" type="stmt"/>
            <line num="58" count="3441" type="stmt"/>
            <line num="59" count="3441" type="stmt"/>
            <line num="60" count="3441" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractPeriod(double,double,double,double,Notional,AbstractProductComponent,double)" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractPeriod(double,double,double,double,Notional,AbstractProductComponent)" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="105" count="39598" type="method"/>
            <line num="106" count="39600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="112" count="1380" type="method"/>
            <line num="113" count="1380" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="119" count="1440" type="method"/>
            <line num="120" count="1440" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDate() : double" num="126" count="16015" type="method"/>
            <line num="127" count="16016" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDate() : double" num="133" count="50792" type="method"/>
            <line num="134" count="50846" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : Notional" num="140" count="15876" type="method"/>
            <line num="141" count="15883" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : AbstractProductComponent" num="147" count="16015" type="method"/>
            <line num="148" count="16015" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction() : double" num="154" count="16012" type="method"/>
            <line num="155" count="16011" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AbstractProductComponent.java" name="AbstractProductComponent.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="79" coveredmethods="4" methods="5" elements="15" classes="1" ncloc="45" statements="10" conditionals="0" coveredstatements="6"/>
            <class name="AbstractProductComponent">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="15" statements="10" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="newThread(Runnable) : Thread" num="45" count="80" type="method"/>
            <line num="47" count="80" type="stmt"/>
            <line num="48" count="80" type="stmt"/>
            <line num="49" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractProductComponent(String)" num="53" count="6020" type="method"/>
            <line num="54" count="6020" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractProductComponent()" num="57" count="3917" type="method"/>
            <line num="58" count="3917" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExecutor() : ThreadPoolExecutor" num="76" count="36502" type="method"/>
            <line num="77" count="36502" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AccrualAccount.java" name="AccrualAccount.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="75" coveredmethods="0" methods="3" elements="20" classes="1" ncloc="36" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="AccrualAccount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="20" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccrualAccount(String,AnalyticModelIndex,AbstractIndex,double)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AccruingNotional.java" name="AccruingNotional.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="33" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="AccruingNotional">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccruingNotional(Notional,AbstractPeriod)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="99" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="Cashflow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="28" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cashflow(double,double,boolean)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Choice.java" name="Choice.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="230" coveredmethods="0" methods="6" elements="99" classes="1" ncloc="142" statements="79" conditionals="14" coveredstatements="0"/>
            <class name="Choice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="6" elements="99" statements="79" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Choice(double,TermStructureMonteCarloProduct,TermStructureMonteCarloProduct)" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="85" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ExpectedTailLoss.java" name="ExpectedTailLoss.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="177" coveredmethods="0" methods="4" elements="71" classes="1" ncloc="92" statements="57" conditionals="10" coveredstatements="0"/>
            <class name="ExpectedTailLoss">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="71" statements="57" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpectedTailLoss(double,double,TermStructureMonteCarloProduct)" num="45" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="73" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ExposureEstimator.java" name="ExposureEstimator.java">
            <metrics coveredelements="78" coveredconditionals="12" complexity="14" loc="201" coveredmethods="3" methods="5" elements="88" classes="1" ncloc="103" statements="67" conditionals="16" coveredstatements="63"/>
            <class name="ExposureEstimator">
               <metrics coveredelements="78" coveredconditionals="12" complexity="14" coveredmethods="3" methods="5" elements="88" statements="67" conditionals="16" coveredstatements="63"/>
            </class>
            <line complexity="1" visibility="public" signature="ExposureEstimator(AbstractLIBORMonteCarloProduct)" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="78" count="241" type="method"/>
            <line num="81" count="241" type="stmt"/>
            <line num="82" count="241" type="stmt"/>
            <line num="84" count="241" type="stmt"/>
            <line num="86" count="241" type="stmt"/>
            <line falsecount="84" truecount="157" num="86" type="cond"/>
            <line num="87" count="157" type="stmt"/>
            <line num="88" count="157" type="stmt"/>
            <line num="93" count="157" type="stmt"/>
            <line num="94" count="157" type="stmt"/>
            <line num="95" count="157" type="stmt"/>
            <line num="96" count="157" type="stmt"/>
            <line num="97" count="157" type="stmt"/>
            <line num="99" count="157" type="stmt"/>
            <line num="101" count="157" type="stmt"/>
            <line num="103" count="157" type="stmt"/>
            <line num="104" count="157" type="stmt"/>
            <line num="105" count="157" type="stmt"/>
            <line falsecount="157" truecount="785" num="105" type="cond"/>
            <line num="106" count="785" type="stmt"/>
            <line num="110" count="157" type="stmt"/>
            <line num="113" count="157" type="stmt"/>
            <line num="117" count="241" type="stmt"/>
            <line complexity="7" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="128" count="157" type="method"/>
            <line num="130" count="157" type="stmt"/>
            <line num="132" count="157" type="stmt"/>
            <line num="135" count="157" type="stmt"/>
            <line num="136" count="157" type="stmt"/>
            <line num="139" count="157" type="stmt"/>
            <line num="140" count="157" type="stmt"/>
            <line num="143" count="157" type="stmt"/>
            <line num="144" count="157" type="stmt"/>
            <line num="145" count="157" type="stmt"/>
            <line falsecount="78" truecount="79" num="145" type="cond"/>
            <line num="146" count="79" type="stmt"/>
            <line num="148" count="157" type="stmt"/>
            <line num="149" count="157" type="stmt"/>
            <line num="151" count="157" type="stmt"/>
            <line num="152" count="157" type="stmt"/>
            <line num="153" count="157" type="stmt"/>
            <line num="155" count="157" type="stmt"/>
            <line num="156" count="157" type="stmt"/>
            <line num="159" count="157" type="stmt"/>
            <line num="160" count="157" type="stmt"/>
            <line num="161" count="157" type="stmt"/>
            <line falsecount="78" truecount="79" num="161" type="cond"/>
            <line num="162" count="79" type="stmt"/>
            <line num="164" count="157" type="stmt"/>
            <line num="166" count="157" type="stmt"/>
            <line num="168" count="157" type="stmt"/>
            <line falsecount="0" truecount="157" num="168" type="cond"/>
            <line num="169" count="157" type="stmt"/>
            <line num="170" count="157" type="stmt"/>
            <line num="171" count="157" type="stmt"/>
            <line num="173" count="157" type="stmt"/>
            <line num="176" count="157" type="stmt"/>
            <line num="182" count="157" type="stmt"/>
            <line num="183" count="157" type="stmt"/>
            <line num="184" count="157" type="stmt"/>
            <line falsecount="78" truecount="79" num="184" type="cond"/>
            <line num="185" count="79" type="stmt"/>
            <line num="187" count="157" type="stmt"/>
            <line num="188" count="157" type="stmt"/>
            <line num="190" count="157" type="stmt"/>
            <line falsecount="0" truecount="157" num="190" type="cond"/>
            <line num="191" count="157" type="stmt"/>
            <line num="192" count="157" type="stmt"/>
            <line num="193" count="157" type="stmt"/>
            <line num="195" count="157" type="stmt"/>
            <line num="199" count="157" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/IndexedValue.java" name="IndexedValue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="170" coveredmethods="0" methods="5" elements="79" classes="1" ncloc="96" statements="64" conditionals="10" coveredstatements="0"/>
            <class name="IndexedValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="5" elements="79" statements="64" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IndexedValue(double,AbstractProductComponent,AbstractProductComponent)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Notional.java" name="Notional.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Notional">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/NotionalFromComponent.java" name="NotionalFromComponent.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="4" elements="17" classes="1" ncloc="32" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="NotionalFromComponent">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="17" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NotionalFromComponent(AbstractProductComponent)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/NotionalFromConstant.java" name="NotionalFromConstant.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="6" loc="64" coveredmethods="4" methods="6" elements="14" classes="1" ncloc="33" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="NotionalFromConstant">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NotionalFromConstant(double,String)" num="29" count="918" type="method"/>
            <line num="30" count="918" type="stmt"/>
            <line num="31" count="918" type="stmt"/>
            <line num="32" count="918" type="stmt"/>
            <line complexity="1" visibility="public" signature="NotionalFromConstant(double)" num="40" count="918" type="method"/>
            <line num="41" count="918" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="49" count="720" type="method"/>
            <line num="51" count="720" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="54" count="15147" type="method"/>
            <line num="56" count="15186" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Numeraire.java" name="Numeraire.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="50" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="Numeraire">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="Numeraire()" num="25" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Option.java" name="Option.java">
            <metrics coveredelements="104" coveredconditionals="16" complexity="30" loc="349" coveredmethods="7" methods="12" elements="154" classes="1" ncloc="186" statements="108" conditionals="34" coveredstatements="81"/>
            <class name="Option">
               <metrics coveredelements="104" coveredconditionals="16" complexity="30" coveredmethods="7" methods="12" elements="154" statements="108" conditionals="34" coveredstatements="81"/>
            </class>
            <line complexity="1" visibility="public" signature="Option(double,double,boolean,AbstractLIBORMonteCarloProduct,RegressionBasisFunctionsProvider)" num="72" count="31" type="method"/>
            <line num="73" count="31" type="stmt"/>
            <line num="74" count="31" type="stmt"/>
            <line num="75" count="31" type="stmt"/>
            <line num="76" count="31" type="stmt"/>
            <line num="77" count="31" type="stmt"/>
            <line num="78" count="31" type="stmt"/>
            <line num="79" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,boolean,TermStructureMonteCarloProduct,AbstractLIBORMonteCarloProduct,RegressionBasisFunctionsProvider)" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,boolean,TermStructureMonteCarloProduct,AbstractLIBORMonteCarloProduct)" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,double,boolean,AbstractLIBORMonteCarloProduct)" num="121" count="31" type="method"/>
            <line num="122" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,double,AbstractLIBORMonteCarloProduct)" num="132" count="31" type="method"/>
            <line num="133" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,AbstractLIBORMonteCarloProduct)" num="142" count="30" type="method"/>
            <line num="143" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="182" count="32" type="method"/>
            <line num="185" count="32" type="stmt"/>
            <line num="186" count="32" type="stmt"/>
            <line num="189" count="32" type="stmt"/>
            <line falsecount="32" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="32" type="stmt"/>
            <line num="194" count="32" type="stmt"/>
            <line num="195" count="32" type="stmt"/>
            <line falsecount="32" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="32" type="stmt"/>
            <line num="201" count="32" type="stmt"/>
            <line falsecount="0" truecount="32" num="201" type="cond"/>
            <line num="203" count="32" type="stmt"/>
            <line falsecount="2" truecount="30" num="203" type="cond"/>
            <line num="204" count="30" type="stmt"/>
            <line num="205" count="30" type="stmt"/>
            <line num="210" count="30" type="stmt"/>
            <line num="211" count="30" type="stmt"/>
            <line num="212" count="30" type="stmt"/>
            <line num="213" count="30" type="stmt"/>
            <line num="214" count="30" type="stmt"/>
            <line num="216" count="30" type="stmt"/>
            <line num="218" count="30" type="stmt"/>
            <line num="220" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="220" type="cond"/>
            <line num="221" count="30" type="stmt"/>
            <line num="222" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="222" type="cond"/>
            <line num="223" count="150" type="stmt"/>
            <line num="227" count="30" type="stmt"/>
            <line num="230" count="30" type="stmt"/>
            <line num="234" count="32" type="stmt"/>
            <line falsecount="32" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="32" type="stmt"/>
            <line num="241" count="32" type="stmt"/>
            <line falsecount="0" truecount="32" num="241" type="cond"/>
            <line num="242" count="32" type="stmt"/>
            <line num="243" count="32" type="stmt"/>
            <line num="244" count="32" type="stmt"/>
            <line num="248" count="32" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="251" count="30" type="method"/>
            <line num="253" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="253" type="cond"/>
            <line num="254" count="30" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="269" count="30" type="method"/>
            <line num="271" count="30" type="stmt"/>
            <line num="273" count="30" type="stmt"/>
            <line num="276" count="30" type="stmt"/>
            <line num="277" count="30" type="stmt"/>
            <line num="280" count="30" type="stmt"/>
            <line num="281" count="30" type="stmt"/>
            <line num="284" count="30" type="stmt"/>
            <line num="285" count="30" type="stmt"/>
            <line num="286" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="30" type="stmt"/>
            <line num="290" count="30" type="stmt"/>
            <line num="292" count="30" type="stmt"/>
            <line num="293" count="30" type="stmt"/>
            <line num="294" count="30" type="stmt"/>
            <line num="296" count="30" type="stmt"/>
            <line num="297" count="30" type="stmt"/>
            <line num="300" count="30" type="stmt"/>
            <line num="301" count="30" type="stmt"/>
            <line num="302" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="30" type="stmt"/>
            <line num="307" count="30" type="stmt"/>
            <line num="309" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="309" type="cond"/>
            <line num="310" count="30" type="stmt"/>
            <line num="311" count="30" type="stmt"/>
            <line num="312" count="30" type="stmt"/>
            <line num="314" count="30" type="stmt"/>
            <line num="317" count="30" type="stmt"/>
            <line num="323" count="30" type="stmt"/>
            <line num="324" count="30" type="stmt"/>
            <line num="325" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="325" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="30" type="stmt"/>
            <line num="329" count="30" type="stmt"/>
            <line num="331" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="331" type="cond"/>
            <line num="332" count="30" type="stmt"/>
            <line num="333" count="30" type="stmt"/>
            <line num="334" count="30" type="stmt"/>
            <line num="336" count="30" type="stmt"/>
            <line num="340" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Period.java" name="Period.java">
            <metrics coveredelements="58" coveredconditionals="13" complexity="19" loc="214" coveredmethods="6" methods="7" elements="66" classes="1" ncloc="97" statements="43" conditionals="16" coveredstatements="39"/>
            <class name="Period">
               <metrics coveredelements="58" coveredconditionals="13" complexity="19" coveredmethods="6" methods="7" elements="66" statements="43" conditionals="16" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="Period(LocalDateTime,double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean,boolean)" num="47" count="3441" type="method"/>
            <line num="50" count="3441" type="stmt"/>
            <line num="51" count="3441" type="stmt"/>
            <line num="52" count="3441" type="stmt"/>
            <line num="53" count="3441" type="stmt"/>
            <line num="54" count="3441" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean,boolean)" num="72" count="1080" type="method"/>
            <line num="75" count="1080" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean)" num="94" count="780" type="method"/>
            <line num="97" count="780" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,boolean,boolean,boolean)" num="115" count="300" type="method"/>
            <line num="118" count="300" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="131" count="35415" type="method"/>
            <line num="134" count="35411" type="stmt"/>
            <line num="135" count="35372" type="stmt"/>
            <line num="136" count="35448" type="stmt"/>
            <line falsecount="31003" truecount="3909" num="136" type="cond"/>
            <line num="137" count="3957" type="stmt"/>
            <line num="144" count="34928" type="stmt"/>
            <line falsecount="15038" truecount="19793" num="144" type="cond"/>
            <line num="145" count="19860" type="stmt"/>
            <line num="149" count="15020" type="stmt"/>
            <line num="150" count="14856" type="stmt"/>
            <line num="151" count="15638" type="stmt"/>
            <line num="155" count="16014" type="stmt"/>
            <line num="158" count="16015" type="stmt"/>
            <line falsecount="0" truecount="16012" num="158" type="cond"/>
            <line num="159" count="16013" type="stmt"/>
            <line num="160" count="16016" type="stmt"/>
            <line num="161" count="16014" type="stmt"/>
            <line num="162" count="16014" type="stmt"/>
            <line falsecount="16015" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="16016" type="stmt"/>
            <line falsecount="15296" truecount="720" num="172" type="cond"/>
            <line num="173" count="720" type="stmt"/>
            <line num="175" count="720" type="stmt"/>
            <line falsecount="60" truecount="660" num="175" type="cond"/>
            <line num="176" count="660" type="stmt"/>
            <line num="177" count="660" type="stmt"/>
            <line num="180" count="720" type="stmt"/>
            <line falsecount="0" truecount="720" num="180" type="cond"/>
            <line num="181" count="720" type="stmt"/>
            <line num="182" count="720" type="stmt"/>
            <line num="186" count="16017" type="stmt"/>
            <line falsecount="15715" truecount="300" num="186" type="cond"/>
            <line num="187" count="299" type="stmt"/>
            <line num="190" count="16017" type="stmt"/>
            <line num="193" count="16016" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCoupon(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="196" count="16016" type="method"/>
            <line num="199" count="16015" type="stmt"/>
            <line num="202" count="16013" type="stmt"/>
            <line num="203" count="16013" type="stmt"/>
            <line num="205" count="16015" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ProductCollection.java" name="ProductCollection.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="16" loc="149" coveredmethods="3" methods="8" elements="51" classes="1" ncloc="92" statements="33" conditionals="10" coveredstatements="15"/>
            <class name="ProductCollection">
               <metrics coveredelements="18" coveredconditionals="0" complexity="16" coveredmethods="3" methods="8" elements="51" statements="33" conditionals="10" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductCollection(AbstractProductComponent)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProductCollection(Collection&lt;AbstractProductComponent&gt;)" num="50" count="443" type="method"/>
            <line num="51" count="443" type="stmt"/>
            <line num="52" count="443" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : Collection&lt;AbstractProductComponent&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="97" count="1636" type="method"/>
            <line num="101" count="1636" type="stmt"/>
            <line num="102" count="1636" type="stmt"/>
            <line num="103" count="36501" type="stmt"/>
            <line num="104" count="36501" type="stmt"/>
            <line num="105" count="36502" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="107" count="33141" type="method"/>
            <line num="109" count="33126" type="stmt"/>
            <line num="115" count="2292" type="stmt"/>
            <line num="118" count="36502" type="stmt"/>
            <line num="122" count="1636" type="stmt"/>
            <line num="123" count="1636" type="stmt"/>
            <line num="124" count="1636" type="stmt"/>
            <line num="125" count="36502" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="142" count="1636" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Selector.java" name="Selector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="64" coveredmethods="0" methods="3" elements="12" classes="1" ncloc="28" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="Selector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Selector(String,TermStructureMonteCarloProduct)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.templatemethoddesign.assetderivativevaluation">
         <metrics coveredelements="0" complexity="18" loc="197" methods="18" classes="1" statements="32" coveredconditionals="0" coveredmethods="0" elements="50" ncloc="115" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/templatemethoddesign/assetderivativevaluation/MonteCarloBlackScholesModel2.java" name="MonteCarloBlackScholesModel2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="197" coveredmethods="0" methods="18" elements="50" classes="1" ncloc="115" statements="32" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloBlackScholesModel2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="50" statements="32" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel2(TimeDiscretization,int,double,double,double)" num="40" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel2(TimeDiscretization,int,double,double,double,int)" num="71" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable[]" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int,RandomVariable[]) : RandomVariable" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products">
         <metrics coveredelements="51" complexity="17" loc="314" methods="15" classes="4" statements="42" coveredconditionals="0" coveredmethods="14" elements="57" ncloc="138" files="4" conditionals="0" coveredstatements="37"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/products/AbstractFourierTransformProduct.java" name="AbstractFourierTransformProduct.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="6" loc="99" coveredmethods="3" methods="4" elements="21" classes="1" ncloc="53" statements="17" conditionals="0" coveredstatements="12"/>
            <class name="AbstractFourierTransformProduct">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="3" methods="4" elements="21" statements="17" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="2" visibility="public" signature="getValue(double,Model) : Double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="46" count="6" type="method"/>
            <line num="48" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line num="51" count="6" type="stmt"/>
            <line num="52" count="6" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(CharacteristicFunctionModel) : double" num="63" count="73" type="method"/>
            <line num="66" count="73" type="stmt"/>
            <line num="68" count="73" type="stmt"/>
            <line num="69" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="70" count="1183193" type="method"/>
            <line num="72" count="1212137" type="stmt"/>
            <line num="73" count="1211508" type="stmt"/>
            <line num="77" count="73" type="stmt"/>
            <line num="79" count="73" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/products/DigitalOption.java" name="DigitalOption.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="80" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="33" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="DigitalOption">
               <metrics coveredelements="17" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="17" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double)" num="36" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line num="39" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="46" count="85992" type="method"/>
            <line num="48" count="85914" type="stmt"/>
            <line num="49" count="85320" type="stmt"/>
            <line num="50" count="84880" type="stmt"/>
            <line num="51" count="86485" type="stmt"/>
            <line num="53" count="86479" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="59" count="5" type="method"/>
            <line num="61" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="67" count="5" type="method"/>
            <line num="69" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="75" count="5" type="method"/>
            <line num="77" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/products/EuropeanOption.java" name="EuropeanOption.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="73" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="36" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="EuropeanOption">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="19" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOption(String,double,double)" num="32" count="68" type="method"/>
            <line num="33" count="68" type="stmt"/>
            <line num="34" count="68" type="stmt"/>
            <line num="35" count="68" type="stmt"/>
            <line num="36" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double)" num="44" count="64" type="method"/>
            <line num="45" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="48" count="1147357" type="method"/>
            <line num="50" count="1174682" type="stmt"/>
            <line num="51" count="1175078" type="stmt"/>
            <line num="52" count="1176981" type="stmt"/>
            <line num="53" count="1200775" type="stmt"/>
            <line num="55" count="1219825" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="58" count="68" type="method"/>
            <line num="60" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="63" count="68" type="method"/>
            <line num="65" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="68" count="68" type="method"/>
            <line num="70" count="68" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/products/FourierTransformProduct.java" name="FourierTransformProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FourierTransformProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata.model">
         <metrics coveredelements="89" complexity="59" loc="458" methods="27" classes="2" statements="106" coveredconditionals="12" coveredmethods="19" elements="161" ncloc="248" files="2" conditionals="28" coveredstatements="58"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/AnalyticModel.java" name="AnalyticModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="117" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="24" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/AnalyticModelFromCurvesAndVols.java" name="AnalyticModelFromCurvesAndVols.java">
            <metrics coveredelements="89" coveredconditionals="12" complexity="59" loc="341" coveredmethods="19" methods="27" elements="161" classes="1" ncloc="224" statements="106" conditionals="28" coveredstatements="58"/>
            <class name="AnalyticModelFromCurvesAndVols">
               <metrics coveredelements="89" coveredconditionals="12" complexity="59" coveredmethods="19" methods="27" elements="161" statements="106" conditionals="28" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols()" num="45" count="96" type="method"/>
            <line num="46" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate)" num="54" count="6488895" type="method"/>
            <line num="55" count="6489176" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Curve[])" num="63" count="13864" type="method"/>
            <line num="64" count="13864" type="stmt"/>
            <line num="65" count="27729" type="stmt"/>
            <line num="67" count="13862" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Collection&lt;Curve&gt;)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Curve[])" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Collection&lt;Curve&gt;)" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="123" count="21787" type="method"/>
            <line num="124" count="21792" type="stmt"/>
            <line num="125" count="21789" type="stmt"/>
            <line num="126" count="21795" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="129" count="708301730" type="method"/>
            <line num="132" count="716625658" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurves() : Map&lt;String, Curve&gt;" num="135" count="21789" type="method"/>
            <line num="138" count="21793" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurve(String,Curve) : AnalyticModel" num="141" count="36" type="method"/>
            <line num="143" count="36" type="stmt"/>
            <line num="145" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="36" type="stmt"/>
            <line num="150" count="36" type="stmt"/>
            <line num="152" count="36" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurve(Curve) : AnalyticModel" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurves(Curve) : AnalyticModel" num="168" count="743" type="method"/>
            <line num="170" count="743" type="stmt"/>
            <line num="172" count="743" type="stmt"/>
            <line num="173" count="761" type="stmt"/>
            <line num="175" count="761" type="stmt"/>
            <line num="176" count="761" type="stmt"/>
            <line falsecount="761" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="181" count="743" type="stmt"/>
            <line num="182" count="743" type="stmt"/>
            <line num="184" count="743" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurves(Set&lt;Curve&gt;) : AnalyticModel" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve(String) : DiscountCurve" num="206" count="657107829" type="method"/>
            <line num="208" count="671508350" type="stmt"/>
            <line num="209" count="676591922" type="stmt"/>
            <line num="210" count="639515383" type="stmt"/>
            <line falsecount="2793" truecount="646744527" num="210" type="cond"/>
            <line num="211" count="655554108" type="stmt"/>
            <line num="214" count="659971629" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardCurve(String) : ForwardCurve" num="217" count="32335391" type="method"/>
            <line num="219" count="32351070" type="stmt"/>
            <line num="220" count="32361426" type="stmt"/>
            <line num="221" count="32285707" type="stmt"/>
            <line falsecount="12723649" truecount="19726169" num="221" type="cond"/>
            <line num="222" count="19730210" type="stmt"/>
            <line num="225" count="32315073" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurface(String) : VolatilitySurface" num="228" count="58940680" type="method"/>
            <line num="230" count="58956662" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaces() : Map&lt;String, VolatilitySurface&gt;" num="233" count="21800" type="method"/>
            <line num="235" count="21796" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurface(VolatilitySurface) : AnalyticModel" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurfaces(VolatilitySurface) : AnalyticModel" num="252" count="3229268" type="method"/>
            <line num="255" count="3229349" type="stmt"/>
            <line num="256" count="3229031" type="stmt"/>
            <line num="257" count="3229178" type="stmt"/>
            <line num="259" count="3228863" type="stmt"/>
            <line num="260" count="3228312" type="stmt"/>
            <line falsecount="3228413" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="3228462" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurfaces(Set&lt;VolatilitySurface&gt;) : AnalyticModel" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setCurve(Curve) : void" num="281" count="17187" type="method"/>
            <line num="283" count="17187" type="stmt"/>
            <line complexity="1" visibility="private" signature="setVolatilitySurface(VolatilitySurface) : void" num="286" count="2645" type="method"/>
            <line num="288" count="2643" type="stmt"/>
            <line complexity="3" visibility="private" signature="set(Object) : void" num="291" count="19805" type="method"/>
            <line num="292" count="19812" type="stmt"/>
            <line falsecount="2644" truecount="17173" num="292" type="cond"/>
            <line num="293" count="17181" type="stmt"/>
            <line num="294" count="2646" type="stmt"/>
            <line falsecount="0" truecount="2645" num="294" type="cond"/>
            <line num="295" count="2646" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelFromCurvesAndVols" num="301" count="6466739" type="method"/>
            <line num="304" count="6467057" type="stmt"/>
            <line num="305" count="6465078" type="stmt"/>
            <line num="306" count="6468917" type="stmt"/>
            <line num="307" count="6469129" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(Map&lt;ParameterObject, double[]&gt;) : AnalyticModel" num="310" count="9251" type="method"/>
            <line num="314" count="9252" type="stmt"/>
            <line num="317" count="9248" type="stmt"/>
            <line falsecount="7" truecount="9243" num="317" type="cond"/>
            <line num="318" count="9245" type="stmt"/>
            <line num="319" count="19830" type="stmt"/>
            <line num="320" count="19799" type="stmt"/>
            <line num="324" count="9243" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="337" count="43546" type="method"/>
            <line num="338" count="43541" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.products">
         <metrics coveredelements="0" complexity="0" loc="61" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/products/Swaption.java" name="Swaption.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="61" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Swaption">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Swaption.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.models">
         <metrics coveredelements="168" complexity="103" loc="1444" methods="91" classes="6" statements="231" coveredconditionals="16" coveredmethods="28" elements="346" ncloc="712" files="6" conditionals="24" coveredstatements="124"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/models/BatesModel.java" name="BatesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="485" coveredmethods="0" methods="22" elements="96" classes="1" ncloc="264" statements="66" conditionals="8" coveredstatements="0"/>
            <class name="BatesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="22" elements="96" statements="66" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BatesModel(LocalDate,double,DiscountCurve,DiscountCurve,double[],double[],double[],double[],double[],double[],double,double)" num="108" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,DiscountCurve,DiscountCurve,double[],double[],double[],double[],double[],double[],double,double)" num="155" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,double,double,double[],double[],double[],double[],double[],double[],double,double)" num="186" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,double,double,double,double,double,double,double,double,double,double)" num="232" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Complex) : Complex" num="267" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="370" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="381" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="393" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="400" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double[]" num="407" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAlpha() : double[]" num="421" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBeta() : double[]" num="428" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double[]" num="435" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : double[]" num="442" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double[]" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getK() : double" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDelta() : double" num="463" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="470" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/models/BlackScholesModel.java" name="BlackScholesModel.java">
            <metrics coveredelements="35" coveredconditionals="4" complexity="17" loc="188" coveredmethods="7" methods="15" elements="51" classes="1" ncloc="89" statements="32" conditionals="4" coveredstatements="24"/>
            <class name="BlackScholesModel">
               <metrics coveredelements="35" coveredconditionals="4" complexity="17" coveredmethods="7" methods="15" elements="51" statements="32" conditionals="4" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModel(LocalDate,double,DiscountCurve,DiscountCurve,double)" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double,double)" num="67" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="73" count="5" type="stmt"/>
            <line num="74" count="5" type="stmt"/>
            <line num="75" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double)" num="85" count="5" type="method"/>
            <line num="86" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="89" count="7" type="method"/>
            <line num="91" count="7" type="stmt"/>
            <line num="92" count="7" type="stmt"/>
            <line num="94" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="95" count="102775" type="method"/>
            <line num="97" count="103176" type="stmt"/>
            <line num="98" count="102450" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="115" count="7" type="method"/>
            <line num="116" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="116" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="125" count="7" type="method"/>
            <line num="126" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="126" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/models/CharacteristicFunctionModel.java" name="CharacteristicFunctionModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CharacteristicFunctionModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/models/HestonModel.java" name="HestonModel.java">
            <metrics coveredelements="48" coveredconditionals="4" complexity="22" loc="298" coveredmethods="8" methods="20" elements="72" classes="1" ncloc="131" statements="48" conditionals="4" coveredstatements="36"/>
            <class name="HestonModel">
               <metrics coveredelements="48" coveredconditionals="4" complexity="22" coveredmethods="8" methods="20" elements="72" statements="48" conditionals="4" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double,double,double)" num="87" count="123" type="method"/>
            <line num="88" count="123" type="stmt"/>
            <line num="89" count="123" type="stmt"/>
            <line num="90" count="122" type="stmt"/>
            <line num="91" count="123" type="stmt"/>
            <line num="92" count="123" type="stmt"/>
            <line num="93" count="123" type="stmt"/>
            <line num="94" count="123" type="stmt"/>
            <line num="95" count="123" type="stmt"/>
            <line num="96" count="123" type="stmt"/>
            <line num="97" count="123" type="stmt"/>
            <line num="98" count="122" type="stmt"/>
            <line num="99" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,DiscountCurve,DiscountCurve,double,double,double,double,double)" num="114" count="123" type="method"/>
            <line num="115" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double)" num="130" count="4" type="method"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double)" num="146" count="4" type="method"/>
            <line num="148" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="151" count="259" type="method"/>
            <line num="154" count="258" type="stmt"/>
            <line num="155" count="258" type="stmt"/>
            <line num="157" count="258" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="158" count="1302578" type="method"/>
            <line num="161" count="1300119" type="stmt"/>
            <line num="163" count="1297874" type="stmt"/>
            <line num="170" count="1305532" type="stmt"/>
            <line num="179" count="1327219" type="stmt"/>
            <line num="184" count="1329362" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="195" count="258" type="method"/>
            <line num="196" count="258" type="stmt"/>
            <line falsecount="243" truecount="16" num="196" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="205" count="257" type="method"/>
            <line num="206" count="257" type="stmt"/>
            <line falsecount="243" truecount="16" num="206" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : double" num="268" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : double" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : double" num="282" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/models/MertonModel.java" name="MertonModel.java">
            <metrics coveredelements="45" coveredconditionals="4" complexity="20" loc="247" coveredmethods="7" methods="18" elements="67" classes="1" ncloc="120" statements="45" conditionals="4" coveredstatements="34"/>
            <class name="MertonModel">
               <metrics coveredelements="45" coveredconditionals="4" complexity="20" coveredmethods="7" methods="18" elements="67" statements="45" conditionals="4" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double,double)" num="59" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double)" num="87" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double)" num="114" count="2" type="method"/>
            <line num="116" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="119" count="32" type="method"/>
            <line num="121" count="32" type="stmt"/>
            <line num="122" count="32" type="stmt"/>
            <line num="123" count="32" type="stmt"/>
            <line num="124" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="125" count="333044" type="method"/>
            <line num="127" count="338981" type="stmt"/>
            <line num="129" count="339025" type="stmt"/>
            <line num="132" count="344992" type="stmt"/>
            <line num="134" count="358561" type="stmt"/>
            <line num="136" count="359100" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="154" count="32" type="method"/>
            <line num="155" count="32" type="stmt"/>
            <line falsecount="1" truecount="31" num="155" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="164" count="32" type="method"/>
            <line num="165" count="32" type="stmt"/>
            <line falsecount="1" truecount="31" num="165" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : double" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : double" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : double" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/models/VarianceGammaModel.java" name="VarianceGammaModel.java">
            <metrics coveredelements="40" coveredconditionals="4" complexity="18" loc="197" coveredmethods="6" methods="16" elements="60" classes="1" ncloc="101" statements="40" conditionals="4" coveredstatements="30"/>
            <class name="VarianceGammaModel">
               <metrics coveredelements="40" coveredconditionals="4" complexity="18" coveredmethods="6" methods="16" elements="60" statements="40" conditionals="4" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double)" num="47" count="131" type="method"/>
            <line num="49" count="131" type="stmt"/>
            <line num="50" count="131" type="stmt"/>
            <line num="51" count="131" type="stmt"/>
            <line num="52" count="131" type="stmt"/>
            <line num="53" count="130" type="stmt"/>
            <line num="54" count="131" type="stmt"/>
            <line num="55" count="131" type="stmt"/>
            <line num="56" count="131" type="stmt"/>
            <line num="57" count="131" type="stmt"/>
            <line num="58" count="131" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double,double)" num="71" count="3" type="method"/>
            <line num="73" count="3" type="stmt"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="85" count="299" type="method"/>
            <line num="87" count="299" type="stmt"/>
            <line num="88" count="299" type="stmt"/>
            <line num="90" count="299" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="91" count="1485927" type="method"/>
            <line num="93" count="1489804" type="stmt"/>
            <line num="94" count="1491852" type="stmt"/>
            <line num="95" count="1512295" type="stmt"/>
            <line num="96" count="1530845" type="stmt"/>
            <line num="98" count="1526096" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="112" count="299" type="method"/>
            <line num="113" count="299" type="stmt"/>
            <line falsecount="261" truecount="38" num="113" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="122" count="299" type="method"/>
            <line num="123" count="299" type="stmt"/>
            <line falsecount="261" truecount="38" num="123" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.productfactory">
         <metrics coveredelements="74" complexity="48" loc="611" methods="31" classes="12" statements="120" coveredconditionals="12" coveredmethods="15" elements="181" ncloc="336" files="5" conditionals="30" coveredstatements="47"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/productfactory/InterestRateAnalyticProductFactory.java" name="InterestRateAnalyticProductFactory.java">
            <metrics coveredelements="9" coveredconditionals="1" complexity="4" loc="60" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="41" statements="16" conditionals="4" coveredstatements="6"/>
            <class name="InterestRateAnalyticProductFactory">
               <metrics coveredelements="9" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="22" statements="16" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateAnalyticProductFactory(LocalDate)" num="31" count="2" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends InterestRateProductDescriptor&gt;" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="38" type="cond"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/productfactory/InterestRateMonteCarloProductFactory.java" name="InterestRateMonteCarloProductFactory.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="21" loc="240" coveredmethods="5" methods="12" elements="81" classes="4" ncloc="144" statements="53" conditionals="16" coveredstatements="19"/>
            <class name="InterestRateMonteCarloProductFactory">
               <metrics coveredelements="24" coveredconditionals="5" complexity="8" coveredmethods="3" methods="3" elements="39" statements="26" conditionals="10" coveredstatements="16"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwapLegMonteCarlo">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwapMonteCarlo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="25" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwaptionPhysicalMonteCarlo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateMonteCarloProductFactory(LocalDate)" num="46" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends InterestRateProductDescriptor&gt;" num="51" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="54" type="cond"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="constructLiborIndex(String,Schedule) : AbstractIndex" num="88" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="90" type="cond"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="70" num="96" type="cond"/>
            <line num="97" count="70" type="stmt"/>
            <line num="98" count="70" type="stmt"/>
            <line num="100" count="70" type="stmt"/>
            <line num="101" count="70" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLegMonteCarlo(InterestRateSwapLegProductDescriptor,LocalDate)" num="128" count="2" type="method"/>
            <line num="129" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : NotionalFromConstant" num="131" count="140" type="method"/>
            <line num="133" count="140" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwapLegProductDescriptor" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapMonteCarlo(InterestRateSwapProductDescriptor,LocalDate)" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescriptor() : InterestRateSwapProductDescriptor" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionPhysicalMonteCarlo(InterestRateSwaptionProductDescriptor,LocalDate)" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwaptionProductDescriptor" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/productfactory/ProductFactoryCascade.java" name="ProductFactoryCascade.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="84" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="43" statements="21" conditionals="2" coveredstatements="0"/>
            <class name="ProductFactoryCascade">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="28" statements="21" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductFactoryCascade()" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProductFactoryCascade(List&lt;ProductFactory&lt;? extends T&gt;&gt;)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFactoryBefore(ProductFactory&lt;? extends T&gt;) : ProductFactoryCascade&lt;T&gt;" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFactoryAfter(ProductFactory&lt;? extends T&gt;) : ProductFactoryCascade&lt;T&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends T&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/productfactory/SingleAssetFourierProductFactory.java" name="SingleAssetFourierProductFactory.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="8" loc="115" coveredmethods="4" methods="6" elements="25" classes="3" ncloc="54" statements="15" conditionals="4" coveredstatements="11"/>
            <class name="SingleAssetFourierProductFactory">
               <metrics coveredelements="12" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="SingleAssetFourierProductFactory.EuropeanOptionFourierMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SingleAssetFourierProductFactory.DigitalOptionFourierMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetFourierProductFactory(LocalDate)" num="37" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends SingleAssetProductDescriptor&gt;" num="41" count="6" type="method"/>
            <line num="44" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="44" type="cond"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="48" type="cond"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionFourierMethod(SingleAssetEuropeanOptionProductDescriptor,LocalDate)" num="76" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetEuropeanOptionProductDescriptor" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOptionFourierMethod(SingleAssetDigitalOptionProductDescriptor,LocalDate)" num="104" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetDigitalOptionProductDescriptor" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/productfactory/SingleAssetMonteCarloProductFactory.java" name="SingleAssetMonteCarloProductFactory.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="8" loc="112" coveredmethods="4" methods="6" elements="25" classes="3" ncloc="54" statements="15" conditionals="4" coveredstatements="11"/>
            <class name="SingleAssetMonteCarloProductFactory">
               <metrics coveredelements="12" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="SingleAssetMonteCarloProductFactory.EuropeanOptionMonteCarlo">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SingleAssetMonteCarloProductFactory.DigitalOptionMonteCarlo">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetMonteCarloProductFactory(LocalDate)" num="37" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends SingleAssetProductDescriptor&gt;" num="41" count="6" type="method"/>
            <line num="44" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="44" type="cond"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="48" type="cond"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionMonteCarlo(SingleAssetEuropeanOptionProductDescriptor,LocalDate)" num="75" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetEuropeanOptionProductDescriptor" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOptionMonteCarlo(SingleAssetDigitalOptionProductDescriptor,LocalDate)" num="102" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetDigitalOptionProductDescriptor" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process.component.barrier">
         <metrics coveredelements="0" complexity="0" loc="58" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="14" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/component/barrier/Barrier.java" name="Barrier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Barrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/component/barrier/ProcessWithBarrier.java" name="ProcessWithBarrier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProcessWithBarrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.parser">
         <metrics coveredelements="0" complexity="77" loc="675" methods="19" classes="2" statements="195" coveredconditionals="0" coveredmethods="0" elements="272" ncloc="340" files="2" conditionals="58" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/parser/CSVCurveParser.java" name="CSVCurveParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="193" coveredmethods="0" methods="8" elements="64" classes="1" ncloc="94" statements="46" conditionals="10" coveredstatements="0"/>
            <class name="CSVCurveParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="8" elements="64" statements="46" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CSVCurveParser()" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CSVCurveParser(InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSV(File,String,String) : DiscountCurve" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseZIP(File,String,String) : DiscountCurve[]" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolation(InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : void" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDates(Curve[]) : LocalDate[]" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="parseStream(InputStream,String,String) : DiscountCurve" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="readNonEmptyLine(BufferedReader) : String" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/parser/CSVSwaptionParser.java" name="CSVSwaptionParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="59" loc="482" coveredmethods="0" methods="11" elements="208" classes="1" ncloc="246" statements="149" conditionals="48" coveredstatements="0"/>
            <class name="CSVSwaptionParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="59" coveredmethods="0" methods="11" elements="208" statements="149" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CSVSwaptionParser(SchedulePrototype,SchedulePrototype)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CSVSwaptionParser(String[],String[],SchedulePrototype,SchedulePrototype)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFileQuotingConvention(QuotingConvention,double,double) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSV(File,File,LocalDate,String,String,String) : SwaptionDataLattice" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="parseZIP(File,File,String,String,String) : SwaptionDataLattice[]" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="24" visibility="private" signature="parseStreams(InputStream,InputStream,LocalDate,String,String,String) : SwaptionDataLattice" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseZIPToConvention(File,File,String,String,String,QuotingConvention,double,AnalyticModel) : SwaptionDataLattice[]" num="306" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="parseStreamsToConvention(ZipFile,ZipEntry,ZipFile,ZipEntry,LocalDate,String,String,String,QuotingConvention,double,AnalyticModel) : SwaptionDataLattice" num="372" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSVMultiShift(File,File,LocalDate,String,String,String) : Set&lt;SwaptionDataLattice&gt;" num="411" count="0" type="method"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="parseTenorsPerShift(File,String) : Map&lt;Double, Set&lt;String&gt;&gt;" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="443" type="cond"/>
            <line num="445" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDates(SwaptionDataLattice[]) : LocalDate[]" num="479" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.calibration">
         <metrics coveredelements="210" complexity="107" loc="1301" methods="48" classes="6" statements="287" coveredconditionals="34" coveredmethods="22" elements="425" ncloc="614" files="5" conditionals="90" coveredstatements="154"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/calibration/CalibratedCurves.java" name="CalibratedCurves.java">
            <metrics coveredelements="95" coveredconditionals="17" complexity="74" loc="835" coveredmethods="10" methods="30" elements="277" classes="2" ncloc="402" statements="183" conditionals="64" coveredstatements="68"/>
            <class name="CalibratedCurves">
               <metrics coveredelements="81" coveredconditionals="17" complexity="63" coveredmethods="9" methods="23" elements="229" statements="144" conditionals="62" coveredstatements="55"/>
            </class>
            <class name="CalibratedCurves.CalibrationSpec">
               <metrics coveredelements="14" coveredconditionals="0" complexity="11" coveredmethods="1" methods="7" elements="48" statements="39" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 95()" num="95" count="2" type="method"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="142" count="581" type="method"/>
            <line num="153" count="581" type="stmt"/>
            <line num="154" count="581" type="stmt"/>
            <line num="155" count="581" type="stmt"/>
            <line num="156" count="581" type="stmt"/>
            <line num="157" count="581" type="stmt"/>
            <line num="158" count="581" type="stmt"/>
            <line num="159" count="581" type="stmt"/>
            <line num="160" count="581" type="stmt"/>
            <line num="161" count="581" type="stmt"/>
            <line num="162" count="581" type="stmt"/>
            <line num="163" count="581" type="stmt"/>
            <line num="164" count="581" type="stmt"/>
            <line num="165" count="581" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="183" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,double[],String,double,String,String,double)" num="211" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,String,double)" num="246" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneShifted(double) : CalibrationSpec" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbol() : String" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(List&lt;CalibrationSpec&gt;,AnalyticModel,double,double)" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double,double)" num="357" count="7" type="method"/>
            <line num="358" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="358" type="cond"/>
            <line num="359" count="7" type="stmt"/>
            <line num="361" count="7" type="stmt"/>
            <line num="362" count="7" type="stmt"/>
            <line num="364" count="7" type="stmt"/>
            <line num="365" count="581" type="stmt"/>
            <line num="368" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double)" num="391" count="7" type="method"/>
            <line num="392" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols)" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(Collection&lt;CalibrationSpec&gt;)" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[])" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getCalibrationProductForSpec(CalibrationSpec) : AnalyticProduct" num="442" count="664" type="method"/>
            <line num="443" count="664" type="stmt"/>
            <line num="444" count="664" type="stmt"/>
            <line num="449" count="664" type="stmt"/>
            <line falsecount="664" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="457" count="664" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="458" count="1328" type="method"/>
            <line num="460" count="1328" type="stmt"/>
            <line num="463" count="664" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="464" count="1328" type="method"/>
            <line num="466" count="1328" type="stmt"/>
            <line num="469" count="664" type="stmt"/>
            <line falsecount="664" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="472" count="664" type="stmt"/>
            <line falsecount="664" truecount="0" num="472" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="664" type="stmt"/>
            <line falsecount="664" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="478" count="664" type="stmt"/>
            <line falsecount="664" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line num="483" count="664" type="stmt"/>
            <line num="484" count="664" type="stmt"/>
            <line num="486" count="664" type="stmt"/>
            <line num="487" count="664" type="stmt"/>
            <line falsecount="536" truecount="128" num="487" type="cond"/>
            <line num="488" count="128" type="stmt"/>
            <line num="490" count="536" type="stmt"/>
            <line falsecount="416" truecount="120" num="490" type="cond"/>
            <line num="491" count="120" type="stmt"/>
            <line num="493" count="416" type="stmt"/>
            <line falsecount="416" truecount="0" num="493" type="cond"/>
            <line num="495" count="0" type="stmt"/>
            <line num="497" count="416" type="stmt"/>
            <line falsecount="416" truecount="0" num="497" type="cond"/>
            <line num="499" count="0" type="stmt"/>
            <line num="501" count="416" type="stmt"/>
            <line falsecount="0" truecount="416" num="501" type="cond"/>
            <line num="502" count="416" type="stmt"/>
            <line num="503" count="416" type="stmt"/>
            <line num="504" count="416" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="512" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="523" count="664" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AnalyticModel" num="532" count="7" type="method"/>
            <line num="533" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="542" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastNumberOfInterations() : int" num="551" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(String,double) : CalibratedCurves" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="570" type="cond"/>
            <line num="571" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Map&lt;String,Double&gt;) : CalibratedCurves" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Pattern,double) : CalibratedCurves" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="627" type="cond"/>
            <line num="628" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneShiftedForRegExp(String,double) : CalibratedCurves" num="653" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastAccuracy() : double" num="662" count="0" type="method"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCalibrationProductForSymbol(String) : AnalyticProduct" num="674" count="0" type="method"/>
            <line num="681" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="681" type="cond"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="683" type="cond"/>
            <line num="684" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="calibrate(double) : int" num="691" count="7" type="method"/>
            <line num="692" count="7" type="stmt"/>
            <line num="693" count="7" type="stmt"/>
            <line num="695" count="7" type="stmt"/>
            <line num="697" count="7" type="stmt"/>
            <line complexity="4" visibility="private" signature="add(CalibrationSpec) : String" num="706" count="581" type="method"/>
            <line num="708" count="581" type="stmt"/>
            <line num="715" count="581" type="stmt"/>
            <line num="716" count="581" type="stmt"/>
            <line num="721" count="581" type="stmt"/>
            <line num="722" count="581" type="stmt"/>
            <line falsecount="581" truecount="0" num="722" type="cond"/>
            <line num="723" count="0" type="stmt"/>
            <line num="727" count="581" type="stmt"/>
            <line num="730" count="581" type="stmt"/>
            <line num="731" count="581" type="stmt"/>
            <line falsecount="329" truecount="252" num="731" type="cond"/>
            <line num="732" count="252" type="stmt"/>
            <line num="734" count="329" type="stmt"/>
            <line falsecount="0" truecount="329" num="734" type="cond"/>
            <line num="735" count="329" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="742" count="581" type="stmt"/>
            <line num="746" count="581" type="stmt"/>
            <line num="747" count="581" type="stmt"/>
            <line num="749" count="581" type="stmt"/>
            <line complexity="2" visibility="private" signature="createDiscountCurve(String) : DiscountCurve" num="758" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line complexity="18" visibility="private" signature="createForwardCurve(Schedule,String) : String" num="775" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="781" type="cond"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="784" type="cond"/>
            <line num="785" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line num="791" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="794" type="cond"/>
            <line num="795" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="802" type="cond"/>
            <line num="804" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="804" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="815" type="cond"/>
            <line num="824" count="0" type="stmt"/>
            <line num="828" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/calibration/ParameterAggregation.java" name="ParameterAggregation.java">
            <metrics coveredelements="28" coveredconditionals="3" complexity="13" loc="139" coveredmethods="3" methods="9" elements="51" classes="1" ncloc="73" statements="34" conditionals="8" coveredstatements="22"/>
            <class name="ParameterAggregation">
               <metrics coveredelements="28" coveredconditionals="3" complexity="13" coveredmethods="3" methods="9" elements="51" statements="34" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterAggregation()" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(Set&lt;E&gt;)" num="49" count="32" type="method"/>
            <line num="50" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(E[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(E) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : double[]" num="81" count="32" type="method"/>
            <line num="84" count="32" type="stmt"/>
            <line num="85" count="32" type="stmt"/>
            <line num="86" count="46" type="stmt"/>
            <line falsecount="0" truecount="46" num="86" type="cond"/>
            <line num="87" count="46" type="stmt"/>
            <line num="91" count="32" type="stmt"/>
            <line num="94" count="32" type="stmt"/>
            <line num="95" count="32" type="stmt"/>
            <line num="96" count="46" type="stmt"/>
            <line num="97" count="46" type="stmt"/>
            <line falsecount="0" truecount="46" num="97" type="cond"/>
            <line num="98" count="46" type="stmt"/>
            <line num="99" count="46" type="stmt"/>
            <line num="103" count="32" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameter(double[]) : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getObjectsToModifyForParameter(double[]) : Map&lt;E, double[]&gt;" num="120" count="9247" type="method"/>
            <line num="121" count="9249" type="stmt"/>
            <line num="122" count="9247" type="stmt"/>
            <line num="123" count="9249" type="stmt"/>
            <line num="124" count="19851" type="stmt"/>
            <line num="125" count="19841" type="stmt"/>
            <line falsecount="0" truecount="19841" num="125" type="cond"/>
            <line num="127" count="19852" type="stmt"/>
            <line num="128" count="19860" type="stmt"/>
            <line num="129" count="19860" type="stmt"/>
            <line num="132" count="9249" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/calibration/ParameterObject.java" name="ParameterObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/calibration/ParameterTransformation.java" name="ParameterTransformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterTransformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/calibration/Solver.java" name="Solver.java">
            <metrics coveredelements="87" coveredconditionals="14" complexity="20" loc="245" coveredmethods="9" methods="9" elements="97" classes="1" ncloc="127" statements="70" conditionals="18" coveredstatements="64"/>
            <class name="Solver">
               <metrics coveredelements="87" coveredconditionals="14" complexity="20" coveredmethods="9" methods="9" elements="97" statements="70" conditionals="18" coveredstatements="64"/>
            </class>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,OptimizerFactory)" num="61" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,double)" num="83" count="30" type="method"/>
            <line num="84" count="30" type="stmt"/>
            <line num="85" count="30" type="stmt"/>
            <line num="86" count="30" type="stmt"/>
            <line num="87" count="30" type="stmt"/>
            <line num="88" count="30" type="stmt"/>
            <line num="89" count="30" type="stmt"/>
            <line num="90" count="30" type="stmt"/>
            <line num="91" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,double,double)" num="104" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,double,double)" num="117" count="26" type="method"/>
            <line num="118" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;)" num="128" count="13" type="method"/>
            <line num="129" count="13" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCalibratedModel(Set&lt;ParameterObject&gt;) : AnalyticModel" num="143" count="32" type="method"/>
            <line num="144" count="32" type="stmt"/>
            <line num="147" count="32" type="stmt"/>
            <line num="150" count="32" type="stmt"/>
            <line falsecount="32" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="32" type="stmt"/>
            <line num="156" count="32" type="stmt"/>
            <line num="157" count="32" type="stmt"/>
            <line num="158" count="32" type="stmt"/>
            <line num="159" count="32" type="stmt"/>
            <line num="160" count="32" type="stmt"/>
            <line num="161" count="32" type="stmt"/>
            <line num="162" count="32" type="stmt"/>
            <line num="163" count="32" type="stmt"/>
            <line num="164" count="32" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="165" count="9212" type="method"/>
            <line num="167" count="9214" type="stmt"/>
            <line num="168" count="9214" type="stmt"/>
            <line num="169" count="9215" type="stmt"/>
            <line falsecount="9213" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="9217" type="stmt"/>
            <line num="176" count="9211" type="stmt"/>
            <line num="177" count="9207" type="stmt"/>
            <line falsecount="9215" truecount="488137" num="177" type="cond"/>
            <line num="178" count="488103" type="stmt"/>
            <line num="180" count="9216" type="stmt"/>
            <line falsecount="6303" truecount="2913" num="180" type="cond"/>
            <line num="181" count="2913" type="stmt"/>
            <line falsecount="2913" truecount="36766" num="181" type="cond"/>
            <line num="182" count="36761" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="32" type="stmt"/>
            <line falsecount="0" truecount="32" num="191" type="cond"/>
            <line num="192" count="32" type="stmt"/>
            <line num="193" count="32" type="stmt"/>
            <line num="196" count="32" type="stmt"/>
            <line num="197" count="32" type="stmt"/>
            <line num="199" count="32" type="stmt"/>
            <line num="201" count="32" type="stmt"/>
            <line num="202" count="32" type="stmt"/>
            <line falsecount="32" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="32" type="stmt"/>
            <line num="207" count="32" type="stmt"/>
            <line num="209" count="32" type="stmt"/>
            <line num="210" count="32" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="32" type="stmt"/>
            <line num="216" count="32" type="stmt"/>
            <line falsecount="32" truecount="834" num="216" type="cond"/>
            <line num="217" count="834" type="stmt"/>
            <line num="218" count="834" type="stmt"/>
            <line falsecount="782" truecount="52" num="218" type="cond"/>
            <line num="219" count="52" type="stmt"/>
            <line num="221" count="834" type="stmt"/>
            <line num="223" count="32" type="stmt"/>
            <line num="225" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="233" count="22" type="method"/>
            <line num="234" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="242" count="19" type="method"/>
            <line num="243" count="19" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.cds">
         <metrics coveredelements="138" complexity="66" loc="520" methods="23" classes="3" statements="173" coveredconditionals="37" coveredmethods="4" elements="260" ncloc="307" files="1" conditionals="64" coveredstatements="97"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/cds/CDS.java" name="CDS.java">
            <metrics coveredelements="138" coveredconditionals="37" complexity="66" loc="520" coveredmethods="4" methods="23" elements="260" classes="3" ncloc="307" statements="173" conditionals="64" coveredstatements="97"/>
            <class name="CDS">
               <metrics coveredelements="138" coveredconditionals="37" complexity="66" coveredmethods="4" methods="23" elements="260" statements="173" conditionals="64" coveredstatements="97"/>
            </class>
            <class name="CDS.ValuationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CDS.DirtyCleanPrice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CDS(Schedule,String,String,String,String,double,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="70" count="15" type="method"/>
            <line num="83" count="15" type="stmt"/>
            <line num="84" count="15" type="stmt"/>
            <line num="85" count="15" type="stmt"/>
            <line num="86" count="15" type="stmt"/>
            <line num="87" count="15" type="stmt"/>
            <line num="88" count="15" type="stmt"/>
            <line num="89" count="15" type="stmt"/>
            <line num="90" count="15" type="stmt"/>
            <line num="91" count="15" type="stmt"/>
            <line num="92" count="15" type="stmt"/>
            <line num="93" count="15" type="stmt"/>
            <line num="94" count="15" type="stmt"/>
            <line num="95" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(Schedule,String,String,String,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="111" count="15" type="method"/>
            <line num="112" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(Schedule,String,String,String,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(ScheduleFromPeriods,String,String,String,String,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(ScheduleFromPeriods,String,String,String,String,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="29" visibility="public" signature="getValue(double,AnalyticModel) : double" num="177" count="525" type="method"/>
            <line num="180" count="525" type="stmt"/>
            <line falsecount="525" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="525" type="stmt"/>
            <line num="185" count="524" type="stmt"/>
            <line falsecount="525" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="190" count="524" type="stmt"/>
            <line num="191" count="524" type="stmt"/>
            <line falsecount="524" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="524" type="stmt"/>
            <line num="196" count="524" type="stmt"/>
            <line falsecount="525" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="524" type="stmt"/>
            <line num="201" count="524" type="stmt"/>
            <line falsecount="524" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="205" count="523" type="stmt"/>
            <line num="206" count="523" type="stmt"/>
            <line num="210" count="525" type="stmt"/>
            <line num="211" count="525" type="stmt"/>
            <line num="212" count="524" type="stmt"/>
            <line falsecount="522" truecount="3103" num="212" type="cond"/>
            <line num="213" count="3105" type="stmt"/>
            <line num="215" count="522" type="stmt"/>
            <line falsecount="522" truecount="1559" num="215" type="cond"/>
            <line num="216" count="1559" type="stmt"/>
            <line num="217" count="1557" type="stmt"/>
            <line num="219" count="522" type="stmt"/>
            <line num="220" count="523" type="stmt"/>
            <line num="222" count="524" type="stmt"/>
            <line num="224" count="524" type="stmt"/>
            <line num="226" count="524" type="stmt"/>
            <line falsecount="523" truecount="1555" num="226" type="cond"/>
            <line num="229" count="1557" type="stmt"/>
            <line falsecount="1557" truecount="0" num="229" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="1559" type="stmt"/>
            <line num="238" count="1554" type="stmt"/>
            <line num="241" count="1548" type="stmt"/>
            <line falsecount="1038" truecount="523" num="241" type="cond"/>
            <line num="242" count="522" type="stmt"/>
            <line num="245" count="1559" type="stmt"/>
            <line falsecount="1045" truecount="525" num="245" type="cond"/>
            <line num="246" count="525" type="stmt"/>
            <line num="250" count="1564" type="stmt"/>
            <line falsecount="525" truecount="1044" num="250" type="cond"/>
            <line num="252" count="1564" type="stmt"/>
            <line falsecount="0" truecount="1564" num="252" type="cond"/>
            <line num="253" count="1534" type="stmt"/>
            <line falsecount="0" truecount="1535" num="253" type="cond"/>
            <line num="255" count="1539" type="stmt"/>
            <line falsecount="0" truecount="1537" num="255" type="cond"/>
            <line num="256" count="1547" type="stmt"/>
            <line falsecount="0" truecount="1550" num="256" type="cond"/>
            <line num="259" count="1551" type="stmt"/>
            <line num="260" count="1551" type="stmt"/>
            <line falsecount="1551" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="1553" type="stmt"/>
            <line num="267" count="1553" type="stmt"/>
            <line num="268" count="1549" type="stmt"/>
            <line num="269" count="1547" type="stmt"/>
            <line num="270" count="1544" type="stmt"/>
            <line num="271" count="1550" type="stmt"/>
            <line num="274" count="1568" type="stmt"/>
            <line num="275" count="525" type="stmt"/>
            <line num="276" count="525" type="stmt"/>
            <line num="277" count="525" type="stmt"/>
            <line num="278" count="525" type="stmt"/>
            <line num="279" count="520" type="stmt"/>
            <line num="280" count="519" type="stmt"/>
            <line falsecount="520" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="302" count="515" type="stmt"/>
            <line num="303" count="520" type="stmt"/>
            <line num="304" count="520" type="stmt"/>
            <line num="306" count="520" type="stmt"/>
            <line num="307" count="525" type="stmt"/>
            <line num="308" count="525" type="stmt"/>
            <line falsecount="525" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="328" count="525" type="stmt"/>
            <line num="329" count="525" type="stmt"/>
            <line num="331" count="525" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="337" count="522" type="stmt"/>
            <line complexity="12" visibility="public" signature="getConventionalSpread(double,AnalyticModel) : double" num="349" count="3" type="method"/>
            <line num="351" count="3" type="stmt"/>
            <line num="352" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="3" type="stmt"/>
            <line num="357" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="3" type="stmt"/>
            <line num="362" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="3" type="stmt"/>
            <line num="367" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="371" count="3" type="stmt"/>
            <line num="372" count="3" type="stmt"/>
            <line num="374" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="374" type="cond"/>
            <line num="376" count="15" type="stmt"/>
            <line num="377" count="15" type="stmt"/>
            <line num="379" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="379" type="cond"/>
            <line num="380" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="380" type="cond"/>
            <line num="382" count="15" type="stmt"/>
            <line num="384" count="15" type="stmt"/>
            <line num="385" count="15" type="stmt"/>
            <line falsecount="3" truecount="12" num="385" type="cond"/>
            <line num="386" count="12" type="stmt"/>
            <line num="389" count="15" type="stmt"/>
            <line falsecount="3" truecount="12" num="389" type="cond"/>
            <line num="391" count="15" type="stmt"/>
            <line num="394" count="3" type="stmt"/>
            <line num="396" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFeePayment(int,AnalyticModel) : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="415" type="cond"/>
            <line num="416" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedFee(LocalDate,AnalyticModel) : double" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedFee(double,AnalyticModelFromCurvesAndVols) : double" num="444" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="453" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="457" count="0" type="method"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbabilityCurveName() : String" num="461" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecoveryRateCurveName() : String" num="465" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedFee() : double" num="469" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingFeeSpread() : double" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpfrontPayment() : double" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTradeDate() : LocalDate" num="481" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuationModel() : ValuationModel" num="483" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDirtyCleanPrice() : DirtyCleanPrice" num="485" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseFinerDiscretization() : boolean" num="487" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.data">
         <metrics coveredelements="405" complexity="191" loc="1852" methods="97" classes="10" statements="582" coveredconditionals="70" coveredmethods="61" elements="819" ncloc="1093" files="7" conditionals="140" coveredstatements="274"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/data/DataTable.java" name="DataTable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="193" coveredmethods="0" methods="1" elements="18" classes="2" ncloc="55" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="DataTable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="18" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DataTable.TableConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="exportTable(DataTable) : Map&lt;String, Object&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/data/DataTableBasic.java" name="DataTableBasic.java">
            <metrics coveredelements="140" coveredconditionals="20" complexity="47" loc="366" coveredmethods="25" methods="29" elements="180" classes="2" ncloc="254" statements="123" conditionals="28" coveredstatements="95"/>
            <class name="DataTableBasic">
               <metrics coveredelements="110" coveredconditionals="15" complexity="33" coveredmethods="20" methods="23" elements="131" statements="88" conditionals="20" coveredstatements="75"/>
            </class>
            <class name="DataTableBasic.DoubleKey">
               <metrics coveredelements="30" coveredconditionals="5" complexity="14" coveredmethods="5" methods="6" elements="49" statements="35" conditionals="8" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="upgradeDataTableLight(DataTableLight,LocalDate,SchedulePrototype) : DataTableBasic" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="10" type="stmt"/>
            <line num="43" count="160" type="stmt"/>
            <line num="44" count="160" type="stmt"/>
            <line num="45" count="160" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype)" num="71" count="986" type="method"/>
            <line num="72" count="986" type="stmt"/>
            <line num="73" count="987" type="stmt"/>
            <line num="74" count="987" type="stmt"/>
            <line num="75" count="987" type="stmt"/>
            <line complexity="2" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="89" count="919" type="method"/>
            <line num="91" count="919" type="stmt"/>
            <line num="92" count="919" type="stmt"/>
            <line falsecount="920" truecount="6073" num="92" type="cond"/>
            <line num="93" count="6075" type="stmt"/>
            <line num="94" count="6069" type="stmt"/>
            <line num="95" count="6073" type="stmt"/>
            <line complexity="2" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="110" count="64" type="method"/>
            <line num="112" count="64" type="stmt"/>
            <line num="113" count="64" type="stmt"/>
            <line falsecount="64" truecount="1600" num="113" type="cond"/>
            <line num="114" count="1600" type="stmt"/>
            <line num="115" count="1600" type="stmt"/>
            <line num="116" count="1600" type="stmt"/>
            <line num="118" count="1600" type="stmt"/>
            <line num="119" count="1600" type="stmt"/>
            <line num="120" count="1600" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(int,int,double) : DataTable" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addPoints(int[],int[],double[]) : DataTable" num="133" count="15" type="method"/>
            <line num="135" count="15" type="stmt"/>
            <line num="136" count="15" type="stmt"/>
            <line falsecount="15" truecount="75" num="136" type="cond"/>
            <line num="137" count="75" type="stmt"/>
            <line num="138" count="75" type="stmt"/>
            <line num="139" count="75" type="stmt"/>
            <line num="141" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(int,int) : double" num="144" count="3060347" type="method"/>
            <line num="146" count="3060797" type="stmt"/>
            <line num="147" count="3054190" type="stmt"/>
            <line falsecount="5" truecount="3055423" num="147" type="cond"/>
            <line num="148" count="3056320" type="stmt"/>
            <line num="150" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,double) : double" num="154" count="32574928" type="method"/>
            <line num="156" count="32608916" type="stmt"/>
            <line num="157" count="32537589" type="stmt"/>
            <line falsecount="5" truecount="32510273" num="157" type="cond"/>
            <line num="158" count="32531300" type="stmt"/>
            <line num="160" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="164" count="253902" type="method"/>
            <line num="166" count="253901" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int) : boolean" num="169" count="870322" type="method"/>
            <line num="171" count="870335" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(double,double) : boolean" num="174" count="33428853" type="method"/>
            <line num="176" count="33441922" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : TreeSet&lt;Integer&gt;" num="179" count="1672120" type="method"/>
            <line num="181" count="1672283" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTerminations() : TreeSet&lt;Integer&gt;" num="184" count="507584" type="method"/>
            <line num="186" count="507590" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTerminationsForMaturity(int) : TreeSet&lt;Integer&gt;" num="189" count="612739" type="method"/>
            <line num="191" count="612734" type="stmt"/>
            <line falsecount="0" truecount="612737" num="191" type="cond"/>
            <line num="192" count="612737" type="stmt"/>
            <line num="193" count="612737" type="stmt"/>
            <line num="194" count="3058668" type="stmt"/>
            <line falsecount="0" truecount="3051598" num="194" type="cond"/>
            <line num="195" count="3053111" type="stmt"/>
            <line num="198" count="612566" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMaturitiesForTermination(int) : TreeSet&lt;Integer&gt;" num="204" count="2" type="method"/>
            <line num="206" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="206" type="cond"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="209" type="cond"/>
            <line num="210" count="20" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="219" count="31" type="method"/>
            <line num="221" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="224" count="31" type="method"/>
            <line num="226" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : TableConvention" num="229" count="866153" type="method"/>
            <line num="231" count="866192" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheduleMetaData() : SchedulePrototype" num="234" count="31" type="method"/>
            <line num="236" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableBasic" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="248" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(double) : String" num="253" count="13" type="method"/>
            <line num="254" count="13" type="stmt"/>
            <line num="255" count="13" type="stmt"/>
            <line num="256" count="13" type="stmt"/>
            <line num="257" count="98" type="stmt"/>
            <line num="259" count="13" type="stmt"/>
            <line num="260" count="80" type="stmt"/>
            <line num="261" count="80" type="stmt"/>
            <line num="262" count="730" type="stmt"/>
            <line num="263" count="730" type="stmt"/>
            <line num="264" count="730" type="stmt"/>
            <line falsecount="0" truecount="730" num="264" type="cond"/>
            <line num="265" count="730" type="stmt"/>
            <line num="270" count="13" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getValue(DoubleKey) : double" num="273" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="DoubleKey(int,int)" num="296" count="10037411" type="method"/>
            <line num="297" count="10042753" type="stmt"/>
            <line num="298" count="10042980" type="stmt"/>
            <line num="299" count="10036350" type="stmt"/>
            <line num="300" count="9980213" type="stmt"/>
            <line num="301" count="9974337" type="stmt"/>
            <line complexity="1" visibility="protected" signature="DoubleKey(double,double)" num="310" count="97948230" type="method"/>
            <line num="311" count="98017959" type="stmt"/>
            <line num="312" count="98065817" type="stmt"/>
            <line complexity="5" visibility="private" signature="dateFromOffset(LocalDate,int) : LocalDate" num="315" count="20057632" type="method"/>
            <line num="316" count="20067739" type="stmt"/>
            <line num="317" count="20076316" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="20082619" type="stmt"/>
            <line num="322" count="20090303" type="stmt"/>
            <line num="323" count="20099593" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="20102887" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="336" count="131511039" type="method"/>
            <line num="338" count="131613888" type="stmt"/>
            <line falsecount="131673976" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="131724583" type="stmt"/>
            <line falsecount="131773456" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="131835823" type="stmt"/>
            <line falsecount="131909075" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="131972137" type="stmt"/>
            <line falsecount="105817267" truecount="26285899" num="349" type="cond"/>
            <line num="350" count="26286534" type="stmt"/>
            <line num="352" count="105890393" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="355" count="107114706" type="method"/>
            <line num="357" count="107258541" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/data/DataTableExtrapolated.java" name="DataTableExtrapolated.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="8" elements="54" classes="1" ncloc="70" statements="44" conditionals="2" coveredstatements="0"/>
            <class name="DataTableExtrapolated">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="54" statements="44" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype)" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int) : double" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableExtrapolated" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/data/DataTableInterpolated.java" name="DataTableInterpolated.java">
            <metrics coveredelements="87" coveredconditionals="17" complexity="22" loc="212" coveredmethods="8" methods="9" elements="102" classes="1" ncloc="125" statements="75" conditionals="18" coveredstatements="62"/>
            <class name="DataTableInterpolated">
               <metrics coveredelements="87" coveredconditionals="17" complexity="22" coveredmethods="8" methods="9" elements="102" statements="75" conditionals="18" coveredstatements="62"/>
            </class>
            <line complexity="1" visibility="public" signature="interpolateDataTable(DataTableBasic) : DataTableInterpolated" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line num="44" count="160" type="stmt"/>
            <line num="45" count="160" type="stmt"/>
            <line num="46" count="160" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="82" count="25" type="method"/>
            <line num="84" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="98" count="11" type="method"/>
            <line num="100" count="11" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(int,int) : double" num="103" count="59311" type="method"/>
            <line num="105" count="59305" type="stmt"/>
            <line falsecount="58939" truecount="371" num="105" type="cond"/>
            <line num="106" count="371" type="stmt"/>
            <line num="110" count="58936" type="stmt"/>
            <line falsecount="4" truecount="58935" num="110" type="cond"/>
            <line num="112" count="58933" type="stmt"/>
            <line num="113" count="58938" type="stmt"/>
            <line num="115" count="58937" type="stmt"/>
            <line falsecount="58936" truecount="294704" num="115" type="cond"/>
            <line num="116" count="294706" type="stmt"/>
            <line num="119" count="58936" type="stmt"/>
            <line num="120" count="58938" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="122" type="cond"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="127" type="cond"/>
            <line num="128" count="20" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="143" type="cond"/>
            <line num="144" count="20" type="stmt"/>
            <line falsecount="20" truecount="320" num="144" type="cond"/>
            <line num="145" count="320" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="156" count="2675040" type="method"/>
            <line num="158" count="2675174" type="stmt"/>
            <line falsecount="58928" truecount="2615965" num="158" type="cond"/>
            <line num="159" count="2616160" type="stmt"/>
            <line num="163" count="58928" type="stmt"/>
            <line num="164" count="58932" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="58930" type="stmt"/>
            <line num="166" count="58930" type="stmt"/>
            <line num="166" count="58932" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="173" count="58928" type="stmt"/>
            <line num="174" count="58932" type="stmt"/>
            <line num="176" count="58931" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableInterpolated" num="179" count="2" type="method"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="10" type="stmt"/>
            <line num="189" count="50" type="stmt"/>
            <line num="190" count="50" type="stmt"/>
            <line num="191" count="50" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="198" count="3" type="method"/>
            <line num="200" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="203" count="3" type="method"/>
            <line num="205" count="3" type="stmt"/>
            <line num="206" count="3" type="stmt"/>
            <line num="207" count="3" type="stmt"/>
            <line num="209" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/data/DataTableLight.java" name="DataTableLight.java">
            <metrics coveredelements="92" coveredconditionals="17" complexity="42" loc="297" coveredmethods="18" methods="25" elements="144" classes="2" ncloc="202" statements="89" conditionals="30" coveredstatements="57"/>
            <class name="DataTableLight">
               <metrics coveredelements="73" coveredconditionals="12" complexity="34" coveredmethods="14" methods="21" elements="119" statements="76" conditionals="22" coveredstatements="47"/>
            </class>
            <class name="DataTableLight.DataKey">
               <metrics coveredelements="19" coveredconditionals="5" complexity="8" coveredmethods="4" methods="4" elements="25" statements="13" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="DataTableLight(String,TableConvention)" num="36" count="262" type="method"/>
            <line num="37" count="262" type="stmt"/>
            <line num="38" count="262" type="stmt"/>
            <line complexity="4" visibility="public" signature="DataTableLight(String,TableConvention,int[],int[],double[])" num="50" count="11" type="method"/>
            <line num="51" count="11" type="stmt"/>
            <line num="53" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="11" type="stmt"/>
            <line falsecount="11" truecount="275" num="58" type="cond"/>
            <line num="59" count="275" type="stmt"/>
            <line num="60" count="275" type="stmt"/>
            <line num="61" count="275" type="stmt"/>
            <line complexity="4" visibility="public" signature="DataTableLight(String,TableConvention,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="74" count="251" type="method"/>
            <line num="75" count="251" type="stmt"/>
            <line num="77" count="251" type="stmt"/>
            <line falsecount="251" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="251" type="stmt"/>
            <line falsecount="251" truecount="6384" num="82" type="cond"/>
            <line num="83" count="6384" type="stmt"/>
            <line num="84" count="6384" type="stmt"/>
            <line num="85" count="6384" type="stmt"/>
            <line num="87" count="6384" type="stmt"/>
            <line num="88" count="6384" type="stmt"/>
            <line num="89" count="6384" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(int,int,double) : DataTableLight" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addPoints(int[],int[],double[]) : DataTableLight" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(int,int) : double" num="113" count="8108" type="method"/>
            <line num="115" count="8108" type="stmt"/>
            <line num="116" count="8108" type="stmt"/>
            <line falsecount="5" truecount="8103" num="116" type="cond"/>
            <line num="117" count="8103" type="stmt"/>
            <line num="119" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int) : boolean" num="123" count="7150" type="method"/>
            <line num="125" count="7150" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : TreeSet&lt;Integer&gt;" num="128" count="212" type="method"/>
            <line num="130" count="212" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTerminations() : TreeSet&lt;Integer&gt;" num="133" count="34" type="method"/>
            <line num="135" count="34" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTerminationsForMaturity(int) : TreeSet&lt;Integer&gt;" num="138" count="890" type="method"/>
            <line num="140" count="890" type="stmt"/>
            <line falsecount="0" truecount="890" num="140" type="cond"/>
            <line num="141" count="890" type="stmt"/>
            <line num="142" count="890" type="stmt"/>
            <line num="143" count="4560" type="stmt"/>
            <line falsecount="0" truecount="4560" num="143" type="cond"/>
            <line num="144" count="4560" type="stmt"/>
            <line num="147" count="890" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMaturitiesForTermination(int) : TreeSet&lt;Integer&gt;" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="168" count="7" type="method"/>
            <line num="170" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : TableConvention" num="173" count="4" type="method"/>
            <line num="175" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableLight" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="187" count="41" type="method"/>
            <line num="189" count="41" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(double) : String" num="198" count="41" type="method"/>
            <line num="199" count="41" type="stmt"/>
            <line num="200" count="41" type="stmt"/>
            <line num="201" count="41" type="stmt"/>
            <line num="202" count="216" type="stmt"/>
            <line num="204" count="41" type="stmt"/>
            <line num="205" count="210" type="stmt"/>
            <line num="206" count="210" type="stmt"/>
            <line num="207" count="1160" type="stmt"/>
            <line num="208" count="1160" type="stmt"/>
            <line num="209" count="1160" type="stmt"/>
            <line falsecount="4" truecount="1156" num="209" type="cond"/>
            <line num="210" count="1156" type="stmt"/>
            <line num="215" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="218" count="81" type="method"/>
            <line num="220" count="81" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(int,int)" num="242" count="35740" type="method"/>
            <line num="243" count="35740" type="stmt"/>
            <line num="244" count="35740" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="247" count="49799" type="method"/>
            <line num="249" count="49799" type="stmt"/>
            <line falsecount="49799" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="253" count="49799" type="stmt"/>
            <line falsecount="49799" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="49799" type="stmt"/>
            <line falsecount="49799" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="260" count="49799" type="stmt"/>
            <line falsecount="30195" truecount="19604" num="260" type="cond"/>
            <line num="261" count="19604" type="stmt"/>
            <line num="263" count="30195" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="266" count="36896" type="method"/>
            <line num="268" count="36896" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="271" count="5" type="method"/>
            <line num="273" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double) : double" num="277" count="6" type="method"/>
            <line num="279" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(double,double) : boolean" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheduleMetaData() : SchedulePrototype" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/data/DataTableLinear.java" name="DataTableLinear.java">
            <metrics coveredelements="86" coveredconditionals="16" complexity="26" loc="210" coveredmethods="10" methods="10" elements="108" classes="1" ncloc="126" statements="78" conditionals="20" coveredstatements="60"/>
            <class name="DataTableLinear">
               <metrics coveredelements="86" coveredconditionals="16" complexity="26" coveredmethods="10" methods="10" elements="108" statements="78" conditionals="20" coveredstatements="60"/>
            </class>
            <line complexity="1" visibility="public" signature="interpolateDataTable(DataTableBasic) : DataTableLinear" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line num="44" count="160" type="stmt"/>
            <line num="45" count="160" type="stmt"/>
            <line num="46" count="160" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype)" num="62" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="78" count="894" type="method"/>
            <line num="80" count="894" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="94" count="53" type="method"/>
            <line num="96" count="53" type="stmt"/>
            <line complexity="4" visibility="private" signature="initInterpolator() : void" num="99" count="253773" type="method"/>
            <line num="100" count="253774" type="stmt"/>
            <line falsecount="37" truecount="253737" num="100" type="cond"/>
            <line num="101" count="253737" type="stmt"/>
            <line num="104" count="37" type="stmt"/>
            <line num="105" count="37" type="stmt"/>
            <line num="106" count="37" type="stmt"/>
            <line num="107" count="37" type="stmt"/>
            <line falsecount="37" truecount="190" num="107" type="cond"/>
            <line num="108" count="190" type="stmt"/>
            <line falsecount="190" truecount="1060" num="108" type="cond"/>
            <line num="109" count="1060" type="stmt"/>
            <line num="112" count="37" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(int,int) : double" num="115" count="810968" type="method"/>
            <line num="117" count="811004" type="stmt"/>
            <line falsecount="806453" truecount="3815" num="117" type="cond"/>
            <line num="118" count="3815" type="stmt"/>
            <line num="122" count="806532" type="stmt"/>
            <line falsecount="253773" truecount="553567" num="122" type="cond"/>
            <line num="124" count="553584" type="stmt"/>
            <line num="125" count="553599" type="stmt"/>
            <line num="127" count="553598" type="stmt"/>
            <line falsecount="553169" truecount="2758672" num="127" type="cond"/>
            <line num="128" count="2759644" type="stmt"/>
            <line num="131" count="553233" type="stmt"/>
            <line num="132" count="553602" type="stmt"/>
            <line num="134" count="253773" type="stmt"/>
            <line falsecount="253771" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="253771" type="stmt"/>
            <line falsecount="253771" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="253773" type="stmt"/>
            <line num="151" count="253765" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="155" count="30730503" type="method"/>
            <line num="157" count="30750026" type="stmt"/>
            <line falsecount="807074" truecount="29921168" num="157" type="cond"/>
            <line num="158" count="29947507" type="stmt"/>
            <line num="162" count="807137" type="stmt"/>
            <line num="163" count="807160" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="807012" type="stmt"/>
            <line num="165" count="807016" type="stmt"/>
            <line num="165" count="807048" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="807064" type="stmt"/>
            <line num="173" count="807106" type="stmt"/>
            <line num="175" count="807118" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableLinear" num="178" count="27" type="method"/>
            <line num="181" count="27" type="stmt"/>
            <line num="182" count="27" type="stmt"/>
            <line num="183" count="27" type="stmt"/>
            <line num="185" count="27" type="stmt"/>
            <line num="186" count="27" type="stmt"/>
            <line num="187" count="90" type="stmt"/>
            <line num="188" count="450" type="stmt"/>
            <line num="189" count="450" type="stmt"/>
            <line num="190" count="450" type="stmt"/>
            <line num="194" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="197" count="9" type="method"/>
            <line num="199" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="202" count="9" type="method"/>
            <line num="204" count="9" type="stmt"/>
            <line num="205" count="9" type="stmt"/>
            <line num="206" count="9" type="stmt"/>
            <line num="208" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/data/ErrorEstimation.java" name="ErrorEstimation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="441" coveredmethods="0" methods="15" elements="213" classes="1" ncloc="261" statements="156" conditionals="42" coveredstatements="0"/>
            <class name="ErrorEstimation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="40" coveredmethods="0" methods="15" elements="213" statements="156" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ErrorEstimation(LocalDate,SchedulePrototype,SchedulePrototype,AnnuityMappingType,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,String,String,String,double,double,int)" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate(SwaptionDataLattice,VolatilityCubeModel) : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="evaluateTenor(int,int,VolatilityCubeModel) : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashAverageError() : double" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashMaxError() : double" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashAverageErrorPercent() : double" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashMaxErrorPercent() : double" num="281" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalAverageError() : double" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalMaxError() : double" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalAverageErrorPercent() : double" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="327" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalMaxErrorPercent() : double" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashAverageError(int,int,VolatilityCubeModel) : double" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashMaxError(int,int,VolatilityCubeModel) : double" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashAverageErrorPercent(int,int,VolatilityCubeModel) : double" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashMaxErrorPercent(int,int,VolatilityCubeModel) : double" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.curves">
         <metrics coveredelements="8" complexity="6" loc="69" methods="5" classes="1" statements="9" coveredconditionals="1" coveredmethods="2" elements="16" ncloc="35" files="1" conditionals="2" coveredstatements="5"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/curves/ExponentialCorrelationCurve.java" name="ExponentialCorrelationCurve.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="6" loc="69" coveredmethods="2" methods="5" elements="16" classes="1" ncloc="35" statements="9" conditionals="2" coveredstatements="5"/>
            <class name="ExponentialCorrelationCurve">
               <metrics coveredelements="8" coveredconditionals="1" complexity="6" coveredmethods="2" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialCorrelationCurve(String,LocalDate,double,double)" num="38" count="447046" type="method"/>
            <line num="39" count="447028" type="stmt"/>
            <line num="41" count="447073" type="stmt"/>
            <line num="42" count="447091" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(AnalyticModel,double) : double" num="45" count="447045" type="method"/>
            <line num="47" count="447062" type="stmt"/>
            <line falsecount="447063" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="447065" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.crosscurrency">
         <metrics coveredelements="0" complexity="0" loc="68" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="13" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/crosscurrency/CrossCurrencyTermStructureMonteCarloSimulationModel.java" name="CrossCurrencyTermStructureMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="68" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CrossCurrencyTermStructureMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.interpolation">
         <metrics coveredelements="257" complexity="80" loc="691" methods="20" classes="5" statements="254" coveredconditionals="62" coveredmethods="16" elements="362" ncloc="421" files="2" conditionals="88" coveredstatements="179"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/interpolation/BiLinearInterpolation.java" name="BiLinearInterpolation.java">
            <metrics coveredelements="34" coveredconditionals="8" complexity="7" loc="78" coveredmethods="3" methods="3" elements="34" classes="1" ncloc="46" statements="23" conditionals="8" coveredstatements="23"/>
            <class name="BiLinearInterpolation">
               <metrics coveredelements="34" coveredconditionals="8" complexity="7" coveredmethods="3" methods="3" elements="34" statements="23" conditionals="8" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="BiLinearInterpolation(double[],double[],double[][])" num="33" count="38" type="method"/>
            <line num="34" count="38" type="stmt"/>
            <line num="35" count="38" type="stmt"/>
            <line num="36" count="38" type="stmt"/>
            <line num="37" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double,Double) : Double" num="40" count="253766" type="method"/>
            <line num="42" count="253769" type="stmt"/>
            <line complexity="5" visibility="package" signature="getValue(double,double) : double" num="45" count="257910" type="method"/>
            <line num="46" count="257908" type="stmt"/>
            <line num="47" count="257909" type="stmt"/>
            <line falsecount="249844" truecount="8067" num="47" type="cond"/>
            <line num="48" count="8067" type="stmt"/>
            <line num="50" count="257910" type="stmt"/>
            <line num="51" count="257910" type="stmt"/>
            <line num="53" count="257910" type="stmt"/>
            <line num="54" count="257913" type="stmt"/>
            <line falsecount="59" truecount="257849" num="54" type="cond"/>
            <line num="55" count="257848" type="stmt"/>
            <line num="57" count="257911" type="stmt"/>
            <line num="58" count="257910" type="stmt"/>
            <line num="60" count="257910" type="stmt"/>
            <line falsecount="235889" truecount="22022" num="60" type="cond"/>
            <line num="61" count="22022" type="stmt"/>
            <line num="63" count="257909" type="stmt"/>
            <line falsecount="257648" truecount="262" num="63" type="cond"/>
            <line num="64" count="262" type="stmt"/>
            <line num="67" count="257912" type="stmt"/>
            <line num="68" count="257911" type="stmt"/>
            <line num="70" count="257910" type="stmt"/>
            <line num="76" count="257908" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/interpolation/RationalFunctionInterpolation.java" name="RationalFunctionInterpolation.java">
            <metrics coveredelements="223" coveredconditionals="54" complexity="73" loc="613" coveredmethods="13" methods="17" elements="328" classes="4" ncloc="375" statements="231" conditionals="80" coveredstatements="156"/>
            <class name="RationalFunctionInterpolation">
               <metrics coveredelements="207" coveredconditionals="53" complexity="69" coveredmethods="10" methods="14" elements="306" statements="214" conditionals="78" coveredstatements="144"/>
            </class>
            <class name="RationalFunctionInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.RationalFunction">
               <metrics coveredelements="16" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="22" statements="17" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="package" signature="RationalFunction(double[],double[])" num="90" count="2641073" type="method"/>
            <line num="91" count="2639436" type="stmt"/>
            <line num="92" count="2643640" type="stmt"/>
            <line num="93" count="2644558" type="stmt"/>
            <line complexity="1" visibility="package" signature="RationalFunction(double[])" num="101" count="2634451" type="method"/>
            <line num="102" count="2633251" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double) : double" num="111" count="2526268" type="method"/>
            <line num="113" count="2528137" type="stmt"/>
            <line num="114" count="2528143" type="stmt"/>
            <line num="115" count="2528147" type="stmt"/>
            <line num="117" count="2527936" type="stmt"/>
            <line num="118" count="5065054" type="stmt"/>
            <line num="119" count="5064553" type="stmt"/>
            <line num="122" count="2527290" type="stmt"/>
            <line falsecount="0" truecount="2526230" num="122" type="cond"/>
            <line num="123" count="2521125" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],double[])" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],double[],InterpolationMethod,ExtrapolationMethod)" num="161" count="3266705" type="method"/>
            <line num="162" count="3266675" type="stmt"/>
            <line num="163" count="3266704" type="stmt"/>
            <line num="164" count="3266717" type="stmt"/>
            <line num="165" count="3266740" type="stmt"/>
            <line num="166" count="3266735" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double) : double" num="184" count="51622057" type="method"/>
            <line num="186" count="51624021" type="stmt"/>
            <line num="187" count="51648878" type="stmt"/>
            <line falsecount="48382380" truecount="3266801" num="187" type="cond"/>
            <line num="188" count="3266800" type="stmt"/>
            <line num="193" count="51648095" type="stmt"/>
            <line num="194" count="51646053" type="stmt"/>
            <line falsecount="50803356" truecount="841752" num="194" type="cond"/>
            <line num="195" count="841748" type="stmt"/>
            <line num="198" count="50802990" type="stmt"/>
            <line num="201" count="50797944" type="stmt"/>
            <line falsecount="50792155" truecount="711" num="201" type="cond"/>
            <line num="203" count="711" type="stmt"/>
            <line falsecount="10" truecount="701" num="203" type="cond"/>
            <line num="204" count="701" type="stmt"/>
            <line num="205" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="205" type="cond"/>
            <line num="206" count="10" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="50794084" type="stmt"/>
            <line falsecount="2525142" truecount="48268925" num="211" type="cond"/>
            <line num="213" count="48268735" type="stmt"/>
            <line falsecount="117" truecount="48267461" num="213" type="cond"/>
            <line num="214" count="48274387" type="stmt"/>
            <line num="215" count="117" type="stmt"/>
            <line falsecount="0" truecount="117" num="215" type="cond"/>
            <line num="216" count="117" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="2526678" type="stmt"/>
            <line num="225" count="2527761" type="stmt"/>
            <line complexity="10" visibility="private" signature="doCreateRationalFunctions() : void" num="228" count="3266639" type="method"/>
            <line num="230" count="3266637" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="36442" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="36442" type="stmt"/>
            <line num="240" count="36426" type="stmt"/>
            <line num="241" count="3229585" type="stmt"/>
            <line num="242" count="3229606" type="stmt"/>
            <line num="243" count="3229244" type="stmt"/>
            <line num="244" count="32" type="stmt"/>
            <line num="245" count="32" type="stmt"/>
            <line num="246" count="32" type="stmt"/>
            <line num="247" count="32" type="stmt"/>
            <line num="248" count="32" type="stmt"/>
            <line num="249" count="32" type="stmt"/>
            <line num="250" count="532" type="stmt"/>
            <line num="251" count="532" type="stmt"/>
            <line num="252" count="532" type="stmt"/>
            <line num="253" count="27" type="stmt"/>
            <line num="254" count="27" type="stmt"/>
            <line num="255" count="27" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForPiecewiseConstantInterpolation() : void" num="259" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForLinearInterpolation() : void" num="278" count="36437" type="method"/>
            <line num="280" count="36435" type="stmt"/>
            <line falsecount="36435" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="287" count="36436" type="stmt"/>
            <line num="290" count="36442" type="stmt"/>
            <line falsecount="36425" truecount="604733" num="290" type="cond"/>
            <line num="291" count="604769" type="stmt"/>
            <line num="293" count="604954" type="stmt"/>
            <line num="294" count="604956" type="stmt"/>
            <line num="296" count="604992" type="stmt"/>
            <line num="297" count="604994" type="stmt"/>
            <line num="299" count="605056" type="stmt"/>
            <line num="300" count="605126" type="stmt"/>
            <line num="302" count="605129" type="stmt"/>
            <line complexity="5" visibility="private" signature="doCreateRationalFunctionsForCubicSplineInterpolation() : void" num="306" count="3229605" type="method"/>
            <line num="308" count="3229645" type="stmt"/>
            <line num="311" count="3229648" type="stmt"/>
            <line num="312" count="3229644" type="stmt"/>
            <line falsecount="3229667" truecount="108" num="312" type="cond"/>
            <line num="313" count="108" type="stmt"/>
            <line num="320" count="3229673" type="stmt"/>
            <line num="322" count="3229634" type="stmt"/>
            <line num="323" count="3229723" type="stmt"/>
            <line num="326" count="3229711" type="stmt"/>
            <line num="327" count="3229714" type="stmt"/>
            <line num="328" count="3229699" type="stmt"/>
            <line num="329" count="3229698" type="stmt"/>
            <line num="331" count="3229703" type="stmt"/>
            <line falsecount="3229680" truecount="81" num="331" type="cond"/>
            <line num="333" count="81" type="stmt"/>
            <line num="335" count="81" type="stmt"/>
            <line num="336" count="81" type="stmt"/>
            <line num="337" count="81" type="stmt"/>
            <line num="340" count="3229586" type="stmt"/>
            <line falsecount="3229588" truecount="27" num="340" type="cond"/>
            <line num="341" count="27" type="stmt"/>
            <line num="342" count="27" type="stmt"/>
            <line num="346" count="3229613" type="stmt"/>
            <line num="351" count="3229711" type="stmt"/>
            <line num="354" count="3229709" type="stmt"/>
            <line falsecount="3229685" truecount="108" num="354" type="cond"/>
            <line num="355" count="108" type="stmt"/>
            <line num="357" count="108" type="stmt"/>
            <line num="358" count="108" type="stmt"/>
            <line num="359" count="108" type="stmt"/>
            <line num="360" count="108" type="stmt"/>
            <line num="362" count="108" type="stmt"/>
            <line complexity="1" visibility="private" signature="doCreateRationalFunctionsForAkimaInterpolation() : void" num="366" count="32" type="method"/>
            <line num="368" count="32" type="stmt"/>
            <line complexity="12" visibility="private" signature="doCreateRationalFunctionsForAkimaInterpolation(double) : void" num="371" count="64" type="method"/>
            <line num="373" count="64" type="stmt"/>
            <line num="375" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="375" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="64" type="stmt"/>
            <line num="382" count="64" type="stmt"/>
            <line num="383" count="64" type="stmt"/>
            <line num="384" count="64" type="stmt"/>
            <line falsecount="64" truecount="256" num="384" type="cond"/>
            <line num="385" count="256" type="stmt"/>
            <line num="386" count="256" type="stmt"/>
            <line num="387" count="256" type="stmt"/>
            <line falsecount="64" truecount="192" num="387" type="cond"/>
            <line num="388" count="192" type="stmt"/>
            <line num="393" count="64" type="stmt"/>
            <line num="397" count="64" type="stmt"/>
            <line num="400" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="404" count="64" type="stmt"/>
            <line num="409" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="64" type="stmt"/>
            <line num="419" count="64" type="stmt"/>
            <line num="422" count="64" type="stmt"/>
            <line falsecount="64" truecount="64" num="422" type="cond"/>
            <line num="424" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="424" type="cond"/>
            <line num="426" count="0" type="stmt"/>
            <line num="429" count="64" type="stmt"/>
            <line num="438" count="64" type="stmt"/>
            <line num="441" count="64" type="stmt"/>
            <line falsecount="64" truecount="256" num="441" type="cond"/>
            <line num="442" count="256" type="stmt"/>
            <line num="444" count="256" type="stmt"/>
            <line num="445" count="256" type="stmt"/>
            <line num="446" count="256" type="stmt"/>
            <line num="447" count="256" type="stmt"/>
            <line num="449" count="256" type="stmt"/>
            <line complexity="15" visibility="private" signature="doCreateRationalFunctionsForHarmonicSplineInterpolation() : void" num="454" count="559" type="method"/>
            <line num="455" count="558" type="stmt"/>
            <line num="458" count="559" type="stmt"/>
            <line num="459" count="559" type="stmt"/>
            <line num="460" count="559" type="stmt"/>
            <line num="461" count="559" type="stmt"/>
            <line falsecount="559" truecount="2019117" num="461" type="cond"/>
            <line num="462" count="2020896" type="stmt"/>
            <line num="463" count="2021674" type="stmt"/>
            <line num="464" count="2021134" type="stmt"/>
            <line falsecount="559" truecount="2022861" num="464" type="cond"/>
            <line num="465" count="2022240" type="stmt"/>
            <line num="470" count="559" type="stmt"/>
            <line num="474" count="559" type="stmt"/>
            <line num="477" count="559" type="stmt"/>
            <line num="481" count="559" type="stmt"/>
            <line falsecount="531" truecount="27" num="481" type="cond"/>
            <line num="483" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="491" type="cond"/>
            <line num="493" count="0" type="stmt"/>
            <line num="495" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="495" type="cond"/>
            <line num="496" count="0" type="stmt"/>
            <line num="501" count="559" type="stmt"/>
            <line falsecount="559" truecount="2030029" num="501" type="cond"/>
            <line num="502" count="2028845" type="stmt"/>
            <line falsecount="2030464" truecount="1010" num="502" type="cond"/>
            <line num="503" count="1010" type="stmt"/>
            <line num="506" count="2030907" type="stmt"/>
            <line num="508" count="2030569" type="stmt"/>
            <line num="515" count="559" type="stmt"/>
            <line num="518" count="559" type="stmt"/>
            <line falsecount="559" truecount="2022493" num="518" type="cond"/>
            <line num="519" count="2023443" type="stmt"/>
            <line num="521" count="2026649" type="stmt"/>
            <line num="522" count="2027754" type="stmt"/>
            <line num="523" count="2029152" type="stmt"/>
            <line num="524" count="2032178" type="stmt"/>
            <line num="526" count="2036192" type="stmt"/>
            <line complexity="6" visibility="public" signature="main(String[]) : void" num="532" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="565" type="cond"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="575" type="cond"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="585" type="cond"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="603" count="2003" type="method"/>
            <line num="605" count="2003" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="608" count="3" type="method"/>
            <line num="609" count="3" type="stmt"/>
            <line num="611" count="3" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata2.interpolation">
         <metrics coveredelements="66" complexity="29" loc="367" methods="11" classes="4" statements="78" coveredconditionals="15" coveredmethods="6" elements="117" ncloc="155" files="1" conditionals="28" coveredstatements="45"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/interpolation/RationalFunctionInterpolation.java" name="RationalFunctionInterpolation.java">
            <metrics coveredelements="66" coveredconditionals="15" complexity="29" loc="367" coveredmethods="6" methods="11" elements="117" classes="4" ncloc="155" statements="78" conditionals="28" coveredstatements="45"/>
            <class name="RationalFunctionInterpolation">
               <metrics coveredelements="51" coveredconditionals="12" complexity="23" coveredmethods="4" methods="8" elements="89" statements="59" conditionals="22" coveredstatements="35"/>
            </class>
            <class name="RationalFunctionInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.RationalFunction">
               <metrics coveredelements="15" coveredconditionals="3" complexity="6" coveredmethods="2" methods="3" elements="28" statements="19" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="package" signature="RationalFunction(RandomVariable[],RandomVariable[])" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="RationalFunction(RandomVariable[])" num="95" count="1531" type="method"/>
            <line num="96" count="1531" type="stmt"/>
            <line num="97" count="1531" type="stmt"/>
            <line num="98" count="1531" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double) : RandomVariable" num="107" count="1673" type="method"/>
            <line num="109" count="1673" type="stmt"/>
            <line num="111" count="1673" type="stmt"/>
            <line num="113" count="1673" type="stmt"/>
            <line falsecount="1673" truecount="1673" num="113" type="cond"/>
            <line num="114" count="1673" type="stmt"/>
            <line num="115" count="1673" type="stmt"/>
            <line num="118" count="1673" type="stmt"/>
            <line falsecount="0" truecount="1673" num="118" type="cond"/>
            <line num="119" count="1673" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],RandomVariable[])" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod)" num="157" count="356" type="method"/>
            <line num="158" count="356" type="stmt"/>
            <line num="159" count="356" type="stmt"/>
            <line num="160" count="356" type="stmt"/>
            <line num="161" count="356" type="stmt"/>
            <line num="162" count="356" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double) : RandomVariable" num="181" count="3666" type="method"/>
            <line num="183" count="3666" type="stmt"/>
            <line num="184" count="3666" type="stmt"/>
            <line falsecount="3310" truecount="356" num="184" type="cond"/>
            <line num="185" count="356" type="stmt"/>
            <line num="190" count="3666" type="stmt"/>
            <line num="191" count="3666" type="stmt"/>
            <line falsecount="2117" truecount="1549" num="191" type="cond"/>
            <line num="192" count="1549" type="stmt"/>
            <line num="195" count="2117" type="stmt"/>
            <line num="198" count="2117" type="stmt"/>
            <line falsecount="1895" truecount="222" num="198" type="cond"/>
            <line num="200" count="222" type="stmt"/>
            <line falsecount="0" truecount="222" num="200" type="cond"/>
            <line num="201" count="222" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="1895" type="stmt"/>
            <line falsecount="1673" truecount="222" num="208" type="cond"/>
            <line num="210" count="222" type="stmt"/>
            <line falsecount="0" truecount="222" num="210" type="cond"/>
            <line num="211" count="222" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="1673" type="stmt"/>
            <line num="222" count="1673" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="225" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="doCreateRationalFunctions() : void" num="231" count="356" type="method"/>
            <line num="233" count="356" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="270" type="stmt"/>
            <line num="241" count="86" type="stmt"/>
            <line num="242" count="356" type="stmt"/>
            <line num="243" count="356" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForPiecewiseConstantInterpolation() : void" num="248" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="doCreateRationalFunctionsForLinearInterpolation() : void" num="267" count="356" type="method"/>
            <line num="272" count="356" type="stmt"/>
            <line num="275" count="356" type="stmt"/>
            <line falsecount="356" truecount="1531" num="275" type="cond"/>
            <line num="276" count="1531" type="stmt"/>
            <line num="278" count="1531" type="stmt"/>
            <line num="279" count="1531" type="stmt"/>
            <line num="281" count="1531" type="stmt"/>
            <line num="282" count="1531" type="stmt"/>
            <line num="284" count="1531" type="stmt"/>
            <line num="285" count="1531" type="stmt"/>
            <line num="287" count="1531" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate">
         <metrics coveredelements="72" complexity="16" loc="233" methods="6" classes="1" statements="76" coveredconditionals="13" coveredmethods="3" elements="100" ncloc="148" files="1" conditionals="18" coveredstatements="56"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/Utils.java" name="Utils.java">
            <metrics coveredelements="72" coveredconditionals="13" complexity="16" loc="233" coveredmethods="3" methods="6" elements="100" classes="1" ncloc="148" statements="76" conditionals="18" coveredstatements="56"/>
            <class name="Utils">
               <metrics coveredelements="72" coveredconditionals="13" complexity="16" coveredmethods="3" methods="6" elements="100" statements="76" conditionals="18" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="convertTableToLattice(DataTable,QuotingConvention,LocalDate,String,String,SchedulePrototype,SchedulePrototype) : SwaptionDataLattice" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 45()" num="45" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convertMapOfTablesToLattice(Map&lt;Integer, DataTable&gt;,QuotingConvention,LocalDate,String,String,SchedulePrototype,SchedulePrototype) : SwaptionDataLattice" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="shiftCashToPhysicalSmile(VolatilityCubeModel,SwaptionDataLattice,SwaptionDataLattice) : SwaptionDataLattice" num="106" count="3" type="method"/>
            <line num="108" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="111" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="114" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="119" count="30" type="stmt"/>
            <line falsecount="24" truecount="6" num="119" type="cond"/>
            <line num="120" count="6" type="stmt"/>
            <line num="123" count="24" type="stmt"/>
            <line num="124" count="120" type="stmt"/>
            <line num="125" count="597" type="stmt"/>
            <line falsecount="597" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="597" type="stmt"/>
            <line num="130" count="597" type="stmt"/>
            <line num="131" count="597" type="stmt"/>
            <line num="132" count="597" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line num="145" count="6" type="stmt"/>
            <line num="148" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="convertCashLatticeToNormalVolatility(SwaptionDataLattice,VolatilityCubeModel) : SwaptionDataLattice" num="159" count="6" type="method"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line num="168" count="6" type="stmt"/>
            <line num="169" count="6" type="stmt"/>
            <line num="171" count="6" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="172" type="cond"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="174" type="cond"/>
            <line num="175" count="3" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="6" type="stmt"/>
            <line num="181" count="30" type="stmt"/>
            <line num="182" count="150" type="stmt"/>
            <line num="183" count="747" type="stmt"/>
            <line num="184" count="747" type="stmt"/>
            <line num="185" count="747" type="stmt"/>
            <line num="186" count="747" type="stmt"/>
            <line falsecount="372" truecount="375" num="186" type="cond"/>
            <line num="187" count="747" type="stmt"/>
            <line num="188" count="747" type="stmt"/>
            <line num="190" count="747" type="stmt"/>
            <line num="191" count="747" type="stmt"/>
            <line num="192" count="747" type="stmt"/>
            <line falsecount="372" truecount="375" num="192" type="cond"/>
            <line num="193" count="375" type="stmt"/>
            <line num="194" count="375" type="stmt"/>
            <line num="196" count="372" type="stmt"/>
            <line num="197" count="372" type="stmt"/>
            <line num="203" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double,Schedule) : double" num="218" count="747" type="method"/>
            <line num="220" count="747" type="stmt"/>
            <line num="221" count="747" type="stmt"/>
            <line num="222" count="747" type="stmt"/>
            <line falsecount="747" truecount="7635" num="222" type="cond"/>
            <line num="223" count="7635" type="stmt"/>
            <line num="225" count="747" type="stmt"/>
            <line num="227" count="747" type="stmt"/>
            <line falsecount="747" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="747" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model">
         <metrics coveredelements="25" complexity="16" loc="172" methods="10" classes="2" statements="21" coveredconditionals="2" coveredmethods="7" elements="35" ncloc="79" files="2" conditionals="4" coveredstatements="16"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/AnalyticModelWithVolatilityCubes.java" name="AnalyticModelWithVolatilityCubes.java">
            <metrics coveredelements="25" coveredconditionals="2" complexity="16" loc="115" coveredmethods="7" methods="10" elements="35" classes="1" ncloc="67" statements="21" conditionals="4" coveredstatements="16"/>
            <class name="AnalyticModelWithVolatilityCubes">
               <metrics coveredelements="25" coveredconditionals="2" complexity="16" coveredmethods="7" methods="10" elements="35" statements="21" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes()" num="33" count="11" type="method"/>
            <line num="34" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes(LocalDate)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;,Map&lt;String, VolatilityCube&gt;)" num="54" count="21787" type="method"/>
            <line num="56" count="21794" type="stmt"/>
            <line num="57" count="21792" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCube(String) : VolatilityCube" num="60" count="17388255" type="method"/>
            <line num="62" count="17395319" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilityCube(VolatilityCube) : VolatilityCubeModel" num="65" count="21754" type="method"/>
            <line num="68" count="21749" type="stmt"/>
            <line num="70" count="21747" type="stmt"/>
            <line falsecount="21756" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="21752" type="stmt"/>
            <line num="75" count="21754" type="stmt"/>
            <line num="77" count="21759" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilityCube(String,VolatilityCube) : VolatilityCubeModel" num="80" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelWithVolatilityCubes" num="95" count="21791" type="method"/>
            <line num="97" count="21791" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubeNames() : Set&lt;String&gt;" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubes() : Map&lt;String, VolatilityCube&gt;" num="111" count="21796" type="method"/>
            <line num="113" count="21795" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/VolatilityCubeModel.java" name="VolatilityCubeModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="57" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilityCubeModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet">
         <metrics coveredelements="0" complexity="143" loc="979" methods="48" classes="5" statements="367" coveredconditionals="0" coveredmethods="0" elements="569" ncloc="672" files="5" conditionals="154" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapShiftedVol.java" name="CapShiftedVol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="143" coveredmethods="0" methods="2" elements="69" classes="1" ncloc="76" statements="41" conditionals="26" coveredstatements="0"/>
            <class name="CapShiftedVol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="2" elements="69" statements="41" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapShiftedVol(Schedule,String,double,boolean,String,String,double)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="getValueAsPrice(double,AnalyticModel) : double" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapTenorStructure.java" name="CapTenorStructure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CapTenorStructure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapVolMarketData.java" name="CapVolMarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="206" coveredmethods="0" methods="27" elements="93" classes="1" ncloc="139" statements="52" conditionals="14" coveredstatements="0"/>
            <class name="CapVolMarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="27" elements="93" statements="52" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CapVolMarketData(String,String,String,CapTenorStructure,int[],double[],double[][],double,int,int,int)" num="41" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapVolMarketData(String,String,CapTenorStructure,int[],double[],double[][],double,int)" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapVolData(int,double) : double" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapVolData(int,int) : double" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShift() : double" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfStrikes() : int" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfExpiryDates() : int" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxExpiryInMonths() : int" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxExpiryInYears() : double" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryInMonths(int) : int" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryInYears(int) : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolMatrix() : double[][]" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikeVector() : double[]" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryVectorInMonths() : int[]" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryVectorInYears() : double[]" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRowIndex(int) : int" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike(int) : double" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getColumnIndex(double) : int" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapTenorStructure() : CapTenorStructure" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTenorInMonths() : int" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTenorInMonthsBeforeChange() : int" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenorChangeTimeInMonths() : int" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : String" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndexBeforeChange() : String" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountIndex() : String" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCapVolMatrixEntry(int,int,double) : void" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffsetCodeFromIndex(String) : String" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapletVolBootstrapping.java" name="CapletVolBootstrapping.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="57" loc="378" coveredmethods="0" methods="8" elements="279" classes="1" ncloc="300" statements="193" conditionals="78" coveredstatements="0"/>
            <class name="CapletVolBootstrapping">
               <metrics coveredelements="0" coveredconditionals="0" complexity="57" coveredmethods="0" methods="8" elements="279" statements="193" conditionals="78" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="CapletVolBootstrapping(CorrelationProvider,CapVolMarketData,AnalyticModel)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolBootstrapping(CapVolMarketData,AnalyticModel)" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="33" visibility="public" signature="getCapletVolMatrix() : double[][]" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="16" visibility="public" signature="calculateCapVolsFromCapletVols(double[][]) : double[][]" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="305" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParsedModel() : AnalyticModel" num="363" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="371" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapletFixingTimeVectorInYears() : double[]" num="375" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapletVolatilitySurface.java" name="CapletVolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="243" coveredmethods="0" methods="11" elements="128" classes="1" ncloc="152" statements="81" conditionals="36" coveredstatements="0"/>
            <class name="CapletVolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="11" elements="128" statements="81" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitySurface(String,LocalDate,double[][],double[],double[],ForwardCurve,QuotingConvention,DiscountCurve)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="CapletVolatilitySurface(String,LocalDate,double,double[],double[],ForwardCurve,QuotingConvention,DiscountCurve)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process">
         <metrics coveredelements="162" complexity="76" loc="861" methods="41" classes="7" statements="149" coveredconditionals="36" coveredmethods="22" elements="236" ncloc="377" files="6" conditionals="46" coveredstatements="104"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/EulerSchemeFromProcessModel.java" name="EulerSchemeFromProcessModel.java">
            <metrics coveredelements="127" coveredconditionals="32" complexity="47" loc="391" coveredmethods="10" methods="16" elements="157" classes="2" ncloc="208" statements="101" conditionals="40" coveredstatements="85"/>
            <class name="EulerSchemeFromProcessModel">
               <metrics coveredelements="127" coveredconditionals="32" complexity="47" coveredmethods="10" methods="16" elements="157" statements="101" conditionals="40" coveredstatements="85"/>
            </class>
            <class name="EulerSchemeFromProcessModel.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 63()" num="63" count="51" type="method"/>
            <line num="65" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="EulerSchemeFromProcessModel(ProcessModel,IndependentIncrements,Scheme)" num="96" count="831" type="method"/>
            <line num="97" count="831" type="stmt"/>
            <line num="98" count="831" type="stmt"/>
            <line num="99" count="831" type="stmt"/>
            <line complexity="1" visibility="public" signature="EulerSchemeFromProcessModel(ProcessModel,IndependentIncrements)" num="108" count="3428" type="method"/>
            <line num="109" count="3426" type="stmt"/>
            <line num="110" count="3424" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="119" count="11067040" type="method"/>
            <line num="122" count="11069082" type="stmt"/>
            <line num="123" count="11110682" type="stmt"/>
            <line falsecount="11106964" truecount="3719" num="123" type="cond"/>
            <line num="124" count="3719" type="stmt"/>
            <line num="128" count="11110155" type="stmt"/>
            <line falsecount="11109746" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="11109687" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="142" count="604665" type="method"/>
            <line num="145" count="604699" type="stmt"/>
            <line num="146" count="605049" type="stmt"/>
            <line falsecount="605041" truecount="8" num="146" type="cond"/>
            <line num="147" count="8" type="stmt"/>
            <line num="152" count="605042" type="stmt"/>
            <line complexity="19" visibility="private" signature="doPrecalculateProcess() : void" num="158" count="3727" type="method"/>
            <line num="159" count="3727" type="stmt"/>
            <line falsecount="3727" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="3727" type="stmt"/>
            <line num="164" count="3727" type="stmt"/>
            <line num="165" count="3727" type="stmt"/>
            <line num="168" count="3726" type="stmt"/>
            <line num="169" count="3727" type="stmt"/>
            <line num="172" count="3727" type="stmt"/>
            <line num="175" count="3727" type="stmt"/>
            <line num="176" count="3726" type="stmt"/>
            <line num="177" count="3727" type="stmt"/>
            <line falsecount="3726" truecount="339595" num="177" type="cond"/>
            <line num="178" count="339599" type="stmt"/>
            <line num="179" count="339603" type="stmt"/>
            <line num="187" count="3727" type="stmt"/>
            <line num="190" count="3726" type="stmt"/>
            <line falsecount="3727" truecount="378716" num="190" type="cond"/>
            <line num="191" count="378716" type="stmt"/>
            <line num="193" count="378712" type="stmt"/>
            <line num="196" count="378716" type="stmt"/>
            <line num="197" count="378708" type="stmt"/>
            <line num="198" count="378709" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="205" count="378724" type="stmt"/>
            <line num="208" count="378721" type="stmt"/>
            <line num="209" count="378720" type="stmt"/>
            <line falsecount="378722" truecount="51223350" num="209" type="cond"/>
            <line num="210" count="51223350" type="stmt"/>
            <line num="212" count="51223339" type="stmt"/>
            <line num="215" count="51223322" type="stmt"/>
            <line falsecount="25455153" truecount="25768185" num="215" type="cond"/>
            <line num="216" count="25768210" type="stmt"/>
            <line num="217" count="25768207" type="stmt"/>
            <line num="220" count="25455157" type="stmt"/>
            <line complexity="5" visibility="public" signature="call() : RandomVariable" num="221" count="25335260" type="method"/>
            <line num="223" count="25345684" type="stmt"/>
            <line falsecount="707322" truecount="24633583" num="223" type="cond"/>
            <line num="224" count="24645773" type="stmt"/>
            <line num="227" count="25285338" type="stmt"/>
            <line num="230" count="25124779" type="stmt"/>
            <line falsecount="25153882" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="25168053" type="stmt"/>
            <line falsecount="0" truecount="25179220" num="235" type="cond"/>
            <line num="236" count="25192110" type="stmt"/>
            <line num="240" count="24695714" type="stmt"/>
            <line num="243" count="24894148" type="stmt"/>
            <line num="251" count="25455168" type="stmt"/>
            <line num="252" count="25455168" type="stmt"/>
            <line num="253" count="25455161" type="stmt"/>
            <line falsecount="0" truecount="25455164" num="253" type="cond"/>
            <line num="254" count="25455152" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="263" count="25455159" type="stmt"/>
            <line num="267" count="378722" type="stmt"/>
            <line falsecount="378713" truecount="51223354" num="267" type="cond"/>
            <line num="268" count="51223363" type="stmt"/>
            <line num="269" count="51223367" type="stmt"/>
            <line num="270" count="51223393" type="stmt"/>
            <line falsecount="25768221" truecount="25455167" num="270" type="cond"/>
            <line num="271" count="25455175" type="stmt"/>
            <line num="273" count="25768210" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="280" count="378716" type="stmt"/>
            <line falsecount="375918" truecount="2800" num="280" type="cond"/>
            <line num="283" count="2800" type="stmt"/>
            <line num="285" count="2800" type="stmt"/>
            <line falsecount="2800" truecount="127600" num="285" type="cond"/>
            <line num="286" count="127600" type="stmt"/>
            <line num="287" count="127600" type="stmt"/>
            <line num="289" count="127600" type="stmt"/>
            <line falsecount="64800" truecount="62800" num="289" type="cond"/>
            <line num="290" count="62800" type="stmt"/>
            <line num="294" count="64800" type="stmt"/>
            <line num="297" count="64800" type="stmt"/>
            <line num="300" count="64800" type="stmt"/>
            <line num="305" count="378719" type="stmt"/>
            <line num="308" count="3727" type="stmt"/>
            <line num="309" count="3727" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="319" count="1004028" type="method"/>
            <line num="321" count="1004028" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="327" count="357620" type="method"/>
            <line num="329" count="357620" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStochasticDriver() : IndependentIncrements" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="343" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : EulerSchemeFromProcessModel" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedModel(ProcessModel) : MonteCarloProcess" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloProcess" num="357" count="672" type="method"/>
            <line num="359" count="672" type="stmt"/>
            <line num="361" count="672" type="stmt"/>
            <line falsecount="672" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="365" count="672" type="stmt"/>
            <line num="366" count="672" type="stmt"/>
            <line falsecount="672" truecount="0" num="366" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="369" count="672" type="stmt"/>
            <line falsecount="672" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="373" count="672" type="stmt"/>
            <line num="376" count="672" type="stmt"/>
            <line num="378" count="672" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="386" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/LinearInterpolatedTimeDiscreteProcess.java" name="LinearInterpolatedTimeDiscreteProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="159" coveredmethods="0" methods="12" elements="42" classes="1" ncloc="74" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="LinearInterpolatedTimeDiscreteProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="12" elements="42" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearInterpolatedTimeDiscreteProcess(Map&lt;Double, RandomVariable&gt;)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LinearInterpolatedTimeDiscreteProcess(TimeDiscretization,Map&lt;Double, RandomVariable&gt;)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(LinearInterpolatedTimeDiscreteProcess) : LinearInterpolatedTimeDiscreteProcess" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : LinearInterpolatedTimeDiscreteProcess" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProcessValue(double,int) : RandomVariable" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Process" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/MonteCarloProcess.java" name="MonteCarloProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="83" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/MonteCarloProcessFromProcessModel.java" name="MonteCarloProcessFromProcessModel.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="13" loc="107" coveredmethods="11" methods="11" elements="28" classes="1" ncloc="54" statements="15" conditionals="2" coveredstatements="15"/>
            <class name="MonteCarloProcessFromProcessModel">
               <metrics coveredelements="28" coveredconditionals="2" complexity="13" coveredmethods="11" methods="11" elements="28" statements="15" conditionals="2" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloProcessFromProcessModel(TimeDiscretization,ProcessModel)" num="34" count="4258" type="method"/>
            <line num="35" count="4259" type="stmt"/>
            <line num="36" count="4259" type="stmt"/>
            <line num="37" count="4260" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : ProcessModel" num="50" count="10052" type="method"/>
            <line num="52" count="10052" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="55" count="139174" type="method"/>
            <line num="57" count="139174" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState() : RandomVariable[]" num="60" count="3727" type="method"/>
            <line num="61" count="3727" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="64" count="381509" type="method"/>
            <line num="65" count="381512" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="68" count="25279422" type="method"/>
            <line num="70" count="25290004" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(int,int,RandomVariable) : RandomVariable" num="73" count="25328270" type="method"/>
            <line num="75" count="25333940" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(int,int,RandomVariable) : RandomVariable" num="78" count="24614173" type="method"/>
            <line num="80" count="24631268" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="87" count="468289" type="method"/>
            <line num="89" count="468295" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTime(int) : double" num="92" count="52067838" type="method"/>
            <line num="94" count="52084933" type="stmt"/>
            <line falsecount="51946139" truecount="368" num="94" type="cond"/>
            <line num="95" count="368" type="stmt"/>
            <line num="97" count="52000369" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="100" count="6317506" type="method"/>
            <line num="102" count="6318620" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/Process.java" name="Process.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="3" loc="92" coveredmethods="1" methods="2" elements="9" classes="1" ncloc="22" statements="5" conditionals="2" coveredstatements="4"/>
            <class name="Process">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="1" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="getModel() : ProcessModel" num="26" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getProcessValue(int) : RandomVariable[]" num="35" count="440" type="method"/>
            <line num="36" count="440" type="stmt"/>
            <line num="37" count="440" type="stmt"/>
            <line falsecount="440" truecount="440" num="37" type="cond"/>
            <line num="38" count="440" type="stmt"/>
            <line num="40" count="440" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/ProcessTimeDiscretizationProvider.java" name="ProcessTimeDiscretizationProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProcessTimeDiscretizationProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.conditionalexpectation">
         <metrics coveredelements="106" complexity="45" loc="554" methods="24" classes="10" statements="112" coveredconditionals="26" coveredmethods="10" elements="176" ncloc="263" files="8" conditionals="40" coveredstatements="70"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/LinearRegression.java" name="LinearRegression.java">
            <metrics coveredelements="42" coveredconditionals="12" complexity="9" loc="89" coveredmethods="2" methods="2" elements="45" classes="1" ncloc="46" statements="29" conditionals="14" coveredstatements="28"/>
            <class name="LinearRegression">
               <metrics coveredelements="42" coveredconditionals="12" complexity="9" coveredmethods="2" methods="2" elements="45" statements="29" conditionals="14" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearRegression(RandomVariable[])" num="25" count="3" type="method"/>
            <line num="26" count="3" type="stmt"/>
            <line num="27" count="3" type="stmt"/>
            <line complexity="8" visibility="public" signature="getRegressionCoefficients(RandomVariable) : double[]" num="36" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="40" type="cond"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="46" type="cond"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="56" type="cond"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="73" type="cond"/>
            <line num="74" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="74" type="cond"/>
            <line num="75" count="6" type="stmt"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="82" type="cond"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationLinearRegressionFactory.java" name="MonteCarloConditionalExpectationLinearRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="18" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationLinearRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(RandomVariable[],RandomVariable[]) : ConditionalExpectationEstimator" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory.java" name="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="27" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory(double)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(RandomVariable[],RandomVariable[]) : ConditionalExpectationEstimator" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegression.java" name="MonteCarloConditionalExpectationRegression.java">
            <metrics coveredelements="64" coveredconditionals="14" complexity="18" loc="180" coveredmethods="8" methods="10" elements="70" classes="3" ncloc="95" statements="44" conditionals="16" coveredstatements="42"/>
            <class name="MonteCarloConditionalExpectationRegression">
               <metrics coveredelements="59" coveredconditionals="14" complexity="16" coveredmethods="6" methods="8" elements="65" statements="41" conditionals="16" coveredstatements="39"/>
            </class>
            <class name="MonteCarloConditionalExpectationRegression.RegressionBasisFunctions">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MonteCarloConditionalExpectationRegression.RegressionBasisFunctionsGiven">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="RegressionBasisFunctionsGiven(RandomVariable[])" num="51" count="1531" type="method"/>
            <line num="52" count="1531" type="stmt"/>
            <line num="53" count="1531" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions() : RandomVariable[]" num="56" count="2928" type="method"/>
            <line num="58" count="2928" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression()" num="69" count="1344" type="method"/>
            <line num="70" count="1344" type="stmt"/>
            <line num="71" count="1344" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression(RandomVariable[])" num="79" count="1157" type="method"/>
            <line num="80" count="1157" type="stmt"/>
            <line num="81" count="1157" type="stmt"/>
            <line num="82" count="1157" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression(RandomVariable[],RandomVariable[])" num="91" count="187" type="method"/>
            <line num="92" count="187" type="stmt"/>
            <line num="93" count="187" type="stmt"/>
            <line num="94" count="187" type="stmt"/>
            <line complexity="2" visibility="public" signature="getConditionalExpectation(RandomVariable) : RandomVariable" num="97" count="1464" type="method"/>
            <line num="100" count="1464" type="stmt"/>
            <line num="103" count="1464" type="stmt"/>
            <line num="104" count="1464" type="stmt"/>
            <line num="105" count="1464" type="stmt"/>
            <line falsecount="1464" truecount="9421" num="105" type="cond"/>
            <line num="106" count="9421" type="stmt"/>
            <line num="109" count="1464" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLinearRegressionParameters(RandomVariable) : double[]" num="118" count="1464" type="method"/>
            <line num="120" count="1464" type="stmt"/>
            <line num="125" count="1464" type="stmt"/>
            <line num="126" count="1464" type="stmt"/>
            <line falsecount="122" truecount="1342" num="126" type="cond"/>
            <line num="128" count="1342" type="stmt"/>
            <line num="129" count="1342" type="stmt"/>
            <line falsecount="1342" truecount="10227" num="129" type="cond"/>
            <line num="130" count="10227" type="stmt"/>
            <line falsecount="10227" truecount="68717" num="130" type="cond"/>
            <line num="131" count="68717" type="stmt"/>
            <line num="132" count="68717" type="stmt"/>
            <line num="136" count="1342" type="stmt"/>
            <line num="141" count="1464" type="stmt"/>
            <line num="142" count="1464" type="stmt"/>
            <line falsecount="1464" truecount="10885" num="142" type="cond"/>
            <line num="143" count="10885" type="stmt"/>
            <line num="147" count="1464" type="stmt"/>
            <line num="149" count="1464" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsEstimator() : RegressionBasisFunctions" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsPredictor() : RegressionBasisFunctions" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getNonZeroBasisFunctions(RandomVariable[]) : RandomVariable[]" num="160" count="1531" type="method"/>
            <line num="161" count="1531" type="stmt"/>
            <line num="162" count="1531" type="stmt"/>
            <line falsecount="1531" truecount="11172" num="162" type="cond"/>
            <line num="163" count="11172" type="stmt"/>
            <line falsecount="0" truecount="11172" num="163" type="cond"/>
            <line num="164" count="11172" type="stmt"/>
            <line num="168" count="1531" type="stmt"/>
            <line num="170" count="1531" type="stmt"/>
            <line num="171" count="1531" type="stmt"/>
            <line num="172" count="11172" type="stmt"/>
            <line falsecount="0" truecount="11172" num="172" type="cond"/>
            <line num="173" count="11172" type="stmt"/>
            <line num="174" count="11172" type="stmt"/>
            <line num="178" count="1531" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegressionFactory.java" name="MonteCarloConditionalExpectationRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegressionLocalizedOnDependents.java" name="MonteCarloConditionalExpectationRegressionLocalizedOnDependents.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="129" coveredmethods="0" methods="6" elements="38" classes="1" ncloc="51" statements="24" conditionals="8" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationRegressionLocalizedOnDependents">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="38" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],RandomVariable[],double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],double)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents()" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[])" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],RandomVariable[])" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLinearRegressionParameters(RandomVariable) : double[]" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/RegressionBasisFunctionsFromProducts.java" name="RegressionBasisFunctionsFromProducts.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="60" coveredmethods="0" methods="3" elements="16" classes="1" ncloc="35" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="RegressionBasisFunctionsFromProducts">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="16" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RegressionBasisFunctionsFromProducts(List&lt;AbstractMonteCarloProduct&gt;)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="35" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(AbstractMonteCarloProduct) : RandomVariable" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/conditionalexpectation/RegressionBasisFunctionsProvider.java" name="RegressionBasisFunctionsProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RegressionBasisFunctionsProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.util">
         <metrics coveredelements="0" complexity="9" loc="50" methods="2" classes="1" statements="15" coveredconditionals="0" coveredmethods="0" elements="19" ncloc="31" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/util/FileUtilities.java" name="FileUtilities.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="50" coveredmethods="0" methods="2" elements="19" classes="1" ncloc="31" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="FileUtilities">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="19" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="loadObject(File) : Object" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="writeObject(File,Object) : void" num="38" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.calibration">
         <metrics coveredelements="591" complexity="148" loc="2029" methods="92" classes="7" statements="618" coveredconditionals="50" coveredmethods="51" elements="792" ncloc="1155" files="5" conditionals="82" coveredstatements="490"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/calibration/AbstractCubeCalibration.java" name="AbstractCubeCalibration.java">
            <metrics coveredelements="113" coveredconditionals="8" complexity="33" loc="463" coveredmethods="14" methods="21" elements="154" classes="2" ncloc="226" statements="119" conditionals="14" coveredstatements="91"/>
            <class name="AbstractCubeCalibration">
               <metrics coveredelements="107" coveredconditionals="8" complexity="26" coveredmethods="12" methods="18" elements="127" statements="95" conditionals="14" coveredstatements="87"/>
            </class>
            <class name="AbstractCubeCalibration.SwaptionInfo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="7" coveredmethods="2" methods="3" elements="27" statements="24" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="AbstractCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="80" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="calibrate(String) : VolatilityCube" num="130" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="runOptimization() : void" num="148" count="2" type="method"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="157" count="29" type="method"/>
            <line num="161" count="29" type="stmt"/>
            <line num="164" count="29" type="stmt"/>
            <line num="165" count="29" type="stmt"/>
            <line num="166" count="29" type="stmt"/>
            <line num="169" count="29" type="stmt"/>
            <line num="170" count="29" type="stmt"/>
            <line num="171" count="29" type="stmt"/>
            <line num="172" count="29" type="stmt"/>
            <line num="173" count="29" type="stmt"/>
            <line num="174" count="29" type="stmt"/>
            <line num="175" count="29" type="stmt"/>
            <line num="176" count="29" type="stmt"/>
            <line num="178" count="29" type="stmt"/>
            <line num="180" count="29" type="stmt"/>
            <line num="181" count="29" type="stmt"/>
            <line num="182" count="29" type="stmt"/>
            <line num="183" count="3624" type="stmt"/>
            <line num="184" count="3625" type="stmt"/>
            <line num="185" count="3625" type="stmt"/>
            <line num="186" count="3623" type="stmt"/>
            <line num="188" count="3623" type="stmt"/>
            <line falsecount="0" truecount="3624" num="189" type="cond"/>
            <line num="190" count="3625" type="stmt"/>
            <line falsecount="0" truecount="3624" num="191" type="cond"/>
            <line num="194" count="3624" type="stmt"/>
            <line num="195" count="3623" type="stmt"/>
            <line falsecount="3625" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="3625" type="stmt"/>
            <line num="200" count="3623" type="stmt"/>
            <line num="201" count="3625" type="stmt"/>
            <line num="204" count="3624" type="stmt"/>
            <line num="206" count="3622" type="stmt"/>
            <line num="210" count="29" type="stmt"/>
            <line num="211" count="29" type="stmt"/>
            <line num="212" count="29" type="stmt"/>
            <line num="213" count="3596" type="stmt"/>
            <line num="214" count="3593" type="stmt"/>
            <line num="215" count="3595" type="stmt"/>
            <line num="216" count="3594" type="stmt"/>
            <line num="218" count="3596" type="stmt"/>
            <line falsecount="0" truecount="3595" num="219" type="cond"/>
            <line num="220" count="3596" type="stmt"/>
            <line falsecount="0" truecount="3596" num="221" type="cond"/>
            <line num="224" count="3596" type="stmt"/>
            <line num="225" count="3589" type="stmt"/>
            <line falsecount="2869" truecount="725" num="225" type="cond"/>
            <line num="226" count="725" type="stmt"/>
            <line num="228" count="2871" type="stmt"/>
            <line num="230" count="2862" type="stmt"/>
            <line num="231" count="2866" type="stmt"/>
            <line num="234" count="3594" type="stmt"/>
            <line num="237" count="3591" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateTargets() : void" num="275" count="2" type="method"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="10" type="stmt"/>
            <line num="287" count="50" type="stmt"/>
            <line num="288" count="250" type="stmt"/>
            <line num="289" count="250" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="10" type="stmt"/>
            <line num="296" count="50" type="stmt"/>
            <line num="297" count="248" type="stmt"/>
            <line num="298" count="248" type="stmt"/>
            <line num="303" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="313" count="2" type="method"/>
            <line num="314" count="2" type="stmt"/>
            <line num="315" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(boolean,double,double,int) : void" num="341" count="2" type="method"/>
            <line num="342" count="2" type="stmt"/>
            <line num="343" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReplicationUseAsOffset() : boolean" num="351" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="365" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : int" num="372" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="379" count="14965" type="method"/>
            <line num="380" count="14965" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : VolatilityCubeModel" num="386" count="38" type="method"/>
            <line num="387" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="393" count="20944" type="method"/>
            <line num="394" count="20945" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialParameters() : double[]" num="400" count="2" type="method"/>
            <line num="401" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialParameters(double[]) : void" num="408" count="2" type="method"/>
            <line num="409" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="SwaptionInfo(int,int,int)" num="431" count="498" type="method"/>
            <line num="432" count="498" type="stmt"/>
            <line num="433" count="498" type="stmt"/>
            <line num="434" count="498" type="stmt"/>
            <line complexity="5" visibility="package" signature="SwaptionInfo(int,int,int,TableConvention)" num="447" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="458" count="7217" type="method"/>
            <line num="460" count="7216" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/calibration/SABRCubeCalibration.java" name="SABRCubeCalibration.java">
            <metrics coveredelements="220" coveredconditionals="20" complexity="58" loc="750" coveredmethods="17" methods="33" elements="316" classes="2" ncloc="434" statements="247" conditionals="36" coveredstatements="183"/>
            <class name="SABRCubeCalibration">
               <metrics coveredelements="214" coveredconditionals="20" complexity="51" coveredmethods="15" methods="30" elements="289" statements="223" conditionals="36" coveredstatements="179"/>
            </class>
            <class name="SABRCubeCalibration.SwaptionInfo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="7" coveredmethods="2" methods="3" elements="27" statements="24" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="SABRCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="115" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType,double,double,double,double)" num="147" count="1" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="calibrate(String,int[]) : SABRVolatilityCube" num="167" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="172" type="cond"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="191" count="5" type="stmt"/>
            <line num="194" count="5" type="stmt"/>
            <line num="195" count="5" type="stmt"/>
            <line num="197" count="5" type="stmt"/>
            <line num="200" count="5" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialParameters(DataTable,DataTable,DataTable) : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findInterpolationNodes() : DataTableLight" num="224" count="1" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="5" type="stmt"/>
            <line num="237" count="25" type="stmt"/>
            <line num="238" count="25" type="stmt"/>
            <line num="239" count="100" type="stmt"/>
            <line falsecount="0" truecount="100" num="239" type="cond"/>
            <line num="240" count="100" type="stmt"/>
            <line num="243" count="25" type="stmt"/>
            <line num="244" count="100" type="stmt"/>
            <line falsecount="1" truecount="99" num="244" type="cond"/>
            <line num="245" count="99" type="stmt"/>
            <line num="250" count="25" type="stmt"/>
            <line falsecount="0" truecount="25" num="250" type="cond"/>
            <line num="251" count="25" type="stmt"/>
            <line num="252" count="25" type="stmt"/>
            <line num="253" count="25" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="findInitialParameters() : void" num="278" count="1" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="280" type="cond"/>
            <line num="281" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : void" num="298" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="initializeParameters(int) : void" num="329" count="5" type="method"/>
            <line num="331" count="5" type="stmt"/>
            <line num="332" count="5" type="stmt"/>
            <line num="333" count="5" type="stmt"/>
            <line num="334" count="5" type="stmt"/>
            <line num="335" count="5" type="stmt"/>
            <line num="337" count="5" type="stmt"/>
            <line falsecount="5" truecount="25" num="337" type="cond"/>
            <line num="338" count="25" type="stmt"/>
            <line num="339" count="25" type="stmt"/>
            <line num="340" count="25" type="stmt"/>
            <line num="343" count="5" type="stmt"/>
            <line num="344" count="5" type="stmt"/>
            <line num="345" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateTargets(int) : void" num="353" count="5" type="method"/>
            <line num="358" count="5" type="stmt"/>
            <line num="359" count="5" type="stmt"/>
            <line num="362" count="5" type="stmt"/>
            <line num="363" count="5" type="stmt"/>
            <line num="366" count="5" type="stmt"/>
            <line num="367" count="25" type="stmt"/>
            <line num="368" count="125" type="stmt"/>
            <line num="369" count="125" type="stmt"/>
            <line num="373" count="5" type="stmt"/>
            <line num="374" count="25" type="stmt"/>
            <line num="375" count="124" type="stmt"/>
            <line num="376" count="124" type="stmt"/>
            <line num="380" count="5" type="stmt"/>
            <line num="381" count="5" type="stmt"/>
            <line num="383" count="5" type="stmt"/>
            <line complexity="2" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="399" count="290" type="method"/>
            <line num="400" count="290" type="stmt"/>
            <line num="401" count="290" type="stmt"/>
            <line num="403" count="290" type="stmt"/>
            <line falsecount="290" truecount="1449" num="403" type="cond"/>
            <line num="404" count="1448" type="stmt"/>
            <line num="405" count="1448" type="stmt"/>
            <line num="406" count="1449" type="stmt"/>
            <line num="409" count="290" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildSlice(String,double[]) : VolatilityCube" num="419" count="284" type="method"/>
            <line num="421" count="284" type="stmt"/>
            <line num="422" count="284" type="stmt"/>
            <line num="423" count="284" type="stmt"/>
            <line num="425" count="284" type="stmt"/>
            <line num="426" count="285" type="stmt"/>
            <line num="427" count="285" type="stmt"/>
            <line num="429" count="285" type="stmt"/>
            <line num="430" count="285" type="stmt"/>
            <line num="431" count="285" type="stmt"/>
            <line num="432" count="285" type="stmt"/>
            <line falsecount="0" truecount="285" num="432" type="cond"/>
            <line num="433" count="284" type="stmt"/>
            <line num="435" count="285" type="stmt"/>
            <line num="437" count="285" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="285" type="stmt"/>
            <line num="451" count="285" type="stmt"/>
            <line complexity="1" visibility="private" signature="gatherParameters() : void" num="457" count="5" type="method"/>
            <line num="459" count="5" type="stmt"/>
            <line num="460" count="5" type="stmt"/>
            <line num="461" count="5" type="stmt"/>
            <line num="463" count="5" type="stmt"/>
            <line num="464" count="5" type="stmt"/>
            <line num="465" count="5" type="stmt"/>
            <line num="467" count="5" type="stmt"/>
            <line num="468" count="5" type="stmt"/>
            <line num="469" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="runOptimization() : void" num="478" count="5" type="method"/>
            <line num="480" count="5" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="488" count="284" type="method"/>
            <line num="492" count="285" type="stmt"/>
            <line num="495" count="285" type="stmt"/>
            <line num="496" count="285" type="stmt"/>
            <line num="497" count="285" type="stmt"/>
            <line num="500" count="285" type="stmt"/>
            <line num="501" count="285" type="stmt"/>
            <line num="502" count="285" type="stmt"/>
            <line num="503" count="285" type="stmt"/>
            <line num="504" count="285" type="stmt"/>
            <line num="505" count="285" type="stmt"/>
            <line num="506" count="285" type="stmt"/>
            <line num="507" count="285" type="stmt"/>
            <line num="509" count="285" type="stmt"/>
            <line num="511" count="285" type="stmt"/>
            <line num="512" count="285" type="stmt"/>
            <line num="513" count="285" type="stmt"/>
            <line num="514" count="7125" type="stmt"/>
            <line num="515" count="7124" type="stmt"/>
            <line num="516" count="7125" type="stmt"/>
            <line num="517" count="7125" type="stmt"/>
            <line num="519" count="7125" type="stmt"/>
            <line falsecount="0" truecount="7125" num="520" type="cond"/>
            <line num="521" count="7125" type="stmt"/>
            <line falsecount="0" truecount="7125" num="522" type="cond"/>
            <line num="525" count="7125" type="stmt"/>
            <line num="526" count="7125" type="stmt"/>
            <line falsecount="7124" truecount="0" num="526" type="cond"/>
            <line num="527" count="0" type="stmt"/>
            <line num="529" count="7125" type="stmt"/>
            <line num="531" count="7125" type="stmt"/>
            <line num="532" count="7125" type="stmt"/>
            <line num="535" count="7125" type="stmt"/>
            <line num="537" count="7125" type="stmt"/>
            <line num="541" count="285" type="stmt"/>
            <line num="542" count="285" type="stmt"/>
            <line num="543" count="285" type="stmt"/>
            <line num="544" count="7101" type="stmt"/>
            <line num="545" count="7100" type="stmt"/>
            <line num="546" count="7101" type="stmt"/>
            <line num="547" count="7101" type="stmt"/>
            <line num="549" count="7101" type="stmt"/>
            <line falsecount="0" truecount="7101" num="550" type="cond"/>
            <line num="551" count="7101" type="stmt"/>
            <line falsecount="0" truecount="7101" num="552" type="cond"/>
            <line num="555" count="7101" type="stmt"/>
            <line num="556" count="7101" type="stmt"/>
            <line falsecount="5676" truecount="1425" num="556" type="cond"/>
            <line num="557" count="1425" type="stmt"/>
            <line num="559" count="5676" type="stmt"/>
            <line num="561" count="5676" type="stmt"/>
            <line num="562" count="5676" type="stmt"/>
            <line num="565" count="7101" type="stmt"/>
            <line num="568" count="7101" type="stmt"/>
            <line num="597" count="5" type="stmt"/>
            <line num="598" count="5" type="stmt"/>
            <line num="600" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="611" count="1" type="method"/>
            <line num="612" count="1" type="stmt"/>
            <line num="613" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="619" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="627" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(boolean,double,double,int) : void" num="639" count="1" type="method"/>
            <line num="640" count="1" type="stmt"/>
            <line num="641" count="1" type="stmt"/>
            <line num="642" count="1" type="stmt"/>
            <line num="643" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReplicationUseAsOffset() : boolean" num="649" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="656" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="663" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : int" num="670" count="0" type="method"/>
            <line num="671" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="674" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCorrelationDecay(double) : void" num="679" count="0" type="method"/>
            <line num="680" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="684" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIborOisDecorrelation(double) : void" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : double" num="694" count="0" type="method"/>
            <line num="695" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBeta() : double" num="698" count="0" type="method"/>
            <line num="699" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseLinearInterpolation() : boolean" num="705" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUseLinearInterpolation(boolean) : void" num="712" count="1" type="method"/>
            <line num="713" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="SwaptionInfo(int,int,int)" num="728" count="249" type="method"/>
            <line num="729" count="249" type="stmt"/>
            <line num="730" count="249" type="stmt"/>
            <line num="731" count="249" type="stmt"/>
            <line complexity="5" visibility="package" signature="SwaptionInfo(int,int,int,TableConvention)" num="734" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="745" count="14226" type="method"/>
            <line num="747" count="14226" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/calibration/SABRCubeParallelCalibration.java" name="SABRCubeParallelCalibration.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="16" loc="121" coveredmethods="4" methods="16" elements="36" classes="1" ncloc="75" statements="20" conditionals="0" coveredstatements="8"/>
            <class name="SABRCubeParallelCalibration">
               <metrics coveredelements="12" coveredconditionals="0" complexity="16" coveredmethods="4" methods="16" elements="36" statements="20" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRCubeParallelCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildCube(String,double[]) : VolatilityCube" num="47" count="9" type="method"/>
            <line num="50" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initializeParameters() : void" num="55" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="61" count="9" type="method"/>
            <line num="63" count="9" type="stmt"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="69" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialCorrelationDecay() : double" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialCorrelationDecay(double) : void" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialIborOisDecorrelation() : double" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialIborOisDecorrelation(double) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialDisplacement() : double" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialDisplacement(double) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialBeta() : double" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialBeta(double) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialRho() : double" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialRho(double) : void" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialVolvol() : double" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialVolvol(double) : void" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/calibration/SABRShiftedSmileCalibration.java" name="SABRShiftedSmileCalibration.java">
            <metrics coveredelements="234" coveredconditionals="22" complexity="36" loc="617" coveredmethods="12" methods="17" elements="270" classes="1" ncloc="382" statements="221" conditionals="32" coveredstatements="200"/>
            <class name="SABRShiftedSmileCalibration">
               <metrics coveredelements="234" coveredconditionals="22" complexity="36" coveredmethods="12" methods="17" elements="270" statements="221" conditionals="32" coveredstatements="200"/>
            </class>
            <line complexity="1" visibility="public" signature="createSABRVolatilityCube(String,LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel,double,double,double,double) : SABRVolatilityCube" num="89" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createVolatilityCubeLattice(String,LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel) : Map&lt;Integer, DataTable&gt;" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRShiftedSmileCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel,double,double,double,double)" num="142" count="11" type="method"/>
            <line num="145" count="11" type="stmt"/>
            <line num="146" count="11" type="stmt"/>
            <line num="147" count="11" type="stmt"/>
            <line num="148" count="11" type="stmt"/>
            <line num="149" count="11" type="stmt"/>
            <line num="150" count="11" type="stmt"/>
            <line num="151" count="11" type="stmt"/>
            <line num="152" count="11" type="stmt"/>
            <line num="153" count="11" type="stmt"/>
            <line num="154" count="11" type="stmt"/>
            <line num="156" count="11" type="stmt"/>
            <line num="157" count="11" type="stmt"/>
            <line num="158" count="11" type="stmt"/>
            <line num="159" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(String) : SABRVolatilityCube" num="170" count="11" type="method"/>
            <line num="172" count="11" type="stmt"/>
            <line num="173" count="11" type="stmt"/>
            <line num="175" count="11" type="stmt"/>
            <line num="176" count="11" type="stmt"/>
            <line num="178" count="11" type="stmt"/>
            <line num="179" count="11" type="stmt"/>
            <line num="181" count="11" type="stmt"/>
            <line complexity="4" visibility="private" signature="calibrateSmilesOnNodes() : void" num="193" count="11" type="method"/>
            <line num="196" count="11" type="stmt"/>
            <line num="197" count="11" type="stmt"/>
            <line num="198" count="11" type="stmt"/>
            <line num="199" count="11" type="stmt"/>
            <line num="200" count="11" type="stmt"/>
            <line num="203" count="11" type="stmt"/>
            <line num="205" count="11" type="stmt"/>
            <line num="206" count="11" type="stmt"/>
            <line num="209" count="11" type="stmt"/>
            <line num="210" count="11" type="stmt"/>
            <line num="211" count="55" type="stmt"/>
            <line num="213" count="11" type="stmt"/>
            <line num="214" count="11" type="stmt"/>
            <line num="215" count="55" type="stmt"/>
            <line num="218" count="11" type="stmt"/>
            <line num="219" count="55" type="stmt"/>
            <line num="220" count="275" type="stmt"/>
            <line num="221" count="275" type="stmt"/>
            <line num="225" count="275" type="stmt"/>
            <line num="226" count="275" type="stmt"/>
            <line num="227" count="2475" type="stmt"/>
            <line falsecount="11" truecount="2464" num="227" type="cond"/>
            <line num="228" count="2464" type="stmt"/>
            <line num="232" count="275" type="stmt"/>
            <line num="233" count="275" type="stmt"/>
            <line num="235" count="275" type="stmt"/>
            <line num="236" count="275" type="stmt"/>
            <line num="237" count="2475" type="stmt"/>
            <line falsecount="11" truecount="2464" num="237" type="cond"/>
            <line num="238" count="2464" type="stmt"/>
            <line num="239" count="2464" type="stmt"/>
            <line num="245" count="275" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="253" count="29683" type="method"/>
            <line num="257" count="29683" type="stmt"/>
            <line num="258" count="29683" type="stmt"/>
            <line num="259" count="29683" type="stmt"/>
            <line num="261" count="29682" type="stmt"/>
            <line falsecount="29690" truecount="266015" num="261" type="cond"/>
            <line num="262" count="266018" type="stmt"/>
            <line num="269" count="275" type="stmt"/>
            <line num="273" count="275" type="stmt"/>
            <line num="276" count="275" type="stmt"/>
            <line num="277" count="275" type="stmt"/>
            <line num="278" count="275" type="stmt"/>
            <line num="279" count="275" type="stmt"/>
            <line num="280" count="275" type="stmt"/>
            <line num="282" count="275" type="stmt"/>
            <line num="286" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="286" type="cond"/>
            <line num="287" count="11" type="stmt"/>
            <line num="289" count="11" type="stmt"/>
            <line num="291" count="11" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findInterpolationNodes() : void" num="305" count="11" type="method"/>
            <line num="307" count="11" type="stmt"/>
            <line num="308" count="11" type="stmt"/>
            <line num="309" count="11" type="stmt"/>
            <line num="311" count="11" type="stmt"/>
            <line num="312" count="11" type="stmt"/>
            <line num="313" count="11" type="stmt"/>
            <line num="314" count="11" type="stmt"/>
            <line num="316" count="11" type="stmt"/>
            <line num="317" count="55" type="stmt"/>
            <line num="318" count="275" type="stmt"/>
            <line num="319" count="275" type="stmt"/>
            <line num="320" count="1100" type="stmt"/>
            <line falsecount="0" truecount="1100" num="320" type="cond"/>
            <line num="321" count="1100" type="stmt"/>
            <line num="324" count="275" type="stmt"/>
            <line num="325" count="1100" type="stmt"/>
            <line falsecount="11" truecount="1089" num="325" type="cond"/>
            <line num="326" count="1089" type="stmt"/>
            <line num="331" count="275" type="stmt"/>
            <line falsecount="0" truecount="275" num="331" type="cond"/>
            <line num="332" count="275" type="stmt"/>
            <line num="333" count="275" type="stmt"/>
            <line num="334" count="275" type="stmt"/>
            <line num="338" count="11" type="stmt"/>
            <line num="342" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="makePhysicalVolatilities() : void" num="356" count="11" type="method"/>
            <line num="359" count="11" type="stmt"/>
            <line num="360" count="11" type="stmt"/>
            <line num="361" count="11" type="stmt"/>
            <line num="363" count="11" type="stmt"/>
            <line num="364" count="11" type="stmt"/>
            <line num="365" count="55" type="stmt"/>
            <line num="366" count="275" type="stmt"/>
            <line num="367" count="275" type="stmt"/>
            <line num="369" count="275" type="stmt"/>
            <line num="370" count="275" type="stmt"/>
            <line num="372" count="275" type="stmt"/>
            <line num="373" count="275" type="stmt"/>
            <line num="374" count="275" type="stmt"/>
            <line num="376" count="275" type="stmt"/>
            <line num="381" count="11" type="stmt"/>
            <line num="384" count="11" type="stmt"/>
            <line num="385" count="11" type="stmt"/>
            <line num="387" count="11" type="stmt"/>
            <line num="388" count="11" type="stmt"/>
            <line num="394" count="11" type="stmt"/>
            <line num="395" count="11" type="stmt"/>
            <line num="396" count="11" type="stmt"/>
            <line num="398" count="11" type="stmt"/>
            <line num="400" count="44" type="stmt"/>
            <line num="401" count="44" type="stmt"/>
            <line num="402" count="44" type="stmt"/>
            <line num="404" count="44" type="stmt"/>
            <line num="405" count="44" type="stmt"/>
            <line num="406" count="44" type="stmt"/>
            <line num="409" count="44" type="stmt"/>
            <line num="410" count="220" type="stmt"/>
            <line num="411" count="1100" type="stmt"/>
            <line num="414" count="1100" type="stmt"/>
            <line falsecount="0" truecount="1100" num="414" type="cond"/>
            <line num="415" count="1100" type="stmt"/>
            <line num="416" count="1100" type="stmt"/>
            <line num="418" count="1100" type="stmt"/>
            <line num="419" count="1100" type="stmt"/>
            <line num="420" count="1100" type="stmt"/>
            <line num="424" count="1100" type="stmt"/>
            <line falsecount="11" truecount="1089" num="424" type="cond"/>
            <line num="425" count="1089" type="stmt"/>
            <line num="426" count="1089" type="stmt"/>
            <line num="428" count="1089" type="stmt"/>
            <line num="429" count="1089" type="stmt"/>
            <line num="430" count="1089" type="stmt"/>
            <line num="435" count="44" type="stmt"/>
            <line num="437" count="44" type="stmt"/>
            <line num="441" count="44" type="stmt"/>
            <line num="442" count="44" type="stmt"/>
            <line complexity="2" visibility="private" signature="findPayerVolatilities() : void" num="449" count="11" type="method"/>
            <line num="452" count="11" type="stmt"/>
            <line num="453" count="11" type="stmt"/>
            <line num="455" count="55" type="stmt"/>
            <line num="456" count="55" type="stmt"/>
            <line num="457" count="55" type="stmt"/>
            <line num="459" count="55" type="stmt"/>
            <line num="460" count="275" type="stmt"/>
            <line num="461" count="1375" type="stmt"/>
            <line falsecount="0" truecount="1375" num="461" type="cond"/>
            <line num="463" count="1375" type="stmt"/>
            <line num="464" count="1375" type="stmt"/>
            <line num="466" count="1375" type="stmt"/>
            <line num="467" count="1375" type="stmt"/>
            <line num="468" count="1375" type="stmt"/>
            <line num="470" count="1375" type="stmt"/>
            <line num="471" count="1375" type="stmt"/>
            <line num="472" count="1375" type="stmt"/>
            <line num="477" count="55" type="stmt"/>
            <line num="478" count="55" type="stmt"/>
            <line complexity="2" visibility="private" signature="findReceiverVolatilities() : void" num="486" count="11" type="method"/>
            <line num="489" count="11" type="stmt"/>
            <line num="490" count="11" type="stmt"/>
            <line num="492" count="55" type="stmt"/>
            <line num="493" count="55" type="stmt"/>
            <line num="494" count="55" type="stmt"/>
            <line num="496" count="55" type="stmt"/>
            <line num="497" count="275" type="stmt"/>
            <line num="498" count="1375" type="stmt"/>
            <line falsecount="11" truecount="1364" num="498" type="cond"/>
            <line num="500" count="1364" type="stmt"/>
            <line num="501" count="1364" type="stmt"/>
            <line num="503" count="1364" type="stmt"/>
            <line num="504" count="1364" type="stmt"/>
            <line num="505" count="1364" type="stmt"/>
            <line num="507" count="1364" type="stmt"/>
            <line num="508" count="1364" type="stmt"/>
            <line num="509" count="1364" type="stmt"/>
            <line num="514" count="55" type="stmt"/>
            <line num="515" count="55" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : void" num="522" count="11" type="method"/>
            <line num="524" count="11" type="stmt"/>
            <line num="525" count="11" type="stmt"/>
            <line num="526" count="11" type="stmt"/>
            <line num="528" count="11" type="stmt"/>
            <line num="529" count="11" type="stmt"/>
            <line num="530" count="55" type="stmt"/>
            <line num="531" count="275" type="stmt"/>
            <line num="532" count="275" type="stmt"/>
            <line num="534" count="275" type="stmt"/>
            <line num="535" count="275" type="stmt"/>
            <line num="537" count="275" type="stmt"/>
            <line num="538" count="275" type="stmt"/>
            <line num="539" count="275" type="stmt"/>
            <line num="541" count="275" type="stmt"/>
            <line num="545" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="545" type="cond"/>
            <line num="546" count="11" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="560" count="11" type="method"/>
            <line num="561" count="11" type="stmt"/>
            <line num="562" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="568" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="576" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseLinearInterpolation() : boolean" num="583" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUseLinearInterpolation(boolean) : void" num="590" count="2" type="method"/>
            <line num="591" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double,Schedule) : double" num="601" count="2739" type="method"/>
            <line num="603" count="2739" type="stmt"/>
            <line num="604" count="2739" type="stmt"/>
            <line num="605" count="2739" type="stmt"/>
            <line falsecount="2739" truecount="27995" num="605" type="cond"/>
            <line num="606" count="27995" type="stmt"/>
            <line num="608" count="2739" type="stmt"/>
            <line num="610" count="2739" type="stmt"/>
            <line falsecount="2739" truecount="0" num="610" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="613" count="2739" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/calibration/StaticCubeCalibration.java" name="StaticCubeCalibration.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="78" coveredmethods="4" methods="5" elements="16" classes="1" ncloc="38" statements="11" conditionals="0" coveredstatements="8"/>
            <class name="StaticCubeCalibration">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType,double,double)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildCube(String,double[]) : VolatilityCube" num="57" count="22" type="method"/>
            <line num="59" count="22" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initializeParameters() : void" num="62" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="69" count="22" type="method"/>
            <line num="71" count="22" type="stmt"/>
            <line num="72" count="22" type="stmt"/>
            <line num="73" count="22" type="stmt"/>
            <line num="74" count="22" type="stmt"/>
            <line num="75" count="22" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.models">
         <metrics coveredelements="1004" complexity="635" loc="6285" methods="260" classes="18" statements="1977" coveredconditionals="223" coveredmethods="81" elements="2893" ncloc="3649" files="8" conditionals="656" coveredstatements="700"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/FundingCapacity.java" name="FundingCapacity.java">
            <metrics coveredelements="40" coveredconditionals="1" complexity="13" loc="236" coveredmethods="6" methods="10" elements="90" classes="2" ncloc="140" statements="74" conditionals="6" coveredstatements="33"/>
            <class name="FundingCapacity">
               <metrics coveredelements="33" coveredconditionals="1" complexity="10" coveredmethods="3" methods="7" elements="83" statements="70" conditionals="6" coveredstatements="29"/>
            </class>
            <class name="FundingCapacity.DefaultFactors">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultFactors(RandomVariable,RandomVariable)" num="61" count="6" type="method"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbability() : RandomVariable" num="66" count="4" type="method"/>
            <line num="67" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultCompensation() : RandomVariable" num="70" count="4" type="method"/>
            <line num="71" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="FundingCapacity(String,RandomVariable,SortedMap&lt;Double, Double&gt;)" num="75" count="3" type="method"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDefaultFactors(double,RandomVariable) : DefaultFactors" num="82" count="6" type="method"/>
            <line num="87" count="6" type="stmt"/>
            <line num="88" count="6" type="stmt"/>
            <line num="89" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="99" count="6" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line num="101" count="6" type="stmt"/>
            <line num="102" count="6" type="stmt"/>
            <line num="105" count="6" type="stmt"/>
            <line num="106" count="6" type="stmt"/>
            <line num="108" count="6" type="stmt"/>
            <line num="109" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="111" count="21" type="stmt"/>
            <line num="112" count="21" type="stmt"/>
            <line num="114" count="21" type="stmt"/>
            <line num="116" count="21" type="stmt"/>
            <line num="122" count="21" type="stmt"/>
            <line num="128" count="21" type="stmt"/>
            <line num="129" count="21" type="stmt"/>
            <line num="134" count="6" type="stmt"/>
            <line num="135" count="6" type="stmt"/>
            <line num="136" count="6" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDefaultCompensationForRequiredFunding(double,RandomVariable) : RandomVariable" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSurvivalProbabilityRequiredFunding(double,RandomVariable) : RandomVariable" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentFundingLevel() : RandomVariable" num="223" count="1" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="227" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModel.java" name="HullWhiteModel.java">
            <metrics coveredelements="407" coveredconditionals="78" complexity="105" loc="980" coveredmethods="36" methods="45" elements="509" classes="1" ncloc="638" statements="350" conditionals="114" coveredstatements="293"/>
            <class name="HullWhiteModel">
               <metrics coveredelements="407" coveredconditionals="78" complexity="105" coveredmethods="36" methods="45" elements="509" statements="350" conditionals="114" coveredstatements="293"/>
            </class>
            <line complexity="3" visibility="public" signature="HullWhiteModel(RandomVariableFactory,TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, Object&gt;)" num="164" count="39" type="method"/>
            <line num="174" count="39" type="stmt"/>
            <line num="175" count="39" type="stmt"/>
            <line num="176" count="39" type="stmt"/>
            <line num="177" count="39" type="stmt"/>
            <line num="178" count="39" type="stmt"/>
            <line num="179" count="39" type="stmt"/>
            <line num="181" count="39" type="stmt"/>
            <line num="182" count="39" type="stmt"/>
            <line falsecount="0" truecount="39" num="182" type="cond"/>
            <line num="183" count="39" type="stmt"/>
            <line num="184" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="184" type="cond"/>
            <line num="185" count="10" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="193" count="39" type="stmt"/>
            <line num="194" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="HullWhiteModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, Object&gt;)" num="207" count="9" type="method"/>
            <line num="215" count="9" type="stmt"/>
            <line complexity="6" visibility="public" signature="of(RandomVariableFactory,TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,CalibrationProduct[],Map&lt;String, Object&gt;) : HullWhiteModel" num="233" count="1" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="247" type="cond"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="257" type="cond"/>
            <line num="258" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="272" count="4395" type="method"/>
            <line num="274" count="4380" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="277" count="74" type="method"/>
            <line num="279" count="74" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="282" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="288" count="9981" type="method"/>
            <line num="290" count="9984" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="293" count="8906" type="method"/>
            <line num="295" count="8907" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="298" count="37" type="method"/>
            <line num="301" count="37" type="stmt"/>
            <line num="302" count="37" type="stmt"/>
            <line complexity="6" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="305" count="7437" type="method"/>
            <line num="307" count="7461" type="stmt"/>
            <line falsecount="7496" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="311" count="7515" type="stmt"/>
            <line falsecount="5438" truecount="1920" num="311" type="cond"/>
            <line num="313" count="1943" type="stmt"/>
            <line num="314" count="1961" type="stmt"/>
            <line num="317" count="5460" type="stmt"/>
            <line num="318" count="5511" type="stmt"/>
            <line falsecount="3969" truecount="1598" num="318" type="cond"/>
            <line num="324" count="1606" type="stmt"/>
            <line num="325" count="1589" type="stmt"/>
            <line falsecount="0" truecount="1594" num="325" type="cond"/>
            <line num="326" count="1604" type="stmt"/>
            <line num="328" count="1621" type="stmt"/>
            <line num="329" count="1630" type="stmt"/>
            <line num="330" count="1547" type="stmt"/>
            <line num="333" count="1490" type="stmt"/>
            <line num="338" count="3973" type="stmt"/>
            <line num="340" count="4119" type="stmt"/>
            <line num="343" count="4128" type="stmt"/>
            <line num="346" count="4130" type="stmt"/>
            <line num="347" count="4130" type="stmt"/>
            <line falsecount="0" truecount="4130" num="347" type="cond"/>
            <line num="348" count="4130" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="4126" type="stmt"/>
            <line num="356" count="4132" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="367" count="4943" type="method"/>
            <line num="370" count="4946" type="stmt"/>
            <line num="371" count="4942" type="stmt"/>
            <line num="373" count="4933" type="stmt"/>
            <line falsecount="4934" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="377" count="4931" type="stmt"/>
            <line num="378" count="4940" type="stmt"/>
            <line falsecount="4626" truecount="312" num="378" type="cond"/>
            <line num="379" count="312" type="stmt"/>
            <line num="381" count="4936" type="stmt"/>
            <line num="383" count="4940" type="stmt"/>
            <line num="384" count="4957" type="stmt"/>
            <line num="386" count="4958" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="389" count="9835" type="method"/>
            <line num="391" count="9842" type="stmt"/>
            <line num="392" count="9835" type="stmt"/>
            <line num="394" count="9783" type="stmt"/>
            <line num="395" count="9792" type="stmt"/>
            <line falsecount="9181" truecount="623" num="395" type="cond"/>
            <line num="396" count="623" type="stmt"/>
            <line num="399" count="9808" type="stmt"/>
            <line num="400" count="9781" type="stmt"/>
            <line num="402" count="9779" type="stmt"/>
            <line num="404" count="9792" type="stmt"/>
            <line num="406" count="9781" type="stmt"/>
            <line num="407" count="9780" type="stmt"/>
            <line falsecount="4949" truecount="4934" num="407" type="cond"/>
            <line num="409" count="4939" type="stmt"/>
            <line num="410" count="4942" type="stmt"/>
            <line num="412" count="4951" type="stmt"/>
            <line falsecount="0" truecount="4951" num="412" type="cond"/>
            <line num="414" count="4950" type="stmt"/>
            <line num="415" count="4949" type="stmt"/>
            <line num="416" count="4953" type="stmt"/>
            <line num="417" count="4955" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="423" count="9891" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="426" count="1055" type="method"/>
            <line num="428" count="1056" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="431" count="6387" type="method"/>
            <line num="434" count="6387" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="442" count="4552" type="method"/>
            <line num="444" count="4552" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="447" count="147" type="method"/>
            <line num="449" count="147" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="452" count="202" type="method"/>
            <line num="454" count="202" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="457" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="462" count="3589" type="method"/>
            <line num="464" count="3588" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="467" count="5765" type="method"/>
            <line num="469" count="5766" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="472" count="6489" type="method"/>
            <line num="474" count="6489" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModel" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="496" count="15050" type="method"/>
            <line num="497" count="15051" type="stmt"/>
            <line num="498" count="15046" type="stmt"/>
            <line falsecount="20" truecount="15029" num="498" type="cond"/>
            <line num="499" count="15047" type="stmt"/>
            <line num="501" count="15045" type="stmt"/>
            <line num="503" count="15048" type="stmt"/>
            <line num="505" count="15048" type="stmt"/>
            <line num="506" count="15052" type="stmt"/>
            <line num="509" count="15050" type="stmt"/>
            <line num="511" count="15052" type="stmt"/>
            <line complexity="2" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="514" count="17327" type="method"/>
            <line num="515" count="17327" type="stmt"/>
            <line num="516" count="17326" type="stmt"/>
            <line falsecount="15050" truecount="2275" num="516" type="cond"/>
            <line num="517" count="2276" type="stmt"/>
            <line num="518" count="2276" type="stmt"/>
            <line num="519" count="2275" type="stmt"/>
            <line num="521" count="15049" type="stmt"/>
            <line num="522" count="15051" type="stmt"/>
            <line num="523" count="15040" type="stmt"/>
            <line num="524" count="15045" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIntegratedDriftAdjustment(MonteCarloProcess,int) : RandomVariable" num="534" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : RandomVariable" num="562" count="15051" type="method"/>
            <line num="563" count="15051" type="stmt"/>
            <line num="564" count="15050" type="stmt"/>
            <line num="566" count="15048" type="stmt"/>
            <line num="568" count="15050" type="stmt"/>
            <line num="570" count="15046" type="stmt"/>
            <line num="572" count="15048" type="stmt"/>
            <line num="574" count="15042" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : RandomVariable" num="584" count="754210" type="method"/>
            <line num="585" count="754710" type="stmt"/>
            <line num="586" count="754108" type="stmt"/>
            <line falsecount="689354" truecount="65180" num="586" type="cond"/>
            <line num="587" count="65243" type="stmt"/>
            <line num="590" count="754773" type="stmt"/>
            <line num="591" count="753075" type="stmt"/>
            <line falsecount="664771" truecount="88658" num="591" type="cond"/>
            <line num="592" count="88715" type="stmt"/>
            <line num="595" count="753633" type="stmt"/>
            <line num="596" count="753104" type="stmt"/>
            <line num="597" count="753380" type="stmt"/>
            <line num="598" count="753602" type="stmt"/>
            <line falsecount="753127" truecount="6300382" num="598" type="cond"/>
            <line num="599" count="6311956" type="stmt"/>
            <line num="600" count="6260853" type="stmt"/>
            <line num="601" count="6176745" type="stmt"/>
            <line num="602" count="6229678" type="stmt"/>
            <line num="604" count="753298" type="stmt"/>
            <line num="605" count="753523" type="stmt"/>
            <line num="606" count="751820" type="stmt"/>
            <line num="608" count="750326" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : RandomVariable" num="619" count="40014" type="method"/>
            <line num="620" count="40013" type="stmt"/>
            <line num="621" count="40017" type="stmt"/>
            <line falsecount="19737" truecount="20271" num="621" type="cond"/>
            <line num="622" count="20271" type="stmt"/>
            <line num="625" count="40014" type="stmt"/>
            <line num="626" count="40009" type="stmt"/>
            <line falsecount="19680" truecount="20327" num="626" type="cond"/>
            <line num="627" count="20329" type="stmt"/>
            <line num="630" count="40010" type="stmt"/>
            <line num="631" count="40009" type="stmt"/>
            <line num="632" count="40018" type="stmt"/>
            <line num="633" count="40008" type="stmt"/>
            <line falsecount="39984" truecount="169200" num="633" type="cond"/>
            <line num="634" count="169214" type="stmt"/>
            <line num="635" count="169130" type="stmt"/>
            <line num="636" count="169056" type="stmt"/>
            <line num="639" count="168997" type="stmt"/>
            <line num="641" count="39986" type="stmt"/>
            <line num="642" count="39984" type="stmt"/>
            <line num="643" count="39990" type="stmt"/>
            <line num="647" count="39984" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : RandomVariable" num="660" count="9055" type="method"/>
            <line num="661" count="9053" type="stmt"/>
            <line falsecount="9058" truecount="0" num="661" type="cond"/>
            <line num="662" count="0" type="stmt"/>
            <line num="664" count="9056" type="stmt"/>
            <line num="665" count="8998" type="stmt"/>
            <line falsecount="8704" truecount="312" num="665" type="cond"/>
            <line num="666" count="312" type="stmt"/>
            <line num="669" count="9011" type="stmt"/>
            <line num="670" count="8949" type="stmt"/>
            <line falsecount="4831" truecount="4128" num="670" type="cond"/>
            <line num="671" count="4143" type="stmt"/>
            <line num="674" count="8982" type="stmt"/>
            <line num="675" count="8970" type="stmt"/>
            <line num="676" count="8977" type="stmt"/>
            <line num="677" count="8983" type="stmt"/>
            <line num="678" count="8931" type="stmt"/>
            <line falsecount="8941" truecount="8337" num="678" type="cond"/>
            <line num="679" count="8335" type="stmt"/>
            <line num="680" count="8335" type="stmt"/>
            <line num="681" count="8330" type="stmt"/>
            <line num="682" count="8333" type="stmt"/>
            <line num="683" count="8331" type="stmt"/>
            <line num="684" count="8331" type="stmt"/>
            <line num="689" count="8332" type="stmt"/>
            <line num="690" count="8333" type="stmt"/>
            <line num="692" count="8918" type="stmt"/>
            <line num="693" count="8920" type="stmt"/>
            <line num="694" count="8874" type="stmt"/>
            <line num="695" count="8902" type="stmt"/>
            <line num="696" count="8865" type="stmt"/>
            <line num="697" count="8881" type="stmt"/>
            <line num="703" count="8897" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : RandomVariable" num="706" count="19995" type="method"/>
            <line num="707" count="19995" type="stmt"/>
            <line falsecount="19978" truecount="20" num="707" type="cond"/>
            <line num="708" count="20" type="stmt"/>
            <line num="710" count="19979" type="stmt"/>
            <line num="711" count="19977" type="stmt"/>
            <line falsecount="19663" truecount="312" num="711" type="cond"/>
            <line num="712" count="312" type="stmt"/>
            <line num="715" count="19976" type="stmt"/>
            <line num="716" count="19972" type="stmt"/>
            <line falsecount="9847" truecount="10126" num="716" type="cond"/>
            <line num="717" count="10127" type="stmt"/>
            <line num="720" count="19976" type="stmt"/>
            <line num="721" count="19974" type="stmt"/>
            <line num="722" count="19973" type="stmt"/>
            <line num="723" count="19977" type="stmt"/>
            <line num="724" count="19974" type="stmt"/>
            <line falsecount="19978" truecount="123611" num="724" type="cond"/>
            <line num="725" count="123626" type="stmt"/>
            <line num="726" count="123591" type="stmt"/>
            <line num="727" count="123551" type="stmt"/>
            <line num="728" count="123408" type="stmt"/>
            <line num="729" count="123504" type="stmt"/>
            <line num="730" count="123631" type="stmt"/>
            <line num="734" count="123502" type="stmt"/>
            <line num="735" count="123604" type="stmt"/>
            <line num="737" count="19976" type="stmt"/>
            <line num="738" count="19981" type="stmt"/>
            <line num="739" count="19978" type="stmt"/>
            <line num="740" count="19975" type="stmt"/>
            <line num="741" count="19975" type="stmt"/>
            <line num="742" count="19978" type="stmt"/>
            <line num="747" count="19980" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : RandomVariable" num="760" count="15077" type="method"/>
            <line num="761" count="15077" type="stmt"/>
            <line num="762" count="15078" type="stmt"/>
            <line falsecount="15078" truecount="0" num="762" type="cond"/>
            <line num="763" count="0" type="stmt"/>
            <line num="766" count="15079" type="stmt"/>
            <line num="767" count="15078" type="stmt"/>
            <line falsecount="5238" truecount="9839" num="767" type="cond"/>
            <line num="768" count="9840" type="stmt"/>
            <line num="771" count="15078" type="stmt"/>
            <line num="772" count="15078" type="stmt"/>
            <line num="773" count="15079" type="stmt"/>
            <line num="774" count="15079" type="stmt"/>
            <line num="775" count="15073" type="stmt"/>
            <line falsecount="15070" truecount="119079" num="775" type="cond"/>
            <line num="776" count="119086" type="stmt"/>
            <line num="777" count="119038" type="stmt"/>
            <line num="778" count="119012" type="stmt"/>
            <line num="779" count="118858" type="stmt"/>
            <line num="780" count="118975" type="stmt"/>
            <line num="781" count="119056" type="stmt"/>
            <line num="783" count="119006" type="stmt"/>
            <line num="784" count="119068" type="stmt"/>
            <line num="786" count="15070" type="stmt"/>
            <line num="787" count="15069" type="stmt"/>
            <line num="788" count="15070" type="stmt"/>
            <line num="789" count="15070" type="stmt"/>
            <line num="790" count="15071" type="stmt"/>
            <line num="791" count="15072" type="stmt"/>
            <line num="794" count="15072" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : RandomVariable" num="797" count="30" type="method"/>
            <line num="798" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedVolatilityModel(ShortRateVolatilityModel) : HullWhiteModel" num="801" count="29" type="method"/>
            <line num="803" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityModel() : ShortRateVolatilityModel" num="806" count="1" type="method"/>
            <line num="808" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="811" count="0" type="method"/>
            <line num="814" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="822" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="826" type="cond"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="829" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="837" type="cond"/>
            <line num="838" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDiscountFactor(MonteCarloProcess,double) : RandomVariable" num="844" count="4129" type="method"/>
            <line num="845" count="4127" type="stmt"/>
            <line falsecount="0" truecount="4128" num="845" type="cond"/>
            <line num="846" count="4131" type="stmt"/>
            <line num="847" count="4128" type="stmt"/>
            <line falsecount="0" truecount="4129" num="847" type="cond"/>
            <line num="848" count="4129" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getDiscountFactor(MonteCarloProcess,int) : RandomVariable" num="862" count="4131" type="method"/>
            <line num="863" count="4130" type="stmt"/>
            <line falsecount="0" truecount="4131" num="863" type="cond"/>
            <line num="864" count="4130" type="stmt"/>
            <line num="866" count="4128" type="stmt"/>
            <line num="867" count="4132" type="stmt"/>
            <line falsecount="4095" truecount="37" num="867" type="cond"/>
            <line num="868" count="37" type="stmt"/>
            <line num="869" count="37" type="stmt"/>
            <line num="871" count="36" type="stmt"/>
            <line num="873" count="37" type="stmt"/>
            <line falsecount="37" truecount="4837" num="873" type="cond"/>
            <line num="874" count="4844" type="stmt"/>
            <line num="875" count="4858" type="stmt"/>
            <line num="876" count="4859" type="stmt"/>
            <line num="877" count="4849" type="stmt"/>
            <line num="878" count="4841" type="stmt"/>
            <line num="879" count="4843" type="stmt"/>
            <line num="880" count="4841" type="stmt"/>
            <line num="881" count="4828" type="stmt"/>
            <line num="884" count="4132" type="stmt"/>
            <line num="885" count="4131" type="stmt"/>
            <line complexity="3" visibility="private" signature="getZeroRateFromForwardCurve(MonteCarloProcess,double) : RandomVariable" num="889" count="30091" type="method"/>
            <line num="890" count="30092" type="stmt"/>
            <line falsecount="0" truecount="30095" num="890" type="cond"/>
            <line num="892" count="30094" type="stmt"/>
            <line num="893" count="30095" type="stmt"/>
            <line falsecount="30094" truecount="0" num="893" type="cond"/>
            <line num="894" count="0" type="stmt"/>
            <line num="897" count="30094" type="stmt"/>
            <line num="898" count="30092" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDiscountFactorFromForwardCurve(MonteCarloProcess,double) : RandomVariable" num="901" count="38354" type="method"/>
            <line num="902" count="38356" type="stmt"/>
            <line falsecount="0" truecount="38358" num="902" type="cond"/>
            <line num="903" count="38354" type="stmt"/>
            <line num="904" count="38344" type="stmt"/>
            <line falsecount="4552" truecount="33792" num="904" type="cond"/>
            <line num="905" count="33793" type="stmt"/>
            <line num="908" count="4552" type="stmt"/>
            <line num="909" count="4552" type="stmt"/>
            <line num="910" count="4551" type="stmt"/>
            <line num="911" count="4552" type="stmt"/>
            <line num="912" count="4552" type="stmt"/>
            <line num="913" count="4553" type="stmt"/>
            <line num="914" count="4553" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDiscountFactorFromForwardCurve(MonteCarloProcess,int) : RandomVariable" num="918" count="103076" type="method"/>
            <line num="919" count="103068" type="stmt"/>
            <line num="920" count="103124" type="stmt"/>
            <line falsecount="102485" truecount="634" num="920" type="cond"/>
            <line num="922" count="634" type="stmt"/>
            <line falsecount="0" truecount="634" num="922" type="cond"/>
            <line num="923" count="634" type="stmt"/>
            <line falsecount="634" truecount="2577" num="923" type="cond"/>
            <line num="924" count="2577" type="stmt"/>
            <line num="925" count="2577" type="stmt"/>
            <line falsecount="2540" truecount="37" num="925" type="cond"/>
            <line num="926" count="37" type="stmt"/>
            <line num="927" count="37" type="stmt"/>
            <line num="930" count="2540" type="stmt"/>
            <line num="931" count="2540" type="stmt"/>
            <line num="932" count="2541" type="stmt"/>
            <line num="934" count="2577" type="stmt"/>
            <line num="939" count="103124" type="stmt"/>
            <line complexity="4" visibility="private" signature="getForwardRateInitialValue(MonteCarloProcess,int) : RandomVariable" num="942" count="2540" type="method"/>
            <line num="943" count="2540" type="stmt"/>
            <line num="944" count="2541" type="stmt"/>
            <line falsecount="0" truecount="2541" num="944" type="cond"/>
            <line num="946" count="2542" type="stmt"/>
            <line falsecount="0" truecount="2540" num="946" type="cond"/>
            <line num="947" count="2540" type="stmt"/>
            <line falsecount="2541" truecount="2539" num="947" type="cond"/>
            <line num="948" count="2539" type="stmt"/>
            <line num="949" count="2542" type="stmt"/>
            <line num="950" count="2542" type="stmt"/>
            <line num="951" count="2542" type="stmt"/>
            <line num="955" count="2541" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(ObjectInputStream) : void" num="958" count="0" type="method"/>
            <line num="959" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="965" count="0" type="stmt"/>
            <line num="966" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="970" count="0" type="method"/>
            <line num="972" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithConstantCoeff.java" name="HullWhiteModelWithConstantCoeff.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="38" loc="374" coveredmethods="0" methods="27" elements="143" classes="1" ncloc="219" statements="94" conditionals="22" coveredstatements="0"/>
            <class name="HullWhiteModelWithConstantCoeff">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="27" elements="143" statements="94" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelWithConstantCoeff(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,double,double,Map&lt;String, ?&gt;)" num="72" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="286" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="306" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getB(double,double) : double" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="359" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="364" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="368" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithDirectSimulation.java" name="HullWhiteModelWithDirectSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="60" loc="627" coveredmethods="0" methods="30" elements="299" classes="1" ncloc="368" statements="209" conditionals="60" coveredstatements="0"/>
            <class name="HullWhiteModelWithDirectSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="60" coveredmethods="0" methods="30" elements="299" statements="209" conditionals="60" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelWithDirectSimulation(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, ?&gt;)" num="141" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="329" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="340" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="385" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="404" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : double" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="430" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : double" num="463" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : double" num="502" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="507" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="521" type="cond"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : double" num="540" count="0" type="method"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="545" type="cond"/>
            <line num="547" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="559" type="cond"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="586" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line num="590" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="594" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="602" type="cond"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="617" count="0" type="method"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="621" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithShiftExtension.java" name="HullWhiteModelWithShiftExtension.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="66" loc="671" coveredmethods="0" methods="32" elements="322" classes="2" ncloc="399" statements="224" conditionals="66" coveredstatements="0"/>
            <class name="HullWhiteModelWithShiftExtension">
               <metrics coveredelements="0" coveredconditionals="0" complexity="66" coveredmethods="0" methods="32" elements="322" statements="224" conditionals="66" coveredstatements="0"/>
            </class>
            <class name="HullWhiteModelWithShiftExtension.DriftFormula">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="HullWhiteModelWithShiftExtension(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, ?&gt;)" num="145" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="281" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="332" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="337" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="342" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="372" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="399" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIntegratedDriftAdjustment(MonteCarloProcess,int) : double" num="419" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="426" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="448" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : double" num="470" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="474" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : double" num="507" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="509" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="515" type="cond"/>
            <line num="517" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="523" type="cond"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : double" num="546" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="547" type="cond"/>
            <line num="548" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="557" type="cond"/>
            <line num="559" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="565" type="cond"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : double" num="584" count="0" type="method"/>
            <line num="585" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="585" type="cond"/>
            <line num="586" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="591" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="597" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="630" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="632" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="640" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="661" count="0" type="method"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="665" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelFromCovarianceModel.java" name="LIBORMarketModelFromCovarianceModel.java">
            <metrics coveredelements="557" coveredconditionals="144" complexity="174" loc="1759" coveredmethods="39" methods="52" elements="721" classes="6" ncloc="916" statements="477" conditionals="192" coveredstatements="374"/>
            <class name="LIBORMarketModelFromCovarianceModel">
               <metrics coveredelements="557" coveredconditionals="144" complexity="174" coveredmethods="39" methods="52" elements="721" statements="477" conditionals="192" coveredstatements="374"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.StateSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.SimulationTimeInterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="of(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;) : LIBORMarketModelFromCovarianceModel" num="280" count="3071" type="method"/>
            <line num="291" count="3069" type="stmt"/>
            <line num="294" count="3072" type="stmt"/>
            <line falsecount="3065" truecount="6" num="294" type="cond"/>
            <line num="295" count="6" type="stmt"/>
            <line num="296" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="296" type="cond"/>
            <line num="297" count="4" type="stmt"/>
            <line num="300" count="6" type="stmt"/>
            <line num="301" count="6" type="stmt"/>
            <line num="302" count="6" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="308" count="6" type="stmt"/>
            <line num="310" count="6" type="stmt"/>
            <line num="312" count="6" type="stmt"/>
            <line num="315" count="3063" type="stmt"/>
            <line complexity="16" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="383" count="3236" type="method"/>
            <line num="395" count="3236" type="stmt"/>
            <line falsecount="7" truecount="3229" num="395" type="cond"/>
            <line num="396" count="3229" type="stmt"/>
            <line num="398" count="3235" type="stmt"/>
            <line falsecount="7" truecount="3226" num="398" type="cond"/>
            <line num="399" count="3226" type="stmt"/>
            <line num="401" count="3233" type="stmt"/>
            <line falsecount="224" truecount="3008" num="401" type="cond"/>
            <line num="402" count="3006" type="stmt"/>
            <line num="404" count="3236" type="stmt"/>
            <line falsecount="3235" truecount="0" num="404" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="3234" type="stmt"/>
            <line falsecount="177" truecount="3055" num="407" type="cond"/>
            <line num="408" count="3057" type="stmt"/>
            <line num="411" count="3235" type="stmt"/>
            <line num="412" count="3236" type="stmt"/>
            <line falsecount="3226" truecount="10" num="412" type="cond"/>
            <line num="413" count="10" type="stmt"/>
            <line num="416" count="3235" type="stmt"/>
            <line num="417" count="3237" type="stmt"/>
            <line num="418" count="3236" type="stmt"/>
            <line num="419" count="3235" type="stmt"/>
            <line num="420" count="3235" type="stmt"/>
            <line num="423" count="3235" type="stmt"/>
            <line falsecount="3231" truecount="6" num="423" type="cond"/>
            <line num="424" count="6" type="stmt"/>
            <line num="425" count="6" type="stmt"/>
            <line num="426" count="6" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="432" count="6" type="stmt"/>
            <line num="435" count="3231" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,Map&lt;String, ?&gt;)" num="498" count="3072" type="method"/>
            <line num="507" count="3072" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="574" count="98" type="method"/>
            <line num="584" count="98" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,LIBORCovarianceModel)" num="595" count="1" type="method"/>
            <line num="600" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel)" num="612" count="0" type="method"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,LIBORCovarianceModel,SwaptionMarketData)" num="631" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData)" num="650" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData,Map&lt;String, ?&gt;)" num="671" count="0" type="method"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="756" count="13" type="method"/>
            <line num="765" count="13" type="stmt"/>
            <line complexity="9" visibility="private" signature="getCalibrationItems(TimeDiscretization,ForwardCurve,SwaptionMarketData,boolean) : CalibrationProduct[]" num="768" count="0" type="method"/>
            <line num="769" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="769" type="cond"/>
            <line num="770" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line num="775" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="778" type="cond"/>
            <line num="779" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="779" type="cond"/>
            <line num="782" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line num="785" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="785" type="cond"/>
            <line num="786" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="788" type="cond"/>
            <line num="789" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="798" type="cond"/>
            <line num="799" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="812" type="cond"/>
            <line num="813" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="816" type="cond"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getReferenceDate() : LocalDateTime" num="839" count="17422" type="method"/>
            <line num="841" count="17470" type="stmt"/>
            <line falsecount="11332" truecount="5911" num="841" type="cond"/>
            <line complexity="3" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="855" count="628103" type="method"/>
            <line num="857" count="628140" type="stmt"/>
            <line falsecount="628128" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line num="861" count="628086" type="stmt"/>
            <line num="865" count="629099" type="stmt"/>
            <line falsecount="549" truecount="628548" num="865" type="cond"/>
            <line num="866" count="628546" type="stmt"/>
            <line num="868" count="628531" type="stmt"/>
            <line num="869" count="628281" type="stmt"/>
            <line num="871" count="628443" type="stmt"/>
            <line complexity="3" visibility="private" signature="getNumeraireDefaultableZeroBondAsOfTimeZero(MonteCarloProcess,double) : RandomVariable" num="879" count="628560" type="method"/>
            <line num="880" count="628555" type="stmt"/>
            <line num="882" count="628542" type="stmt"/>
            <line falsecount="0" truecount="628540" num="882" type="cond"/>
            <line num="884" count="628534" type="stmt"/>
            <line num="885" count="628411" type="stmt"/>
            <line falsecount="13199" truecount="615223" num="885" type="cond"/>
            <line num="886" count="615183" type="stmt"/>
            <line num="890" count="13201" type="stmt"/>
            <line num="891" count="13193" type="stmt"/>
            <line num="892" count="13196" type="stmt"/>
            <line num="893" count="13191" type="stmt"/>
            <line num="894" count="13187" type="stmt"/>
            <line num="895" count="13209" type="stmt"/>
            <line num="896" count="13208" type="stmt"/>
            <line complexity="4" visibility="private" signature="getNumeraireDefaultableZeroBondAsOfTimeZero(MonteCarloProcess,int) : RandomVariable" num="911" count="641634" type="method"/>
            <line num="912" count="641582" type="stmt"/>
            <line num="914" count="641598" type="stmt"/>
            <line falsecount="0" truecount="641616" num="914" type="cond"/>
            <line num="915" count="641615" type="stmt"/>
            <line num="917" count="641422" type="stmt"/>
            <line num="918" count="641818" type="stmt"/>
            <line num="920" count="641818" type="stmt"/>
            <line num="921" count="641818" type="stmt"/>
            <line falsecount="639173" truecount="2645" num="921" type="cond"/>
            <line num="922" count="2645" type="stmt"/>
            <line num="923" count="2645" type="stmt"/>
            <line num="924" count="2645" type="stmt"/>
            <line num="926" count="2645" type="stmt"/>
            <line falsecount="2645" truecount="334130" num="926" type="cond"/>
            <line num="927" count="334130" type="stmt"/>
            <line num="928" count="334130" type="stmt"/>
            <line num="929" count="334130" type="stmt"/>
            <line num="930" count="334130" type="stmt"/>
            <line num="931" count="334130" type="stmt"/>
            <line num="932" count="334130" type="stmt"/>
            <line num="933" count="334130" type="stmt"/>
            <line num="934" count="334130" type="stmt"/>
            <line num="936" count="2645" type="stmt"/>
            <line num="938" count="641818" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="942" count="0" type="method"/>
            <line num="944" count="0" type="stmt"/>
            <line num="945" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="947" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="ensureCacheConsistency(MonteCarloProcess) : void" num="950" count="2150755" type="method"/>
            <line num="954" count="2150754" type="stmt"/>
            <line falsecount="2148035" truecount="2709" num="954" type="cond"/>
            <line num="956" count="2709" type="stmt"/>
            <line num="957" count="2709" type="stmt"/>
            <line num="958" count="2709" type="stmt"/>
            <line num="959" count="2709" type="stmt"/>
            <line num="960" count="2709" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getNumerairetUnAdjusted(MonteCarloProcess,double) : RandomVariable" num="964" count="1268830" type="method"/>
            <line num="968" count="1268988" type="stmt"/>
            <line num="969" count="1268065" type="stmt"/>
            <line num="970" count="1268385" type="stmt"/>
            <line falsecount="1255907" truecount="12782" num="970" type="cond"/>
            <line num="974" count="12858" type="stmt"/>
            <line num="975" count="12862" type="stmt"/>
            <line num="976" count="12895" type="stmt"/>
            <line falsecount="12817" truecount="0" num="976" type="cond"/>
            <line num="977" count="0" type="stmt"/>
            <line num="979" count="12915" type="stmt"/>
            <line falsecount="12878" truecount="0" num="979" type="cond"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="984" type="cond"/>
            <line num="985" count="0" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line num="987" count="0" type="stmt"/>
            <line num="990" count="12982" type="stmt"/>
            <line falsecount="0" truecount="12882" num="990" type="cond"/>
            <line num="991" count="12912" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line num="1000" count="13194" type="stmt"/>
            <line num="1002" count="13179" type="stmt"/>
            <line num="1009" count="1255956" type="stmt"/>
            <line complexity="8" visibility="protected" signature="getNumerairetUnAdjustedAtLIBORIndex(MonteCarloProcess,int) : RandomVariable" num="1013" count="1507421" type="method"/>
            <line num="1017" count="1507432" type="stmt"/>
            <line num="1021" count="1509117" type="stmt"/>
            <line num="1026" count="1509117" type="stmt"/>
            <line num="1027" count="1509117" type="stmt"/>
            <line falsecount="1254878" truecount="254237" num="1027" type="cond"/>
            <line num="1028" count="254238" type="stmt"/>
            <line falsecount="254051" truecount="187" num="1028" type="cond"/>
            <line num="1029" count="187" type="stmt"/>
            <line num="1030" count="187" type="stmt"/>
            <line falsecount="187" truecount="0" num="1030" type="cond"/>
            <line num="1031" count="0" type="stmt"/>
            <line num="1035" count="187" type="stmt"/>
            <line num="1040" count="187" type="stmt"/>
            <line falsecount="187" truecount="4761" num="1040" type="cond"/>
            <line num="1041" count="4761" type="stmt"/>
            <line num="1042" count="4761" type="stmt"/>
            <line num="1043" count="4761" type="stmt"/>
            <line num="1046" count="254051" type="stmt"/>
            <line falsecount="0" truecount="254050" num="1046" type="cond"/>
            <line num="1050" count="254051" type="stmt"/>
            <line falsecount="2701" truecount="251349" num="1050" type="cond"/>
            <line num="1051" count="251350" type="stmt"/>
            <line num="1052" count="251350" type="stmt"/>
            <line falsecount="251350" truecount="0" num="1052" type="cond"/>
            <line num="1053" count="0" type="stmt"/>
            <line num="1056" count="251350" type="stmt"/>
            <line num="1057" count="251350" type="stmt"/>
            <line num="1058" count="251350" type="stmt"/>
            <line num="1061" count="2701" type="stmt"/>
            <line num="1064" count="0" type="stmt"/>
            <line num="1066" count="254238" type="stmt"/>
            <line num="1068" count="1509117" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraireAdjustments() : Map&lt;Double, RandomVariable&gt;" num="1072" count="0" type="method"/>
            <line num="1073" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="1076" count="2710" type="method"/>
            <line num="1078" count="2710" type="stmt"/>
            <line num="1079" count="2710" type="stmt"/>
            <line falsecount="2711" truecount="338663" num="1079" type="cond"/>
            <line num="1080" count="338662" type="stmt"/>
            <line num="1081" count="338641" type="stmt"/>
            <line falsecount="315536" truecount="23108" num="1081" type="cond"/>
            <line num="1084" count="2711" type="stmt"/>
            <line num="1085" count="2711" type="stmt"/>
            <line falsecount="2711" truecount="338696" num="1085" type="cond"/>
            <line num="1086" count="338699" type="stmt"/>
            <line num="1088" count="2711" type="stmt"/>
            <line complexity="13" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="1120" count="353893" type="method"/>
            <line num="1122" count="353882" type="stmt"/>
            <line num="1123" count="353891" type="stmt"/>
            <line num="1124" count="353893" type="stmt"/>
            <line falsecount="341283" truecount="12600" num="1124" type="cond"/>
            <line num="1125" count="12600" type="stmt"/>
            <line num="1128" count="353887" type="stmt"/>
            <line num="1131" count="353890" type="stmt"/>
            <line num="1132" count="353889" type="stmt"/>
            <line falsecount="353877" truecount="25486146" num="1132" type="cond"/>
            <line num="1133" count="25486151" type="stmt"/>
            <line num="1136" count="353883" type="stmt"/>
            <line num="1137" count="353889" type="stmt"/>
            <line num="1139" count="353894" type="stmt"/>
            <line falsecount="880" truecount="353001" num="1139" type="cond"/>
            <line num="1141" count="353006" type="stmt"/>
            <line falsecount="353015" truecount="25470186" num="1141" type="cond"/>
            <line num="1142" count="25470187" type="stmt"/>
            <line num="1143" count="25470183" type="stmt"/>
            <line num="1144" count="25470196" type="stmt"/>
            <line num="1146" count="25470188" type="stmt"/>
            <line falsecount="24938582" truecount="531603" num="1146" type="cond"/>
            <line num="1148" count="531607" type="stmt"/>
            <line num="1151" count="25470190" type="stmt"/>
            <line num="1152" count="25470192" type="stmt"/>
            <line falsecount="25470187" truecount="28498628" num="1152" type="cond"/>
            <line num="1153" count="28498728" type="stmt"/>
            <line num="1156" count="25470196" type="stmt"/>
            <line num="1159" count="880" type="stmt"/>
            <line falsecount="0" truecount="880" num="1159" type="cond"/>
            <line num="1161" count="880" type="stmt"/>
            <line falsecount="880" truecount="16760" num="1161" type="cond"/>
            <line num="1162" count="16760" type="stmt"/>
            <line num="1163" count="16760" type="stmt"/>
            <line num="1164" count="16760" type="stmt"/>
            <line num="1166" count="16760" type="stmt"/>
            <line falsecount="0" truecount="16760" num="1166" type="cond"/>
            <line num="1167" count="16760" type="stmt"/>
            <line num="1170" count="16760" type="stmt"/>
            <line num="1172" count="16760" type="stmt"/>
            <line num="1174" count="16760" type="stmt"/>
            <line falsecount="16760" truecount="88840" num="1174" type="cond"/>
            <line num="1175" count="88840" type="stmt"/>
            <line num="1180" count="0" type="stmt"/>
            <line num="1182" count="353895" type="stmt"/>
            <line falsecount="327600" truecount="26295" num="1182" type="cond"/>
            <line num="1184" count="26295" type="stmt"/>
            <line falsecount="26295" truecount="548341" num="1184" type="cond"/>
            <line num="1185" count="548343" type="stmt"/>
            <line num="1186" count="548336" type="stmt"/>
            <line num="1189" count="353895" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="1192" count="50754951" type="method"/>
            <line num="1195" count="50775006" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="1198" count="25302714" type="method"/>
            <line num="1200" count="25331086" type="stmt"/>
            <line num="1202" count="25340804" type="stmt"/>
            <line falsecount="24793630" truecount="570703" num="1202" type="cond"/>
            <line num="1203" count="570797" type="stmt"/>
            <line num="1206" count="25400936" type="stmt"/>
            <line falsecount="635841" truecount="24822015" num="1206" type="cond"/>
            <line num="1207" count="24850140" type="stmt"/>
            <line num="1210" count="25711019" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="1213" count="24604232" type="method"/>
            <line num="1215" count="24621589" type="stmt"/>
            <line num="1217" count="24618351" type="stmt"/>
            <line falsecount="24201710" truecount="408897" num="1217" type="cond"/>
            <line num="1218" count="408240" type="stmt"/>
            <line num="1221" count="24623675" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="1224" count="26646895" type="method"/>
            <line num="1226" count="26646926" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftApproximationMethod() : Driftapproximation" num="1232" count="0" type="method"/>
            <line num="1233" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="1236" count="5408606" type="method"/>
            <line num="1239" count="5409008" type="stmt"/>
            <line num="1240" count="5406916" type="stmt"/>
            <line num="1243" count="5405206" type="stmt"/>
            <line num="1244" count="5406177" type="stmt"/>
            <line num="1246" count="5403583" type="stmt"/>
            <line falsecount="5375250" truecount="29037" num="1246" type="cond"/>
            <line num="1247" count="29052" type="stmt"/>
            <line num="1248" count="29057" type="stmt"/>
            <line falsecount="24997" truecount="3555" num="1248" type="cond"/>
            <line num="1249" count="3575" type="stmt"/>
            <line num="1256" count="5404282" type="stmt"/>
            <line falsecount="5378343" truecount="26429" num="1256" type="cond"/>
            <line num="1257" count="26431" type="stmt"/>
            <line num="1258" count="26427" type="stmt"/>
            <line num="1260" count="7063" type="stmt"/>
            <line num="1261" count="7063" type="stmt"/>
            <line num="1262" count="7062" type="stmt"/>
            <line num="1266" count="5378699" type="stmt"/>
            <line falsecount="5359124" truecount="19987" num="1266" type="cond"/>
            <line num="1267" count="20032" type="stmt"/>
            <line num="1268" count="20018" type="stmt"/>
            <line num="1269" count="19714" type="stmt"/>
            <line num="1270" count="19548" type="stmt"/>
            <line falsecount="19628" truecount="0" num="1270" type="cond"/>
            <line num="1271" count="0" type="stmt"/>
            <line num="1273" count="19672" type="stmt"/>
            <line falsecount="7008" truecount="12708" num="1273" type="cond"/>
            <line num="1274" count="12792" type="stmt"/>
            <line num="1277" count="7008" type="stmt"/>
            <line num="1278" count="7009" type="stmt"/>
            <line num="1279" count="7009" type="stmt"/>
            <line num="1282" count="5359374" type="stmt"/>
            <line falsecount="5359975" truecount="0" num="1282" type="cond"/>
            <line num="1283" count="0" type="stmt"/>
            <line num="1287" count="5360367" type="stmt"/>
            <line falsecount="5125464" truecount="235174" num="1287" type="cond"/>
            <line num="1288" count="235177" type="stmt"/>
            <line num="1292" count="5125594" type="stmt"/>
            <line num="1295" count="5125728" type="stmt"/>
            <line falsecount="5099720" truecount="10260896" num="1295" type="cond"/>
            <line num="1297" count="10263974" type="stmt"/>
            <line num="1298" count="10226912" type="stmt"/>
            <line num="1300" count="10265318" type="stmt"/>
            <line falsecount="5144237" truecount="5126166" num="1300" type="cond"/>
            <line num="1303" count="5101005" type="stmt"/>
            <line num="1305" count="5121740" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="1308" count="10748510" type="method"/>
            <line num="1312" count="10750898" type="stmt"/>
            <line complexity="9" visibility="private" signature="getOnePlusInterpolatedLIBORDt(MonteCarloProcess,int,double,int) : RandomVariable" num="1325" count="26903" type="method"/>
            <line num="1327" count="26889" type="stmt"/>
            <line num="1328" count="26697" type="stmt"/>
            <line num="1329" count="26580" type="stmt"/>
            <line num="1330" count="26635" type="stmt"/>
            <line falsecount="19766" truecount="6959" num="1330" type="cond"/>
            <line num="1332" count="6941" type="stmt"/>
            <line num="1333" count="6969" type="stmt"/>
            <line falsecount="7038" truecount="0" num="1333" type="cond"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1338" count="26769" type="stmt"/>
            <line num="1340" count="27260" type="stmt"/>
            <line num="1341" count="27266" type="stmt"/>
            <line num="1343" count="27268" type="stmt"/>
            <line num="1344" count="27267" type="stmt"/>
            <line num="1346" count="1" type="stmt"/>
            <line num="1347" count="1" type="stmt"/>
            <line num="1348" count="1" type="stmt"/>
            <line num="1349" count="27271" type="stmt"/>
            <line num="1350" count="27271" type="stmt"/>
            <line num="1351" count="27287" type="stmt"/>
            <line num="1352" count="1" type="stmt"/>
            <line num="1353" count="1" type="stmt"/>
            <line num="1354" count="1" type="stmt"/>
            <line num="1355" count="1" type="stmt"/>
            <line num="1356" count="1" type="stmt"/>
            <line num="1357" count="1" type="stmt"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1364" count="27291" type="stmt"/>
            <line num="1365" count="27228" type="stmt"/>
            <line num="1367" count="27213" type="stmt"/>
            <line num="1368" count="27214" type="stmt"/>
            <line num="1370" count="1" type="stmt"/>
            <line num="1371" count="1" type="stmt"/>
            <line num="1372" count="1" type="stmt"/>
            <line num="1373" count="27221" type="stmt"/>
            <line num="1374" count="1" type="stmt"/>
            <line num="1375" count="27226" type="stmt"/>
            <line num="1376" count="27243" type="stmt"/>
            <line num="1377" count="0" type="stmt"/>
            <line num="1377" count="0" type="stmt"/>
            <line num="1379" count="27260" type="stmt"/>
            <line num="1381" count="27292" type="stmt"/>
            <line complexity="8" visibility="private" signature="getInterpolationDriftAdjustment(MonteCarloProcess,int,int) : RandomVariable" num="1391" count="1" type="method"/>
            <line num="1393" count="1" type="stmt"/>
            <line num="1395" count="0" type="stmt"/>
            <line num="1396" count="0" type="stmt"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1399" count="1" type="stmt"/>
            <line num="1400" count="1" type="stmt"/>
            <line num="1401" count="1" type="stmt"/>
            <line num="1402" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1402" type="cond"/>
            <line num="1404" count="0" type="stmt"/>
            <line num="1407" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="1407" type="cond"/>
            <line num="1408" count="1" type="stmt"/>
            <line num="1410" count="1" type="stmt"/>
            <line num="1413" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="1413" type="cond"/>
            <line num="1414" count="1" type="stmt"/>
            <line num="1417" count="1" type="stmt"/>
            <line num="1418" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="1418" type="cond"/>
            <line num="1419" count="1" type="stmt"/>
            <line num="1420" count="1" type="stmt"/>
            <line num="1423" count="1" type="stmt"/>
            <line num="1427" count="0" type="stmt"/>
            <line num="1429" count="0" type="stmt"/>
            <line num="1429" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="getInterpolationDriftAdjustmentEvaluated(MonteCarloProcess,int,int) : RandomVariable" num="1433" count="1" type="method"/>
            <line num="1436" count="1" type="stmt"/>
            <line num="1437" count="1" type="stmt"/>
            <line num="1438" count="1" type="stmt"/>
            <line num="1440" count="1" type="stmt"/>
            <line num="1445" count="1" type="stmt"/>
            <line num="1450" count="1" type="stmt"/>
            <line num="1451" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="1451" type="cond"/>
            <line num="1453" count="10" type="stmt"/>
            <line num="1455" count="1" type="stmt"/>
            <line num="1457" count="1" type="stmt"/>
            <line num="1459" count="1" type="stmt"/>
            <line num="1461" count="1" type="stmt"/>
            <line num="1462" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="1462" type="cond"/>
            <line num="1464" count="1" type="stmt"/>
            <line num="1470" count="1" type="stmt"/>
            <line falsecount="1" truecount="36" num="1470" type="cond"/>
            <line num="1472" count="36" type="stmt"/>
            <line num="1473" count="36" type="stmt"/>
            <line falsecount="36" truecount="360" num="1473" type="cond"/>
            <line num="1475" count="360" type="stmt"/>
            <line num="1476" count="360" type="stmt"/>
            <line falsecount="360" truecount="0" num="1476" type="cond"/>
            <line num="1478" count="0" type="stmt"/>
            <line num="1480" count="360" type="stmt"/>
            <line num="1482" count="36" type="stmt"/>
            <line num="1484" count="36" type="stmt"/>
            <line num="1485" count="36" type="stmt"/>
            <line num="1487" count="36" type="stmt"/>
            <line num="1489" count="36" type="stmt"/>
            <line num="1490" count="36" type="stmt"/>
            <line falsecount="0" truecount="36" num="1490" type="cond"/>
            <line num="1492" count="36" type="stmt"/>
            <line num="1494" count="36" type="stmt"/>
            <line num="1495" count="36" type="stmt"/>
            <line num="1496" count="36" type="stmt"/>
            <line num="1499" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="1502" count="53092985" type="method"/>
            <line num="1504" count="53092997" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="1507" count="1935" type="method"/>
            <line num="1511" count="1935" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="1514" count="0" type="method"/>
            <line num="1517" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLiborPeriod(int) : double" num="1520" count="796635117" type="method"/>
            <line num="1522" count="796718716" type="stmt"/>
            <line falsecount="796485902" truecount="19364" num="1522" type="cond"/>
            <line num="1523" count="19365" type="stmt"/>
            <line num="1525" count="796547058" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="1528" count="12554090" type="method"/>
            <line num="1530" count="12555789" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="1533" count="77339" type="method"/>
            <line num="1535" count="77327" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="1541" count="0" type="method"/>
            <line num="1542" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="1548" count="0" type="method"/>
            <line num="1549" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getIntegratedLIBORCovariance(TimeDiscretization) : double[][][]" num="1552" count="56806" type="method"/>
            <line num="1554" count="56819" type="stmt"/>
            <line num="1555" count="57407" type="stmt"/>
            <line falsecount="56854" truecount="553" num="1555" type="cond"/>
            <line num="1556" count="553" type="stmt"/>
            <line num="1558" count="553" type="stmt"/>
            <line num="1559" count="551" type="stmt"/>
            <line falsecount="553" truecount="64414" num="1559" type="cond"/>
            <line num="1560" count="64415" type="stmt"/>
            <line num="1561" count="64414" type="stmt"/>
            <line num="1563" count="64414" type="stmt"/>
            <line falsecount="64415" truecount="9282884" num="1563" type="cond"/>
            <line num="1564" count="9282906" type="stmt"/>
            <line num="1566" count="64415" type="stmt"/>
            <line falsecount="64415" truecount="9282299" num="1566" type="cond"/>
            <line num="1567" count="9282388" type="stmt"/>
            <line num="1569" count="9282462" type="stmt"/>
            <line falsecount="9282475" truecount="725407056" num="1569" type="cond"/>
            <line num="1570" count="725424476" type="stmt"/>
            <line num="1571" count="725446269" type="stmt"/>
            <line falsecount="485172023" truecount="240271589" num="1571" type="cond"/>
            <line num="1572" count="240279363" type="stmt"/>
            <line num="1573" count="240295918" type="stmt"/>
            <line falsecount="240285328" truecount="250045714" num="1573" type="cond"/>
            <line num="1574" count="250096003" type="stmt"/>
            <line num="1577" count="725452356" type="stmt"/>
            <line num="1583" count="553" type="stmt"/>
            <line falsecount="553" truecount="63861" num="1583" type="cond"/>
            <line num="1584" count="63861" type="stmt"/>
            <line num="1585" count="63861" type="stmt"/>
            <line num="1586" count="63861" type="stmt"/>
            <line falsecount="63860" truecount="9215753" num="1586" type="cond"/>
            <line num="1587" count="9216209" type="stmt"/>
            <line falsecount="9217048" truecount="720404387" num="1587" type="cond"/>
            <line num="1588" count="720438523" type="stmt"/>
            <line num="1589" count="720485466" type="stmt"/>
            <line num="1596" count="57368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="1599" count="6295056" type="method"/>
            <line num="1601" count="6295983" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="1604" count="10724529" type="method"/>
            <line num="1606" count="10726210" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="1609" count="5754104" type="method"/>
            <line num="1611" count="5754887" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionMarketData() : SwaptionMarketData" num="1619" count="0" type="method"/>
            <line num="1620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="1623" count="59929" type="method"/>
            <line num="1625" count="59956" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : Object" num="1628" count="3005" type="method"/>
            <line num="1630" count="3007" type="stmt"/>
            <line num="1631" count="3006" type="stmt"/>
            <line num="1632" count="3004" type="stmt"/>
            <line num="1633" count="3006" type="stmt"/>
            <line num="1634" count="3007" type="stmt"/>
            <line num="1635" count="3007" type="stmt"/>
            <line num="1636" count="3006" type="stmt"/>
            <line num="1638" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedCovarianceModel(LIBORCovarianceModel) : LIBORMarketModelFromCovarianceModel" num="1646" count="3006" type="method"/>
            <line num="1648" count="3002" type="stmt"/>
            <line num="1649" count="3005" type="stmt"/>
            <line num="1650" count="3007" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModelFromCovarianceModel" num="1653" count="3" type="method"/>
            <line num="1655" count="3" type="stmt"/>
            <line num="1656" count="3" type="stmt"/>
            <line num="1657" count="3" type="stmt"/>
            <line num="1658" count="3" type="stmt"/>
            <line num="1659" count="3" type="stmt"/>
            <line num="1660" count="3" type="stmt"/>
            <line num="1662" count="3" type="stmt"/>
            <line num="1663" count="3" type="stmt"/>
            <line num="1664" count="3" type="stmt"/>
            <line num="1665" count="3" type="stmt"/>
            <line num="1666" count="3" type="stmt"/>
            <line num="1668" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="1668" type="cond"/>
            <line num="1669" count="0" type="stmt"/>
            <line num="1670" count="0" type="stmt"/>
            <line num="1671" count="0" type="stmt"/>
            <line num="1672" count="0" type="stmt"/>
            <line num="1673" count="0" type="stmt"/>
            <line num="1674" count="0" type="stmt"/>
            <line num="1676" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1676" type="cond"/>
            <line num="1677" count="0" type="stmt"/>
            <line num="1680" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1680" type="cond"/>
            <line num="1681" count="0" type="stmt"/>
            <line num="1682" count="0" type="stmt"/>
            <line num="1683" count="0" type="stmt"/>
            <line num="1684" count="0" type="stmt"/>
            <line num="1685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1685" type="cond"/>
            <line num="1686" count="0" type="stmt"/>
            <line num="1688" count="0" type="stmt"/>
            <line num="1690" count="0" type="stmt"/>
            <line num="1695" count="3" type="stmt"/>
            <line num="1696" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="1699" count="5" type="method"/>
            <line num="1702" count="5" type="stmt"/>
            <line num="1704" count="5" type="stmt"/>
            <line num="1707" count="5" type="stmt"/>
            <line falsecount="5" truecount="400" num="1707" type="cond"/>
            <line num="1708" count="400" type="stmt"/>
            <line num="1709" count="400" type="stmt"/>
            <line num="1710" count="400" type="stmt"/>
            <line num="1714" count="400" type="stmt"/>
            <line num="1718" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="1718" type="cond"/>
            <line num="1719" count="5" type="stmt"/>
            <line num="1721" count="5" type="stmt"/>
            <line falsecount="5" truecount="30" num="1721" type="cond"/>
            <line num="1722" count="30" type="stmt"/>
            <line num="1728" count="5" type="stmt"/>
            <line num="1729" count="0" type="stmt"/>
            <line num="1732" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(ObjectInputStream) : void" num="1735" count="3" type="method"/>
            <line num="1736" count="3" type="stmt"/>
            <line num="1741" count="3" type="stmt"/>
            <line num="1742" count="3" type="stmt"/>
            <line num="1743" count="3" type="stmt"/>
            <line num="1744" count="3" type="stmt"/>
            <line num="1745" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1748" count="0" type="method"/>
            <line num="1750" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelStandard.java" name="LIBORMarketModelStandard.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="101" loc="890" coveredmethods="0" methods="39" elements="440" classes="3" ncloc="545" statements="293" conditionals="108" coveredstatements="0"/>
            <class name="LIBORMarketModelStandard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="101" coveredmethods="0" methods="39" elements="440" statements="293" conditionals="108" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelStandard.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelStandard.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 61()" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,LIBORCovarianceModel)" num="97" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel)" num="115" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,LIBORCovarianceModel,SwaptionMarketData)" num="137" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData)" num="156" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[])" num="178" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="getCalibrationItems(TimeDiscretization,ForwardCurve,SwaptionMarketData) : CalibrationProduct[]" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="329" type="cond"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="414" type="cond"/>
            <line num="415" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="428" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="440" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftApproximationMethod() : Driftapproximation" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="460" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="495" type="cond"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="519" type="cond"/>
            <line num="520" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="529" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="536" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="543" type="cond"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="556" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="567" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="572" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="578" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLiborPeriod(int) : double" num="588" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="590" type="cond"/>
            <line num="591" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="607" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getDrift(MonteCarloProcess,int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="621" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="624" type="cond"/>
            <line num="625" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="631" type="cond"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getDriftEuler(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="659" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="672" type="cond"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getDriftLineIntegral(MonteCarloProcess,int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="690" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="696" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="709" type="cond"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="722" type="cond"/>
            <line num="724" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="749" count="0" type="method"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getIntegratedLIBORCovariance(TimeDiscretization) : double[][][]" num="756" count="0" type="method"/>
            <line num="758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="758" type="cond"/>
            <line num="759" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="765" type="cond"/>
            <line num="767" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="767" type="cond"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="769" type="cond"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="773" type="cond"/>
            <line num="774" count="0" type="stmt"/>
            <line num="776" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDriftApproximationMethod(Driftapproximation) : void" num="792" count="0" type="method"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeasure(Measure) : void" num="799" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="803" count="0" type="method"/>
            <line num="805" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="808" count="0" type="method"/>
            <line num="810" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="810" type="cond"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionMarketData() : SwaptionMarketData" num="828" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="835" count="0" type="method"/>
            <line num="837" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedCovarianceModel(LIBORCovarianceModel) : LIBORMarketModelStandard" num="844" count="0" type="method"/>
            <line num="846" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModelStandard" num="851" count="0" type="method"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="859" type="cond"/>
            <line num="860" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="862" type="cond"/>
            <line num="863" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="865" type="cond"/>
            <line num="866" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="868" type="cond"/>
            <line num="869" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="871" type="cond"/>
            <line num="872" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="875" type="cond"/>
            <line num="876" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="884" count="0" type="method"/>
            <line num="887" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelWithTenorRefinement.java" name="LIBORMarketModelWithTenorRefinement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="78" loc="748" coveredmethods="0" methods="25" elements="369" classes="2" ncloc="424" statements="256" conditionals="88" coveredstatements="0"/>
            <class name="LIBORMarketModelWithTenorRefinement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="78" coveredmethods="0" methods="25" elements="369" statements="256" conditionals="88" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelWithTenorRefinement.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="LIBORMarketModelWithTenorRefinement(TimeDiscretization[],Integer[],AnalyticModel,ForwardCurve,DiscountCurve,TermStructureCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="140" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="17" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getIntegratedVariance(MonteCarloProcess,int,double,double) : RandomVariable" num="425" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getWeightForTenorRefinement(double,double,double,double) : double" num="458" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="470" type="cond"/>
            <line num="471" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="495" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="522" count="0" type="method"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="527" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getLiborPeriodDiscretization(double) : TimeDiscretization" num="532" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="537" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="539" type="cond"/>
            <line num="540" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="540" type="cond"/>
            <line num="541" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getStateVariableForPeriod(TimeDiscretization,RandomVariable[],double,double) : RandomVariable" num="553" count="0" type="method"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="560" type="cond"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="562" type="cond"/>
            <line num="563" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="574" type="cond"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="587" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORForStateVariable(TimeDiscretization,RandomVariable[],double,double) : RandomVariable" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getStateVariable(MonteCarloProcess,int,double,double) : RandomVariable" num="606" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="620" type="cond"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="622" type="cond"/>
            <line num="623" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="633" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="644" type="cond"/>
            <line num="645" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="657" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="661" type="cond"/>
            <line num="662" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,double,double) : RandomVariable" num="668" count="0" type="method"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="680" count="0" type="method"/>
            <line num="682" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="685" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="696" count="0" type="method"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="711" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="716" count="0" type="method"/>
            <line num="718" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="721" count="0" type="method"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : TermStructureModel" num="726" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : TermStructureCovarianceModel" num="744" count="0" type="method"/>
            <line num="745" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.businessdaycalendar">
         <metrics coveredelements="182" complexity="86" loc="995" methods="38" classes="11" statements="210" coveredconditionals="38" coveredmethods="26" elements="314" ncloc="622" files="9" conditionals="66" coveredstatements="118"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/AbstractBusinessdayCalendar.java" name="AbstractBusinessdayCalendar.java">
            <metrics coveredelements="77" coveredconditionals="22" complexity="44" loc="269" coveredmethods="4" methods="7" elements="178" classes="1" ncloc="212" statements="127" conditionals="44" coveredstatements="51"/>
            <class name="AbstractBusinessdayCalendar">
               <metrics coveredelements="77" coveredconditionals="22" complexity="44" coveredmethods="4" methods="7" elements="178" statements="127" conditionals="44" coveredstatements="51"/>
            </class>
            <line complexity="10" visibility="public" signature="getAdjustedDate(LocalDate,DateRollConvention) : LocalDate" num="28" count="397926659" type="method"/>
            <line num="30" count="398654131" type="stmt"/>
            <line falsecount="398559031" truecount="26" num="30" type="cond"/>
            <line num="31" count="26" type="stmt"/>
            <line num="33" count="398627214" type="stmt"/>
            <line falsecount="304618643" truecount="94084418" num="33" type="cond"/>
            <line num="34" count="94101824" type="stmt"/>
            <line num="35" count="94050710" type="stmt"/>
            <line falsecount="94080857" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="94091290" type="stmt"/>
            <line num="41" count="304873980" type="stmt"/>
            <line falsecount="305348202" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="305333841" type="stmt"/>
            <line falsecount="0" truecount="305308708" num="49" type="cond"/>
            <line num="50" count="305290792" type="stmt"/>
            <line falsecount="16352" truecount="305109962" num="50" type="cond"/>
            <line num="51" count="303783634" type="stmt"/>
            <line num="52" count="305029785" type="stmt"/>
            <line falsecount="296778705" truecount="186383822" num="52" type="cond"/>
            <line num="53" count="186700311" type="stmt"/>
            <line num="55" count="299812716" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getRolledDate(LocalDate,int) : LocalDate" num="62" count="367834284" type="method"/>
            <line num="64" count="370456489" type="stmt"/>
            <line num="65" count="372449372" type="stmt"/>
            <line falsecount="8176" truecount="374409404" num="65" type="cond"/>
            <line num="66" count="376129165" type="stmt"/>
            <line falsecount="8176" truecount="377298635" num="66" type="cond"/>
            <line num="67" count="378960315" type="stmt"/>
            <line falsecount="380063290" truecount="23408" num="67" type="cond"/>
            <line num="68" count="23408" type="stmt"/>
            <line num="69" count="23407" type="stmt"/>
            <line num="70" count="23408" type="stmt"/>
            <line num="72" count="383310692" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAdjustedDate(LocalDate,String,DateRollConvention) : LocalDate" num="75" count="93937979" type="method"/>
            <line num="77" count="93981460" type="stmt"/>
            <line complexity="9" visibility="public" signature="getDateFromDateAndOffsetCode(LocalDate,String) : LocalDate" num="80" count="94007376" type="method"/>
            <line num="82" count="94026603" type="stmt"/>
            <line num="84" count="94066063" type="stmt"/>
            <line num="86" count="94090692" type="stmt"/>
            <line num="87" count="94107478" type="stmt"/>
            <line falsecount="94208975" truecount="94152399" num="87" type="cond"/>
            <line num="88" count="94172469" type="stmt"/>
            <line num="89" count="94184449" type="stmt"/>
            <line num="95" count="94318889" type="stmt"/>
            <line falsecount="94310605" truecount="5" num="95" type="cond"/>
            <line num="97" count="5" type="stmt"/>
            <line num="98" count="5" type="stmt"/>
            <line num="100" count="94303426" type="stmt"/>
            <line falsecount="0" truecount="94306586" num="100" type="cond"/>
            <line num="101" count="94303266" type="stmt"/>
            <line num="102" count="94283784" type="stmt"/>
            <line num="104" count="94143117" type="stmt"/>
            <line num="105" count="1187" type="stmt"/>
            <line num="107" count="1187" type="stmt"/>
            <line num="108" count="1187" type="stmt"/>
            <line num="110" count="17" type="stmt"/>
            <line num="112" count="17" type="stmt"/>
            <line num="113" count="17" type="stmt"/>
            <line num="115" count="33" type="stmt"/>
            <line num="117" count="33" type="stmt"/>
            <line num="118" count="33" type="stmt"/>
            <line num="120" count="94182203" type="stmt"/>
            <line num="122" count="94182692" type="stmt"/>
            <line num="123" count="94207666" type="stmt"/>
            <line num="125" count="2800" type="stmt"/>
            <line num="127" count="2800" type="stmt"/>
            <line num="128" count="2800" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="139" count="94197601" type="stmt"/>
            <line complexity="10" visibility="public" signature="createDateFromDateAndOffsetCodes(LocalDate,String[]) : LocalDate[]" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="convertOffsetCodesToTimes(String[]) : double[]" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendar.java" name="BusinessdayCalendar.java">
            <metrics coveredelements="38" coveredconditionals="16" complexity="13" loc="170" coveredmethods="2" methods="2" elements="50" classes="3" ncloc="66" statements="26" conditionals="22" coveredstatements="20"/>
            <class name="BusinessdayCalendar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BusinessdayCalendar.DateOffsetUnit">
               <metrics coveredelements="23" coveredconditionals="10" complexity="7" coveredmethods="1" methods="1" elements="27" statements="14" conditionals="12" coveredstatements="12"/>
            </class>
            <class name="BusinessdayCalendar.DateRollConvention">
               <metrics coveredelements="15" coveredconditionals="6" complexity="6" coveredmethods="1" methods="1" elements="23" statements="12" conditionals="10" coveredstatements="8"/>
            </class>
            <line complexity="7" visibility="public" signature="getEnum(String) : DateOffsetUnit" num="33" count="94266158" type="method"/>
            <line num="34" count="94250989" type="stmt"/>
            <line num="36" count="94260528" type="stmt"/>
            <line falsecount="94259680" truecount="1187" num="36" type="cond"/>
            <line num="37" count="1187" type="stmt"/>
            <line num="39" count="94272382" type="stmt"/>
            <line falsecount="94282601" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="94285048" type="stmt"/>
            <line falsecount="94285927" truecount="17" num="42" type="cond"/>
            <line num="43" count="17" type="stmt"/>
            <line num="45" count="94284032" type="stmt"/>
            <line falsecount="94274162" truecount="33" num="45" type="cond"/>
            <line num="46" count="33" type="stmt"/>
            <line num="48" count="94286955" type="stmt"/>
            <line falsecount="2800" truecount="94284443" num="48" type="cond"/>
            <line num="49" count="94290248" type="stmt"/>
            <line num="51" count="2800" type="stmt"/>
            <line falsecount="0" truecount="2800" num="51" type="cond"/>
            <line num="52" count="2800" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getEnum(String) : DateRollConvention" num="72" count="1263" type="method"/>
            <line num="73" count="1263" type="stmt"/>
            <line num="75" count="1263" type="stmt"/>
            <line falsecount="1263" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="1263" type="stmt"/>
            <line falsecount="1262" truecount="1" num="78" type="cond"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1262" type="stmt"/>
            <line falsecount="1262" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="1262" type="stmt"/>
            <line falsecount="1262" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="1262" type="stmt"/>
            <line falsecount="1262" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="1262" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarAny.java" name="BusinessdayCalendarAny.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="3" loc="36" coveredmethods="2" methods="3" elements="5" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="BusinessdayCalendarAny">
               <metrics coveredelements="3" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarAny()" num="24" count="5" type="method"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="27" count="181" type="method"/>
            <line num="29" count="181" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingGivenHolidays.java" name="BusinessdayCalendarExcludingGivenHolidays.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="6" loc="67" coveredmethods="3" methods="6" elements="15" classes="1" ncloc="37" statements="9" conditionals="0" coveredstatements="6"/>
            <class name="BusinessdayCalendarExcludingGivenHolidays">
               <metrics coveredelements="9" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenHolidays(String,BusinessdayCalendar,boolean)" num="22" count="4" type="method"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line num="25" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCalendar() : BusinessdayCalendar" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isExcludingWeekends() : boolean" num="46" count="11" type="method"/>
            <line num="46" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="53" count="18" type="method"/>
            <line num="55" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingGivenSetOfHolidays.java" name="BusinessdayCalendarExcludingGivenSetOfHolidays.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="35" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="BusinessdayCalendarExcludingGivenSetOfHolidays">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenSetOfHolidays(String,BusinessdayCalendar,boolean,Set&lt;LocalDate&gt;)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenSetOfHolidays(String,boolean,Set&lt;LocalDate&gt;)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingLONHolidays.java" name="BusinessdayCalendarExcludingLONHolidays.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="131" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="98" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BusinessdayCalendarExcludingLONHolidays">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 104()" num="104" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="491" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingLONHolidays()" num="116" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingLONHolidays(BusinessdayCalendar)" num="125" count="2" type="method"/>
            <line num="126" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="129" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingNYCHolidays.java" name="BusinessdayCalendarExcludingNYCHolidays.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="138" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="106" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BusinessdayCalendarExcludingNYCHolidays">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 111()" num="111" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="546" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingNYCHolidays()" num="123" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingNYCHolidays(BusinessdayCalendar)" num="132" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="136" count="5" type="method"/>
            <line num="137" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingTARGETHolidays.java" name="BusinessdayCalendarExcludingTARGETHolidays.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="5" loc="94" coveredmethods="5" methods="5" elements="28" classes="1" ncloc="50" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="BusinessdayCalendarExcludingTARGETHolidays">
               <metrics coveredelements="28" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="28" statements="23" conditionals="0" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingTARGETHolidays()" num="30" count="1356" type="method"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingTARGETHolidays(BusinessdayCalendar)" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="42" count="485103887" type="method"/>
            <line num="44" count="486683995" type="stmt"/>
            <line num="45" count="486981222" type="stmt"/>
            <line num="47" count="484229120" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEasterSunday(LocalDate) : boolean" num="67" count="574063589" type="method"/>
            <line num="68" count="579937492" type="stmt"/>
            <line num="69" count="582173947" type="stmt"/>
            <line num="70" count="584547684" type="stmt"/>
            <line num="71" count="586795993" type="stmt"/>
            <line num="72" count="588441351" type="stmt"/>
            <line num="73" count="589814274" type="stmt"/>
            <line num="74" count="591850406" type="stmt"/>
            <line num="75" count="594743762" type="stmt"/>
            <line num="76" count="595310231" type="stmt"/>
            <line num="77" count="596528213" type="stmt"/>
            <line num="78" count="598453214" type="stmt"/>
            <line num="79" count="600860904" type="stmt"/>
            <line num="80" count="607721442" type="stmt"/>
            <line num="81" count="606735225" type="stmt"/>
            <line num="82" count="607715856" type="stmt"/>
            <line num="84" count="609209645" type="stmt"/>
            <line num="85" count="609100746" type="stmt"/>
            <line num="87" count="608751808" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="90" count="2" type="method"/>
            <line num="92" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingWeekends.java" name="BusinessdayCalendarExcludingWeekends.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="4" loc="55" coveredmethods="2" methods="4" elements="7" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="BusinessdayCalendarExcludingWeekends">
               <metrics coveredelements="3" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingWeekends()" num="29" count="63830" type="method"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingWeekends(BusinessdayCalendar)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="44" count="486478415" type="method"/>
            <line num="46" count="487917358" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.bond">
         <metrics coveredelements="51" complexity="72" loc="547" methods="36" classes="3" statements="120" coveredconditionals="13" coveredmethods="3" elements="208" ncloc="280" files="2" conditionals="52" coveredstatements="35"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/bond/Bond.java" name="Bond.java">
            <metrics coveredelements="51" coveredconditionals="13" complexity="53" loc="383" coveredmethods="3" methods="22" elements="165" classes="1" ncloc="189" statements="93" conditionals="50" coveredstatements="35"/>
            <class name="Bond">
               <metrics coveredelements="51" coveredconditionals="13" complexity="53" coveredmethods="3" methods="22" elements="165" statements="93" conditionals="50" coveredstatements="35"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,String,double,double,double)" num="71" count="11" type="method"/>
            <line num="79" count="11" type="stmt"/>
            <line num="80" count="11" type="stmt"/>
            <line num="81" count="11" type="stmt"/>
            <line num="82" count="11" type="stmt"/>
            <line num="83" count="11" type="stmt"/>
            <line num="84" count="11" type="stmt"/>
            <line num="85" count="11" type="stmt"/>
            <line num="86" count="11" type="stmt"/>
            <line num="87" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,double,double)" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,String,double,double)" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,double)" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,double)" num="139" count="11" type="method"/>
            <line num="140" count="11" type="stmt"/>
            <line complexity="21" visibility="public" signature="getValue(double,AnalyticModel) : double" num="143" count="1957" type="method"/>
            <line num="146" count="1955" type="stmt"/>
            <line num="148" count="1952" type="stmt"/>
            <line falsecount="1951" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="1951" type="stmt"/>
            <line num="153" count="1941" type="stmt"/>
            <line falsecount="1941" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="1940" type="stmt"/>
            <line num="158" count="1930" type="stmt"/>
            <line falsecount="1931" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="1930" type="stmt"/>
            <line num="163" count="1929" type="stmt"/>
            <line num="165" count="1920" type="stmt"/>
            <line num="166" count="1920" type="stmt"/>
            <line falsecount="1873" truecount="15933" num="166" type="cond"/>
            <line num="167" count="15945" type="stmt"/>
            <line num="168" count="15938" type="stmt"/>
            <line num="170" count="15857" type="stmt"/>
            <line falsecount="0" truecount="15867" num="170" type="cond"/>
            <line num="172" count="15488" type="stmt"/>
            <line falsecount="15587" truecount="0" num="172" type="cond"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="174" count="15613" type="stmt"/>
            <line falsecount="15650" truecount="0" num="174" type="cond"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="15699" type="stmt"/>
            <line num="177" count="15664" type="stmt"/>
            <line falsecount="15626" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="15626" type="stmt"/>
            <line num="184" count="15684" type="stmt"/>
            <line falsecount="15697" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="1875" type="stmt"/>
            <line num="198" count="1870" type="stmt"/>
            <line falsecount="0" truecount="1872" num="198" type="cond"/>
            <line num="200" count="1879" type="stmt"/>
            <line falsecount="1880" truecount="0" num="200" type="cond"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="1877" type="stmt"/>
            <line falsecount="1880" truecount="0" num="202" type="cond"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="1883" type="stmt"/>
            <line num="207" count="1885" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCouponPayment(int,AnalyticModel) : double" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValueWithGivenSpreadOverCurve(double,Curve,double,AnalyticModel) : double" num="243" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line complexity="1" visibility="public" signature="getValueWithGivenYield(double,double,AnalyticModel) : double" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSpread(double,Curve,AnalyticModel) : double" num="278" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getYield(double,AnalyticModel) : double" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedInterest(LocalDate,AnalyticModel) : double" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedInterest(double,AnalyticModel) : double" num="332" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="337" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbabilityCurveName() : String" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFactorCurveName() : String" num="354" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedCoupon() : double" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingSpread() : double" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecoveryRate() : double" num="366" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/bond/BondCurve.java" name="BondCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="164" coveredmethods="0" methods="14" elements="43" classes="2" ncloc="91" statements="27" conditionals="2" coveredstatements="0"/>
            <class name="BondCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="14" elements="43" statements="27" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="BondCurve.Type">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BondCurve(String,LocalDate,Curve,Curve,Type)" num="64" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AnalyticModel,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCurve() : Curve" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreadCurve() : Curve" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : String" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="155" count="0" type="method"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate">
         <metrics coveredelements="112" complexity="74" loc="688" methods="55" classes="9" statements="136" coveredconditionals="18" coveredmethods="23" elements="223" ncloc="418" files="9" conditionals="32" coveredstatements="71"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/ConvexityAdjustedModel.java" name="ConvexityAdjustedModel.java">
            <metrics coveredelements="28" coveredconditionals="8" complexity="7" loc="66" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="40" statements="18" conditionals="8" coveredstatements="18"/>
            <class name="ConvexityAdjustedModel">
               <metrics coveredelements="28" coveredconditionals="8" complexity="7" coveredmethods="2" methods="2" elements="28" statements="18" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvexityAdjustedModel(ProcessModel,MonteCarloProcess,Map&lt;Integer,Integer&gt;)" num="28" count="11" type="method"/>
            <line num="29" count="11" type="stmt"/>
            <line num="30" count="11" type="stmt"/>
            <line num="31" count="11" type="stmt"/>
            <line num="32" count="11" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDrift(RandomVariable[],MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="35" count="440" type="method"/>
            <line num="39" count="440" type="stmt"/>
            <line num="41" count="440" type="stmt"/>
            <line num="42" count="440" type="stmt"/>
            <line num="43" count="440" type="stmt"/>
            <line num="45" count="440" type="stmt"/>
            <line falsecount="440" truecount="17600" num="45" type="cond"/>
            <line num="46" count="17600" type="stmt"/>
            <line falsecount="9020" truecount="8580" num="46" type="cond"/>
            <line num="47" count="8580" type="stmt"/>
            <line num="49" count="8580" type="stmt"/>
            <line num="50" count="8580" type="stmt"/>
            <line num="52" count="8580" type="stmt"/>
            <line falsecount="8580" truecount="8580" num="52" type="cond"/>
            <line num="53" count="8580" type="stmt"/>
            <line falsecount="5460" truecount="3120" num="53" type="cond"/>
            <line num="54" count="3120" type="stmt"/>
            <line num="59" count="8580" type="stmt"/>
            <line num="64" count="440" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/CrossCurrencyLIBORMarketModelFromModels.java" name="CrossCurrencyLIBORMarketModelFromModels.java">
            <metrics coveredelements="41" coveredconditionals="7" complexity="18" loc="140" coveredmethods="8" methods="14" elements="55" classes="1" ncloc="94" statements="33" conditionals="8" coveredstatements="26"/>
            <class name="CrossCurrencyLIBORMarketModelFromModels">
               <metrics coveredelements="41" coveredconditionals="7" complexity="18" coveredmethods="8" methods="14" elements="55" statements="33" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="CrossCurrencyLIBORMarketModelFromModels(String,Map&lt;String, LIBORModelMonteCarloSimulationModel&gt;,Map&lt;String, MonteCarloProcessFromProcessModel&gt;)" num="38" count="7" type="method"/>
            <line num="41" count="7" type="stmt"/>
            <line num="42" count="7" type="stmt"/>
            <line num="43" count="7" type="stmt"/>
            <line num="44" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseModel() : LIBORModelMonteCarloSimulationModel" num="48" count="45" type="method"/>
            <line num="49" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="52" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="83" count="18" type="method"/>
            <line num="86" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloSimulationModel" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="94" count="23" type="method"/>
            <line num="96" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(String,double) : RandomVariable" num="99" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(RiskFactorID,double) : RandomVariable" num="104" count="15" type="method"/>
            <line num="106" count="15" type="stmt"/>
            <line falsecount="9" truecount="6" num="106" type="cond"/>
            <line num="107" count="6" type="stmt"/>
            <line num="108" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="112" type="cond"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="120" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="120" type="cond"/>
            <line num="121" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="121" type="cond"/>
            <line num="122" count="3" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line num="126" count="6" type="stmt"/>
            <line num="128" count="6" type="stmt"/>
            <line num="129" count="6" type="stmt"/>
            <line num="130" count="6" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getInterestRateModel(String) : LIBORModelMonteCarloSimulationModel" num="137" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulation.java" name="HybridAssetLIBORModelMonteCarloSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulationFromModels.java" name="HybridAssetLIBORModelMonteCarloSimulationFromModels.java">
            <metrics coveredelements="27" coveredconditionals="3" complexity="32" loc="233" coveredmethods="7" methods="29" elements="78" classes="1" ncloc="154" statements="43" conditionals="6" coveredstatements="17"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulationFromModels">
               <metrics coveredelements="27" coveredconditionals="3" complexity="32" coveredmethods="7" methods="29" elements="78" statements="43" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="2" visibility="public" signature="HybridAssetLIBORModelMonteCarloSimulationFromModels(LIBORModelMonteCarloSimulationModel,AssetModelMonteCarloSimulationModel,DiscountCurve)" num="53" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HybridAssetLIBORModelMonteCarloSimulationFromModels(LIBORModelMonteCarloSimulationModel,AssetModelMonteCarloSimulationModel)" num="67" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="103" count="901" type="method"/>
            <line num="105" count="901" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="138" count="1802" type="method"/>
            <line num="140" count="1802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : HybridAssetLIBORModelMonteCarloSimulationFromModels" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(double) : RandomVariable" num="159" count="1802" type="method"/>
            <line num="162" count="1802" type="stmt"/>
            <line num="164" count="1802" type="stmt"/>
            <line falsecount="1802" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="1802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : HybridAssetLIBORModelMonteCarloSimulationFromModels" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="209" count="901" type="method"/>
            <line num="211" count="901" type="stmt"/>
            <line num="212" count="901" type="stmt"/>
            <line num="213" count="901" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="216" count="901" type="method"/>
            <line num="218" count="901" type="stmt"/>
            <line num="221" count="901" type="stmt"/>
            <line falsecount="901" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="901" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetMonteCarloSimulation.java" name="HybridAssetMonteCarloSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HybridAssetMonteCarloSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/ModelFactory.java" name="ModelFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="129" coveredmethods="0" methods="4" elements="46" classes="1" ncloc="77" statements="32" conditionals="10" coveredstatements="0"/>
            <class name="ModelFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="4" elements="46" statements="32" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ModelFactory()" num="34" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getInstance() : ModelFactory" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getHybridAssetLIBORModel(LIBORModelMonteCarloSimulationModel,BrownianMotion,double[],double,double[][],double[],double[],double[],DiscountCurve) : HybridAssetLIBORModelMonteCarloSimulation" num="62" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorFX.java" name="RiskFactorFX.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="16" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="RiskFactorFX">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="RiskFactorFX(String)" num="7" count="9" type="method"/>
            <line num="8" count="9" type="stmt"/>
            <line num="9" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="12" count="21" type="method"/>
            <line num="14" count="21" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorForwardRate.java" name="RiskFactorForwardRate.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="28" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="22" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="RiskFactorForwardRate">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="RiskFactorForwardRate(String,double,double)" num="9" count="6" type="method"/>
            <line num="10" count="6" type="stmt"/>
            <line num="11" count="6" type="stmt"/>
            <line num="12" count="6" type="stmt"/>
            <line num="13" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="16" count="16" type="method"/>
            <line num="18" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="21" count="6" type="method"/>
            <line num="22" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="25" count="6" type="method"/>
            <line num="26" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorID.java" name="RiskFactorID.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RiskFactorID">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model">
         <metrics coveredelements="50" complexity="31" loc="389" methods="26" classes="2" statements="71" coveredconditionals="5" coveredmethods="12" elements="107" ncloc="212" files="2" conditionals="10" coveredstatements="33"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/AnalyticModel.java" name="AnalyticModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="118" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="28" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/AnalyticModelFromCurvesAndVols.java" name="AnalyticModelFromCurvesAndVols.java">
            <metrics coveredelements="50" coveredconditionals="5" complexity="31" loc="271" coveredmethods="12" methods="26" elements="107" classes="1" ncloc="184" statements="71" conditionals="10" coveredstatements="33"/>
            <class name="AnalyticModelFromCurvesAndVols">
               <metrics coveredelements="50" coveredconditionals="5" complexity="31" coveredmethods="12" methods="26" elements="107" statements="71" conditionals="10" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols()" num="47" count="357" type="method"/>
            <line num="48" count="357" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(RandomVariableFactory)" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Curve[])" num="65" count="9" type="method"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="68" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(RandomVariableFactory,Curve[])" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Collection&lt;Curve&gt;)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="97" count="20872" type="method"/>
            <line num="99" count="20872" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="102" count="12570" type="method"/>
            <line num="105" count="12570" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurves() : Map&lt;String, Curve&gt;" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurve(String,Curve) : AnalyticModel" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurve(Curve) : AnalyticModel" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurves(Curve) : AnalyticModel" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurves(Set&lt;Curve&gt;) : AnalyticModel" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCurve(Curve) : void" num="148" count="348" type="method"/>
            <line num="152" count="348" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCurves(Curve[]) : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve(String) : DiscountCurveInterface" num="168" count="9280" type="method"/>
            <line num="170" count="9280" type="stmt"/>
            <line num="171" count="9280" type="stmt"/>
            <line num="172" count="9280" type="stmt"/>
            <line falsecount="0" truecount="9280" num="172" type="cond"/>
            <line num="173" count="9280" type="stmt"/>
            <line num="176" count="9280" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardCurve(String) : ForwardCurveInterface" num="179" count="3284" type="method"/>
            <line num="181" count="3284" type="stmt"/>
            <line num="182" count="3284" type="stmt"/>
            <line num="183" count="3284" type="stmt"/>
            <line falsecount="1642" truecount="1642" num="183" type="cond"/>
            <line num="184" count="1642" type="stmt"/>
            <line num="187" count="3284" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurface(String) : VolatilitySurface" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaces() : Map&lt;String, VolatilitySurface&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurface(VolatilitySurface) : AnalyticModel" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurfaces(VolatilitySurface) : AnalyticModel" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurfaces(Set&lt;VolatilitySurface&gt;) : AnalyticModel" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setVolatilitySurface(VolatilitySurface) : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="set(Object) : void" num="231" count="348" type="method"/>
            <line num="232" count="348" type="stmt"/>
            <line falsecount="0" truecount="348" num="232" type="cond"/>
            <line num="233" count="348" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelFromCurvesAndVols" num="241" count="348" type="method"/>
            <line num="244" count="348" type="stmt"/>
            <line num="245" count="348" type="stmt"/>
            <line num="246" count="348" type="stmt"/>
            <line num="247" count="348" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(Map&lt;ParameterObject, RandomVariable[]&gt;) : AnalyticModel" num="250" count="348" type="method"/>
            <line num="254" count="348" type="stmt"/>
            <line num="257" count="348" type="stmt"/>
            <line falsecount="0" truecount="348" num="257" type="cond"/>
            <line num="258" count="348" type="stmt"/>
            <line num="259" count="348" type="stmt"/>
            <line num="260" count="348" type="stmt"/>
            <line num="264" count="348" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.experimental">
         <metrics coveredelements="0" complexity="20" loc="150" methods="10" classes="1" statements="53" coveredconditionals="0" coveredmethods="0" elements="81" ncloc="108" files="1" conditionals="18" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/experimental/BlackScholesTheta.java" name="BlackScholesTheta.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="150" coveredmethods="0" methods="10" elements="81" classes="1" ncloc="108" statements="53" conditionals="18" coveredstatements="0"/>
            <class name="BlackScholesTheta">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="10" elements="81" statements="53" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="V_T(double) : double" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="V_0(double,double) : double" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="V_inf(double,double) : double" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f_s(double) : double" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f_t(double) : double" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f(double,double,double) : double" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_0(double) : double" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_neg_inf(double,double) : double" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_pos_inf(double,double) : double" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="solve() : double[][]" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.timeseries">
         <metrics coveredelements="0" complexity="19" loc="238" methods="19" classes="6" statements="26" coveredconditionals="0" coveredmethods="0" elements="45" ncloc="124" files="6" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/HistoricalSimulationModel.java" name="HistoricalSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HistoricalSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/MarketData.java" name="MarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="37" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="18" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="MarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketData(Calendar,Map&lt;String,Double&gt;)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate() : Calendar" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String) : double" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/TimeSeries.java" name="TimeSeries.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeries">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/TimeSeriesFromArray.java" name="TimeSeriesFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="60" coveredmethods="0" methods="8" elements="18" classes="1" ncloc="42" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeSeriesFromArray(double[],double[])" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimePoints() : int" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : Iterable&lt;Double&gt;" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Double" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/TimeSeriesModelParametric.java" name="TimeSeriesModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/TimeSeriesView.java" name="TimeSeriesView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="61" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="44" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeSeriesView(TimeSeries,int,int)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimePoints() : int" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : Iterable&lt;Double&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.integration">
         <metrics coveredelements="119" complexity="40" loc="577" methods="26" classes="7" statements="108" coveredconditionals="18" coveredmethods="15" elements="158" ncloc="246" files="7" conditionals="24" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/integration/AbstractRealIntegral.java" name="AbstractRealIntegral.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="60" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="AbstractRealIntegral">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRealIntegral(double,double)" num="29" count="129832" type="method"/>
            <line num="30" count="129831" type="stmt"/>
            <line num="31" count="129833" type="stmt"/>
            <line num="32" count="129825" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double" num="41" count="129850" type="method"/>
            <line num="42" count="129855" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double" num="50" count="129838" type="method"/>
            <line num="51" count="129844" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/integration/MonteCarloIntegrator.java" name="MonteCarloIntegrator.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="88" coveredmethods="3" methods="6" elements="20" classes="1" ncloc="37" statements="14" conditionals="0" coveredstatements="11"/>
            <class name="MonteCarloIntegrator">
               <metrics coveredelements="14" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int,int,boolean)" num="36" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int,boolean)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="66" count="4" type="method"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfEvaluationPoints() : int" num="81" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/integration/PiecewiseContantDoubleUnaryOperator.java" name="PiecewiseContantDoubleUnaryOperator.java">
            <metrics coveredelements="46" coveredconditionals="11" complexity="15" loc="176" coveredmethods="4" methods="8" elements="60" classes="1" ncloc="79" statements="38" conditionals="14" coveredstatements="31"/>
            <class name="PiecewiseContantDoubleUnaryOperator">
               <metrics coveredelements="46" coveredconditionals="11" complexity="15" coveredmethods="4" methods="8" elements="60" statements="38" conditionals="14" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="PiecewiseContantDoubleUnaryOperator(double[],double[])" num="38" count="7" type="method"/>
            <line num="39" count="7" type="stmt"/>
            <line num="40" count="7" type="stmt"/>
            <line num="41" count="6" type="stmt"/>
            <line num="42" count="5" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="PiecewiseContantDoubleUnaryOperator(List&lt;Double&gt;,List&lt;Double&gt;)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getIntegral(double,double,DoubleUnaryOperator) : double" num="75" count="15" type="method"/>
            <line num="76" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="15" type="stmt"/>
            <line num="85" count="15" type="stmt"/>
            <line falsecount="2" truecount="13" num="85" type="cond"/>
            <line num="86" count="13" type="stmt"/>
            <line num="89" count="15" type="stmt"/>
            <line num="90" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="90" type="cond"/>
            <line num="91" count="15" type="stmt"/>
            <line num="93" count="15" type="stmt"/>
            <line num="95" count="15" type="stmt"/>
            <line falsecount="11" truecount="4" num="95" type="cond"/>
            <line num="97" count="4" type="stmt"/>
            <line num="101" count="11" type="stmt"/>
            <line num="104" count="11" type="stmt"/>
            <line num="107" count="11" type="stmt"/>
            <line falsecount="11" truecount="11" num="107" type="cond"/>
            <line num="108" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line num="110" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="115" count="11" type="stmt"/>
            <line num="117" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegral(double,double,Function&lt;Double, Double&gt;) : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toPrimitive(Function&lt;Double, Double&gt;) : DoubleUnaryOperator" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegral(double,double) : double" num="147" count="8" type="method"/>
            <line num="148" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="157" count="6" type="method"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="160" type="cond"/>
            <line num="161" count="4" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : Double" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/integration/RealIntegral.java" name="RealIntegral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealIntegral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/integration/RombergRealIntegration.java" name="RombergRealIntegration.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="50" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RombergRealIntegration">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RombergRealIntegration(double,double,int)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="38" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(double) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/integration/SimpsonRealIntegrator.java" name="SimpsonRealIntegrator.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="4" loc="76" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="35" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="SimpsonRealIntegrator">
               <metrics coveredelements="22" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="22" statements="17" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpsonRealIntegrator(double,double,int,boolean)" num="33" count="129806" type="method"/>
            <line num="34" count="129800" type="stmt"/>
            <line num="35" count="129812" type="stmt"/>
            <line num="36" count="129810" type="stmt"/>
            <line num="37" count="129812" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpsonRealIntegrator(double,double,int)" num="47" count="128725" type="method"/>
            <line num="48" count="128723" type="stmt"/>
            <line complexity="2" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="51" count="129833" type="method"/>
            <line num="53" count="129837" type="stmt"/>
            <line num="54" count="129833" type="stmt"/>
            <line num="55" count="129816" type="stmt"/>
            <line num="57" count="129820" type="stmt"/>
            <line num="59" count="129824" type="stmt"/>
            <line num="60" count="129824" type="stmt"/>
            <line num="62" count="129829" type="stmt"/>
            <line num="64" count="129826" type="stmt"/>
            <line falsecount="128751" truecount="1075" num="64" type="cond"/>
            <line num="65" count="1075" type="stmt"/>
            <line num="68" count="129826" type="stmt"/>
            <line num="72" count="129835" type="stmt"/>
            <line num="74" count="129850" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/integration/TrapezoidalRealIntegrator.java" name="TrapezoidalRealIntegrator.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="9" loc="102" coveredmethods="2" methods="3" elements="41" classes="1" ncloc="50" statements="30" conditionals="8" coveredstatements="22"/>
            <class name="TrapezoidalRealIntegrator">
               <metrics coveredelements="29" coveredconditionals="5" complexity="9" coveredmethods="2" methods="3" elements="41" statements="30" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="TrapezoidalRealIntegrator(double,double,double[])" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TrapezoidalRealIntegrator(double,double,int)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="57" type="cond"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="62" type="cond"/>
            <line num="63" count="3" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="69" type="cond"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.models">
         <metrics coveredelements="53" complexity="22" loc="289" methods="22" classes="4" statements="39" coveredconditionals="0" coveredmethods="18" elements="61" ncloc="166" files="4" conditionals="0" coveredstatements="35"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/models/FDMBlackScholesModel.java" name="FDMBlackScholesModel.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="100" coveredmethods="9" methods="11" elements="30" classes="1" ncloc="72" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="FDMBlackScholesModel">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="30" statements="19" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMBlackScholesModel(int,int,int,double,double,double,double,double)" num="29" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="varianceOfStockPrice(double) : double" num="49" count="6" type="method"/>
            <line num="51" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardValue(double) : double" num="55" count="6" type="method"/>
            <line num="57" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="60" count="709" type="method"/>
            <line num="62" count="709" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalVolatility(double,double) : double" num="74" count="25410" type="method"/>
            <line num="76" count="25410" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumTimesteps() : int" num="79" count="114" type="method"/>
            <line num="81" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumSpacesteps() : int" num="84" count="6" type="method"/>
            <line num="86" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumStandardDeviations() : double" num="89" count="6" type="method"/>
            <line num="91" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,DoubleUnaryOperator,FiniteDifference1DBoundary) : double[][]" num="94" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line num="97" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/models/FDMConstantElasticityOfVarianceModel.java" name="FDMConstantElasticityOfVarianceModel.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="11" loc="117" coveredmethods="9" methods="11" elements="31" classes="1" ncloc="75" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="FDMConstantElasticityOfVarianceModel">
               <metrics coveredelements="27" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="31" statements="20" conditionals="0" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMConstantElasticityOfVarianceModel(int,int,int,double,double,double,double,double,double)" num="31" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="varianceOfStockPrice(double) : double" num="57" count="4" type="method"/>
            <line num="59" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardValue(double) : double" num="66" count="4" type="method"/>
            <line num="68" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="74" count="1046" type="method"/>
            <line num="76" count="1046" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalVolatility(double,double) : double" num="88" count="51520" type="method"/>
            <line num="90" count="51520" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumTimesteps() : int" num="93" count="166" type="method"/>
            <line num="95" count="166" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumSpacesteps() : int" num="98" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumStandardDeviations() : double" num="103" count="4" type="method"/>
            <line num="105" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,DoubleUnaryOperator,FiniteDifference1DBoundary) : double[][]" num="111" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/models/FiniteDifference1DBoundary.java" name="FiniteDifference1DBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifference1DBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/models/FiniteDifference1DModel.java" name="FiniteDifference1DModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifference1DModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward.alternative">
         <metrics coveredelements="0" complexity="694" loc="4151" methods="398" classes="13" statements="1159" coveredconditionals="0" coveredmethods="0" elements="1833" ncloc="2799" files="7" conditionals="276" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableAAD.java" name="RandomVariableAAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="217" loc="1139" coveredmethods="0" methods="106" elements="613" classes="2" ncloc="782" statements="411" conditionals="96" coveredstatements="0"/>
            <class name="RandomVariableAAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="217" coveredmethods="0" methods="106" elements="613" statements="411" conditionals="96" coveredstatements="0"/>
            </class>
            <class name="RandomVariableAAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RandomVariableAAD(int,RandomVariable,int[],OperatorType,ArrayList&lt;Integer&gt;,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="constructNewAADRandomVariable(RandomVariable,int[],OperatorType,ArrayList&lt;Integer&gt;,boolean) : RandomVariableAAD" num="59" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(double) : RandomVariableAAD" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(RandomVariable) : RandomVariableAAD" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(double,double[]) : RandomVariableAAD" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParentAADRandomVariables() : RandomVariableAAD[]" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getParentRandomVariableInderfaces() : RandomVariable[]" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="35" visibility="private" signature="apply(OperatorType,RandomVariable[]) : RandomVariable" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line complexity="1" visibility="private" signature="getPartialDerivative(int,int) : RandomVariable" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="58" visibility="private" signature="partialDerivativeWithRespectTo(int) : RandomVariable" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyAsDouble(double) : double" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="392" type="cond"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="410" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="427" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="436" type="cond"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="441" type="cond"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="450" type="cond"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="457" type="cond"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="477" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="484" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="495" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getGradient() : Map&lt;Integer, RandomVariable&gt;" num="520" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="530" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getArrayListOfAllIndicesOfDependentRandomVariables() : ArrayList&lt;Integer&gt;" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line num="557" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="560" type="cond"/>
            <line num="562" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="575" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="585" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="590" count="0" type="method"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="595" count="0" type="method"/>
            <line num="597" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="600" count="0" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="610" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="615" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="620" count="0" type="method"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="625" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentOperator() : OperatorType" num="632" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConstant() : boolean" num="636" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isVariable() : boolean" num="640" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFunctionList() : ArrayList&lt;RandomVariableAAD&gt;" num="644" count="0" type="method"/>
            <line num="645" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetArrayListOfAllAADRandomVariables() : void" num="648" count="0" type="method"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIsConstantTo(boolean) : void" num="655" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariableInterface() : RandomVariable" num="659" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariableInterfaceOfIndex(int) : RandomVariable" num="663" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFunctionIndex() : int" num="667" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentIDs() : int[]" num="671" count="0" type="method"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getChildrenIndices() : ArrayList&lt;Integer&gt;" num="675" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="676" type="cond"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getNumberOfParentVariables() : int" num="682" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="683" type="cond"/>
            <line num="684" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAADRandomVariableFromList(int) : RandomVariableAAD" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addToChildrenIndices(int) : void" num="693" count="0" type="method"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="712" count="0" type="method"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="717" count="0" type="method"/>
            <line num="719" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="725" count="0" type="method"/>
            <line num="727" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="733" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="741" count="0" type="method"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="762" count="0" type="method"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="770" count="0" type="method"/>
            <line num="772" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="778" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="786" count="0" type="method"/>
            <line num="788" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="794" count="0" type="method"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="802" count="0" type="method"/>
            <line num="804" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="810" count="0" type="method"/>
            <line num="812" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="826" count="0" type="method"/>
            <line num="828" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="834" count="0" type="method"/>
            <line num="836" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="842" count="0" type="method"/>
            <line num="844" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="850" count="0" type="method"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="858" count="0" type="method"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="866" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="874" count="0" type="method"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="895" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="903" count="0" type="method"/>
            <line num="905" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="911" count="0" type="method"/>
            <line num="913" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="919" count="0" type="method"/>
            <line num="921" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="927" count="0" type="method"/>
            <line num="929" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="935" count="0" type="method"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="943" count="0" type="method"/>
            <line num="945" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="948" count="0" type="method"/>
            <line num="950" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="956" count="0" type="method"/>
            <line num="958" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="964" count="0" type="method"/>
            <line num="966" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="972" count="0" type="method"/>
            <line num="974" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="980" count="0" type="method"/>
            <line num="982" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="988" count="0" type="method"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="996" count="0" type="method"/>
            <line num="998" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1004" count="0" type="method"/>
            <line num="1006" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1012" count="0" type="method"/>
            <line num="1014" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1017" count="0" type="method"/>
            <line num="1019" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1025" count="0" type="method"/>
            <line num="1027" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1033" count="0" type="method"/>
            <line num="1035" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1038" count="0" type="method"/>
            <line num="1040" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1046" count="0" type="method"/>
            <line num="1048" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1054" count="0" type="method"/>
            <line num="1056" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1062" count="0" type="method"/>
            <line num="1064" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1070" count="0" type="method"/>
            <line num="1072" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1075" count="0" type="method"/>
            <line num="1077" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1080" count="0" type="method"/>
            <line num="1082" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1085" count="0" type="method"/>
            <line num="1087" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1090" count="0" type="method"/>
            <line num="1092" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1095" count="0" type="method"/>
            <line num="1097" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1100" count="0" type="method"/>
            <line num="1102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1105" count="0" type="method"/>
            <line num="1107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="1110" count="0" type="method"/>
            <line num="1112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="1115" count="0" type="method"/>
            <line num="1117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="1120" count="0" type="method"/>
            <line num="1122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="1125" count="0" type="method"/>
            <line num="1127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="1130" count="0" type="method"/>
            <line num="1132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1135" count="0" type="method"/>
            <line num="1137" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADPathwise.java" name="RandomVariableDifferentiableAADPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="170" loc="954" coveredmethods="0" methods="94" elements="430" classes="3" ncloc="717" statements="258" conditionals="78" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="89" coveredmethods="0" methods="85" elements="195" statements="104" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPathwise.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPathwise.OperatorTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="81" coveredmethods="0" methods="9" elements="235" statements="154" conditionals="72" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line complexity="1" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="62" visibility="private" signature="getPartialDerivative(OperatorTreeNode) : RandomVariable" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAADPathwise" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAADPathwise" num="289" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(double)" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(double,double[])" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(RandomVariable)" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAADPathwise(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariable() : RandomVariable" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="315" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="319" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="324" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="383" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="407" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="439" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="455" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="479" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="497" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="505" count="0" type="method"/>
            <line num="507" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="513" count="0" type="method"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="518" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="526" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="542" count="0" type="method"/>
            <line num="544" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="550" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="558" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="582" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="590" count="0" type="method"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="598" count="0" type="method"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="622" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="630" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="638" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="654" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="667" count="0" type="method"/>
            <line num="669" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="683" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="699" count="0" type="method"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="715" count="0" type="method"/>
            <line num="717" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="723" count="0" type="method"/>
            <line num="725" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="731" count="0" type="method"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="739" count="0" type="method"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="747" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="766" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="777" count="0" type="method"/>
            <line num="779" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="796" count="0" type="method"/>
            <line num="798" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariableDifferentiable" num="807" count="0" type="method"/>
            <line num="809" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="815" count="0" type="method"/>
            <line num="817" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="823" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="831" count="0" type="method"/>
            <line num="833" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="839" count="0" type="method"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="850" count="0" type="method"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="858" count="0" type="method"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="866" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="874" count="0" type="method"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="893" count="0" type="method"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="901" count="0" type="method"/>
            <line num="903" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="909" count="0" type="method"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="917" count="0" type="method"/>
            <line num="919" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="925" count="0" type="method"/>
            <line num="927" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="930" count="0" type="method"/>
            <line num="932" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="935" count="0" type="method"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="940" count="0" type="method"/>
            <line num="942" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="945" count="0" type="method"/>
            <line num="947" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="950" count="0" type="method"/>
            <line num="952" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADPathwiseFactory.java" name="RandomVariableDifferentiableAADPathwiseFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="50" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADPathwiseFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwiseFactory()" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwiseFactory(RandomVariableFactory)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADStochasticNonOptimized.java" name="RandomVariableDifferentiableAADStochasticNonOptimized.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="169" loc="953" coveredmethods="0" methods="94" elements="428" classes="3" ncloc="717" statements="258" conditionals="76" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized">
               <metrics coveredelements="0" coveredconditionals="0" complexity="89" coveredmethods="0" methods="85" elements="195" statements="104" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized.OperatorTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="80" coveredmethods="0" methods="9" elements="233" statements="154" conditionals="70" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line complexity="1" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="61" visibility="private" signature="getPartialDerivative(OperatorTreeNode) : RandomVariable" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAADStochasticNonOptimized" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAADStochasticNonOptimized" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(double)" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(double,double[])" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(RandomVariable)" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAADStochasticNonOptimized(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariable() : RandomVariable" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="314" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="323" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="446" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="462" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="470" count="0" type="method"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="483" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="488" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="512" count="0" type="method"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="525" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="533" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="549" count="0" type="method"/>
            <line num="551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="557" count="0" type="method"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="565" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="573" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="581" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="589" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="597" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="613" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="629" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="637" count="0" type="method"/>
            <line num="639" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="645" count="0" type="method"/>
            <line num="647" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="658" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="666" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="674" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="682" count="0" type="method"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="690" count="0" type="method"/>
            <line num="692" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="698" count="0" type="method"/>
            <line num="700" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="706" count="0" type="method"/>
            <line num="708" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="714" count="0" type="method"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="722" count="0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="730" count="0" type="method"/>
            <line num="732" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="738" count="0" type="method"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="746" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="765" count="0" type="method"/>
            <line num="767" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="776" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="787" count="0" type="method"/>
            <line num="789" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="795" count="0" type="method"/>
            <line num="797" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariableDifferentiable" num="806" count="0" type="method"/>
            <line num="808" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="814" count="0" type="method"/>
            <line num="816" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="822" count="0" type="method"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="830" count="0" type="method"/>
            <line num="832" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="838" count="0" type="method"/>
            <line num="840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="857" count="0" type="method"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="865" count="0" type="method"/>
            <line num="867" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="873" count="0" type="method"/>
            <line num="875" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="881" count="0" type="method"/>
            <line num="883" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="892" count="0" type="method"/>
            <line num="894" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="900" count="0" type="method"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="908" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="916" count="0" type="method"/>
            <line num="918" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="924" count="0" type="method"/>
            <line num="926" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="929" count="0" type="method"/>
            <line num="931" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="934" count="0" type="method"/>
            <line num="936" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="939" count="0" type="method"/>
            <line num="941" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="944" count="0" type="method"/>
            <line num="946" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="949" count="0" type="method"/>
            <line num="951" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADStochasticNonOptimizedFactory.java" name="RandomVariableDifferentiableAADStochasticNonOptimizedFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="49" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimizedFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimizedFactory()" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimizedFactory(RandomVariableFactory)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariable.java" name="RandomVariableUniqueVariable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="121" loc="894" coveredmethods="0" methods="87" elements="323" classes="2" ncloc="492" statements="210" conditionals="26" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="121" coveredmethods="0" methods="87" elements="323" statements="210" conditionals="26" coveredstatements="0"/>
            </class>
            <class name="RandomVariableUniqueVariable.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(int,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[],boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[],boolean)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable,boolean)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[])" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="constructRandomVariableUniqueVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType) : void" num="82" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParentIDs() : int[]" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariableID() : int" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConstant() : boolean" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentVariables() : ArrayList&lt;RandomVariableUniqueVariable&gt;" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentOperatorType() : OperatorType" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getListOfAllVariables() : ArrayList&lt;RandomVariable&gt;" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentRandomVariables() : ArrayList&lt;RandomVariable&gt;" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariable() : RandomVariable" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isVariable() : boolean" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="235" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="298" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="316" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="325" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="334" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="371" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="380" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="389" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="398" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="407" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="429" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="453" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="469" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="485" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="506" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="519" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="528" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="537" count="0" type="method"/>
            <line num="540" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="546" count="0" type="method"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="552" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="560" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="569" count="0" type="method"/>
            <line num="572" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="578" count="0" type="method"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="587" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="596" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="605" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUpcastableToRandomVariableUniqueVariable(Object) : boolean" num="626" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="13" visibility="private" signature="apply(OperatorType,RandomVariable[]) : RandomVariableUniqueVariable" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="646" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getGradient() : RandomVariable[]" num="709" count="0" type="method"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="725" type="cond"/>
            <line num="727" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="746" type="cond"/>
            <line num="747" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getListOfDependingTrueVariables() : ArrayList&lt;RandomVariableUniqueVariable&gt;" num="753" count="0" type="method"/>
            <line num="755" count="0" type="stmt"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="758" type="cond"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getIDsOfVariablesInList() : int[]" num="768" count="0" type="method"/>
            <line num="769" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getNumberOfVariablesInList() : int" num="780" count="0" type="method"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="15" visibility="private" signature="getPartialDerivative(int,int) : RandomVariable" num="789" count="0" type="method"/>
            <line num="791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="827" type="cond"/>
            <line num="828" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="832" type="cond"/>
            <line num="833" count="0" type="stmt"/>
            <line num="835" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="854" count="0" type="method"/>
            <line num="856" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="860" type="cond"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="864" count="0" type="method"/>
            <line num="867" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="875" count="0" type="method"/>
            <line num="877" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="880" count="0" type="method"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="885" count="0" type="method"/>
            <line num="887" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariableFactory.java" name="RandomVariableUniqueVariableFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="112" coveredmethods="0" methods="9" elements="23" classes="1" ncloc="47" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariableFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="23" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariableFactory()" num="31" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,RandomVariableUniqueVariable.OperatorType) : RandomVariable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double,boolean) : RandomVariable" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[],boolean) : RandomVariable" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(RandomVariable) : RandomVariable" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getListOfAllVariables() : ArrayList&lt;RandomVariable&gt;" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfEntriesInList() : int" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.products">
         <metrics coveredelements="22" complexity="11" loc="140" methods="10" classes="3" statements="16" coveredconditionals="0" coveredmethods="9" elements="28" ncloc="74" files="3" conditionals="2" coveredstatements="13"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/products/FDMEuropeanCallOption.java" name="FDMEuropeanCallOption.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="55" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FDMEuropeanCallOption">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMEuropeanCallOption(double,double)" num="19" count="3" type="method"/>
            <line num="20" count="3" type="stmt"/>
            <line num="21" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,FiniteDifference1DModel) : double[][]" num="24" count="3" type="method"/>
            <line num="31" count="3" type="stmt"/>
            <line num="33" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="34" count="397" type="method"/>
            <line num="36" count="397" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtLowerBoundary(FiniteDifference1DModel,double,double) : double" num="46" count="300" type="method"/>
            <line num="48" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtUpperBoundary(FiniteDifference1DModel,double,double) : double" num="51" count="450" type="method"/>
            <line num="53" count="450" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/products/FDMEuropeanPutOption.java" name="FDMEuropeanPutOption.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="47" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FDMEuropeanPutOption">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMEuropeanPutOption(double,double)" num="16" count="2" type="method"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,FiniteDifference1DModel) : double[][]" num="21" count="2" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtLowerBoundary(FiniteDifference1DModel,double,double) : double" num="38" count="230" type="method"/>
            <line num="40" count="230" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtUpperBoundary(FiniteDifference1DModel,double,double) : double" num="43" count="345" type="method"/>
            <line num="45" count="345" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/finitedifference/products/FiniteDifference1DProduct.java" name="FiniteDifference1DProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="1" elements="6" classes="1" ncloc="20" statements="3" conditionals="2" coveredstatements="0"/>
            <class name="FiniteDifference1DProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="getValue(double,Model) : Object" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling">
         <metrics coveredelements="0" complexity="9" loc="314" methods="6" classes="11" statements="7" coveredconditionals="0" coveredmethods="0" elements="19" ncloc="71" files="11" conditionals="6" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/DescribedModel.java" name="DescribedModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DescribedModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/DescribedProduct.java" name="DescribedProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DescribedProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/InterestRateProductDescriptor.java" name="InterestRateProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/Model.java" name="Model.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Model">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/ModelDescriptor.java" name="ModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/ModelFactory.java" name="ModelFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ModelFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/Product.java" name="Product.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="46" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Product">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="45" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/ProductDescriptor.java" name="ProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/ProductFactory.java" name="ProductFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProductFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/SingleAssetProductDescriptor.java" name="SingleAssetProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SingleAssetProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/UnsupportedProduct.java" name="UnsupportedProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="57" coveredmethods="0" methods="5" elements="17" classes="1" ncloc="29" statements="6" conditionals="6" coveredstatements="0"/>
            <class name="UnsupportedProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="17" statements="6" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedProduct(Exception)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,Model) : Object" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line complexity="2" visibility="public" signature="getValue(double,AnalyticModel) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.models">
         <metrics coveredelements="462" complexity="243" loc="2912" methods="200" classes="11" statements="534" coveredconditionals="41" coveredmethods="106" elements="816" ncloc="1576" files="10" conditionals="82" coveredstatements="315"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BachelierModel.java" name="BachelierModel.java">
            <metrics coveredelements="39" coveredconditionals="2" complexity="18" loc="203" coveredmethods="10" methods="17" elements="53" classes="1" ncloc="101" statements="34" conditionals="2" coveredstatements="27"/>
            <class name="BachelierModel">
               <metrics coveredelements="39" coveredconditionals="2" complexity="18" coveredmethods="10" methods="17" elements="53" statements="34" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="BachelierModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable)" num="72" count="288" type="method"/>
            <line num="73" count="288" type="stmt"/>
            <line num="74" count="288" type="stmt"/>
            <line num="75" count="288" type="stmt"/>
            <line num="76" count="288" type="stmt"/>
            <line num="77" count="288" type="stmt"/>
            <line complexity="1" visibility="public" signature="BachelierModel(double,double,double)" num="87" count="20" type="method"/>
            <line num="91" count="20" type="stmt"/>
            <line num="93" count="20" type="stmt"/>
            <line num="94" count="20" type="stmt"/>
            <line num="95" count="20" type="stmt"/>
            <line num="96" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="99" count="300" type="method"/>
            <line num="101" count="300" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="104" count="3000" type="method"/>
            <line num="106" count="3000" type="stmt"/>
            <line num="107" count="3000" type="stmt"/>
            <line falsecount="3000" truecount="3000" num="107" type="cond"/>
            <line num="108" count="3000" type="stmt"/>
            <line num="110" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="113" count="3000" type="method"/>
            <line num="115" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="118" count="3300" type="method"/>
            <line num="120" count="3300" type="stmt"/>
            <line num="121" count="3300" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="124" count="3000" type="method"/>
            <line num="126" count="3000" type="stmt"/>
            <line num="127" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="130" count="664" type="method"/>
            <line num="132" count="664" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="135" count="600" type="method"/>
            <line num="137" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BachelierModel" num="150" count="288" type="method"/>
            <line num="155" count="288" type="stmt"/>
            <line num="157" count="288" type="stmt"/>
            <line num="158" count="288" type="stmt"/>
            <line num="159" count="288" type="stmt"/>
            <line num="161" count="288" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierVolatility(double) : RandomVariable" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BlackScholesModel.java" name="BlackScholesModel.java">
            <metrics coveredelements="48" coveredconditionals="6" complexity="20" loc="203" coveredmethods="16" methods="17" elements="50" classes="1" ncloc="104" statements="27" conditionals="6" coveredstatements="26"/>
            <class name="BlackScholesModel">
               <metrics coveredelements="48" coveredconditionals="6" complexity="20" coveredmethods="16" methods="17" elements="50" statements="27" conditionals="6" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModel(RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="63" count="397" type="method"/>
            <line num="68" count="397" type="stmt"/>
            <line num="70" count="397" type="stmt"/>
            <line num="71" count="397" type="stmt"/>
            <line num="72" count="397" type="stmt"/>
            <line num="73" count="397" type="stmt"/>
            <line num="76" count="397" type="stmt"/>
            <line num="77" count="397" type="stmt"/>
            <line num="78" count="397" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double,RandomVariableFactory)" num="89" count="360" type="method"/>
            <line num="94" count="360" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double)" num="104" count="43" type="method"/>
            <line num="108" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="111" count="396" type="method"/>
            <line num="113" count="396" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="116" count="9432" type="method"/>
            <line num="118" count="9432" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="121" count="18012" type="method"/>
            <line num="123" count="18012" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="126" count="9828" type="method"/>
            <line num="128" count="9828" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="131" count="9422" type="method"/>
            <line num="133" count="9422" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="136" count="8420" type="method"/>
            <line num="138" count="8420" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="141" count="2112" type="method"/>
            <line num="143" count="2112" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="151" count="1136" type="method"/>
            <line num="153" count="1136" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BlackScholesModel" num="156" count="312" type="method"/>
            <line num="161" count="312" type="stmt"/>
            <line falsecount="158" truecount="154" num="161" type="cond"/>
            <line num="162" count="312" type="stmt"/>
            <line falsecount="305" truecount="7" num="162" type="cond"/>
            <line num="163" count="312" type="stmt"/>
            <line falsecount="161" truecount="151" num="163" type="cond"/>
            <line num="165" count="312" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="173" count="4" type="method"/>
            <line num="175" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="183" count="408323" type="method"/>
            <line num="184" count="408323" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="192" count="408179" type="method"/>
            <line num="193" count="408179" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="196" count="4" type="method"/>
            <line num="198" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BlackScholesModelWithCurves.java" name="BlackScholesModelWithCurves.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="17" loc="191" coveredmethods="9" methods="15" elements="47" classes="1" ncloc="102" statements="28" conditionals="4" coveredstatements="20"/>
            <class name="BlackScholesModelWithCurves">
               <metrics coveredelements="29" coveredconditionals="0" complexity="17" coveredmethods="9" methods="15" elements="47" statements="28" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelWithCurves(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariableFactory)" num="65" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModelWithCurves(Double,DiscountCurve,Double,DiscountCurve,RandomVariableFactory)" num="91" count="2" type="method"/>
            <line num="97" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="100" count="2" type="method"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="105" count="20" type="method"/>
            <line num="107" count="20" type="stmt"/>
            <line num="108" count="20" type="stmt"/>
            <line num="110" count="20" type="stmt"/>
            <line num="112" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="115" count="20" type="method"/>
            <line num="117" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="120" count="22" type="method"/>
            <line num="122" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="125" count="20" type="method"/>
            <line num="127" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="130" count="4" type="method"/>
            <line num="132" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="137" count="4" type="method"/>
            <line num="139" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BlackScholesModelWithCurves" num="152" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/DisplacedLognomalModel.java" name="DisplacedLognomalModel.java">
            <metrics coveredelements="32" coveredconditionals="2" complexity="20" loc="232" coveredmethods="10" methods="19" elements="55" classes="1" ncloc="120" statements="34" conditionals="2" coveredstatements="20"/>
            <class name="DisplacedLognomalModel">
               <metrics coveredelements="32" coveredconditionals="2" complexity="20" coveredmethods="10" methods="19" elements="55" statements="34" conditionals="2" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable,RandomVariable)" num="75" count="3" type="method"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(RandomVariableFactory,double,double,double,double)" num="98" count="3" type="method"/>
            <line num="104" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(double,double,double,double)" num="121" count="3" type="method"/>
            <line num="126" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="129" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="134" count="300" type="method"/>
            <line num="136" count="300" type="stmt"/>
            <line num="137" count="300" type="stmt"/>
            <line falsecount="300" truecount="300" num="137" type="cond"/>
            <line num="138" count="300" type="stmt"/>
            <line num="140" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="143" count="300" type="method"/>
            <line num="145" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="148" count="303" type="method"/>
            <line num="150" count="303" type="stmt"/>
            <line num="151" count="303" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="154" count="300" type="method"/>
            <line num="156" count="300" type="stmt"/>
            <line num="157" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="160" count="6" type="method"/>
            <line num="162" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="165" count="6" type="method"/>
            <line num="167" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : DisplacedLognomalModel" num="180" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableFactory() : RandomVariableFactory" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="229" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/HestonModel.java" name="HestonModel.java">
            <metrics coveredelements="101" coveredconditionals="16" complexity="40" loc="523" coveredmethods="12" methods="27" elements="159" classes="2" ncloc="302" statements="106" conditionals="26" coveredstatements="73"/>
            <class name="HestonModel">
               <metrics coveredelements="101" coveredconditionals="16" complexity="40" coveredmethods="12" methods="27" elements="159" statements="106" conditionals="26" coveredstatements="73"/>
            </class>
            <class name="HestonModel.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModel(HestonModelDescriptor,Scheme,RandomVariableFactory)" num="127" count="2" type="method"/>
            <line num="130" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariable,Scheme,RandomVariableFactory)" num="158" count="2" type="method"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,Scheme,RandomVariableFactory)" num="203" count="5" type="method"/>
            <line num="215" count="5" type="stmt"/>
            <line num="217" count="5" type="stmt"/>
            <line num="218" count="5" type="stmt"/>
            <line num="219" count="5" type="stmt"/>
            <line num="220" count="5" type="stmt"/>
            <line num="221" count="5" type="stmt"/>
            <line num="222" count="5" type="stmt"/>
            <line num="223" count="5" type="stmt"/>
            <line num="224" count="5" type="stmt"/>
            <line num="225" count="5" type="stmt"/>
            <line num="226" count="5" type="stmt"/>
            <line num="227" count="5" type="stmt"/>
            <line num="229" count="5" type="stmt"/>
            <line num="231" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double,Scheme,RandomVariableFactory)" num="248" count="3" type="method"/>
            <line num="260" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double,Scheme)" num="286" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,Scheme)" num="312" count="3" type="method"/>
            <line num="322" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="325" count="5" type="method"/>
            <line num="328" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="328" type="cond"/>
            <line num="329" count="5" type="stmt"/>
            <line num="330" count="5" type="stmt"/>
            <line num="333" count="5" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="336" count="410" type="method"/>
            <line num="338" count="410" type="stmt"/>
            <line num="339" count="410" type="stmt"/>
            <line falsecount="0" truecount="410" num="339" type="cond"/>
            <line num="340" count="410" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="347" count="410" type="stmt"/>
            <line num="349" count="410" type="stmt"/>
            <line num="350" count="410" type="stmt"/>
            <line falsecount="300" truecount="110" num="350" type="cond"/>
            <line num="351" count="110" type="stmt"/>
            <line num="352" count="110" type="stmt"/>
            <line num="354" count="110" type="stmt"/>
            <line num="355" count="110" type="stmt"/>
            <line num="358" count="300" type="stmt"/>
            <line num="361" count="410" type="stmt"/>
            <line num="362" count="410" type="stmt"/>
            <line num="364" count="410" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="367" count="820" type="method"/>
            <line num="369" count="820" type="stmt"/>
            <line num="370" count="820" type="stmt"/>
            <line falsecount="0" truecount="820" num="370" type="cond"/>
            <line num="371" count="820" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="378" count="820" type="stmt"/>
            <line num="380" count="820" type="stmt"/>
            <line falsecount="410" truecount="410" num="380" type="cond"/>
            <line num="381" count="410" type="stmt"/>
            <line num="382" count="410" type="stmt"/>
            <line num="384" count="410" type="stmt"/>
            <line falsecount="0" truecount="410" num="384" type="cond"/>
            <line num="385" count="410" type="stmt"/>
            <line num="386" count="410" type="stmt"/>
            <line num="387" count="410" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="393" count="820" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="396" count="830" type="method"/>
            <line num="398" count="830" type="stmt"/>
            <line falsecount="415" truecount="415" num="398" type="cond"/>
            <line num="399" count="415" type="stmt"/>
            <line num="401" count="415" type="stmt"/>
            <line falsecount="0" truecount="415" num="401" type="cond"/>
            <line num="402" count="415" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="409" count="812" type="method"/>
            <line num="411" count="811" type="stmt"/>
            <line falsecount="410" truecount="410" num="411" type="cond"/>
            <line num="412" count="410" type="stmt"/>
            <line num="414" count="410" type="stmt"/>
            <line falsecount="0" truecount="410" num="414" type="cond"/>
            <line num="415" count="410" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="422" count="72" type="method"/>
            <line num="424" count="72" type="stmt"/>
            <line falsecount="68" truecount="4" num="424" type="cond"/>
            <line num="425" count="4" type="stmt"/>
            <line num="428" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="432" count="10" type="method"/>
            <line num="434" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="442" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : HestonModel" num="447" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="467" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="474" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="483" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="492" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="496" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="500" count="0" type="method"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : RandomVariable" num="504" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : RandomVariable" num="508" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : RandomVariable" num="512" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : RandomVariable" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="520" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/InhomogeneousDisplacedLognomalModel.java" name="InhomogeneousDisplacedLognomalModel.java">
            <metrics coveredelements="43" coveredconditionals="5" complexity="23" loc="265" coveredmethods="11" methods="20" elements="68" classes="1" ncloc="143" statements="42" conditionals="6" coveredstatements="27"/>
            <class name="InhomogeneousDisplacedLognomalModel">
               <metrics coveredelements="43" coveredconditionals="5" complexity="23" coveredmethods="11" methods="20" elements="68" statements="42" conditionals="6" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="72" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(RandomVariableFactory,double,double,double,double,boolean)" num="98" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(double,double,double,double,boolean)" num="123" count="3" type="method"/>
            <line num="129" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(double,double,double,double)" num="140" count="3" type="method"/>
            <line num="145" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="148" count="3" type="method"/>
            <line num="150" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="153" count="300" type="method"/>
            <line num="155" count="300" type="stmt"/>
            <line num="156" count="300" type="stmt"/>
            <line num="157" count="300" type="stmt"/>
            <line num="158" count="300" type="stmt"/>
            <line num="159" count="300" type="stmt"/>
            <line falsecount="300" truecount="300" num="159" type="cond"/>
            <line num="160" count="300" type="stmt"/>
            <line num="161" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="161" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="172" count="300" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="175" count="300" type="method"/>
            <line num="177" count="300" type="stmt"/>
            <line num="178" count="300" type="stmt"/>
            <line falsecount="300" truecount="300" num="178" type="cond"/>
            <line num="179" count="300" type="stmt"/>
            <line num="181" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="184" count="303" type="method"/>
            <line num="186" count="303" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="189" count="600" type="method"/>
            <line num="191" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="194" count="6" type="method"/>
            <line num="196" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="199" count="6" type="method"/>
            <line num="201" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : InhomogeneousDisplacedLognomalModel" num="214" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableFactory() : RandomVariableFactory" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/InhomogenousBachelierModel.java" name="InhomogenousBachelierModel.java">
            <metrics coveredelements="46" coveredconditionals="2" complexity="18" loc="207" coveredmethods="10" methods="17" elements="62" classes="1" ncloc="110" statements="43" conditionals="2" coveredstatements="34"/>
            <class name="InhomogenousBachelierModel">
               <metrics coveredelements="46" coveredconditionals="2" complexity="18" coveredmethods="10" methods="17" elements="62" statements="43" conditionals="2" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable)" num="66" count="72" type="method"/>
            <line num="67" count="72" type="stmt"/>
            <line num="68" count="72" type="stmt"/>
            <line num="69" count="72" type="stmt"/>
            <line num="70" count="72" type="stmt"/>
            <line num="71" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModel(double,double,double)" num="81" count="8" type="method"/>
            <line num="85" count="8" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="93" count="78" type="method"/>
            <line num="95" count="78" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="98" count="1050" type="method"/>
            <line num="100" count="1050" type="stmt"/>
            <line num="101" count="1050" type="stmt"/>
            <line num="102" count="1050" type="stmt"/>
            <line falsecount="1050" truecount="1050" num="102" type="cond"/>
            <line num="103" count="1050" type="stmt"/>
            <line num="105" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="108" count="1050" type="method"/>
            <line num="110" count="1050" type="stmt"/>
            <line num="111" count="1050" type="stmt"/>
            <line num="112" count="1050" type="stmt"/>
            <line num="113" count="1050" type="stmt"/>
            <line num="114" count="1050" type="stmt"/>
            <line num="115" count="1050" type="stmt"/>
            <line num="116" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="119" count="1128" type="method"/>
            <line num="121" count="1128" type="stmt"/>
            <line num="122" count="1128" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="125" count="1050" type="method"/>
            <line num="127" count="1050" type="stmt"/>
            <line num="128" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="131" count="183" type="method"/>
            <line num="133" count="183" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="136" count="156" type="method"/>
            <line num="138" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : InhomogenousBachelierModel" num="151" count="72" type="method"/>
            <line num="156" count="72" type="stmt"/>
            <line num="158" count="72" type="stmt"/>
            <line num="159" count="72" type="stmt"/>
            <line num="160" count="72" type="stmt"/>
            <line num="162" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierVolatility(double) : RandomVariable" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/MertonModel.java" name="MertonModel.java">
            <metrics coveredelements="66" coveredconditionals="4" complexity="25" loc="426" coveredmethods="15" methods="23" elements="100" classes="1" ncloc="235" statements="73" conditionals="4" coveredstatements="47"/>
            <class name="MertonModel">
               <metrics coveredelements="66" coveredconditionals="4" complexity="25" coveredmethods="15" methods="23" elements="100" statements="73" conditionals="4" coveredstatements="47"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModel(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="95" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,DiscountCurve,double,DiscountCurve,double,double,double,RandomVariableFactory)" num="130" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="166" count="3" type="method"/>
            <line num="176" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="179" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line num="181" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line num="186" count="3" type="stmt"/>
            <line num="187" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double,RandomVariableFactory)" num="202" count="3" type="method"/>
            <line num="212" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(MertonModelDescriptor)" num="227" count="1" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,DiscountCurve,double,DiscountCurve,double,double,double)" num="248" count="1" type="method"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double)" num="272" count="3" type="method"/>
            <line num="281" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double)" num="294" count="3" type="method"/>
            <line num="302" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="305" count="404" type="method"/>
            <line num="307" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="310" count="400" type="method"/>
            <line num="312" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="315" count="4" type="method"/>
            <line num="317" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="320" count="92" type="method"/>
            <line num="322" count="92" type="stmt"/>
            <line falsecount="90" truecount="2" num="322" type="cond"/>
            <line num="323" count="2" type="stmt"/>
            <line num="326" count="90" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="330" count="400" type="method"/>
            <line num="332" count="400" type="stmt"/>
            <line num="333" count="400" type="stmt"/>
            <line falsecount="300" truecount="100" num="333" type="cond"/>
            <line num="334" count="100" type="stmt"/>
            <line num="335" count="100" type="stmt"/>
            <line num="337" count="100" type="stmt"/>
            <line num="340" count="300" type="stmt"/>
            <line num="342" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="349" count="400" type="method"/>
            <line num="351" count="400" type="stmt"/>
            <line num="352" count="400" type="stmt"/>
            <line num="353" count="400" type="stmt"/>
            <line num="354" count="400" type="stmt"/>
            <line num="356" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="359" count="8" type="method"/>
            <line num="361" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="369" count="102" type="method"/>
            <line num="371" count="102" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="374" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="395" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="402" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : RandomVariable" num="409" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : RandomVariable" num="416" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : RandomVariable" num="423" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/MultiAssetBlackScholesModel.java" name="MultiAssetBlackScholesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="35" loc="321" coveredmethods="0" methods="20" elements="115" classes="1" ncloc="175" statements="69" conditionals="26" coveredstatements="0"/>
            <class name="MultiAssetBlackScholesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="35" coveredmethods="0" methods="20" elements="115" statements="69" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="MultiAssetBlackScholesModel(RandomVariableFactory,double[],double,double[][])" num="82" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiAssetBlackScholesModel(RandomVariableFactory,double[],double,double[],double[][])" num="126" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getFactorLoadingsFromVolatilityAnCorrelation(double[],double[][]) : double[][]" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiAssetBlackScholesModel(double[],double,double[][])" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiAssetBlackScholesModel(double[],double,double[],double[][])" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MultiAssetBlackScholesModel" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingMatrix() : double[][]" num="271" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatilityVector() : double[]" num="280" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCorrelationMatrix() : double[][]" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="305" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/VarianceGammaModel.java" name="VarianceGammaModel.java">
            <metrics coveredelements="58" coveredconditionals="4" complexity="27" loc="341" coveredmethods="13" methods="25" elements="107" classes="1" ncloc="184" statements="78" conditionals="4" coveredstatements="41"/>
            <class name="VarianceGammaModel">
               <metrics coveredelements="58" coveredconditionals="4" complexity="27" coveredmethods="13" methods="25" elements="107" statements="78" conditionals="4" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(RandomVariable,DiscountCurve,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(VarianceGammaModelDescriptor)" num="108" count="1" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,DiscountCurve,DiscountCurve,double,double,double,RandomVariableFactory)" num="128" count="1" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,DiscountCurve,DiscountCurve,double,double,double)" num="154" count="1" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double,double)" num="169" count="3" type="method"/>
            <line num="171" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line num="177" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="179" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double)" num="193" count="3" type="method"/>
            <line num="194" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="197" count="404" type="method"/>
            <line num="199" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="202" count="400" type="method"/>
            <line num="204" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="207" count="4" type="method"/>
            <line num="209" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="212" count="66" type="method"/>
            <line num="214" count="66" type="stmt"/>
            <line falsecount="64" truecount="2" num="214" type="cond"/>
            <line num="215" count="2" type="stmt"/>
            <line num="218" count="64" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="222" count="400" type="method"/>
            <line num="224" count="400" type="stmt"/>
            <line num="226" count="400" type="stmt"/>
            <line falsecount="300" truecount="100" num="226" type="cond"/>
            <line num="227" count="100" type="stmt"/>
            <line num="228" count="100" type="stmt"/>
            <line num="230" count="100" type="stmt"/>
            <line num="233" count="300" type="stmt"/>
            <line num="237" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="240" count="400" type="method"/>
            <line num="243" count="400" type="stmt"/>
            <line num="244" count="400" type="stmt"/>
            <line num="245" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="248" count="8" type="method"/>
            <line num="250" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="258" count="502" type="method"/>
            <line num="260" count="502" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="263" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : RandomVariable" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : RandomVariable" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : RandomVariable" num="319" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : RandomVariable" num="326" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.volatilities">
         <metrics coveredelements="271" complexity="94" loc="1402" methods="87" classes="9" statements="292" coveredconditionals="9" coveredmethods="54" elements="393" ncloc="750" files="9" conditionals="14" coveredstatements="208"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCube.java" name="SABRVolatilityCube.java">
            <metrics coveredelements="55" coveredconditionals="2" complexity="16" loc="190" coveredmethods="14" methods="14" elements="59" classes="1" ncloc="107" statements="41" conditionals="4" coveredstatements="39"/>
            <class name="SABRVolatilityCube">
               <metrics coveredelements="55" coveredconditionals="2" complexity="16" coveredmethods="14" methods="14" elements="59" statements="41" conditionals="4" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCube(String,LocalDate,DataTable,double,double,DataTable,DataTable,DataTable,double)" num="62" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCube(String,LocalDate,DataTable,double,double,DataTable,DataTable,DataTable,double,double)" num="82" count="305" type="method"/>
            <line num="85" count="305" type="stmt"/>
            <line num="86" count="305" type="stmt"/>
            <line num="87" count="305" type="stmt"/>
            <line num="88" count="305" type="stmt"/>
            <line num="89" count="305" type="stmt"/>
            <line num="90" count="305" type="stmt"/>
            <line num="91" count="305" type="stmt"/>
            <line num="92" count="305" type="stmt"/>
            <line num="93" count="305" type="stmt"/>
            <line num="94" count="305" type="stmt"/>
            <line num="95" count="305" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="98" count="7699145" type="method"/>
            <line num="101" count="7701331" type="stmt"/>
            <line falsecount="7702931" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="7704000" type="stmt"/>
            <line falsecount="7705994" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="7707435" type="stmt"/>
            <line num="110" count="7722568" type="stmt"/>
            <line num="111" count="7723502" type="stmt"/>
            <line num="112" count="7724466" type="stmt"/>
            <line num="114" count="7721640" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="118" count="3000" type="method"/>
            <line num="120" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="123" count="1290" type="method"/>
            <line num="125" count="1290" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="128" count="14394" type="method"/>
            <line num="130" count="14394" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="133" count="19682" type="method"/>
            <line num="135" count="19683" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="138" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="153" count="42683" type="method"/>
            <line num="155" count="42686" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="158" count="13451" type="method"/>
            <line num="160" count="13450" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTable() : DataTable" num="166" count="1" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRhoTable() : DataTable" num="173" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseVolTable() : DataTable" num="180" count="1" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolvolTable() : DataTable" num="187" count="1" type="method"/>
            <line num="188" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeParallel.java" name="SABRVolatilityCubeParallel.java">
            <metrics coveredelements="43" coveredconditionals="2" complexity="12" loc="164" coveredmethods="9" methods="10" elements="49" classes="1" ncloc="91" statements="35" conditionals="4" coveredstatements="32"/>
            <class name="SABRVolatilityCubeParallel">
               <metrics coveredelements="43" coveredconditionals="2" complexity="12" coveredmethods="9" methods="10" elements="49" statements="35" conditionals="4" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeParallel(String,LocalDate,DataTable,double,double,double,double,DataTable,double)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeParallel(String,LocalDate,DataTable,double,double,double,double,DataTable,double,double)" num="81" count="22" type="method"/>
            <line num="83" count="22" type="stmt"/>
            <line num="84" count="22" type="stmt"/>
            <line num="85" count="22" type="stmt"/>
            <line num="86" count="22" type="stmt"/>
            <line num="87" count="22" type="stmt"/>
            <line num="88" count="22" type="stmt"/>
            <line num="89" count="22" type="stmt"/>
            <line num="90" count="22" type="stmt"/>
            <line num="91" count="22" type="stmt"/>
            <line num="92" count="22" type="stmt"/>
            <line num="93" count="22" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="96" count="1337791" type="method"/>
            <line num="99" count="1337835" type="stmt"/>
            <line falsecount="1337852" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="1337870" type="stmt"/>
            <line falsecount="1337903" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="1337945" type="stmt"/>
            <line num="108" count="1338302" type="stmt"/>
            <line num="113" count="1337927" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="117" count="275" type="method"/>
            <line num="119" count="275" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="122" count="507" type="method"/>
            <line num="124" count="507" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="127" count="2292" type="method"/>
            <line num="129" count="2290" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="132" count="2040" type="method"/>
            <line num="134" count="2038" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="137" count="1" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="153" count="6320" type="method"/>
            <line num="155" count="6322" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="159" count="2037" type="method"/>
            <line num="161" count="2036" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeParallelFactory.java" name="SABRVolatilityCubeParallelFactory.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="5" loc="210" coveredmethods="5" methods="5" elements="61" classes="1" ncloc="113" statements="56" conditionals="0" coveredstatements="56"/>
            <class name="SABRVolatilityCubeParallelFactory">
               <metrics coveredelements="61" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="61" statements="56" conditionals="0" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="createSABRVolatilityCubeParallel(String,LocalDate,SchedulePrototype,SchedulePrototype,double,double,double,double,double,double,SwaptionDataLattice,VolatilityCubeModel,String) : SABRVolatilityCubeParallel" num="72" count="11" type="method"/>
            <line num="76" count="11" type="stmt"/>
            <line num="80" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="SABRVolatilityCubeParallelFactory(String,LocalDate,SchedulePrototype,SchedulePrototype,double,double,double,double,double,double,SwaptionDataLattice,VolatilityCubeModel,String)" num="100" count="11" type="method"/>
            <line num="103" count="11" type="stmt"/>
            <line num="104" count="11" type="stmt"/>
            <line num="105" count="11" type="stmt"/>
            <line num="106" count="11" type="stmt"/>
            <line num="107" count="11" type="stmt"/>
            <line num="108" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line num="110" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line num="113" count="11" type="stmt"/>
            <line num="114" count="11" type="stmt"/>
            <line num="115" count="11" type="stmt"/>
            <line num="116" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildParallel() : SABRVolatilityCubeParallel" num="124" count="11" type="method"/>
            <line num="126" count="11" type="stmt"/>
            <line num="127" count="11" type="stmt"/>
            <line num="129" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeSwapRateTable() : DataTable" num="136" count="11" type="method"/>
            <line num="138" count="11" type="stmt"/>
            <line num="139" count="11" type="stmt"/>
            <line num="140" count="11" type="stmt"/>
            <line num="142" count="11" type="stmt"/>
            <line num="143" count="55" type="stmt"/>
            <line num="144" count="275" type="stmt"/>
            <line num="145" count="275" type="stmt"/>
            <line num="147" count="275" type="stmt"/>
            <line num="148" count="275" type="stmt"/>
            <line num="150" count="275" type="stmt"/>
            <line num="151" count="275" type="stmt"/>
            <line num="152" count="274" type="stmt"/>
            <line num="154" count="274" type="stmt"/>
            <line num="158" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeBaseVolTable() : DataTable" num="167" count="11" type="method"/>
            <line num="169" count="11" type="stmt"/>
            <line num="170" count="11" type="stmt"/>
            <line num="171" count="11" type="stmt"/>
            <line num="173" count="11" type="stmt"/>
            <line num="174" count="11" type="stmt"/>
            <line num="175" count="55" type="stmt"/>
            <line num="176" count="275" type="stmt"/>
            <line num="177" count="275" type="stmt"/>
            <line num="179" count="275" type="stmt"/>
            <line num="183" count="11" type="stmt"/>
            <line num="186" count="11" type="stmt"/>
            <line num="189" count="11" type="stmt"/>
            <line num="190" count="11" type="stmt"/>
            <line num="191" count="55" type="stmt"/>
            <line num="193" count="275" type="stmt"/>
            <line num="194" count="275" type="stmt"/>
            <line num="196" count="275" type="stmt"/>
            <line num="197" count="275" type="stmt"/>
            <line num="198" count="275" type="stmt"/>
            <line num="200" count="275" type="stmt"/>
            <line num="201" count="275" type="stmt"/>
            <line num="202" count="275" type="stmt"/>
            <line num="207" count="11" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeSingleSmile.java" name="SABRVolatilityCubeSingleSmile.java">
            <metrics coveredelements="24" coveredconditionals="1" complexity="14" loc="189" coveredmethods="6" methods="13" elements="69" classes="1" ncloc="118" statements="54" conditionals="2" coveredstatements="17"/>
            <class name="SABRVolatilityCubeSingleSmile">
               <metrics coveredelements="24" coveredconditionals="1" complexity="14" coveredmethods="6" methods="13" elements="69" statements="54" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double,double)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double,double,double)" num="108" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="123" count="4074" type="method"/>
            <line num="127" count="4074" type="stmt"/>
            <line falsecount="0" truecount="4074" num="127" type="cond"/>
            <line num="128" count="4074" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="145" count="3" type="method"/>
            <line num="147" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="160" count="42" type="method"/>
            <line num="162" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="180" count="4" type="method"/>
            <line num="182" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="185" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/ScaledVolatilityCube.java" name="ScaledVolatilityCube.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="11" loc="100" coveredmethods="7" methods="11" elements="32" classes="1" ncloc="66" statements="21" conditionals="0" coveredstatements="13"/>
            <class name="ScaledVolatilityCube">
               <metrics coveredelements="20" coveredconditionals="0" complexity="11" coveredmethods="7" methods="11" elements="32" statements="21" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ScaledVolatilityCube(String,LocalDate,String,double,double,double)" num="36" count="20437" type="method"/>
            <line num="37" count="20439" type="stmt"/>
            <line num="38" count="20437" type="stmt"/>
            <line num="39" count="20437" type="stmt"/>
            <line num="40" count="20439" type="stmt"/>
            <line num="41" count="20439" type="stmt"/>
            <line num="42" count="20438" type="stmt"/>
            <line num="43" count="20444" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScaledVolatilityCube(String,LocalDate,String,double,double)" num="46" count="20435" type="method"/>
            <line num="47" count="20435" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="50" count="6006441" type="method"/>
            <line num="53" count="6008056" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="61" count="40866" type="method"/>
            <line num="63" count="40856" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="66" count="40884" type="method"/>
            <line num="68" count="40871" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCubeName() : String" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="75" count="440894" type="method"/>
            <line num="77" count="440912" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="90" count="40880" type="method"/>
            <line num="92" count="40882" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/StaticVolatilityCube.java" name="StaticVolatilityCube.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="11" loc="115" coveredmethods="9" methods="11" elements="31" classes="1" ncloc="64" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="StaticVolatilityCube">
               <metrics coveredelements="27" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="31" statements="20" conditionals="0" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double,double,double)" num="38" count="22" type="method"/>
            <line num="39" count="22" type="stmt"/>
            <line num="40" count="22" type="stmt"/>
            <line num="41" count="22" type="stmt"/>
            <line num="42" count="22" type="stmt"/>
            <line num="43" count="22" type="stmt"/>
            <line num="44" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double,double)" num="55" count="22" type="method"/>
            <line num="56" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="70" count="2205259" type="method"/>
            <line num="73" count="2207558" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="81" count="519" type="method"/>
            <line num="83" count="519" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="86" count="5220" type="method"/>
            <line num="88" count="5220" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="91" count="4948" type="method"/>
            <line num="93" count="4950" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="96" count="4948" type="method"/>
            <line num="98" count="4948" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="101" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="110" count="15372" type="method"/>
            <line num="112" count="15376" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolVolCube.java" name="VolVolCube.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="13" loc="130" coveredmethods="2" methods="11" elements="44" classes="1" ncloc="81" statements="29" conditionals="4" coveredstatements="20"/>
            <class name="VolVolCube">
               <metrics coveredelements="26" coveredconditionals="4" complexity="13" coveredmethods="2" methods="11" elements="44" statements="29" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="3" visibility="public" signature="VolVolCube(String,LocalDate,String,Schedule,double[])" num="50" count="20594" type="method"/>
            <line num="51" count="20599" type="stmt"/>
            <line num="52" count="20596" type="stmt"/>
            <line num="53" count="20594" type="stmt"/>
            <line num="54" count="20595" type="stmt"/>
            <line num="55" count="20595" type="stmt"/>
            <line num="57" count="20595" type="stmt"/>
            <line num="58" count="20592" type="stmt"/>
            <line falsecount="20587" truecount="213215" num="58" type="cond"/>
            <line num="59" count="213221" type="stmt"/>
            <line num="61" count="20585" type="stmt"/>
            <line num="63" count="20585" type="stmt"/>
            <line num="64" count="20587" type="stmt"/>
            <line falsecount="20583" truecount="213236" num="64" type="cond"/>
            <line num="65" count="213247" type="stmt"/>
            <line num="67" count="20586" type="stmt"/>
            <line num="69" count="20588" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="72" count="447239" type="method"/>
            <line num="75" count="447257" type="stmt"/>
            <line num="76" count="447168" type="stmt"/>
            <line num="78" count="447021" type="stmt"/>
            <line num="79" count="447032" type="stmt"/>
            <line num="80" count="446984" type="stmt"/>
            <line num="82" count="447221" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCubeName() : String" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolatilityCube.java" name="VolatilityCube.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="87" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilityCube">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolatilityCubeFactory.java" name="VolatilityCubeFactory.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="12" loc="217" coveredmethods="2" methods="12" elements="48" classes="1" ncloc="95" statements="36" conditionals="0" coveredstatements="13"/>
            <class name="VolatilityCubeFactory">
               <metrics coveredelements="15" coveredconditionals="0" complexity="12" coveredmethods="2" methods="12" elements="48" statements="36" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatilityCubeFactory(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,double,double,double,double,AnnuityMappingType)" num="60" count="9" type="method"/>
            <line num="62" count="9" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line num="65" count="9" type="stmt"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="68" count="9" type="stmt"/>
            <line num="69" count="9" type="stmt"/>
            <line num="70" count="9" type="stmt"/>
            <line num="71" count="9" type="stmt"/>
            <line num="72" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildParallelSABRCube(String,double,double,SwaptionDataLattice,VolatilityCubeModel) : SABRVolatilityCubeParallel" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildShiftedSmileSABRCube(String,VolatilityCubeModel) : SABRVolatilityCube" num="104" count="9" type="method"/>
            <line num="107" count="9" type="stmt"/>
            <line num="109" count="9" type="stmt"/>
            <line num="111" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildSABRVolatilityCube(String,VolatilityCubeModel,int[]) : SABRVolatilityCube" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildSABRVolatilityCube(String,VolatilityCubeModel,int[],DataTable,DataTable,DataTable) : SABRVolatilityCube" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(double,double,int) : void" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : double" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.optimizer">
         <metrics coveredelements="791" complexity="329" loc="3576" methods="159" classes="21" statements="753" coveredconditionals="204" coveredmethods="82" elements="1198" ncloc="1681" files="17" conditionals="286" coveredstatements="505"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/GoldenSectionSearch.java" name="GoldenSectionSearch.java">
            <metrics coveredelements="67" coveredconditionals="16" complexity="25" loc="258" coveredmethods="8" methods="11" elements="105" classes="1" ncloc="123" statements="70" conditionals="24" coveredstatements="43"/>
            <class name="GoldenSectionSearch">
               <metrics coveredelements="67" coveredconditionals="16" complexity="25" coveredmethods="8" methods="11" elements="105" statements="70" conditionals="24" coveredstatements="43"/>
            </class>
            <line complexity="5" visibility="public" signature="main(String[]) : void" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GoldenSectionSearch(double,double)" num="92" count="522671" type="method"/>
            <line num="93" count="522664" type="stmt"/>
            <line num="94" count="522647" type="stmt"/>
            <line num="95" count="522647" type="stmt"/>
            <line num="96" count="522561" type="stmt"/>
            <line num="98" count="522595" type="stmt"/>
            <line num="99" count="522625" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="105" count="522504" type="method"/>
            <line num="107" count="522528" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="115" count="48475072" type="method"/>
            <line num="116" count="48513004" type="stmt"/>
            <line num="117" count="48536067" type="stmt"/>
            <line complexity="10" visibility="public" signature="setValue(double) : void" num="127" count="48785809" type="method"/>
            <line num="128" count="48840184" type="stmt"/>
            <line falsecount="48867270" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="48890993" type="stmt"/>
            <line falsecount="47416570" truecount="1566375" num="132" type="cond"/>
            <line num="136" count="1566469" type="stmt"/>
            <line num="138" count="1566638" type="stmt"/>
            <line falsecount="522484" truecount="1044738" num="138" type="cond"/>
            <line num="139" count="1044807" type="stmt"/>
            <line num="141" count="522520" type="stmt"/>
            <line falsecount="0" truecount="522553" num="141" type="cond"/>
            <line num="142" count="522566" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="152" count="47407872" type="stmt"/>
            <line falsecount="24248762" truecount="23686215" num="152" type="cond"/>
            <line num="154" count="23694539" type="stmt"/>
            <line falsecount="14752733" truecount="9058285" num="154" type="cond"/>
            <line num="158" count="9060290" type="stmt"/>
            <line num="159" count="9062768" type="stmt"/>
            <line num="161" count="9064097" type="stmt"/>
            <line num="162" count="9066115" type="stmt"/>
            <line num="167" count="14755560" type="stmt"/>
            <line num="168" count="14762185" type="stmt"/>
            <line num="172" count="24253586" type="stmt"/>
            <line falsecount="18971831" truecount="5377758" num="172" type="cond"/>
            <line num="176" count="5378379" type="stmt"/>
            <line num="177" count="5379294" type="stmt"/>
            <line num="179" count="5379906" type="stmt"/>
            <line num="180" count="5380381" type="stmt"/>
            <line num="185" count="18977015" type="stmt"/>
            <line num="186" count="18983567" type="stmt"/>
            <line num="193" count="47670219" type="stmt"/>
            <line falsecount="24803054" truecount="23268859" num="193" type="cond"/>
            <line num="194" count="23274542" type="stmt"/>
            <line num="196" count="24807230" type="stmt"/>
            <line num="202" count="47517698" type="stmt"/>
            <line falsecount="47256239" truecount="361705" num="202" type="cond"/>
            <line num="203" count="361723" type="stmt"/>
            <line num="205" count="47704712" type="stmt"/>
            <line num="208" count="49339828" type="stmt"/>
            <line num="209" count="49412123" type="stmt"/>
            <line complexity="2" visibility="public" signature="optimize() : GoldenSectionSearch" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(double) : double" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoldenSection(double,double) : double" num="234" count="48832698" type="method"/>
            <line num="235" count="48880177" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="241" count="48600351" type="method"/>
            <line num="242" count="48637080" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="248" count="49501950" type="method"/>
            <line num="249" count="49593440" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="255" count="49126334" type="method"/>
            <line num="256" count="49180286" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/LevenbergMarquardt.java" name="LevenbergMarquardt.java">
            <metrics coveredelements="240" coveredconditionals="55" complexity="80" loc="896" coveredmethods="26" methods="36" elements="321" classes="2" ncloc="409" statements="209" conditionals="76" coveredstatements="159"/>
            <class name="LevenbergMarquardt">
               <metrics coveredelements="240" coveredconditionals="55" complexity="80" coveredmethods="26" methods="36" elements="321" statements="209" conditionals="76" coveredstatements="159"/>
            </class>
            <class name="LevenbergMarquardt.RegularizationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(RegularizationMethod,double[],double[],int,ExecutorService)" num="240" count="835" type="method"/>
            <line num="241" count="835" type="stmt"/>
            <line num="242" count="835" type="stmt"/>
            <line num="243" count="835" type="stmt"/>
            <line num="244" count="835" type="stmt"/>
            <line num="245" count="835" type="stmt"/>
            <line num="247" count="835" type="stmt"/>
            <line num="248" count="835" type="stmt"/>
            <line num="250" count="835" type="stmt"/>
            <line num="251" count="835" type="stmt"/>
            <line num="252" count="835" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(double[],double[],int,ExecutorService)" num="263" count="3" type="method"/>
            <line num="264" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(RegularizationMethod,double[],double[],int,int)" num="277" count="832" type="method"/>
            <line num="278" count="832" type="stmt"/>
            <line num="280" count="832" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(double[],double[],int,int)" num="291" count="786" type="method"/>
            <line num="292" count="786" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(List&lt;Number&gt;,List&lt;Number&gt;,int,ExecutorService)" num="303" count="1" type="method"/>
            <line num="304" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(List&lt;Number&gt;,List&lt;Number&gt;,int,int)" num="315" count="1" type="method"/>
            <line num="316" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt()" num="324" count="1" type="method"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="numberListToDoubleArray(List&lt;Number&gt;) : double[]" num="335" count="2" type="method"/>
            <line num="336" count="2" type="stmt"/>
            <line num="337" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="337" type="cond"/>
            <line num="338" count="4" type="stmt"/>
            <line num="340" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(int)" num="348" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setInitialParameters(double[]) : LevenbergMarquardt" num="361" count="1" type="method"/>
            <line num="362" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameterSteps(double[]) : LevenbergMarquardt" num="377" count="47" type="method"/>
            <line num="378" count="47" type="stmt"/>
            <line falsecount="47" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="47" type="stmt"/>
            <line num="382" count="47" type="stmt"/>
            <line complexity="2" visibility="public" signature="setTargetValues(double[]) : LevenbergMarquardt" num="392" count="1" type="method"/>
            <line num="393" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="setMaxIteration(int) : LevenbergMarquardt" num="407" count="1" type="method"/>
            <line num="408" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="setWeights(double[]) : LevenbergMarquardt" num="421" count="1" type="method"/>
            <line num="422" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="422" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="setErrorTolerance(double) : LevenbergMarquardt" num="437" count="546" type="method"/>
            <line num="438" count="546" type="stmt"/>
            <line falsecount="546" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="546" type="stmt"/>
            <line num="442" count="546" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double" num="451" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double) : LevenbergMarquardt" num="462" count="46" type="method"/>
            <line num="463" count="46" type="stmt"/>
            <line num="464" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="485" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="498" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="510" count="0" type="method"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="517" count="842" type="method"/>
            <line num="519" count="842" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="522" count="21" type="method"/>
            <line num="524" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="setErrorMeanSquaredCurrent(double) : void" num="530" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="534" count="50" type="method"/>
            <line num="536" count="50" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(double[],double[][]) : void" num="557" count="68495" type="method"/>
            <line num="561" count="68495" type="stmt"/>
            <line num="562" count="68495" type="stmt"/>
            <line falsecount="68495" truecount="342019" num="562" type="cond"/>
            <line num="563" count="342019" type="stmt"/>
            <line num="564" count="342019" type="stmt"/>
            <line num="566" count="342019" type="stmt"/>
            <line num="567" count="342019" type="stmt"/>
            <line complexity="5" visibility="public" signature="call() : double[]" num="568" count="341724" type="method"/>
            <line num="570" count="341727" type="stmt"/>
            <line num="571" count="341722" type="stmt"/>
            <line falsecount="339526" truecount="2183" num="571" type="cond"/>
            <line num="572" count="2184" type="stmt"/>
            <line num="580" count="339524" type="stmt"/>
            <line num="584" count="341698" type="stmt"/>
            <line num="587" count="341708" type="stmt"/>
            <line num="588" count="341750" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="594" count="341622" type="stmt"/>
            <line falsecount="341419" truecount="3029787" num="594" type="cond"/>
            <line num="595" count="3029734" type="stmt"/>
            <line num="596" count="3028911" type="stmt"/>
            <line num="597" count="3028435" type="stmt"/>
            <line falsecount="3020660" truecount="8274" num="597" type="cond"/>
            <line num="598" count="8274" type="stmt"/>
            <line num="601" count="341479" type="stmt"/>
            <line num="604" count="342019" type="stmt"/>
            <line falsecount="1506" truecount="340513" num="604" type="cond"/>
            <line num="605" count="340513" type="stmt"/>
            <line num="606" count="340513" type="stmt"/>
            <line num="609" count="1506" type="stmt"/>
            <line num="610" count="1506" type="stmt"/>
            <line num="611" count="1506" type="stmt"/>
            <line num="615" count="68495" type="stmt"/>
            <line falsecount="68495" truecount="342019" num="615" type="cond"/>
            <line num="616" count="342019" type="stmt"/>
            <line num="617" count="342019" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="630" count="196523" type="method"/>
            <line num="632" count="196523" type="stmt"/>
            <line complexity="9" visibility="public" signature="run() : void" num="646" count="837" type="method"/>
            <line num="649" count="837" type="stmt"/>
            <line falsecount="7" truecount="830" num="649" type="cond"/>
            <line num="650" count="830" type="stmt"/>
            <line falsecount="0" truecount="830" num="650" type="cond"/>
            <line num="651" count="830" type="stmt"/>
            <line num="652" count="830" type="stmt"/>
            <line num="656" count="837" type="stmt"/>
            <line num="659" count="837" type="stmt"/>
            <line num="660" count="837" type="stmt"/>
            <line num="662" count="837" type="stmt"/>
            <line num="663" count="837" type="stmt"/>
            <line num="664" count="837" type="stmt"/>
            <line num="666" count="837" type="stmt"/>
            <line num="667" count="837" type="stmt"/>
            <line num="668" count="837" type="stmt"/>
            <line num="670" count="837" type="stmt"/>
            <line num="671" count="837" type="stmt"/>
            <line num="673" count="837" type="stmt"/>
            <line num="675" count="837" type="stmt"/>
            <line num="677" count="195925" type="stmt"/>
            <line num="680" count="195925" type="stmt"/>
            <line num="683" count="195925" type="stmt"/>
            <line num="689" count="195925" type="stmt"/>
            <line falsecount="127042" truecount="68883" num="689" type="cond"/>
            <line num="690" count="68883" type="stmt"/>
            <line num="693" count="68883" type="stmt"/>
            <line num="694" count="68883" type="stmt"/>
            <line num="695" count="68883" type="stmt"/>
            <line num="698" count="68883" type="stmt"/>
            <line num="701" count="68883" type="stmt"/>
            <line num="703" count="127042" type="stmt"/>
            <line num="706" count="127042" type="stmt"/>
            <line num="710" count="195925" type="stmt"/>
            <line falsecount="837" truecount="195088" num="710" type="cond"/>
            <line num="711" count="195088" type="stmt"/>
            <line num="713" count="837" type="stmt"/>
            <line num="717" count="195088" type="stmt"/>
            <line falsecount="195088" truecount="0" num="717" type="cond"/>
            <line num="719" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="724" type="cond"/>
            <line num="725" count="0" type="stmt"/>
            <line num="727" count="0" type="stmt"/>
            <line num="733" count="837" type="stmt"/>
            <line falsecount="7" truecount="830" num="733" type="cond"/>
            <line num="734" count="830" type="stmt"/>
            <line num="735" count="830" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(double[]) : double" num="740" count="195925" type="method"/>
            <line num="741" count="195925" type="stmt"/>
            <line num="743" count="195925" type="stmt"/>
            <line falsecount="195925" truecount="1440997" num="743" type="cond"/>
            <line num="744" count="1440997" type="stmt"/>
            <line num="745" count="1440997" type="stmt"/>
            <line num="748" count="195925" type="stmt"/>
            <line complexity="13" visibility="private" signature="updateParameterTest() : void" num="756" count="195088" type="method"/>
            <line num="757" count="195088" type="stmt"/>
            <line falsecount="126502" truecount="68586" num="757" type="cond"/>
            <line num="758" count="68586" type="stmt"/>
            <line num="759" count="68586" type="stmt"/>
            <line num="762" count="195088" type="stmt"/>
            <line num="764" count="195088" type="stmt"/>
            <line falsecount="195088" truecount="196901" num="764" type="cond"/>
            <line num="765" count="196901" type="stmt"/>
            <line num="767" count="196901" type="stmt"/>
            <line falsecount="196901" truecount="946277" num="767" type="cond"/>
            <line num="768" count="946277" type="stmt"/>
            <line falsecount="946277" truecount="3025893" num="768" type="cond"/>
            <line num="769" count="3025893" type="stmt"/>
            <line num="770" count="3025893" type="stmt"/>
            <line falsecount="3025893" truecount="46207785" num="770" type="cond"/>
            <line num="771" count="46207785" type="stmt"/>
            <line num="773" count="3025893" type="stmt"/>
            <line falsecount="2079616" truecount="946277" num="773" type="cond"/>
            <line num="774" count="946277" type="stmt"/>
            <line falsecount="944165" truecount="2112" num="774" type="cond"/>
            <line num="776" count="2112" type="stmt"/>
            <line num="780" count="944165" type="stmt"/>
            <line falsecount="943416" truecount="749" num="780" type="cond"/>
            <line num="781" count="749" type="stmt"/>
            <line num="784" count="943416" type="stmt"/>
            <line num="789" count="3025893" type="stmt"/>
            <line num="790" count="3025893" type="stmt"/>
            <line num="795" count="196901" type="stmt"/>
            <line falsecount="196901" truecount="946277" num="795" type="cond"/>
            <line num="796" count="946277" type="stmt"/>
            <line num="797" count="946277" type="stmt"/>
            <line num="798" count="946277" type="stmt"/>
            <line falsecount="946277" truecount="7558780" num="798" type="cond"/>
            <line num="799" count="7558780" type="stmt"/>
            <line num="801" count="946277" type="stmt"/>
            <line num="804" count="196901" type="stmt"/>
            <line num="807" count="196901" type="stmt"/>
            <line num="809" count="1813" type="stmt"/>
            <line num="810" count="1813" type="stmt"/>
            <line num="815" count="195088" type="stmt"/>
            <line falsecount="195088" truecount="939228" num="815" type="cond"/>
            <line num="816" count="939228" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : LevenbergMarquardt" num="827" count="1" type="method"/>
            <line num="829" count="1" type="stmt"/>
            <line num="830" count="1" type="stmt"/>
            <line num="831" count="1" type="stmt"/>
            <line num="832" count="1" type="stmt"/>
            <line num="833" count="1" type="stmt"/>
            <line num="834" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(double[],double[],boolean) : LevenbergMarquardt" num="855" count="1" type="method"/>
            <line num="856" count="1" type="stmt"/>
            <line num="857" count="1" type="stmt"/>
            <line num="858" count="1" type="stmt"/>
            <line num="860" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="860" type="cond"/>
            <line num="861" count="1" type="stmt"/>
            <line num="864" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;Number&gt;,List&lt;Number&gt;,boolean) : LevenbergMarquardt" num="885" count="0" type="method"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="890" type="cond"/>
            <line num="891" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/Optimizer.java" name="Optimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Optimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Optimizer.ObjectiveFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/OptimizerFactory.java" name="OptimizerFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OptimizerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/OptimizerFactoryCMAES.java" name="OptimizerFactoryCMAES.java">
            <metrics coveredelements="42" coveredconditionals="4" complexity="21" loc="143" coveredmethods="11" methods="15" elements="66" classes="1" ncloc="110" statements="43" conditionals="8" coveredstatements="27"/>
            <class name="OptimizerFactoryCMAES">
               <metrics coveredelements="42" coveredconditionals="4" complexity="21" coveredmethods="11" methods="15" elements="66" statements="43" conditionals="8" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int,double[],double[],double[])" num="27" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int,double[])" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int)" num="47" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[]) : Optimizer" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[]) : Optimizer" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[],double[]) : Optimizer" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="69" type="cond"/>
            <line num="70" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="70" type="cond"/>
            <line num="71" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="71" type="cond"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="79" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIterations() : int" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="91" type="cond"/>
            <line complexity="2" visibility="public" signature="run() : void" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeObjectiveValue(double[]) : double" num="97" count="877" type="method"/>
            <line num="99" count="877" type="stmt"/>
            <line num="100" count="877" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="877" type="stmt"/>
            <line num="105" count="877" type="stmt"/>
            <line num="106" count="1754" type="stmt"/>
            <line num="108" count="877" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="111" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="116" count="3" type="method"/>
            <line num="118" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="121" count="945" type="method"/>
            <line num="123" count="945" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="126" count="945" type="method"/>
            <line num="128" count="945" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/OptimizerFactoryLevenbergMarquardt.java" name="OptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="74" coveredmethods="7" methods="8" elements="21" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="12"/>
            <class name="OptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(LevenbergMarquardt.RegularizationMethod,double,int,double,int)" num="23" count="58" type="method"/>
            <line num="24" count="58" type="stmt"/>
            <line num="25" count="58" type="stmt"/>
            <line num="26" count="58" type="stmt"/>
            <line num="27" count="58" type="stmt"/>
            <line num="28" count="58" type="stmt"/>
            <line num="29" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(LevenbergMarquardt.RegularizationMethod,int,double,int)" num="32" count="55" type="method"/>
            <line num="33" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(int,double,int)" num="36" count="55" type="method"/>
            <line num="37" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(int,int)" num="40" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[]) : Optimizer" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[]) : Optimizer" num="49" count="32" type="method"/>
            <line num="51" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[],double[]) : Optimizer" num="54" count="46" type="method"/>
            <line num="56" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="65" count="11635" type="method"/>
            <line num="67" count="11636" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/SolverException.java" name="SolverException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="46" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SolverException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SolverException(String)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SolverException(Throwable)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SolverException(String,Throwable)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticLevenbergMarquardt.java" name="StochasticLevenbergMarquardt.java">
            <metrics coveredelements="148" coveredconditionals="40" complexity="63" loc="712" coveredmethods="8" methods="25" elements="247" classes="2" ncloc="327" statements="160" conditionals="62" coveredstatements="100"/>
            <class name="StochasticLevenbergMarquardt">
               <metrics coveredelements="148" coveredconditionals="40" complexity="63" coveredmethods="8" methods="25" elements="247" statements="160" conditionals="62" coveredstatements="100"/>
            </class>
            <class name="StochasticLevenbergMarquardt.RegularizationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="227" count="2" type="method"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,int)" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double) : void" num="286" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="333" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : RandomVariable[]" num="340" count="2" type="method"/>
            <line num="342" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setErrorMeanSquaredCurrent(double) : void" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="357" count="2" type="method"/>
            <line num="359" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="366" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="388" count="18" type="method"/>
            <line num="392" count="18" type="stmt"/>
            <line num="393" count="18" type="stmt"/>
            <line num="394" count="18" type="stmt"/>
            <line falsecount="18" truecount="864" num="394" type="cond"/>
            <line num="395" count="864" type="stmt"/>
            <line num="396" count="864" type="stmt"/>
            <line num="398" count="864" type="stmt"/>
            <line num="399" count="864" type="stmt"/>
            <line complexity="4" visibility="public" signature="call() : RandomVariable[]" num="400" count="864" type="method"/>
            <line num="402" count="864" type="stmt"/>
            <line num="403" count="864" type="stmt"/>
            <line falsecount="864" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="412" count="864" type="stmt"/>
            <line num="416" count="864" type="stmt"/>
            <line num="419" count="864" type="stmt"/>
            <line num="420" count="864" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="864" type="stmt"/>
            <line falsecount="864" truecount="133056" num="425" type="cond"/>
            <line num="426" count="133056" type="stmt"/>
            <line num="429" count="864" type="stmt"/>
            <line num="432" count="864" type="stmt"/>
            <line falsecount="864" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="864" type="stmt"/>
            <line num="438" count="864" type="stmt"/>
            <line num="439" count="864" type="stmt"/>
            <line num="443" count="18" type="stmt"/>
            <line falsecount="18" truecount="864" num="443" type="cond"/>
            <line num="444" count="864" type="stmt"/>
            <line num="445" count="864" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="458" count="29" type="method"/>
            <line num="460" count="29" type="stmt"/>
            <line complexity="24" visibility="public" signature="run() : void" num="468" count="2" type="method"/>
            <line num="471" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="478" count="2" type="stmt"/>
            <line num="481" count="2" type="stmt"/>
            <line num="482" count="2" type="stmt"/>
            <line num="484" count="2" type="stmt"/>
            <line num="485" count="2" type="stmt"/>
            <line num="487" count="2" type="stmt"/>
            <line num="488" count="2" type="stmt"/>
            <line num="489" count="2" type="stmt"/>
            <line num="490" count="2" type="stmt"/>
            <line num="492" count="2" type="stmt"/>
            <line num="493" count="2" type="stmt"/>
            <line num="494" count="2" type="stmt"/>
            <line num="496" count="2" type="stmt"/>
            <line num="498" count="29" type="stmt"/>
            <line num="501" count="29" type="stmt"/>
            <line num="504" count="29" type="stmt"/>
            <line num="510" count="29" type="stmt"/>
            <line num="512" count="29" type="stmt"/>
            <line falsecount="12" truecount="17" num="512" type="cond"/>
            <line num="513" count="17" type="stmt"/>
            <line num="514" count="17" type="stmt"/>
            <line num="515" count="17" type="stmt"/>
            <line num="516" count="17" type="stmt"/>
            <line num="520" count="29" type="stmt"/>
            <line falsecount="27" truecount="2" num="520" type="cond"/>
            <line num="521" count="2" type="stmt"/>
            <line num="527" count="27" type="stmt"/>
            <line num="528" count="27" type="stmt"/>
            <line falsecount="12" truecount="15" num="528" type="cond"/>
            <line num="529" count="15" type="stmt"/>
            <line num="532" count="12" type="stmt"/>
            <line num="539" count="27" type="stmt"/>
            <line num="544" count="27" type="stmt"/>
            <line num="546" count="27" type="stmt"/>
            <line num="547" count="27" type="stmt"/>
            <line num="549" count="27" type="stmt"/>
            <line num="550" count="27" type="stmt"/>
            <line falsecount="27" truecount="27" num="550" type="cond"/>
            <line num="552" count="27" type="stmt"/>
            <line falsecount="27" truecount="1296" num="552" type="cond"/>
            <line num="553" count="1296" type="stmt"/>
            <line falsecount="1296" truecount="31752" num="553" type="cond"/>
            <line num="554" count="31752" type="stmt"/>
            <line num="555" count="31752" type="stmt"/>
            <line falsecount="31752" truecount="4889808" num="555" type="cond"/>
            <line num="556" count="4889808" type="stmt"/>
            <line falsecount="1299933" truecount="3589875" num="556" type="cond"/>
            <line num="557" count="3589875" type="stmt"/>
            <line num="560" count="31752" type="stmt"/>
            <line falsecount="30456" truecount="1296" num="560" type="cond"/>
            <line num="561" count="1296" type="stmt"/>
            <line falsecount="0" truecount="1296" num="561" type="cond"/>
            <line num="563" count="1296" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="576" count="31752" type="stmt"/>
            <line num="577" count="31752" type="stmt"/>
            <line num="582" count="27" type="stmt"/>
            <line falsecount="27" truecount="1296" num="582" type="cond"/>
            <line num="583" count="1296" type="stmt"/>
            <line num="584" count="1296" type="stmt"/>
            <line num="585" count="1296" type="stmt"/>
            <line falsecount="1296" truecount="199584" num="585" type="cond"/>
            <line num="586" count="199584" type="stmt"/>
            <line falsecount="41211" truecount="158373" num="586" type="cond"/>
            <line num="587" count="158373" type="stmt"/>
            <line num="590" count="1296" type="stmt"/>
            <line num="593" count="27" type="stmt"/>
            <line num="595" count="27" type="stmt"/>
            <line num="596" count="27" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="604" count="27" type="stmt"/>
            <line falsecount="27" truecount="1296" num="604" type="cond"/>
            <line num="605" count="1296" type="stmt"/>
            <line num="609" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="609" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="616" type="cond"/>
            <line num="617" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="625" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="625" type="cond"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(RandomVariable[]) : double" num="632" count="29" type="method"/>
            <line num="633" count="29" type="stmt"/>
            <line num="635" count="29" type="stmt"/>
            <line falsecount="29" truecount="4466" num="635" type="cond"/>
            <line num="636" count="4466" type="stmt"/>
            <line num="637" count="4466" type="stmt"/>
            <line num="640" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : StochasticLevenbergMarquardt" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(RandomVariable[],RandomVariable[],boolean) : StochasticLevenbergMarquardt" num="673" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="678" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,boolean) : StochasticLevenbergMarquardt" num="702" count="0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticLevenbergMarquardtAD.java" name="StochasticLevenbergMarquardtAD.java">
            <metrics coveredelements="54" coveredconditionals="23" complexity="20" loc="190" coveredmethods="4" methods="5" elements="60" classes="1" ncloc="81" statements="29" conditionals="26" coveredstatements="27"/>
            <class name="StochasticLevenbergMarquardtAD">
               <metrics coveredelements="54" coveredconditionals="23" complexity="20" coveredmethods="4" methods="5" elements="60" statements="29" conditionals="26" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardtAD(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService,boolean)" num="108" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardtAD(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="118" count="2" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line complexity="3" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="127" count="893" type="method"/>
            <line num="132" count="893" type="stmt"/>
            <line falsecount="893" truecount="42864" num="132" type="cond"/>
            <line num="133" count="42864" type="stmt"/>
            <line falsecount="42384" truecount="480" num="133" type="cond"/>
            <line num="134" count="480" type="stmt"/>
            <line num="138" count="893" type="stmt"/>
            <line complexity="14" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="141" count="27" type="method"/>
            <line num="146" count="27" type="stmt"/>
            <line num="147" count="27" type="stmt"/>
            <line falsecount="27" truecount="450" num="147" type="cond"/>
            <line num="148" count="450" type="stmt"/>
            <line num="151" count="27" type="stmt"/>
            <line falsecount="0" truecount="27" num="151" type="cond"/>
            <line num="152" count="27" type="stmt"/>
            <line num="153" count="27" type="stmt"/>
            <line falsecount="27" truecount="1386" num="153" type="cond"/>
            <line num="154" count="1386" type="stmt"/>
            <line num="157" count="27" type="stmt"/>
            <line falsecount="18" truecount="9" num="157" type="cond"/>
            <line num="158" count="9" type="stmt"/>
            <line num="162" count="27" type="stmt"/>
            <line falsecount="18" truecount="9" num="162" type="cond"/>
            <line num="163" count="9" type="stmt"/>
            <line num="164" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Integer) : Map&lt;Long, RandomVariable&gt;" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="174" count="9" type="stmt"/>
            <line falsecount="9" truecount="1386" num="174" type="cond"/>
            <line num="175" count="1386" type="stmt"/>
            <line falsecount="90" truecount="1296" num="175" type="cond"/>
            <line num="176" count="1296" type="stmt"/>
            <line falsecount="1296" truecount="0" num="176" type="cond"/>
            <line num="177" count="1296" type="stmt"/>
            <line falsecount="1296" truecount="62208" num="177" type="cond"/>
            <line num="178" count="62208" type="stmt"/>
            <line num="179" count="62208" type="stmt"/>
            <line falsecount="36891" truecount="25317" num="179" type="cond"/>
            <line num="180" count="25317" type="stmt"/>
            <line num="187" count="18" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticOptimizer.java" name="StochasticOptimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StochasticOptimizer.ObjectiveFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactory.java" name="StochasticOptimizerFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="29" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryLevenbergMarquardt.java" name="StochasticOptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="52" coveredmethods="0" methods="5" elements="14" classes="1" ncloc="34" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(StochasticLevenbergMarquardt.RegularizationMethod,int,double,int)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(int,double,int)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(int,int)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryLevenbergMarquardtAD.java" name="StochasticOptimizerFactoryLevenbergMarquardtAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="46" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="29" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryLevenbergMarquardtAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardtAD(int,double,int)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardtAD(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD.java" name="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="55" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="36" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD(int,RandomVariable,int)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardt.java" name="StochasticPathwiseLevenbergMarquardt.java">
            <metrics coveredelements="180" coveredconditionals="54" complexity="71" loc="725" coveredmethods="11" methods="27" elements="274" classes="1" ncloc="335" statements="171" conditionals="76" coveredstatements="115"/>
            <class name="StochasticPathwiseLevenbergMarquardt">
               <metrics coveredelements="180" coveredconditionals="54" complexity="71" coveredmethods="11" methods="27" elements="274" statements="171" conditionals="76" coveredstatements="115"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],int,RandomVariable,ExecutorService)" num="208" count="10" type="method"/>
            <line num="209" count="10" type="stmt"/>
            <line num="210" count="10" type="stmt"/>
            <line num="211" count="10" type="stmt"/>
            <line num="212" count="10" type="stmt"/>
            <line num="213" count="10" type="stmt"/>
            <line num="214" count="10" type="stmt"/>
            <line num="215" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="215" type="cond"/>
            <line num="217" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="217" type="cond"/>
            <line num="218" count="6" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line falsecount="6" truecount="27" num="219" type="cond"/>
            <line num="220" count="27" type="stmt"/>
            <line num="224" count="10" type="stmt"/>
            <line num="225" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(RandomVariable[],RandomVariable[],int,int)" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,ExecutorService)" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,int)" num="260" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="numberListToDoubleArray(List&lt;RandomVariable&gt;) : RandomVariable[]" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double[]" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double[]) : void" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : RandomVariable[]" num="348" count="10" type="method"/>
            <line num="350" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="353" count="4" type="method"/>
            <line num="355" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setErrorMeanSquaredCurrent(RandomVariable) : void" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="365" count="10" type="method"/>
            <line num="367" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="370" count="1277" type="method"/>
            <line num="371" count="1277" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="374" count="708" type="method"/>
            <line num="375" count="708" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="396" count="202" type="method"/>
            <line num="400" count="202" type="stmt"/>
            <line num="401" count="202" type="stmt"/>
            <line num="402" count="202" type="stmt"/>
            <line falsecount="202" truecount="560" num="402" type="cond"/>
            <line num="403" count="560" type="stmt"/>
            <line num="404" count="560" type="stmt"/>
            <line num="406" count="560" type="stmt"/>
            <line num="407" count="560" type="stmt"/>
            <line complexity="4" visibility="public" signature="call() : RandomVariable[]" num="408" count="560" type="method"/>
            <line num="410" count="560" type="stmt"/>
            <line num="411" count="560" type="stmt"/>
            <line falsecount="276" truecount="284" num="411" type="cond"/>
            <line num="412" count="284" type="stmt"/>
            <line num="420" count="276" type="stmt"/>
            <line num="424" count="560" type="stmt"/>
            <line num="427" count="560" type="stmt"/>
            <line num="428" count="560" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="560" type="stmt"/>
            <line falsecount="560" truecount="1568" num="433" type="cond"/>
            <line num="434" count="1568" type="stmt"/>
            <line num="435" count="1568" type="stmt"/>
            <line num="437" count="560" type="stmt"/>
            <line num="440" count="560" type="stmt"/>
            <line falsecount="560" truecount="0" num="440" type="cond"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="445" count="560" type="stmt"/>
            <line num="446" count="560" type="stmt"/>
            <line num="447" count="560" type="stmt"/>
            <line num="451" count="202" type="stmt"/>
            <line falsecount="202" truecount="560" num="451" type="cond"/>
            <line num="452" count="560" type="stmt"/>
            <line num="453" count="560" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="466" count="971" type="method"/>
            <line num="468" count="971" type="stmt"/>
            <line complexity="25" visibility="public" signature="run() : void" num="476" count="10" type="method"/>
            <line num="478" count="10" type="stmt"/>
            <line num="481" count="10" type="stmt"/>
            <line num="482" count="10" type="stmt"/>
            <line num="484" count="10" type="stmt"/>
            <line num="485" count="10" type="stmt"/>
            <line num="487" count="10" type="stmt"/>
            <line num="488" count="10" type="stmt"/>
            <line num="489" count="10" type="stmt"/>
            <line num="490" count="10" type="stmt"/>
            <line num="492" count="10" type="stmt"/>
            <line num="494" count="10" type="stmt"/>
            <line num="496" count="971" type="stmt"/>
            <line num="499" count="971" type="stmt"/>
            <line num="502" count="971" type="stmt"/>
            <line num="508" count="971" type="stmt"/>
            <line num="510" count="971" type="stmt"/>
            <line falsecount="971" truecount="2113" num="510" type="cond"/>
            <line num="511" count="2113" type="stmt"/>
            <line num="513" count="971" type="stmt"/>
            <line falsecount="971" truecount="1208" num="513" type="cond"/>
            <line num="514" count="1208" type="stmt"/>
            <line num="518" count="971" type="stmt"/>
            <line num="519" count="971" type="stmt"/>
            <line num="522" count="971" type="stmt"/>
            <line falsecount="961" truecount="10" num="522" type="cond"/>
            <line num="523" count="10" type="stmt"/>
            <line num="528" count="961" type="stmt"/>
            <line num="529" count="961" type="stmt"/>
            <line falsecount="951" truecount="10" num="529" type="cond"/>
            <line num="530" count="10" type="stmt"/>
            <line num="531" count="10" type="stmt"/>
            <line num="533" count="961" type="stmt"/>
            <line falsecount="951" truecount="10" num="533" type="cond"/>
            <line num="534" count="10" type="stmt"/>
            <line num="535" count="10" type="stmt"/>
            <line num="541" count="961" type="stmt"/>
            <line falsecount="961" truecount="961" num="541" type="cond"/>
            <line num="542" count="961" type="stmt"/>
            <line num="543" count="961" type="stmt"/>
            <line falsecount="400" truecount="561" num="543" type="cond"/>
            <line num="550" count="961" type="stmt"/>
            <line num="555" count="961" type="stmt"/>
            <line num="556" count="961" type="stmt"/>
            <line falsecount="961" truecount="961" num="556" type="cond"/>
            <line num="558" count="961" type="stmt"/>
            <line num="559" count="961" type="stmt"/>
            <line num="561" count="961" type="stmt"/>
            <line num="562" count="961" type="stmt"/>
            <line falsecount="961" truecount="973" num="562" type="cond"/>
            <line num="564" count="973" type="stmt"/>
            <line falsecount="973" truecount="2102" num="564" type="cond"/>
            <line num="565" count="2102" type="stmt"/>
            <line falsecount="2102" truecount="3519" num="565" type="cond"/>
            <line num="566" count="3519" type="stmt"/>
            <line num="567" count="3519" type="stmt"/>
            <line falsecount="3519" truecount="6399" num="567" type="cond"/>
            <line num="568" count="6399" type="stmt"/>
            <line num="570" count="3519" type="stmt"/>
            <line falsecount="1417" truecount="2102" num="570" type="cond"/>
            <line num="571" count="2102" type="stmt"/>
            <line falsecount="2102" truecount="0" num="571" type="cond"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="2102" type="stmt"/>
            <line num="578" count="3519" type="stmt"/>
            <line num="579" count="3519" type="stmt"/>
            <line num="584" count="973" type="stmt"/>
            <line falsecount="973" truecount="2102" num="584" type="cond"/>
            <line num="585" count="2102" type="stmt"/>
            <line num="586" count="2102" type="stmt"/>
            <line falsecount="2102" truecount="3110" num="586" type="cond"/>
            <line num="587" count="3110" type="stmt"/>
            <line num="589" count="2102" type="stmt"/>
            <line num="592" count="973" type="stmt"/>
            <line num="594" count="973" type="stmt"/>
            <line num="595" count="961" type="stmt"/>
            <line falsecount="961" truecount="2078" num="595" type="cond"/>
            <line num="596" count="2078" type="stmt"/>
            <line num="598" count="961" type="stmt"/>
            <line num="600" count="12" type="stmt"/>
            <line num="601" count="12" type="stmt"/>
            <line num="607" count="961" type="stmt"/>
            <line falsecount="961" truecount="2078" num="607" type="cond"/>
            <line num="608" count="2078" type="stmt"/>
            <line falsecount="0" truecount="2078" num="608" type="cond"/>
            <line num="612" count="961" type="stmt"/>
            <line falsecount="961" truecount="0" num="612" type="cond"/>
            <line num="614" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="617" type="cond"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="626" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="626" type="cond"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(RandomVariable[]) : RandomVariable" num="633" count="971" type="method"/>
            <line num="635" count="971" type="stmt"/>
            <line num="637" count="971" type="stmt"/>
            <line falsecount="971" truecount="1208" num="637" type="cond"/>
            <line num="638" count="1208" type="stmt"/>
            <line num="639" count="1208" type="stmt"/>
            <line num="642" count="971" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : StochasticPathwiseLevenbergMarquardt" num="652" count="0" type="method"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(RandomVariable[],RandomVariable[],boolean) : StochasticPathwiseLevenbergMarquardt" num="684" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="689" type="cond"/>
            <line num="690" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,boolean) : StochasticPathwiseLevenbergMarquardt" num="714" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtAD.java" name="StochasticPathwiseLevenbergMarquardtAD.java">
            <metrics coveredelements="30" coveredconditionals="12" complexity="15" loc="166" coveredmethods="3" methods="6" elements="39" classes="1" ncloc="54" statements="19" conditionals="14" coveredstatements="15"/>
            <class name="StochasticPathwiseLevenbergMarquardtAD">
               <metrics coveredelements="30" coveredconditionals="12" complexity="15" coveredmethods="3" methods="6" elements="39" statements="19" conditionals="14" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,ExecutorService)" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,int)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(RandomVariable[],RandomVariable[],int,int)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],int,RandomVariable,ExecutorService)" num="118" count="1" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="3" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="126" count="254" type="method"/>
            <line num="131" count="254" type="stmt"/>
            <line falsecount="254" truecount="508" num="131" type="cond"/>
            <line num="132" count="508" type="stmt"/>
            <line falsecount="0" truecount="508" num="132" type="cond"/>
            <line num="133" count="508" type="stmt"/>
            <line num="137" count="254" type="stmt"/>
            <line complexity="8" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="140" count="253" type="method"/>
            <line num="145" count="253" type="stmt"/>
            <line num="146" count="253" type="stmt"/>
            <line falsecount="253" truecount="506" num="146" type="cond"/>
            <line num="147" count="506" type="stmt"/>
            <line num="149" count="253" type="stmt"/>
            <line falsecount="253" truecount="253" num="149" type="cond"/>
            <line num="150" count="253" type="stmt"/>
            <line num="154" count="253" type="stmt"/>
            <line falsecount="0" truecount="253" num="154" type="cond"/>
            <line num="155" count="253" type="stmt"/>
            <line falsecount="253" truecount="253" num="155" type="cond"/>
            <line num="156" count="253" type="stmt"/>
            <line num="157" count="253" type="stmt"/>
            <line falsecount="253" truecount="506" num="157" type="cond"/>
            <line num="158" count="506" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/optimizer/StochasticPathwiseOptimizerFactoryLevenbergMarquardt.java" name="StochasticPathwiseOptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="56" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="37" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="StochasticPathwiseOptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticPathwiseOptimizerFactoryLevenbergMarquardt(int,double,int)" num="22" count="6" type="method"/>
            <line num="23" count="6" type="stmt"/>
            <line num="24" count="6" type="stmt"/>
            <line num="25" count="6" type="stmt"/>
            <line num="26" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseOptimizerFactoryLevenbergMarquardt(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="38" count="6" type="method"/>
            <line num="40" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="43" count="6" type="method"/>
            <line num="45" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="50" count="342" type="method"/>
            <line num="52" count="342" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process.component.factortransform">
         <metrics coveredelements="0" complexity="0" loc="40" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="7" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/process/component/factortransform/FactorTransform.java" name="FactorTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FactorTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.timeseries.models.parametric">
         <metrics coveredelements="0" complexity="177" loc="2263" methods="106" classes="13" statements="927" coveredconditionals="0" coveredmethods="0" elements="1145" ncloc="1503" files="7" conditionals="112" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/models/parametric/ARMAGARCH.java" name="ARMAGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="37" loc="409" coveredmethods="0" methods="19" elements="214" classes="2" ncloc="281" statements="171" conditionals="24" coveredstatements="0"/>
            <class name="ARMAGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="18" elements="200" statements="158" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="ARMAGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ARMAGARCH(TimeSeries)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getSzenarios(double[]) : double[]" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantilPredictionsForParameters(double[],double[]) : double[]" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="229" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="311" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="384" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="395" count="0" type="method"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormal.java" name="DisplacedLognormal.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="330" coveredmethods="0" methods="13" elements="180" classes="2" ncloc="215" statements="145" conditionals="22" coveredstatements="0"/>
            <class name="DisplacedLognormal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="12" elements="163" statements="129" conditionals="22" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormal.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[])" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],double)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],int,int)" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],double,int,int)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(double,int,int) : HistoricalSimulationModel" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLogLikelihoodForParameters(double,double,double,double) : double" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double,double) : double" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double,double[]) : double[]" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="202" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="210" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalARMAGARCH.java" name="DisplacedLognormalARMAGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="370" coveredmethods="0" methods="20" elements="181" classes="2" ncloc="254" statements="151" conditionals="10" coveredstatements="0"/>
            <class name="DisplacedLognormalARMAGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="19" elements="167" statements="138" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalARMAGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries,double)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries,double,double)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double[]) : double[]" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="197" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="279" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="356" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalGARCH.java" name="DisplacedLognormalGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="347" coveredmethods="0" methods="15" elements="186" classes="2" ncloc="234" statements="151" conditionals="20" coveredstatements="0"/>
            <class name="DisplacedLognormalGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="14" elements="169" statements="135" conditionals="20" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[])" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],double)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],int,int)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],double,int,int)" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(double,int,int) : HistoricalSimulationModel" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double,double,double,double) : double" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double,double) : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double,double,double,double) : double[]" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double,double[]) : double[]" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="203" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="211" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="279" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalGJRGARCH.java" name="DisplacedLognormalGJRGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="371" coveredmethods="0" methods="20" elements="187" classes="2" ncloc="254" statements="151" conditionals="16" coveredstatements="0"/>
            <class name="DisplacedLognormalGJRGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="19" elements="173" statements="138" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalGJRGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries,double)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries,double,double)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSzenarios(double[]) : double[]" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="198" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/models/parametric/GARCH.java" name="GARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="304" coveredmethods="0" methods="12" elements="139" classes="2" ncloc="186" statements="115" conditionals="12" coveredstatements="0"/>
            <class name="GARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="11" elements="126" statements="103" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="GARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="13" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GARCH(double[])" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GARCH(double[],int,int)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : GARCH" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double,double,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double) : double" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double,double,double) : double[]" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double[]) : double[]" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="173" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="181" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="299" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/timeseries/models/parametric/SimpleHistroricalSimulation.java" name="SimpleHistroricalSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="132" coveredmethods="0" methods="7" elements="58" classes="1" ncloc="79" statements="43" conditionals="8" coveredstatements="0"/>
            <class name="SimpleHistroricalSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="58" statements="43" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleHistroricalSimulation(double[])" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleHistroricalSimulation(double[],int,int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSzenarios(int) : double[]" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantilPredictions(int,double[]) : double[]" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.exception">
         <metrics coveredelements="0" complexity="4" loc="56" methods="4" classes="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="7" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/exception/CalculationException.java" name="CalculationException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="56" coveredmethods="0" methods="4" elements="7" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="CalculationException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CalculationException()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="CalculationException(String)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalculationException(Throwable)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalculationException(String,Throwable)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.daycount">
         <metrics coveredelements="125" complexity="122" loc="1363" methods="49" classes="17" statements="202" coveredconditionals="23" coveredmethods="21" elements="359" ncloc="524" files="17" conditionals="108" coveredstatements="81"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention.java" name="DayCountConvention.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConventionFactory.java" name="DayCountConventionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="98" coveredmethods="0" methods="4" elements="37" classes="1" ncloc="40" statements="19" conditionals="14" coveredstatements="0"/>
            <class name="DayCountConventionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="4" elements="37" statements="19" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="DayCountConventionFactory()" num="25" count="0" type="method"/>
            <line complexity="8" visibility="public" signature="getDayCountConvention(String) : DayCountConvention" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate,String) : double" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate,String) : double" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_30E_360.java" name="DayCountConvention_30E_360.java">
            <metrics coveredelements="19" coveredconditionals="2" complexity="7" loc="92" coveredmethods="4" methods="4" elements="23" classes="1" ncloc="34" statements="15" conditionals="4" coveredstatements="13"/>
            <class name="DayCountConvention_30E_360">
               <metrics coveredelements="19" coveredconditionals="2" complexity="7" coveredmethods="4" methods="4" elements="23" statements="15" conditionals="4" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360(boolean)" num="48" count="377" type="method"/>
            <line num="49" count="377" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360()" num="55" count="377" type="method"/>
            <line num="56" count="377" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="62" count="5839" type="method"/>
            <line num="64" count="5839" type="stmt"/>
            <line falsecount="5839" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="5839" type="stmt"/>
            <line num="69" count="5839" type="stmt"/>
            <line num="70" count="5839" type="stmt"/>
            <line num="72" count="5839" type="stmt"/>
            <line num="73" count="5839" type="stmt"/>
            <line num="74" count="5839" type="stmt"/>
            <line num="76" count="5839" type="stmt"/>
            <line num="78" count="5839" type="stmt"/>
            <line falsecount="5839" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="5839" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="88" count="5839" type="method"/>
            <line num="90" count="5839" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_30E_360_ISDA.java" name="DayCountConvention_30E_360_ISDA.java">
            <metrics coveredelements="24" coveredconditionals="5" complexity="10" loc="90" coveredmethods="3" methods="4" elements="28" classes="1" ncloc="39" statements="18" conditionals="6" coveredstatements="16"/>
            <class name="DayCountConvention_30E_360_ISDA">
               <metrics coveredelements="24" coveredconditionals="5" complexity="10" coveredmethods="3" methods="4" elements="28" statements="18" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360_ISDA(boolean)" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360_ISDA()" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="53" count="44" type="method"/>
            <line num="55" count="44" type="stmt"/>
            <line falsecount="44" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="44" type="stmt"/>
            <line num="60" count="44" type="stmt"/>
            <line num="61" count="44" type="stmt"/>
            <line num="63" count="44" type="stmt"/>
            <line num="64" count="44" type="stmt"/>
            <line num="65" count="44" type="stmt"/>
            <line num="69" count="44" type="stmt"/>
            <line num="70" count="44" type="stmt"/>
            <line num="73" count="44" type="stmt"/>
            <line falsecount="18" truecount="26" num="73" type="cond"/>
            <line num="74" count="26" type="stmt"/>
            <line num="76" count="44" type="stmt"/>
            <line falsecount="21" truecount="23" num="76" type="cond"/>
            <line num="77" count="23" type="stmt"/>
            <line num="80" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="86" count="44" type="method"/>
            <line num="88" count="44" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_30U_360.java" name="DayCountConvention_30U_360.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="106" coveredmethods="0" methods="4" elements="30" classes="1" ncloc="50" statements="18" conditionals="8" coveredstatements="0"/>
            <class name="DayCountConvention_30U_360">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="30" statements="18" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30U_360()" num="44" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30U_360(boolean)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT.java" name="DayCountConvention_ACT.java">
            <metrics coveredelements="7" coveredconditionals="1" complexity="4" loc="57" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="DayCountConvention_ACT">
               <metrics coveredelements="7" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT()" num="24" count="10076599" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="30" count="1107158591" type="method"/>
            <line num="32" count="1130314684" type="stmt"/>
            <line falsecount="1143792069" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="1155779691" type="stmt"/>
            <line complexity="1" visibility="public" signature="daysBetween(LocalDate,LocalDate) : double" num="54" count="1164184031" type="method"/>
            <line num="55" count="1173959343" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_360.java" name="DayCountConvention_ACT_360.java">
            <metrics coveredelements="6" coveredconditionals="1" complexity="3" loc="57" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="DayCountConvention_ACT_360">
               <metrics coveredelements="6" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_360()" num="40" count="10059151" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="47" count="510268430" type="method"/>
            <line num="49" count="515911848" type="stmt"/>
            <line falsecount="519103190" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="523188630" type="stmt"/>
            <line num="55" count="525983719" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365.java" name="DayCountConvention_ACT_365.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="51" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="DayCountConvention_ACT_365">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365()" num="38" count="62" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="41" count="674061723" type="method"/>
            <line num="43" count="683434223" type="stmt"/>
            <line falsecount="664643280" truecount="24936669" num="43" type="cond"/>
            <line num="44" count="24940536" type="stmt"/>
            <line num="47" count="668030832" type="stmt"/>
            <line num="49" count="670964196" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365A.java" name="DayCountConvention_ACT_365A.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="81" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="36" statements="16" conditionals="14" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_365A">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="2" elements="32" statements="16" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365A()" num="39" count="0" type="method"/>
            <line complexity="10" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365L.java" name="DayCountConvention_ACT_365L.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="55" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="20" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_365L">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="13" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365L()" num="35" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_AFB.java" name="DayCountConvention_ACT_ACT_AFB.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="112" coveredmethods="0" methods="3" elements="41" classes="1" ncloc="45" statements="22" conditionals="16" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_ACT_AFB">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="3" elements="41" statements="22" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_AFB()" num="56" count="0" type="method"/>
            <line complexity="11" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_ICMA.java" name="DayCountConvention_ACT_ACT_ICMA.java">
            <metrics coveredelements="19" coveredconditionals="3" complexity="5" loc="103" coveredmethods="2" methods="2" elements="24" classes="1" ncloc="41" statements="16" conditionals="6" coveredstatements="14"/>
            <class name="DayCountConvention_ACT_ACT_ICMA">
               <metrics coveredelements="19" coveredconditionals="3" complexity="5" coveredmethods="2" methods="2" elements="24" statements="16" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ICMA(ArrayList&lt;Period&gt;,int)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="73" count="3" type="method"/>
            <line num="75" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="82" type="cond"/>
            <line num="83" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="85" type="cond"/>
            <line num="86" count="3" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_ISDA.java" name="DayCountConvention_ACT_ACT_ISDA.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="7" loc="113" coveredmethods="3" methods="4" elements="26" classes="1" ncloc="38" statements="16" conditionals="6" coveredstatements="12"/>
            <class name="DayCountConvention_ACT_ACT_ISDA">
               <metrics coveredelements="18" coveredconditionals="3" complexity="7" coveredmethods="3" methods="4" elements="26" statements="16" conditionals="6" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ISDA(boolean)" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ISDA()" num="61" count="3" type="method"/>
            <line num="62" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="68" count="10" type="method"/>
            <line num="70" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="80" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="10" type="stmt"/>
            <line num="96" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_YEARFRAC.java" name="DayCountConvention_ACT_ACT_YEARFRAC.java">
            <metrics coveredelements="24" coveredconditionals="6" complexity="12" loc="133" coveredmethods="2" methods="3" elements="37" classes="1" ncloc="53" statements="22" conditionals="12" coveredstatements="16"/>
            <class name="DayCountConvention_ACT_ACT_YEARFRAC">
               <metrics coveredelements="24" coveredconditionals="6" complexity="12" coveredmethods="2" methods="3" elements="37" statements="22" conditionals="12" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_YEARFRAC()" num="51" count="1" type="method"/>
            <line complexity="10" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="57" count="3" type="method"/>
            <line num="59" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="70" type="cond"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="89" type="cond"/>
            <line num="91" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="98" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_NL_365.java" name="DayCountConvention_NL_365.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="75" coveredmethods="0" methods="3" elements="30" classes="1" ncloc="37" statements="15" conditionals="12" coveredstatements="0"/>
            <class name="DayCountConvention_NL_365">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="30" statements="15" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_NL_365()" num="34" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_NONE.java" name="DayCountConvention_NONE.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention_NONE">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_NONE()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/time/daycount/DayCountConvention_UNKNOWN.java" name="DayCountConvention_UNKNOWN.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="53" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention_UNKNOWN">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_UNKNOWN()" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_UNKNOWN(String)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.information">
         <metrics coveredelements="21" complexity="10" loc="64" methods="5" classes="1" statements="16" coveredconditionals="2" coveredmethods="4" elements="25" ncloc="34" files="1" conditionals="4" coveredstatements="15"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/information/Library.java" name="Library.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="10" loc="64" coveredmethods="4" methods="5" elements="25" classes="1" ncloc="34" statements="16" conditionals="4" coveredstatements="15"/>
            <class name="Library">
               <metrics coveredelements="21" coveredconditionals="2" complexity="10" coveredmethods="4" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 21()" num="21" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Library()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="getProperites() : Properties" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVersionString() : String" num="41" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="44" type="cond"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBuildString() : String" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="59" type="cond"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.forward">
         <metrics coveredelements="325" complexity="220" loc="1110" methods="96" classes="4" statements="338" coveredconditionals="81" coveredmethods="61" elements="576" ncloc="845" files="2" conditionals="142" coveredstatements="183"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/forward/RandomVariableDifferentiableAD.java" name="RandomVariableDifferentiableAD.java">
            <metrics coveredelements="315" coveredconditionals="81" complexity="215" loc="1060" coveredmethods="56" methods="91" elements="566" classes="3" ncloc="819" statements="333" conditionals="142" coveredstatements="178"/>
            <class name="RandomVariableDifferentiableAD">
               <metrics coveredelements="149" coveredconditionals="17" complexity="104" coveredmethods="50" methods="83" elements="249" statements="132" conditionals="34" coveredstatements="82"/>
            </class>
            <class name="RandomVariableDifferentiableAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAD.OperatorTreeNode">
               <metrics coveredelements="166" coveredconditionals="64" complexity="111" coveredmethods="6" methods="8" elements="317" statements="201" conditionals="108" coveredstatements="96"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;,Object)" num="76" count="399632" type="method"/>
            <line num="77" count="399629" type="stmt"/>
            <line falsecount="24717" truecount="374912" num="78" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="79" count="977943" type="method"/>
            <line num="81" count="977945" type="stmt"/>
            <line falsecount="354047" truecount="623921" num="81" type="cond"/>
            <line falsecount="24717" truecount="374914" num="84" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="85" count="977939" type="method"/>
            <line num="87" count="977948" type="stmt"/>
            <line falsecount="354041" truecount="623920" num="87" type="cond"/>
            <line complexity="28" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,Object)" num="94" count="399632" type="method"/>
            <line num="95" count="399633" type="stmt"/>
            <line num="96" count="399639" type="stmt"/>
            <line num="97" count="399637" type="stmt"/>
            <line num="98" count="399630" type="stmt"/>
            <line num="99" count="399634" type="stmt"/>
            <line num="101" count="399638" type="stmt"/>
            <line falsecount="362084" truecount="37553" num="101" type="cond"/>
            <line num="103" count="37553" type="stmt"/>
            <line num="105" count="362083" type="stmt"/>
            <line falsecount="362078" truecount="2" num="105" type="cond"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="362079" type="stmt"/>
            <line falsecount="326211" truecount="35871" num="109" type="cond"/>
            <line num="111" count="35871" type="stmt"/>
            <line falsecount="35871" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="35871" type="stmt"/>
            <line falsecount="20907" truecount="14964" num="114" type="cond"/>
            <line num="115" count="14964" type="stmt"/>
            <line num="118" count="326209" type="stmt"/>
            <line falsecount="313321" truecount="12890" num="118" type="cond"/>
            <line num="120" count="12890" type="stmt"/>
            <line falsecount="2947" truecount="9943" num="120" type="cond"/>
            <line num="121" count="9943" type="stmt"/>
            <line num="124" count="313319" type="stmt"/>
            <line falsecount="78809" truecount="234510" num="124" type="cond"/>
            <line num="126" count="234509" type="stmt"/>
            <line num="128" count="234508" type="stmt"/>
            <line falsecount="175598" truecount="58912" num="128" type="cond"/>
            <line num="129" count="58912" type="stmt"/>
            <line num="131" count="234510" type="stmt"/>
            <line falsecount="1475" truecount="233035" num="131" type="cond"/>
            <line num="132" count="233036" type="stmt"/>
            <line num="135" count="78809" type="stmt"/>
            <line falsecount="78518" truecount="292" num="135" type="cond"/>
            <line num="137" count="292" type="stmt"/>
            <line falsecount="292" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="292" type="stmt"/>
            <line falsecount="292" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="292" type="stmt"/>
            <line falsecount="292" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="78518" type="stmt"/>
            <line falsecount="77675" truecount="842" num="147" type="cond"/>
            <line num="148" count="842" type="stmt"/>
            <line falsecount="842" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="154" count="399636" type="stmt"/>
            <line complexity="7" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="157" count="10336" type="method"/>
            <line num="158" count="10336" type="stmt"/>
            <line falsecount="10336" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="10336" type="stmt"/>
            <line falsecount="10336" truecount="20560" num="161" type="cond"/>
            <line num="162" count="20560" type="stmt"/>
            <line num="163" count="20560" type="stmt"/>
            <line falsecount="2004" truecount="18556" num="163" type="cond"/>
            <line num="164" count="18556" type="stmt"/>
            <line num="166" count="18556" type="stmt"/>
            <line num="167" count="18556" type="stmt"/>
            <line num="168" count="18556" type="stmt"/>
            <line num="171" count="18556" type="stmt"/>
            <line falsecount="18554" truecount="2" num="171" type="cond"/>
            <line num="172" count="2" type="stmt"/>
            <line num="175" count="18556" type="stmt"/>
            <line falsecount="18556" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="18556" type="stmt"/>
            <line falsecount="8110" truecount="10446" num="180" type="cond"/>
            <line num="181" count="10446" type="stmt"/>
            <line num="184" count="8110" type="stmt"/>
            <line num="187" count="18556" type="stmt"/>
            <line complexity="63" visibility="private" signature="getPartialDerivative(OperatorTreeNode,int) : RandomVariable" num="192" count="18556" type="method"/>
            <line num="194" count="18556" type="stmt"/>
            <line falsecount="18556" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="18556" type="stmt"/>
            <line falsecount="18026" truecount="530" num="198" type="cond"/>
            <line num="199" count="18556" type="stmt"/>
            <line falsecount="18234" truecount="322" num="199" type="cond"/>
            <line num="200" count="18556" type="stmt"/>
            <line falsecount="18262" truecount="294" num="200" type="cond"/>
            <line num="202" count="18556" type="stmt"/>
            <line num="204" count="18556" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line num="210" count="6" type="stmt"/>
            <line num="211" count="6" type="stmt"/>
            <line num="212" count="100" type="stmt"/>
            <line num="213" count="100" type="stmt"/>
            <line num="214" count="100" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="242" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="98" type="stmt"/>
            <line num="258" count="98" type="stmt"/>
            <line num="259" count="98" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="18020" type="stmt"/>
            <line num="267" count="18020" type="stmt"/>
            <line num="268" count="18020" type="stmt"/>
            <line num="269" count="4" type="stmt"/>
            <line num="270" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="270" type="cond"/>
            <line num="271" count="4" type="stmt"/>
            <line num="272" count="16" type="stmt"/>
            <line num="273" count="16" type="stmt"/>
            <line falsecount="6" truecount="10" num="273" type="cond"/>
            <line num="274" count="16" type="stmt"/>
            <line num="275" count="4" type="stmt"/>
            <line num="276" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="276" type="cond"/>
            <line num="277" count="4" type="stmt"/>
            <line num="278" count="8" type="stmt"/>
            <line num="279" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="279" type="cond"/>
            <line num="280" count="4" type="stmt"/>
            <line num="283" count="4" type="stmt"/>
            <line num="285" count="8" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="294" type="stmt"/>
            <line num="315" count="294" type="stmt"/>
            <line falsecount="196" truecount="98" num="315" type="cond"/>
            <line num="316" count="98" type="stmt"/>
            <line num="317" count="196" type="stmt"/>
            <line falsecount="98" truecount="98" num="317" type="cond"/>
            <line num="318" count="98" type="stmt"/>
            <line num="320" count="98" type="stmt"/>
            <line num="322" count="294" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="380" count="18556" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAD" num="390" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAD" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(double)" num="398" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(double,double[])" num="402" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable)" num="406" count="24717" type="method"/>
            <line num="407" count="24717" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="410" count="399618" type="method"/>
            <line num="411" count="399617" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType)" num="414" count="399613" type="method"/>
            <line num="415" count="399615" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,int)" num="418" count="399635" type="method"/>
            <line num="419" count="399631" type="stmt"/>
            <line num="420" count="399633" type="stmt"/>
            <line num="421" count="399635" type="stmt"/>
            <line num="423" count="399622" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="426" count="624115" type="method"/>
            <line num="427" count="624114" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="435" count="1262404" type="method"/>
            <line num="437" count="1262409" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="440" count="166" type="method"/>
            <line num="442" count="166" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="453" count="26" type="method"/>
            <line num="457" count="26" type="stmt"/>
            <line num="460" count="26" type="stmt"/>
            <line num="463" count="26" type="stmt"/>
            <line num="464" count="26" type="stmt"/>
            <line num="466" count="26" type="stmt"/>
            <line falsecount="26" truecount="10472" num="466" type="cond"/>
            <line num="468" count="10472" type="stmt"/>
            <line num="469" count="10472" type="stmt"/>
            <line num="470" count="10472" type="stmt"/>
            <line num="473" count="10472" type="stmt"/>
            <line num="474" count="10472" type="stmt"/>
            <line falsecount="136" truecount="10336" num="474" type="cond"/>
            <line num="475" count="10336" type="stmt"/>
            <line num="478" count="10336" type="stmt"/>
            <line num="479" count="20560" type="stmt"/>
            <line falsecount="2004" truecount="18556" num="479" type="cond"/>
            <line num="480" count="18556" type="stmt"/>
            <line num="481" count="18556" type="stmt"/>
            <line num="486" count="10336" type="stmt"/>
            <line num="490" count="10472" type="stmt"/>
            <line num="493" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="506" count="1" type="method"/>
            <line num="508" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="511" count="110" type="method"/>
            <line num="513" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="516" count="771345" type="method"/>
            <line num="518" count="771367" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="521" count="10200" type="method"/>
            <line num="523" count="10200" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="526" count="242" type="method"/>
            <line num="528" count="242" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="531" count="201" type="method"/>
            <line num="533" count="201" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="536" count="103" type="method"/>
            <line num="538" count="103" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="546" count="1" type="method"/>
            <line num="548" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="556" count="3492" type="method"/>
            <line num="558" count="3492" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="566" count="49" type="method"/>
            <line num="568" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="576" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="581" count="243" type="method"/>
            <line num="583" count="243" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="586" count="0" type="method"/>
            <line num="588" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="591" count="164" type="method"/>
            <line num="593" count="164" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="596" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="601" count="5" type="method"/>
            <line num="603" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="616" count="9" type="method"/>
            <line num="618" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="630" count="8550" type="method"/>
            <line num="632" count="8550" type="stmt"/>
            <line num="633" count="8550" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="636" count="14400" type="method"/>
            <line num="638" count="14400" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="644" count="296" type="method"/>
            <line num="646" count="296" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="652" count="867" type="method"/>
            <line num="654" count="867" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="660" count="2945" type="method"/>
            <line num="662" count="2945" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="668" count="13107" type="method"/>
            <line num="670" count="13107" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="676" count="7660" type="method"/>
            <line num="678" count="7660" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="684" count="723" type="method"/>
            <line num="686" count="723" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="692" count="2" type="method"/>
            <line num="694" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="700" count="2" type="method"/>
            <line num="702" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="710" count="4044" type="method"/>
            <line num="712" count="4044" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="718" count="9" type="method"/>
            <line num="720" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="726" count="15786" type="method"/>
            <line num="728" count="15787" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="734" count="1247" type="method"/>
            <line num="736" count="1247" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="742" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="750" count="0" type="method"/>
            <line num="752" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(RandomVariable) : RandomVariable" num="762" count="25876" type="method"/>
            <line num="764" count="25876" type="stmt"/>
            <line falsecount="25876" truecount="0" num="764" type="cond"/>
            <line num="766" count="0" type="stmt"/>
            <line num="769" count="25876" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="775" count="7864" type="method"/>
            <line num="777" count="7864" type="stmt"/>
            <line falsecount="7864" truecount="0" num="777" type="cond"/>
            <line num="779" count="0" type="stmt"/>
            <line num="782" count="7864" type="stmt"/>
            <line complexity="2" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="788" count="1" type="method"/>
            <line num="790" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="790" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="795" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="801" count="22764" type="method"/>
            <line num="803" count="22764" type="stmt"/>
            <line falsecount="22764" truecount="0" num="803" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line num="808" count="22764" type="stmt"/>
            <line complexity="2" visibility="public" signature="div(RandomVariable) : RandomVariable" num="814" count="5230" type="method"/>
            <line num="816" count="5230" type="stmt"/>
            <line falsecount="5230" truecount="0" num="816" type="cond"/>
            <line num="818" count="0" type="stmt"/>
            <line num="821" count="5230" type="stmt"/>
            <line complexity="2" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="827" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="829" type="cond"/>
            <line num="831" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="840" count="7" type="method"/>
            <line num="842" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="842" type="cond"/>
            <line num="844" count="0" type="stmt"/>
            <line num="847" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="853" count="3" type="method"/>
            <line num="855" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="855" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line num="860" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="866" count="292" type="method"/>
            <line num="868" count="292" type="stmt"/>
            <line falsecount="292" truecount="0" num="868" type="cond"/>
            <line num="870" count="0" type="stmt"/>
            <line num="873" count="292" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="879" count="15010" type="method"/>
            <line num="881" count="15010" type="stmt"/>
            <line falsecount="15010" truecount="0" num="881" type="cond"/>
            <line num="883" count="0" type="stmt"/>
            <line num="886" count="15010" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="897" count="842" type="method"/>
            <line num="899" count="842" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="905" count="1336" type="method"/>
            <line num="907" count="1336" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="913" count="98" type="method"/>
            <line num="915" count="98" type="stmt"/>
            <line complexity="2" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="921" count="22391" type="method"/>
            <line num="923" count="22366" type="stmt"/>
            <line falsecount="22275" truecount="0" num="923" type="cond"/>
            <line num="925" count="0" type="stmt"/>
            <line num="928" count="22300" type="stmt"/>
            <line complexity="3" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="934" count="212073" type="method"/>
            <line num="936" count="212071" type="stmt"/>
            <line falsecount="212064" truecount="0" num="936" type="cond"/>
            <line num="938" count="0" type="stmt"/>
            <line num="941" count="212067" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="947" count="0" type="method"/>
            <line num="949" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="949" type="cond"/>
            <line num="951" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="960" count="0" type="method"/>
            <line num="962" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="962" type="cond"/>
            <line num="964" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="977" count="0" type="method"/>
            <line num="979" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="982" count="0" type="method"/>
            <line num="984" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="987" count="0" type="method"/>
            <line num="989" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="992" count="0" type="method"/>
            <line num="994" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="997" count="0" type="method"/>
            <line num="999" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1002" count="0" type="method"/>
            <line num="1004" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="1007" count="0" type="method"/>
            <line num="1009" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="1015" count="0" type="method"/>
            <line num="1017" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="1023" count="0" type="method"/>
            <line num="1025" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="1031" count="0" type="method"/>
            <line num="1033" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="1039" count="0" type="method"/>
            <line num="1041" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="1047" count="0" type="method"/>
            <line num="1049" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents() : Map&lt;Long, RandomVariable&gt;" num="1055" count="0" type="method"/>
            <line num="1058" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/forward/RandomVariableDifferentiableADFactory.java" name="RandomVariableDifferentiableADFactory.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="50" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="RandomVariableDifferentiableADFactory">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableADFactory()" num="25" count="10" type="method"/>
            <line num="26" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableADFactory(RandomVariableFactory)" num="32" count="12" type="method"/>
            <line num="33" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="36" count="16136" type="method"/>
            <line num="38" count="16136" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="41" count="8581" type="method"/>
            <line num="43" count="8581" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="46" count="12" type="method"/>
            <line num="48" count="12" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.concurrency">
         <metrics coveredelements="5" complexity="6" loc="56" methods="6" classes="1" statements="7" coveredconditionals="0" coveredmethods="2" elements="13" ncloc="30" files="1" conditionals="0" coveredstatements="3"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/concurrency/FutureWrapper.java" name="FutureWrapper.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="6" loc="56" coveredmethods="2" methods="6" elements="13" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="3"/>
            <class name="FutureWrapper">
               <metrics coveredelements="5" coveredconditionals="0" complexity="6" coveredmethods="2" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="FutureWrapper(V)" num="27" count="2293" type="method"/>
            <line num="28" count="2293" type="stmt"/>
            <line num="29" count="2293" type="stmt"/>
            <line complexity="1" visibility="public" signature="cancel(boolean) : boolean" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : V" num="37" count="2293" type="method"/>
            <line num="39" count="2293" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(long,TimeUnit) : V" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCancelled() : boolean" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products">
         <metrics coveredelements="1006" complexity="424" loc="5604" methods="192" classes="39" statements="1498" coveredconditionals="173" coveredmethods="74" elements="2080" ncloc="2922" files="34" conditionals="390" coveredstatements="759"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/AbstractLIBORMonteCarloProduct.java" name="AbstractLIBORMonteCarloProduct.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="8" loc="75" coveredmethods="4" methods="6" elements="20" classes="1" ncloc="47" statements="12" conditionals="2" coveredstatements="9"/>
            <class name="AbstractLIBORMonteCarloProduct">
               <metrics coveredelements="14" coveredconditionals="1" complexity="8" coveredmethods="4" methods="6" elements="20" statements="12" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORMonteCarloProduct(String)" num="30" count="6022" type="method"/>
            <line num="31" count="6022" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractLIBORMonteCarloProduct()" num="37" count="145415" type="method"/>
            <line num="38" count="145411" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueForModifiedData(double,MonteCarloSimulationModel,Map&lt;String, Object&gt;) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="49" count="124" type="method"/>
            <line num="51" count="124" type="stmt"/>
            <line num="52" count="124" type="stmt"/>
            <line num="53" count="124" type="stmt"/>
            <line num="54" count="124" type="stmt"/>
            <line num="55" count="124" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="58" count="42719" type="method"/>
            <line num="61" count="42654" type="stmt"/>
            <line falsecount="0" truecount="42647" num="61" type="cond"/>
            <line num="62" count="42638" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorDrift(LIBORModelMonteCarloSimulationModel,LIBORModelMonteCarloSimulationModel) : FactorTransform" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/BermudanSwaption.java" name="BermudanSwaption.java">
            <metrics coveredelements="81" coveredconditionals="8" complexity="30" loc="313" coveredmethods="8" methods="17" elements="135" classes="1" ncloc="172" statements="92" conditionals="26" coveredstatements="65"/>
            <class name="BermudanSwaption">
               <metrics coveredelements="81" coveredconditionals="8" complexity="30" coveredmethods="8" methods="17" elements="135" statements="92" conditionals="26" coveredstatements="65"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[],boolean,RegressionBasisFunctionsProvider)" num="53" count="32" type="method"/>
            <line num="54" count="32" type="stmt"/>
            <line num="55" count="32" type="stmt"/>
            <line num="56" count="32" type="stmt"/>
            <line num="57" count="32" type="stmt"/>
            <line num="58" count="32" type="stmt"/>
            <line num="59" count="32" type="stmt"/>
            <line num="60" count="32" type="stmt"/>
            <line num="61" count="32" type="stmt"/>
            <line num="62" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[],boolean)" num="74" count="32" type="method"/>
            <line num="75" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[])" num="86" count="32" type="method"/>
            <line num="87" count="32" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="90" count="70" type="method"/>
            <line num="94" count="70" type="stmt"/>
            <line num="95" count="70" type="stmt"/>
            <line num="96" count="70" type="stmt"/>
            <line num="99" count="70" type="stmt"/>
            <line falsecount="70" truecount="500" num="99" type="cond"/>
            <line num="101" count="500" type="stmt"/>
            <line num="102" count="500" type="stmt"/>
            <line num="103" count="500" type="stmt"/>
            <line num="104" count="500" type="stmt"/>
            <line num="105" count="500" type="stmt"/>
            <line num="106" count="500" type="stmt"/>
            <line num="109" count="500" type="stmt"/>
            <line num="112" count="500" type="stmt"/>
            <line num="115" count="500" type="stmt"/>
            <line num="116" count="500" type="stmt"/>
            <line num="117" count="500" type="stmt"/>
            <line num="120" count="500" type="stmt"/>
            <line falsecount="0" truecount="500" num="120" type="cond"/>
            <line num="121" count="500" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="500" type="stmt"/>
            <line falsecount="0" truecount="500" num="128" type="cond"/>
            <line num="129" count="500" type="stmt"/>
            <line num="132" count="500" type="stmt"/>
            <line num="135" count="500" type="stmt"/>
            <line num="139" count="500" type="stmt"/>
            <line num="141" count="500" type="stmt"/>
            <line num="148" count="70" type="stmt"/>
            <line num="149" count="70" type="stmt"/>
            <line num="150" count="70" type="stmt"/>
            <line num="152" count="70" type="stmt"/>
            <line num="153" count="70" type="stmt"/>
            <line num="154" count="70" type="stmt"/>
            <line num="155" count="70" type="stmt"/>
            <line num="156" count="70" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="169" count="70" type="method"/>
            <line num="171" count="70" type="stmt"/>
            <line complexity="2" visibility="public" signature="getConditionalExpectationEstimator(double,TermStructureMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="182" count="500" type="method"/>
            <line num="183" count="500" type="stmt"/>
            <line falsecount="500" truecount="0" num="183" type="cond"/>
            <line num="184" count="500" type="stmt"/>
            <line num="186" count="500" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="197" count="500" type="method"/>
            <line num="199" count="500" type="stmt"/>
            <line falsecount="0" truecount="500" num="199" type="cond"/>
            <line num="200" count="500" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="215" count="500" type="method"/>
            <line num="217" count="500" type="stmt"/>
            <line num="220" count="500" type="stmt"/>
            <line num="221" count="500" type="stmt"/>
            <line num="223" count="500" type="stmt"/>
            <line num="224" count="500" type="stmt"/>
            <line falsecount="500" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="500" type="stmt"/>
            <line falsecount="500" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="232" count="500" type="stmt"/>
            <line num="233" count="500" type="stmt"/>
            <line num="234" count="500" type="stmt"/>
            <line num="235" count="500" type="stmt"/>
            <line num="239" count="500" type="stmt"/>
            <line num="240" count="500" type="stmt"/>
            <line num="241" count="500" type="stmt"/>
            <line num="242" count="500" type="stmt"/>
            <line num="246" count="500" type="stmt"/>
            <line num="247" count="500" type="stmt"/>
            <line num="251" count="500" type="stmt"/>
            <line complexity="4" visibility="public" signature="getExerciseTimes() : double[]" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFixingDates(double) : double[]" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwap() : SimpleSwap" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="289" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodNotionals() : double[]" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapRates() : double[]" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFinalMaturity() : double" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIsCallable() : boolean" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/BermudanSwaptionFromSwapSchedules.java" name="BermudanSwaptionFromSwapSchedules.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="46" loc="549" coveredmethods="0" methods="26" elements="244" classes="2" ncloc="323" statements="178" conditionals="40" coveredstatements="0"/>
            <class name="BermudanSwaptionFromSwapSchedules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="46" coveredmethods="0" methods="26" elements="244" statements="178" conditionals="40" coveredstatements="0"/>
            </class>
            <class name="BermudanSwaptionFromSwapSchedules.SwaptionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[],MonteCarloConditionalExpectationRegressionFactory,RegressionBasisFunctionsProvider)" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[],RegressionBasisFunctionsProvider)" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[])" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double,double,Schedule[],Schedule[])" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDates() : LocalDate[]" num="173" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionType() : SwaptionType" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapEndDate() : LocalDate" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExerciseProbabilitiesFromTimes(LocalDateTime,RandomVariable) : double[]" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProcessTimeDiscretization(LocalDateTime) : TimeDiscretization" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Period) : Double" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getValueUnderlyingNumeraireRelative(TermStructureMonteCarloSimulationModel,Schedule,boolean,double,double) : RandomVariable" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(double,TermStructureMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="386" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsProviderWithSwapRates() : RegressionBasisFunctionsProvider" num="434" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="436" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="443" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="452" type="cond"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="455" type="cond"/>
            <line num="456" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsProviderWithForwardRates() : RegressionBasisFunctionsProvider" num="488" count="0" type="method"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="497" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="508" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="543" count="0" type="method"/>
            <line num="545" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/Bond.java" name="Bond.java">
            <metrics coveredelements="24" coveredconditionals="2" complexity="8" loc="103" coveredmethods="4" methods="6" elements="28" classes="1" ncloc="47" statements="20" conditionals="2" coveredstatements="18"/>
            <class name="Bond">
               <metrics coveredelements="24" coveredconditionals="2" complexity="8" coveredmethods="4" methods="6" elements="28" statements="20" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(LocalDateTime,double)" num="30" count="41" type="method"/>
            <line num="31" count="41" type="stmt"/>
            <line num="32" count="41" type="stmt"/>
            <line num="33" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(double)" num="39" count="767" type="method"/>
            <line num="40" count="767" type="stmt"/>
            <line num="41" count="767" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="54" count="849" type="method"/>
            <line num="57" count="849" type="stmt"/>
            <line num="58" count="849" type="stmt"/>
            <line num="59" count="849" type="stmt"/>
            <line falsecount="808" truecount="41" num="59" type="cond"/>
            <line num="60" count="41" type="stmt"/>
            <line num="66" count="849" type="stmt"/>
            <line num="67" count="849" type="stmt"/>
            <line num="70" count="849" type="stmt"/>
            <line num="71" count="849" type="stmt"/>
            <line num="74" count="849" type="stmt"/>
            <line num="75" count="849" type="stmt"/>
            <line num="76" count="849" type="stmt"/>
            <line num="79" count="849" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="85" count="41" type="method"/>
            <line num="86" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaturity(double) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/CMSOption.java" name="CMSOption.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="6" loc="144" coveredmethods="3" methods="3" elements="51" classes="1" ncloc="75" statements="42" conditionals="6" coveredstatements="39"/>
            <class name="CMSOption">
               <metrics coveredelements="46" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="51" statements="42" conditionals="6" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="CMSOption(double,double[],double[],double[],double)" num="41" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="65" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="6" num="74" type="cond"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="79" type="cond"/>
            <line num="82" count="6" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line num="89" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(ForwardCurve,double) : double" num="132" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/CancelableSwap.java" name="CancelableSwap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="172" coveredmethods="0" methods="4" elements="66" classes="1" ncloc="86" statements="54" conditionals="8" coveredstatements="0"/>
            <class name="CancelableSwap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="66" statements="54" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CancelableSwap(boolean[],double[],double[],double[],double[],double[])" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="63" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getConditionalExpectationEstimator(int,TermStructureMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctions(double,TermStructureMonteCarloSimulationModel) : RandomVariable[]" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/Caplet.java" name="Caplet.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="9" loc="171" coveredmethods="4" methods="4" elements="50" classes="2" ncloc="76" statements="38" conditionals="8" coveredstatements="22"/>
            <class name="Caplet">
               <metrics coveredelements="28" coveredconditionals="2" complexity="9" coveredmethods="4" methods="4" elements="50" statements="38" conditionals="8" coveredstatements="22"/>
            </class>
            <class name="Caplet.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double,double,boolean,ValueUnit)" num="60" count="105" type="method"/>
            <line num="61" count="105" type="stmt"/>
            <line num="62" count="105" type="stmt"/>
            <line num="63" count="105" type="stmt"/>
            <line num="64" count="105" type="stmt"/>
            <line num="65" count="105" type="stmt"/>
            <line num="66" count="105" type="stmt"/>
            <line num="67" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double,boolean)" num="86" count="7" type="method"/>
            <line num="87" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double)" num="100" count="7" type="method"/>
            <line num="101" count="7" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="114" count="167" type="method"/>
            <line num="117" count="167" type="stmt"/>
            <line num="120" count="167" type="stmt"/>
            <line num="121" count="167" type="stmt"/>
            <line num="122" count="167" type="stmt"/>
            <line num="129" count="167" type="stmt"/>
            <line num="130" count="167" type="stmt"/>
            <line falsecount="0" truecount="167" num="130" type="cond"/>
            <line num="131" count="167" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="167" type="stmt"/>
            <line num="138" count="167" type="stmt"/>
            <line num="139" count="167" type="stmt"/>
            <line num="140" count="167" type="stmt"/>
            <line num="142" count="167" type="stmt"/>
            <line falsecount="0" truecount="167" num="142" type="cond"/>
            <line num="143" count="167" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/DigitalCaplet.java" name="DigitalCaplet.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="102" coveredmethods="2" methods="6" elements="27" classes="1" ncloc="46" statements="21" conditionals="0" coveredstatements="17"/>
            <class name="DigitalCaplet">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="2" methods="6" elements="27" statements="21" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalCaplet(double,double,double,double)" num="39" count="212" type="method"/>
            <line num="41" count="212" type="stmt"/>
            <line num="42" count="212" type="stmt"/>
            <line num="43" count="212" type="stmt"/>
            <line num="44" count="212" type="stmt"/>
            <line num="45" count="212" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="58" count="212" type="method"/>
            <line num="62" count="212" type="stmt"/>
            <line num="63" count="212" type="stmt"/>
            <line num="66" count="212" type="stmt"/>
            <line num="68" count="212" type="stmt"/>
            <line num="69" count="212" type="stmt"/>
            <line num="72" count="212" type="stmt"/>
            <line num="73" count="212" type="stmt"/>
            <line num="75" count="212" type="stmt"/>
            <line num="78" count="212" type="stmt"/>
            <line num="79" count="212" type="stmt"/>
            <line num="81" count="212" type="stmt"/>
            <line num="84" count="212" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptionMaturity() : double" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/DigitalFloorlet.java" name="DigitalFloorlet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="83" coveredmethods="0" methods="2" elements="27" classes="1" ncloc="41" statements="21" conditionals="4" coveredstatements="0"/>
            <class name="DigitalFloorlet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="27" statements="21" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalFloorlet(double,double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/FlexiCap.java" name="FlexiCap.java">
            <metrics coveredelements="31" coveredconditionals="3" complexity="5" loc="119" coveredmethods="2" methods="3" elements="35" classes="1" ncloc="54" statements="28" conditionals="4" coveredstatements="26"/>
            <class name="FlexiCap">
               <metrics coveredelements="31" coveredconditionals="3" complexity="5" coveredmethods="2" methods="3" elements="35" statements="28" conditionals="4" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="FlexiCap(double[],double[],double[],int)" num="41" count="78" type="method"/>
            <line num="46" count="78" type="stmt"/>
            <line num="47" count="78" type="stmt"/>
            <line num="48" count="78" type="stmt"/>
            <line num="49" count="78" type="stmt"/>
            <line num="50" count="78" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="63" count="78" type="method"/>
            <line num="67" count="78" type="stmt"/>
            <line num="72" count="78" type="stmt"/>
            <line num="74" count="78" type="stmt"/>
            <line falsecount="78" truecount="3081" num="74" type="cond"/>
            <line num="76" count="3081" type="stmt"/>
            <line num="77" count="3081" type="stmt"/>
            <line num="80" count="3081" type="stmt"/>
            <line falsecount="3081" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="3081" type="stmt"/>
            <line num="85" count="3081" type="stmt"/>
            <line num="88" count="3081" type="stmt"/>
            <line num="89" count="3081" type="stmt"/>
            <line num="90" count="3081" type="stmt"/>
            <line num="93" count="3081" type="stmt"/>
            <line num="94" count="3081" type="stmt"/>
            <line num="95" count="3081" type="stmt"/>
            <line num="97" count="3081" type="stmt"/>
            <line num="100" count="3081" type="stmt"/>
            <line num="103" count="3081" type="stmt"/>
            <line num="106" count="78" type="stmt"/>
            <line num="107" count="78" type="stmt"/>
            <line num="108" count="78" type="stmt"/>
            <line num="110" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/ForwardRateVolatilitySurfaceCurvature.java" name="ForwardRateVolatilitySurfaceCurvature.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="176" coveredmethods="0" methods="4" elements="51" classes="1" ncloc="61" statements="35" conditionals="12" coveredstatements="0"/>
            <class name="ForwardRateVolatilitySurfaceCurvature">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="51" statements="35" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardRateVolatilitySurfaceCurvature()" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateVolatilitySurfaceCurvature(double)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValues(double,LIBORMarketModel) : RandomVariable" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/LIBORBond.java" name="LIBORBond.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="63" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="26" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="LIBORBond">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORBond(double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/MoneyMarketAccount.java" name="MoneyMarketAccount.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="95" coveredmethods="0" methods="4" elements="26" classes="1" ncloc="38" statements="16" conditionals="6" coveredstatements="0"/>
            <class name="MoneyMarketAccount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="26" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount(double,double,double)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount(double,double)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount()" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="158" coveredmethods="0" methods="8" elements="58" classes="1" ncloc="78" statements="36" conditionals="14" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="8" elements="58" statements="36" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(AbstractLIBORMonteCarloProduct,double)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="Portfolio(AbstractLIBORMonteCarloProduct[],double[])" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="Portfolio(String,AbstractLIBORMonteCarloProduct[],double[])" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCurrency() : String" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : TermStructureMonteCarloProduct[]" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : double[]" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleCappedFlooredFloatingRateBond.java" name="SimpleCappedFlooredFloatingRateBond.java">
            <metrics coveredelements="35" coveredconditionals="5" complexity="6" loc="86" coveredmethods="2" methods="2" elements="41" classes="1" ncloc="52" statements="31" conditionals="8" coveredstatements="28"/>
            <class name="SimpleCappedFlooredFloatingRateBond">
               <metrics coveredelements="35" coveredconditionals="5" complexity="6" coveredmethods="2" methods="2" elements="41" statements="31" conditionals="8" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleCappedFlooredFloatingRateBond(String,double[],double[],double[],double[],double[],double)" num="27" count="2" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="37" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="43" type="cond"/>
            <line num="44" count="20" type="stmt"/>
            <line num="45" count="20" type="stmt"/>
            <line num="46" count="20" type="stmt"/>
            <line num="49" count="20" type="stmt"/>
            <line num="52" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="62" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="20" type="stmt"/>
            <line num="68" count="20" type="stmt"/>
            <line num="69" count="20" type="stmt"/>
            <line num="71" count="20" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleSwap.java" name="SimpleSwap.java">
            <metrics coveredelements="35" coveredconditionals="4" complexity="17" loc="212" coveredmethods="4" methods="14" elements="66" classes="1" ncloc="121" statements="46" conditionals="6" coveredstatements="27"/>
            <class name="SimpleSwap">
               <metrics coveredelements="35" coveredconditionals="4" complexity="17" coveredmethods="4" methods="14" elements="66" statements="46" conditionals="6" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],boolean,double[])" num="39" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],boolean,double)" num="62" count="838" type="method"/>
            <line num="68" count="838" type="stmt"/>
            <line num="69" count="838" type="stmt"/>
            <line num="70" count="838" type="stmt"/>
            <line num="71" count="838" type="stmt"/>
            <line num="72" count="838" type="stmt"/>
            <line num="73" count="838" type="stmt"/>
            <line num="74" count="838" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],double)" num="86" count="60" type="method"/>
            <line num="91" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],double[])" num="102" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[])" num="118" count="778" type="method"/>
            <line num="123" count="778" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="136" count="838" type="method"/>
            <line num="138" count="838" type="stmt"/>
            <line num="140" count="838" type="stmt"/>
            <line falsecount="838" truecount="2578" num="140" type="cond"/>
            <line num="142" count="2578" type="stmt"/>
            <line num="143" count="2578" type="stmt"/>
            <line num="144" count="2578" type="stmt"/>
            <line num="145" count="2578" type="stmt"/>
            <line num="147" count="2578" type="stmt"/>
            <line falsecount="2578" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="2578" type="stmt"/>
            <line num="153" count="2578" type="stmt"/>
            <line num="154" count="2578" type="stmt"/>
            <line falsecount="2578" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="2578" type="stmt"/>
            <line num="159" count="2578" type="stmt"/>
            <line num="160" count="2578" type="stmt"/>
            <line num="162" count="2578" type="stmt"/>
            <line num="165" count="838" type="stmt"/>
            <line num="166" count="838" type="stmt"/>
            <line num="167" count="838" type="stmt"/>
            <line num="169" count="838" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartTime() : double" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDates() : double[]" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : double[]" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapRates() : double[]" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleZeroSwap.java" name="SimpleZeroSwap.java">
            <metrics coveredelements="33" coveredconditionals="5" complexity="8" loc="131" coveredmethods="2" methods="4" elements="42" classes="1" ncloc="67" statements="30" conditionals="8" coveredstatements="26"/>
            <class name="SimpleZeroSwap">
               <metrics coveredelements="33" coveredconditionals="5" complexity="8" coveredmethods="2" methods="4" elements="42" statements="30" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[],AbstractIndex,boolean)" num="39" count="10" type="method"/>
            <line num="45" count="10" type="stmt"/>
            <line num="46" count="10" type="stmt"/>
            <line num="47" count="10" type="stmt"/>
            <line num="48" count="10" type="stmt"/>
            <line num="49" count="10" type="stmt"/>
            <line num="50" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[],boolean)" num="61" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[])" num="76" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="93" count="20" type="method"/>
            <line num="95" count="20" type="stmt"/>
            <line num="97" count="20" type="stmt"/>
            <line num="98" count="20" type="stmt"/>
            <line falsecount="20" truecount="200" num="98" type="cond"/>
            <line num="100" count="200" type="stmt"/>
            <line num="101" count="200" type="stmt"/>
            <line num="102" count="200" type="stmt"/>
            <line num="103" count="200" type="stmt"/>
            <line num="105" count="200" type="stmt"/>
            <line falsecount="200" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="200" type="stmt"/>
            <line falsecount="0" truecount="200" num="110" type="cond"/>
            <line num="111" count="200" type="stmt"/>
            <line num="112" count="200" type="stmt"/>
            <line falsecount="200" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="200" type="stmt"/>
            <line num="117" count="200" type="stmt"/>
            <line num="118" count="200" type="stmt"/>
            <line num="120" count="200" type="stmt"/>
            <line num="122" count="200" type="stmt"/>
            <line num="125" count="20" type="stmt"/>
            <line num="126" count="20" type="stmt"/>
            <line num="127" count="20" type="stmt"/>
            <line num="129" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/Swap.java" name="Swap.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="6" loc="100" coveredmethods="3" methods="5" elements="21" classes="1" ncloc="46" statements="14" conditionals="2" coveredstatements="10"/>
            <class name="Swap">
               <metrics coveredelements="15" coveredconditionals="2" complexity="6" coveredmethods="3" methods="5" elements="21" statements="14" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(TermStructureMonteCarloProduct,TermStructureMonteCarloProduct)" num="40" count="117" type="method"/>
            <line num="41" count="117" type="stmt"/>
            <line num="42" count="117" type="stmt"/>
            <line num="43" count="117" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Notional,Schedule,AbstractIndex,double,Schedule,AbstractIndex,double)" num="57" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(double[],double[],double[])" num="76" count="30" type="method"/>
            <line num="81" count="30" type="stmt"/>
            <line num="82" count="30" type="stmt"/>
            <line num="83" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="86" count="741" type="method"/>
            <line num="88" count="741" type="stmt"/>
            <line num="89" count="741" type="stmt"/>
            <line falsecount="30" truecount="711" num="89" type="cond"/>
            <line num="90" count="711" type="stmt"/>
            <line num="93" count="741" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="60" coveredconditionals="17" complexity="15" loc="177" coveredmethods="4" methods="4" elements="70" classes="1" ncloc="90" statements="44" conditionals="22" coveredstatements="39"/>
            <class name="SwapLeg">
               <metrics coveredelements="60" coveredconditionals="17" complexity="15" coveredmethods="4" methods="4" elements="70" statements="44" conditionals="22" coveredstatements="39"/>
            </class>
            <line complexity="7" visibility="public" signature="SwapLeg(Schedule,Notional,AbstractIndex,double,boolean,boolean,boolean)" num="47" count="241" type="method"/>
            <line num="48" count="241" type="stmt"/>
            <line num="50" count="241" type="stmt"/>
            <line falsecount="2" truecount="239" num="50" type="cond"/>
            <line num="59" count="241" type="stmt"/>
            <line num="60" count="241" type="stmt"/>
            <line falsecount="241" truecount="2221" num="60" type="cond"/>
            <line num="61" count="2221" type="stmt"/>
            <line num="62" count="2221" type="stmt"/>
            <line num="63" count="2221" type="stmt"/>
            <line num="70" count="2221" type="stmt"/>
            <line falsecount="2221" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="2221" type="stmt"/>
            <line num="75" count="2221" type="stmt"/>
            <line falsecount="700" truecount="1521" num="75" type="cond"/>
            <line num="76" count="1521" type="stmt"/>
            <line falsecount="1481" truecount="40" num="76" type="cond"/>
            <line num="77" count="40" type="stmt"/>
            <line num="79" count="1481" type="stmt"/>
            <line num="83" count="700" type="stmt"/>
            <line num="86" count="2221" type="stmt"/>
            <line num="87" count="2221" type="stmt"/>
            <line num="89" count="2221" type="stmt"/>
            <line falsecount="2221" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="241" type="stmt"/>
            <line complexity="6" visibility="public" signature="SwapLeg(Schedule,Notional[],AbstractIndex,double[],boolean,boolean)" num="107" count="2" type="method"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line falsecount="2" truecount="140" num="121" type="cond"/>
            <line num="122" count="140" type="stmt"/>
            <line num="124" count="140" type="stmt"/>
            <line num="125" count="140" type="stmt"/>
            <line num="126" count="140" type="stmt"/>
            <line num="127" count="140" type="stmt"/>
            <line num="128" count="140" type="stmt"/>
            <line num="135" count="140" type="stmt"/>
            <line falsecount="140" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="140" type="stmt"/>
            <line num="140" count="140" type="stmt"/>
            <line falsecount="70" truecount="70" num="140" type="cond"/>
            <line num="141" count="70" type="stmt"/>
            <line falsecount="70" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="70" type="stmt"/>
            <line num="148" count="70" type="stmt"/>
            <line num="151" count="140" type="stmt"/>
            <line num="153" count="140" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,Notional,AbstractIndex,double,boolean)" num="168" count="241" type="method"/>
            <line num="169" count="241" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="172" count="1436" type="method"/>
            <line num="174" count="1436" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapLegWithFundingProvider.java" name="SwapLegWithFundingProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="112" coveredmethods="0" methods="2" elements="44" classes="1" ncloc="64" statements="34" conditionals="8" coveredstatements="0"/>
            <class name="SwapLegWithFundingProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="44" statements="34" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="SwapLegWithFundingProvider(Schedule,double[],AbstractIndex,double[],FundingCapacity)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapWithComponents.java" name="SwapWithComponents.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="4" loc="93" coveredmethods="2" methods="2" elements="27" classes="1" ncloc="48" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="SwapWithComponents">
               <metrics coveredelements="27" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="27" statements="21" conditionals="4" coveredstatements="21"/>
            </class>
            <line complexity="3" visibility="public" signature="SwapWithComponents(double[],double[],double[])" num="36" count="30" type="method"/>
            <line num="40" count="30" type="stmt"/>
            <line num="50" count="30" type="stmt"/>
            <line num="52" count="30" type="stmt"/>
            <line num="54" count="30" type="stmt"/>
            <line num="55" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="55" type="cond"/>
            <line num="56" count="150" type="stmt"/>
            <line num="57" count="150" type="stmt"/>
            <line num="58" count="150" type="stmt"/>
            <line num="60" count="30" type="stmt"/>
            <line num="61" count="30" type="stmt"/>
            <line num="63" count="30" type="stmt"/>
            <line num="64" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="64" type="cond"/>
            <line num="65" count="150" type="stmt"/>
            <line num="66" count="150" type="stmt"/>
            <line num="68" count="150" type="stmt"/>
            <line num="69" count="150" type="stmt"/>
            <line num="71" count="30" type="stmt"/>
            <line num="72" count="30" type="stmt"/>
            <line num="74" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="87" count="30" type="method"/>
            <line num="89" count="30" type="stmt"/>
            <line num="91" count="30" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaprateCovarianceAnalyticApproximation.java" name="SwaprateCovarianceAnalyticApproximation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="93" coveredmethods="0" methods="3" elements="33" classes="1" ncloc="48" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="SwaprateCovarianceAnalyticApproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="33" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaprateCovarianceAnalyticApproximation(double[],double[])" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/Swaption.java" name="Swaption.java">
            <metrics coveredelements="76" coveredconditionals="11" complexity="21" loc="268" coveredmethods="6" methods="14" elements="94" classes="1" ncloc="142" statements="68" conditionals="12" coveredstatements="59"/>
            <class name="Swaption">
               <metrics coveredelements="76" coveredconditionals="11" complexity="21" coveredmethods="6" methods="14" elements="94" statements="68" conditionals="12" coveredstatements="59"/>
            </class>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[],double[],double)" num="58" count="723" type="method"/>
            <line num="59" count="723" type="stmt"/>
            <line num="60" count="723" type="stmt"/>
            <line num="61" count="723" type="stmt"/>
            <line num="62" count="723" type="stmt"/>
            <line num="63" count="723" type="stmt"/>
            <line num="64" count="723" type="stmt"/>
            <line num="65" count="723" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[],double[])" num="77" count="3" type="method"/>
            <line num="78" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[])" num="89" count="720" type="method"/>
            <line num="94" count="720" type="stmt"/>
            <line complexity="2" visibility="public" signature="Swaption(double,TimeDiscretization,double)" num="104" count="139141" type="method"/>
            <line num="108" count="139155" type="stmt"/>
            <line num="109" count="139154" type="stmt"/>
            <line num="111" count="139144" type="stmt"/>
            <line num="112" count="139158" type="stmt"/>
            <line num="113" count="139139" type="stmt"/>
            <line falsecount="139063" truecount="2879979" num="113" type="cond"/>
            <line num="114" count="2880138" type="stmt"/>
            <line num="115" count="2879940" type="stmt"/>
            <line num="118" count="139069" type="stmt"/>
            <line num="120" count="139082" type="stmt"/>
            <line num="121" count="139056" type="stmt"/>
            <line num="123" count="139102" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="136" count="312946" type="method"/>
            <line num="141" count="312970" type="stmt"/>
            <line num="144" count="312978" type="stmt"/>
            <line falsecount="293229" truecount="5359418" num="144" type="cond"/>
            <line num="146" count="5360673" type="stmt"/>
            <line num="147" count="5361362" type="stmt"/>
            <line num="148" count="5361826" type="stmt"/>
            <line num="150" count="5362046" type="stmt"/>
            <line falsecount="5362157" truecount="119" num="150" type="cond"/>
            <line num="151" count="119" type="stmt"/>
            <line num="154" count="5362332" type="stmt"/>
            <line falsecount="5362377" truecount="206" num="154" type="cond"/>
            <line num="157" count="5362871" type="stmt"/>
            <line num="160" count="5338125" type="stmt"/>
            <line num="164" count="5339243" type="stmt"/>
            <line num="165" count="5340572" type="stmt"/>
            <line num="166" count="5341335" type="stmt"/>
            <line falsecount="200" truecount="5336813" num="166" type="cond"/>
            <line num="167" count="5337045" type="stmt"/>
            <line num="168" count="5333823" type="stmt"/>
            <line num="169" count="5330966" type="stmt"/>
            <line num="170" count="5327738" type="stmt"/>
            <line num="173" count="5331639" type="stmt"/>
            <line num="174" count="5335706" type="stmt"/>
            <line num="175" count="5335750" type="stmt"/>
            <line num="179" count="5337060" type="stmt"/>
            <line num="182" count="5323982" type="stmt"/>
            <line num="188" count="293349" type="stmt"/>
            <line num="190" count="293346" type="stmt"/>
            <line num="191" count="293155" type="stmt"/>
            <line num="192" count="293328" type="stmt"/>
            <line num="194" count="293275" type="stmt"/>
            <line num="195" count="293110" type="stmt"/>
            <line num="196" count="293320" type="stmt"/>
            <line num="198" count="293132" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(ForwardCurve,double) : double" num="209" count="1" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseIndicator(LIBORModelMonteCarloSimulationModel) : RandomVariable" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDate() : double" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDates() : double[]" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaprates() : double[]" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : double" num="265" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionATM.java" name="SwaptionATM.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="9" loc="76" coveredmethods="3" methods="3" elements="28" classes="1" ncloc="44" statements="21" conditionals="4" coveredstatements="16"/>
            <class name="SwaptionATM">
               <metrics coveredelements="21" coveredconditionals="2" complexity="9" coveredmethods="3" methods="3" elements="28" statements="21" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionATM(double[],ValueUnit)" num="26" count="616" type="method"/>
            <line num="27" count="616" type="stmt"/>
            <line num="28" count="616" type="stmt"/>
            <line num="29" count="616" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="32" count="138107" type="method"/>
            <line num="35" count="138108" type="stmt"/>
            <line num="36" count="138059" type="stmt"/>
            <line falsecount="0" truecount="138062" num="36" type="cond"/>
            <line num="38" count="137972" type="stmt"/>
            <line num="39" count="137946" type="stmt"/>
            <line falsecount="0" truecount="137965" num="39" type="cond"/>
            <line num="42" count="138107" type="stmt"/>
            <line num="45" count="138104" type="stmt"/>
            <line num="48" count="137996" type="stmt"/>
            <line num="50" count="129010" type="stmt"/>
            <line num="51" count="288" type="stmt"/>
            <line num="52" count="288" type="stmt"/>
            <line num="53" count="128755" type="stmt"/>
            <line num="54" count="128753" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierATMOptionVolatility(RandomVariable,double,double) : RandomVariable" num="73" count="128766" type="method"/>
            <line num="74" count="128746" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximation.java" name="SwaptionAnalyticApproximation.java">
            <metrics coveredelements="110" coveredconditionals="25" complexity="24" loc="286" coveredmethods="4" methods="5" elements="118" classes="1" ncloc="146" statements="85" conditionals="28" coveredstatements="81"/>
            <class name="SwaptionAnalyticApproximation">
               <metrics coveredelements="110" coveredconditionals="25" complexity="24" coveredmethods="4" methods="5" elements="118" statements="85" conditionals="28" coveredstatements="81"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximation(double,TimeDiscretization)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximation(double,double[],ValueUnit)" num="93" count="793" type="method"/>
            <line num="94" count="793" type="stmt"/>
            <line num="95" count="793" type="stmt"/>
            <line num="96" count="793" type="stmt"/>
            <line num="97" count="793" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="100" count="6678" type="method"/>
            <line num="102" count="6680" type="stmt"/>
            <line num="103" count="6657" type="stmt"/>
            <line falsecount="0" truecount="6651" num="103" type="cond"/>
            <line num="104" count="6646" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="122" count="6615" type="method"/>
            <line num="123" count="6628" type="stmt"/>
            <line falsecount="6632" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="6631" type="stmt"/>
            <line num="128" count="6642" type="stmt"/>
            <line num="130" count="6640" type="stmt"/>
            <line num="131" count="6625" type="stmt"/>
            <line num="132" count="6613" type="stmt"/>
            <line num="134" count="6582" type="stmt"/>
            <line num="135" count="6641" type="stmt"/>
            <line num="138" count="6655" type="stmt"/>
            <line num="141" count="6651" type="stmt"/>
            <line num="142" count="6659" type="stmt"/>
            <line falsecount="6595" truecount="56278" num="142" type="cond"/>
            <line num="144" count="57044" type="stmt"/>
            <line falsecount="56098" truecount="336129" num="144" type="cond"/>
            <line num="145" count="336597" type="stmt"/>
            <line num="148" count="56541" type="stmt"/>
            <line num="152" count="6592" type="stmt"/>
            <line falsecount="6585" truecount="1" num="152" type="cond"/>
            <line num="153" count="1" type="stmt"/>
            <line num="156" count="6588" type="stmt"/>
            <line num="159" count="6607" type="stmt"/>
            <line falsecount="588" truecount="6020" num="159" type="cond"/>
            <line num="160" count="6038" type="stmt"/>
            <line num="162" count="588" type="stmt"/>
            <line falsecount="0" truecount="588" num="162" type="cond"/>
            <line num="164" count="588" type="stmt"/>
            <line num="165" count="588" type="stmt"/>
            <line num="167" count="588" type="stmt"/>
            <line num="169" count="588" type="stmt"/>
            <line num="170" count="588" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="188" count="6539" type="method"/>
            <line num="193" count="6547" type="stmt"/>
            <line num="195" count="6678" type="stmt"/>
            <line falsecount="793" truecount="5881" num="196" type="cond"/>
            <line num="201" count="5869" type="stmt"/>
            <line num="203" count="793" type="stmt"/>
            <line num="204" count="793" type="stmt"/>
            <line num="205" count="793" type="stmt"/>
            <line num="210" count="793" type="stmt"/>
            <line falsecount="649" truecount="144" num="210" type="cond"/>
            <line num="211" count="144" type="stmt"/>
            <line num="213" count="793" type="stmt"/>
            <line num="215" count="793" type="stmt"/>
            <line num="216" count="793" type="stmt"/>
            <line num="219" count="793" type="stmt"/>
            <line num="220" count="793" type="stmt"/>
            <line num="223" count="793" type="stmt"/>
            <line num="224" count="793" type="stmt"/>
            <line num="227" count="793" type="stmt"/>
            <line num="230" count="793" type="stmt"/>
            <line falsecount="793" truecount="4466" num="230" type="cond"/>
            <line num="231" count="4468" type="stmt"/>
            <line num="233" count="4473" type="stmt"/>
            <line num="234" count="4471" type="stmt"/>
            <line num="238" count="793" type="stmt"/>
            <line num="239" count="793" type="stmt"/>
            <line num="240" count="793" type="stmt"/>
            <line falsecount="793" truecount="4325" num="240" type="cond"/>
            <line num="241" count="4325" type="stmt"/>
            <line num="242" count="4327" type="stmt"/>
            <line num="243" count="4329" type="stmt"/>
            <line num="247" count="793" type="stmt"/>
            <line num="249" count="793" type="stmt"/>
            <line num="250" count="793" type="stmt"/>
            <line falsecount="793" truecount="4478" num="250" type="cond"/>
            <line num="251" count="4481" type="stmt"/>
            <line num="252" count="4477" type="stmt"/>
            <line num="255" count="793" type="stmt"/>
            <line num="256" count="793" type="stmt"/>
            <line num="257" count="793" type="stmt"/>
            <line falsecount="793" truecount="4476" num="257" type="cond"/>
            <line num="258" count="4483" type="stmt"/>
            <line falsecount="943" truecount="3540" num="258" type="cond"/>
            <line num="259" count="3540" type="stmt"/>
            <line num="262" count="4482" type="stmt"/>
            <line num="263" count="4483" type="stmt"/>
            <line num="265" count="4483" type="stmt"/>
            <line num="267" count="4482" type="stmt"/>
            <line num="268" count="4471" type="stmt"/>
            <line num="269" count="4473" type="stmt"/>
            <line num="271" count="4474" type="stmt"/>
            <line num="276" count="793" type="stmt"/>
            <line num="277" count="793" type="stmt"/>
            <line num="278" count="793" type="stmt"/>
            <line num="279" count="793" type="stmt"/>
            <line num="281" count="793" type="stmt"/>
            <line num="283" count="793" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximationRebonato.java" name="SwaptionAnalyticApproximationRebonato.java">
            <metrics coveredelements="93" coveredconditionals="23" complexity="21" loc="253" coveredmethods="4" methods="5" elements="106" classes="1" ncloc="120" statements="73" conditionals="28" coveredstatements="66"/>
            <class name="SwaptionAnalyticApproximationRebonato">
               <metrics coveredelements="93" coveredconditionals="23" complexity="21" coveredmethods="4" methods="5" elements="106" statements="73" conditionals="28" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximationRebonato(double,TimeDiscretization)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximationRebonato(double,double[],ValueUnit)" num="89" count="60" type="method"/>
            <line num="90" count="60" type="stmt"/>
            <line num="91" count="60" type="stmt"/>
            <line num="92" count="60" type="stmt"/>
            <line num="93" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="96" count="60" type="method"/>
            <line num="98" count="60" type="stmt"/>
            <line num="99" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="99" type="cond"/>
            <line num="100" count="60" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="118" count="60" type="method"/>
            <line num="119" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="60" type="stmt"/>
            <line num="124" count="60" type="stmt"/>
            <line num="126" count="60" type="stmt"/>
            <line num="127" count="60" type="stmt"/>
            <line num="128" count="60" type="stmt"/>
            <line num="130" count="60" type="stmt"/>
            <line num="131" count="60" type="stmt"/>
            <line num="134" count="60" type="stmt"/>
            <line num="137" count="60" type="stmt"/>
            <line num="138" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="138" type="cond"/>
            <line num="140" count="300" type="stmt"/>
            <line falsecount="300" truecount="600" num="140" type="cond"/>
            <line num="141" count="600" type="stmt"/>
            <line num="144" count="300" type="stmt"/>
            <line num="148" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="60" type="stmt"/>
            <line num="155" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="160" count="60" type="stmt"/>
            <line num="161" count="60" type="stmt"/>
            <line num="163" count="60" type="stmt"/>
            <line num="165" count="60" type="stmt"/>
            <line num="166" count="60" type="stmt"/>
            <line complexity="9" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve,double[]) : Map&lt;String, double[]&gt;" num="181" count="60" type="method"/>
            <line num="185" count="60" type="stmt"/>
            <line num="186" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="60" type="stmt"/>
            <line num="192" count="60" type="stmt"/>
            <line num="195" count="60" type="stmt"/>
            <line num="196" count="60" type="stmt"/>
            <line num="199" count="60" type="stmt"/>
            <line num="200" count="60" type="stmt"/>
            <line num="203" count="60" type="stmt"/>
            <line num="206" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="206" type="cond"/>
            <line num="207" count="300" type="stmt"/>
            <line num="209" count="300" type="stmt"/>
            <line num="210" count="300" type="stmt"/>
            <line num="214" count="60" type="stmt"/>
            <line num="215" count="60" type="stmt"/>
            <line num="216" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="216" type="cond"/>
            <line num="217" count="300" type="stmt"/>
            <line num="218" count="300" type="stmt"/>
            <line num="219" count="300" type="stmt"/>
            <line num="222" count="60" type="stmt"/>
            <line num="223" count="60" type="stmt"/>
            <line num="224" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="224" type="cond"/>
            <line num="225" count="300" type="stmt"/>
            <line falsecount="60" truecount="240" num="225" type="cond"/>
            <line num="226" count="240" type="stmt"/>
            <line num="228" count="300" type="stmt"/>
            <line num="232" count="60" type="stmt"/>
            <line num="234" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="234" type="cond"/>
            <line num="235" count="300" type="stmt"/>
            <line falsecount="60" truecount="240" num="235" type="cond"/>
            <line num="236" count="240" type="stmt"/>
            <line num="239" count="300" type="stmt"/>
            <line num="240" count="300" type="stmt"/>
            <line falsecount="60" truecount="240" num="240" type="cond"/>
            <line num="242" count="300" type="stmt"/>
            <line num="246" count="60" type="stmt"/>
            <line num="247" count="60" type="stmt"/>
            <line num="248" count="60" type="stmt"/>
            <line num="249" count="60" type="stmt"/>
            <line num="251" count="60" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionFactory.java" name="SwaptionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="42" coveredmethods="0" methods="2" elements="18" classes="1" ncloc="22" statements="10" conditionals="6" coveredstatements="0"/>
            <class name="SwaptionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SwaptionFactory()" num="22" count="0" type="method"/>
            <line complexity="4" visibility="public" signature="createSwaption(String,double,TimeDiscretization,String) : TermStructureMonteCarloProduct" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionFromSwapSchedules.java" name="SwaptionFromSwapSchedules.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="227" coveredmethods="0" methods="7" elements="108" classes="2" ncloc="161" statements="83" conditionals="18" coveredstatements="0"/>
            <class name="SwaptionFromSwapSchedules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="7" elements="108" statements="83" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="SwaptionFromSwapSchedules.SwaptionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate,Schedule,Schedule,double,double,ValueUnit)" num="47" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessTimeDiscretization(LocalDateTime) : TimeDiscretization" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Period) : Double" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDate() : LocalDate" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValueOfLegAnalytic(double,TermStructureMonteCarloSimulationModel,Schedule,boolean,double,double) : RandomVariable" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionGeneralizedAnalyticApproximation.java" name="SwaptionGeneralizedAnalyticApproximation.java">
            <metrics coveredelements="110" coveredconditionals="24" complexity="34" loc="433" coveredmethods="4" methods="6" elements="190" classes="3" ncloc="236" statements="140" conditionals="44" coveredstatements="82"/>
            <class name="SwaptionGeneralizedAnalyticApproximation">
               <metrics coveredelements="110" coveredconditionals="24" complexity="34" coveredmethods="4" methods="6" elements="190" statements="140" conditionals="44" coveredstatements="82"/>
            </class>
            <class name="SwaptionGeneralizedAnalyticApproximation.StateSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SwaptionGeneralizedAnalyticApproximation.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionGeneralizedAnalyticApproximation(double,double[],ValueUnit,StateSpace)" num="105" count="522" type="method"/>
            <line num="106" count="522" type="stmt"/>
            <line num="107" count="522" type="stmt"/>
            <line num="108" count="522" type="stmt"/>
            <line num="109" count="522" type="stmt"/>
            <line num="110" count="522" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionGeneralizedAnalyticApproximation(double,TimeDiscretization,StateSpace)" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="127" count="53655" type="method"/>
            <line num="129" count="53668" type="stmt"/>
            <line num="130" count="53546" type="stmt"/>
            <line falsecount="0" truecount="53547" num="130" type="cond"/>
            <line num="131" count="53543" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="149" count="53430" type="method"/>
            <line num="150" count="53445" type="stmt"/>
            <line falsecount="53439" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="53501" type="stmt"/>
            <line num="155" count="53488" type="stmt"/>
            <line num="157" count="53523" type="stmt"/>
            <line num="158" count="53338" type="stmt"/>
            <line num="159" count="53175" type="stmt"/>
            <line num="160" count="52583" type="stmt"/>
            <line num="162" count="52774" type="stmt"/>
            <line falsecount="52856" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="52926" type="stmt"/>
            <line num="169" count="49647" type="stmt"/>
            <line num="173" count="49890" type="stmt"/>
            <line num="176" count="49874" type="stmt"/>
            <line num="177" count="49944" type="stmt"/>
            <line falsecount="49406" truecount="1431759" num="177" type="cond"/>
            <line num="179" count="1414577" type="stmt"/>
            <line falsecount="1423842" truecount="13227045" num="179" type="cond"/>
            <line num="180" count="13408784" type="stmt"/>
            <line num="183" count="1421794" type="stmt"/>
            <line num="187" count="49499" type="stmt"/>
            <line falsecount="49807" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="49851" type="stmt"/>
            <line num="194" count="49879" type="stmt"/>
            <line falsecount="30" truecount="50000" num="194" type="cond"/>
            <line num="195" count="49935" type="stmt"/>
            <line num="199" count="30" type="stmt"/>
            <line num="200" count="30" type="stmt"/>
            <line num="202" count="30" type="stmt"/>
            <line num="203" count="30" type="stmt"/>
            <line num="204" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="30" type="stmt"/>
            <line num="211" count="30" type="stmt"/>
            <line complexity="11" visibility="public" signature="getLogSwapRateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="226" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getSwapRateDerivative(TimeDiscretization,AnalyticModel,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="337" count="52257" type="method"/>
            <line num="342" count="52347" type="stmt"/>
            <line num="344" count="53654" type="stmt"/>
            <line falsecount="4081" truecount="49609" num="345" type="cond"/>
            <line num="350" count="49586" type="stmt"/>
            <line num="352" count="4079" type="stmt"/>
            <line num="353" count="4085" type="stmt"/>
            <line num="354" count="4080" type="stmt"/>
            <line num="359" count="4082" type="stmt"/>
            <line falsecount="4068" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="4079" type="stmt"/>
            <line num="364" count="4068" type="stmt"/>
            <line num="367" count="4060" type="stmt"/>
            <line num="368" count="4054" type="stmt"/>
            <line num="371" count="4018" type="stmt"/>
            <line num="372" count="636" type="stmt"/>
            <line num="375" count="636" type="stmt"/>
            <line num="378" count="636" type="stmt"/>
            <line falsecount="636" truecount="21797" num="378" type="cond"/>
            <line num="379" count="21800" type="stmt"/>
            <line num="381" count="21809" type="stmt"/>
            <line num="382" count="21809" type="stmt"/>
            <line num="386" count="636" type="stmt"/>
            <line num="387" count="636" type="stmt"/>
            <line num="388" count="636" type="stmt"/>
            <line falsecount="636" truecount="11060" num="388" type="cond"/>
            <line num="389" count="11060" type="stmt"/>
            <line num="390" count="11060" type="stmt"/>
            <line num="391" count="11060" type="stmt"/>
            <line num="395" count="636" type="stmt"/>
            <line num="397" count="636" type="stmt"/>
            <line num="398" count="636" type="stmt"/>
            <line falsecount="636" truecount="21820" num="398" type="cond"/>
            <line num="399" count="21820" type="stmt"/>
            <line num="400" count="21820" type="stmt"/>
            <line num="403" count="636" type="stmt"/>
            <line num="404" count="636" type="stmt"/>
            <line num="405" count="636" type="stmt"/>
            <line falsecount="636" truecount="21805" num="405" type="cond"/>
            <line num="406" count="21806" type="stmt"/>
            <line falsecount="11391" truecount="10419" num="406" type="cond"/>
            <line num="407" count="10420" type="stmt"/>
            <line num="410" count="21806" type="stmt"/>
            <line num="411" count="21808" type="stmt"/>
            <line num="413" count="21795" type="stmt"/>
            <line num="415" count="21797" type="stmt"/>
            <line num="416" count="21793" type="stmt"/>
            <line num="417" count="21801" type="stmt"/>
            <line num="419" count="21801" type="stmt"/>
            <line num="423" count="636" type="stmt"/>
            <line num="424" count="636" type="stmt"/>
            <line num="425" count="636" type="stmt"/>
            <line num="426" count="636" type="stmt"/>
            <line num="428" count="636" type="stmt"/>
            <line num="430" count="636" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSimple.java" name="SwaptionSimple.java">
            <metrics coveredelements="33" coveredconditionals="9" complexity="15" loc="109" coveredmethods="3" methods="4" elements="47" classes="1" ncloc="65" statements="29" conditionals="14" coveredstatements="21"/>
            <class name="SwaptionSimple">
               <metrics coveredelements="33" coveredconditionals="9" complexity="15" coveredmethods="3" methods="4" elements="47" statements="29" conditionals="14" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSimple(double,TimeDiscretization)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSimple(double,double[],ValueUnit)" num="49" count="950" type="method"/>
            <line num="50" count="950" type="stmt"/>
            <line num="51" count="950" type="stmt"/>
            <line num="52" count="950" type="stmt"/>
            <line num="53" count="950" type="stmt"/>
            <line num="54" count="950" type="stmt"/>
            <line complexity="12" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="67" count="159014" type="method"/>
            <line num="69" count="159010" type="stmt"/>
            <line num="71" count="148219" type="stmt"/>
            <line falsecount="147795" truecount="432" num="71" type="cond"/>
            <line num="72" count="432" type="stmt"/>
            <line num="75" count="147805" type="stmt"/>
            <line num="76" count="147804" type="stmt"/>
            <line falsecount="2759" truecount="145042" num="76" type="cond"/>
            <line num="78" count="147757" type="stmt"/>
            <line num="79" count="147809" type="stmt"/>
            <line num="80" count="147810" type="stmt"/>
            <line num="81" count="147815" type="stmt"/>
            <line falsecount="2760" truecount="145057" num="81" type="cond"/>
            <line num="83" count="147803" type="stmt"/>
            <line falsecount="145051" truecount="2760" num="83" type="cond"/>
            <line num="84" count="2760" type="stmt"/>
            <line num="85" count="2760" type="stmt"/>
            <line num="87" count="145052" type="stmt"/>
            <line falsecount="0" truecount="145054" num="87" type="cond"/>
            <line num="88" count="145055" type="stmt"/>
            <line num="89" count="145036" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="104" count="15" type="method"/>
            <line num="106" count="15" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSingleCurve.java" name="SwaptionSingleCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="204" coveredmethods="0" methods="6" elements="71" classes="1" ncloc="104" statements="55" conditionals="10" coveredstatements="0"/>
            <class name="SwaptionSingleCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="6" elements="71" statements="55" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurve(double,double[],double[],double[],double[])" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurve(double,double[],double[],double[])" num="64" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionSingleCurve(double,TimeDiscretization,double)" num="84" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="114" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(ForwardCurve,double) : double" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSingleCurveAnalyticApproximation.java" name="SwaptionSingleCurveAnalyticApproximation.java">
            <metrics coveredelements="87" coveredconditionals="18" complexity="18" loc="222" coveredmethods="4" methods="5" elements="97" classes="1" ncloc="109" statements="70" conditionals="22" coveredstatements="65"/>
            <class name="SwaptionSingleCurveAnalyticApproximation">
               <metrics coveredelements="87" coveredconditionals="18" complexity="18" coveredmethods="4" methods="5" elements="97" statements="70" conditionals="22" coveredstatements="65"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurveAnalyticApproximation(double,TimeDiscretization)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurveAnalyticApproximation(double,double[],ValueUnit)" num="68" count="60" type="method"/>
            <line num="69" count="60" type="stmt"/>
            <line num="70" count="60" type="stmt"/>
            <line num="71" count="60" type="stmt"/>
            <line num="72" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="75" count="60" type="method"/>
            <line num="77" count="60" type="stmt"/>
            <line num="78" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="78" type="cond"/>
            <line num="79" count="60" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="97" count="60" type="method"/>
            <line num="98" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="60" type="stmt"/>
            <line num="103" count="60" type="stmt"/>
            <line num="105" count="60" type="stmt"/>
            <line num="106" count="60" type="stmt"/>
            <line num="107" count="60" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="110" count="60" type="stmt"/>
            <line num="111" count="60" type="stmt"/>
            <line num="112" count="60" type="stmt"/>
            <line num="115" count="60" type="stmt"/>
            <line num="118" count="60" type="stmt"/>
            <line num="119" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="119" type="cond"/>
            <line num="121" count="300" type="stmt"/>
            <line falsecount="300" truecount="600" num="121" type="cond"/>
            <line num="122" count="600" type="stmt"/>
            <line num="125" count="300" type="stmt"/>
            <line num="129" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="60" type="stmt"/>
            <line num="136" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="60" type="stmt"/>
            <line num="142" count="60" type="stmt"/>
            <line num="144" count="60" type="stmt"/>
            <line num="146" count="60" type="stmt"/>
            <line num="147" count="60" type="stmt"/>
            <line complexity="6" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,ForwardCurve,double[]) : Map&lt;String, double[]&gt;" num="161" count="60" type="method"/>
            <line num="162" count="60" type="stmt"/>
            <line num="163" count="60" type="stmt"/>
            <line num="166" count="60" type="stmt"/>
            <line num="167" count="60" type="stmt"/>
            <line num="170" count="60" type="stmt"/>
            <line num="171" count="60" type="stmt"/>
            <line num="174" count="60" type="stmt"/>
            <line num="175" count="60" type="stmt"/>
            <line falsecount="60" truecount="930" num="175" type="cond"/>
            <line num="176" count="930" type="stmt"/>
            <line num="177" count="930" type="stmt"/>
            <line num="178" count="930" type="stmt"/>
            <line num="182" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="182" type="cond"/>
            <line num="183" count="300" type="stmt"/>
            <line num="184" count="300" type="stmt"/>
            <line num="186" count="300" type="stmt"/>
            <line num="187" count="300" type="stmt"/>
            <line num="191" count="60" type="stmt"/>
            <line num="192" count="60" type="stmt"/>
            <line num="193" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="193" type="cond"/>
            <line num="194" count="300" type="stmt"/>
            <line num="195" count="300" type="stmt"/>
            <line num="196" count="300" type="stmt"/>
            <line num="201" count="60" type="stmt"/>
            <line num="203" count="60" type="stmt"/>
            <line num="205" count="60" type="stmt"/>
            <line num="206" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="206" type="cond"/>
            <line num="207" count="300" type="stmt"/>
            <line falsecount="60" truecount="240" num="207" type="cond"/>
            <line num="208" count="240" type="stmt"/>
            <line num="211" count="300" type="stmt"/>
            <line num="215" count="60" type="stmt"/>
            <line num="216" count="60" type="stmt"/>
            <line num="217" count="60" type="stmt"/>
            <line num="218" count="60" type="stmt"/>
            <line num="220" count="60" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionWithComponents.java" name="SwaptionWithComponents.java">
            <metrics coveredelements="28" coveredconditionals="4" complexity="4" loc="99" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="54" statements="22" conditionals="4" coveredstatements="22"/>
            <class name="SwaptionWithComponents">
               <metrics coveredelements="28" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="28" statements="22" conditionals="4" coveredstatements="22"/>
            </class>
            <line complexity="3" visibility="public" signature="SwaptionWithComponents(double,double[],double[],double[])" num="37" count="30" type="method"/>
            <line num="42" count="30" type="stmt"/>
            <line num="52" count="30" type="stmt"/>
            <line num="54" count="30" type="stmt"/>
            <line num="56" count="30" type="stmt"/>
            <line num="57" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="57" type="cond"/>
            <line num="58" count="150" type="stmt"/>
            <line num="59" count="150" type="stmt"/>
            <line num="62" count="150" type="stmt"/>
            <line num="64" count="30" type="stmt"/>
            <line num="65" count="30" type="stmt"/>
            <line num="67" count="30" type="stmt"/>
            <line num="68" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="68" type="cond"/>
            <line num="69" count="150" type="stmt"/>
            <line num="70" count="150" type="stmt"/>
            <line num="71" count="150" type="stmt"/>
            <line num="74" count="150" type="stmt"/>
            <line num="76" count="30" type="stmt"/>
            <line num="77" count="30" type="stmt"/>
            <line num="79" count="30" type="stmt"/>
            <line num="80" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="93" count="30" type="method"/>
            <line num="95" count="30" type="stmt"/>
            <line num="97" count="30" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/TermStructureMonteCarloProduct.java" name="TermStructureMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="58" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.indices">
         <metrics coveredelements="123" complexity="160" loc="1872" methods="106" classes="23" statements="382" coveredconditionals="17" coveredmethods="20" elements="576" ncloc="1025" files="22" conditionals="88" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AbstractIndex.java" name="AbstractIndex.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="68" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="AbstractIndex">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractIndex(String,String)" num="35" count="2099" type="method"/>
            <line num="36" count="2099" type="stmt"/>
            <line num="37" count="2099" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractIndex(String)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractIndex()" num="53" count="1184" type="method"/>
            <line num="54" count="1184" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="65" count="38362" type="method"/>
            <line num="66" count="38366" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AccruedInterest.java" name="AccruedInterest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="96" coveredmethods="0" methods="4" elements="22" classes="1" ncloc="48" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="AccruedInterest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccruedInterest(String,String,LocalDate,LocalDate,LocalDate,AbstractIndex,Double,DayCountConvention,boolean)" num="61" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getModelDate(double) : LocalDate" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AnalyticModelForwardCurveIndex.java" name="AnalyticModelForwardCurveIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="85" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="46" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="AnalyticModelForwardCurveIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelForwardCurveIndex(String,String,double,double)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AnalyticModelIndex.java" name="AnalyticModelIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="83" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="44" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="AnalyticModelIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelIndex(String,String,double)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/CappedFlooredIndex.java" name="CappedFlooredIndex.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="13" loc="84" coveredmethods="2" methods="4" elements="45" classes="1" ncloc="54" statements="23" conditionals="18" coveredstatements="10"/>
            <class name="CappedFlooredIndex">
               <metrics coveredelements="14" coveredconditionals="2" complexity="13" coveredmethods="2" methods="4" elements="45" statements="23" conditionals="18" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CappedFlooredIndex(AbstractIndex,AbstractIndex,AbstractIndex)" num="36" count="10" type="method"/>
            <line num="37" count="10" type="stmt"/>
            <line num="38" count="10" type="stmt"/>
            <line num="39" count="10" type="stmt"/>
            <line num="40" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="43" count="200" type="method"/>
            <line num="45" count="200" type="stmt"/>
            <line num="47" count="200" type="stmt"/>
            <line falsecount="0" truecount="200" num="47" type="cond"/>
            <line num="48" count="200" type="stmt"/>
            <line num="50" count="200" type="stmt"/>
            <line falsecount="0" truecount="200" num="50" type="cond"/>
            <line num="51" count="200" type="stmt"/>
            <line num="54" count="200" type="stmt"/>
            <line complexity="8" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ConstantMaturitySwaprate.java" name="ConstantMaturitySwaprate.java">
            <metrics coveredelements="32" coveredconditionals="5" complexity="12" loc="145" coveredmethods="4" methods="9" elements="48" classes="1" ncloc="70" statements="33" conditionals="6" coveredstatements="23"/>
            <class name="ConstantMaturitySwaprate">
               <metrics coveredelements="32" coveredconditionals="5" complexity="12" coveredmethods="4" methods="9" elements="48" statements="33" conditionals="6" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(String,String,double,double[])" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double[])" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double[])" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ConstantMaturitySwaprate(String,String,double,double,double)" num="72" count="13" type="method"/>
            <line num="73" count="13" type="stmt"/>
            <line num="74" count="13" type="stmt"/>
            <line num="76" count="13" type="stmt"/>
            <line num="77" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="13" type="stmt"/>
            <line num="81" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double,double)" num="92" count="13" type="method"/>
            <line num="93" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double)" num="102" count="13" type="method"/>
            <line num="103" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="106" count="320" type="method"/>
            <line num="110" count="320" type="stmt"/>
            <line num="111" count="320" type="stmt"/>
            <line num="112" count="320" type="stmt"/>
            <line falsecount="320" truecount="5760" num="112" type="cond"/>
            <line num="113" count="5760" type="stmt"/>
            <line num="114" count="5760" type="stmt"/>
            <line num="118" count="320" type="stmt"/>
            <line num="119" count="320" type="stmt"/>
            <line num="120" count="320" type="stmt"/>
            <line falsecount="320" truecount="5439" num="120" type="cond"/>
            <line num="121" count="5440" type="stmt"/>
            <line num="122" count="5439" type="stmt"/>
            <line num="123" count="5439" type="stmt"/>
            <line num="125" count="320" type="stmt"/>
            <line num="126" count="320" type="stmt"/>
            <line num="128" count="320" type="stmt"/>
            <line num="130" count="320" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/DateIndex.java" name="DateIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="90" coveredmethods="0" methods="4" elements="27" classes="2" ncloc="51" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="DateIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="27" statements="23" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DateIndex.DateIndexType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DateIndex(String,String,DateIndexType)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DateIndex(String,DateIndexType)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/FixedCoupon.java" name="FixedCoupon.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="5" loc="60" coveredmethods="2" methods="5" elements="11" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="3"/>
            <class name="FixedCoupon">
               <metrics coveredelements="5" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="FixedCoupon(double)" num="31" count="1130" type="method"/>
            <line num="32" count="1130" type="stmt"/>
            <line num="33" count="1130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="36" count="6188" type="method"/>
            <line num="38" count="6189" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCoupon() : RandomVariable" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ForwardCurveIndex.java" name="ForwardCurveIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="53" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurveIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveIndex(ForwardCurve)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndex.java" name="LIBORIndex.java">
            <metrics coveredelements="47" coveredconditionals="9" complexity="19" loc="164" coveredmethods="5" methods="9" elements="63" classes="1" ncloc="95" statements="42" conditionals="12" coveredstatements="33"/>
            <class name="LIBORIndex">
               <metrics coveredelements="47" coveredconditionals="9" complexity="19" coveredmethods="5" methods="9" elements="63" statements="42" conditionals="12" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORIndex(String,String,String,BusinessdayCalendar,DateRollConvention)" num="41" count="114" type="method"/>
            <line num="43" count="114" type="stmt"/>
            <line num="44" count="114" type="stmt"/>
            <line num="45" count="114" type="stmt"/>
            <line num="46" count="114" type="stmt"/>
            <line num="47" count="114" type="stmt"/>
            <line num="48" count="114" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndex(String,double,double)" num="58" count="788" type="method"/>
            <line num="59" count="788" type="stmt"/>
            <line num="60" count="788" type="stmt"/>
            <line num="61" count="788" type="stmt"/>
            <line num="62" count="788" type="stmt"/>
            <line num="63" count="788" type="stmt"/>
            <line num="64" count="788" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndex(double,double)" num="73" count="725" type="method"/>
            <line num="74" count="725" type="stmt"/>
            <line complexity="10" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="77" count="10189" type="method"/>
            <line num="81" count="10189" type="stmt"/>
            <line falsecount="1220" truecount="8967" num="81" type="cond"/>
            <line num="83" count="8968" type="stmt"/>
            <line falsecount="8967" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="89" count="10189" type="stmt"/>
            <line falsecount="10187" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="96" count="10189" type="stmt"/>
            <line num="101" count="10188" type="stmt"/>
            <line num="103" count="10190" type="stmt"/>
            <line falsecount="10158" truecount="30" num="103" type="cond"/>
            <line num="105" count="30" type="stmt"/>
            <line num="106" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="30" type="stmt"/>
            <line num="110" count="30" type="stmt"/>
            <line num="111" count="30" type="stmt"/>
            <line num="112" count="30" type="stmt"/>
            <line num="115" count="10187" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPeriodLength(TermStructureMonteCarloSimulationModel,double) : double" num="127" count="10190" type="method"/>
            <line num="128" count="10189" type="stmt"/>
            <line falsecount="7910" truecount="2279" num="128" type="cond"/>
            <line num="129" count="2279" type="stmt"/>
            <line num="130" count="2279" type="stmt"/>
            <line num="131" count="2280" type="stmt"/>
            <line num="132" count="2279" type="stmt"/>
            <line num="134" count="2280" type="stmt"/>
            <line num="137" count="7909" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength() : double" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LaggedIndex.java" name="LaggedIndex.java">
            <metrics coveredelements="10" coveredconditionals="1" complexity="5" loc="75" coveredmethods="2" methods="4" elements="22" classes="1" ncloc="46" statements="16" conditionals="2" coveredstatements="7"/>
            <class name="LaggedIndex">
               <metrics coveredelements="10" coveredconditionals="1" complexity="5" coveredmethods="2" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="LaggedIndex(AbstractProductComponent,String,BusinessdayCalendar)" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LaggedIndex(AbstractProductComponent,double)" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="62" count="70" type="method"/>
            <line num="64" count="70" type="stmt"/>
            <line falsecount="70" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="70" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LinearCombinationIndex.java" name="LinearCombinationIndex.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="10" loc="108" coveredmethods="2" methods="8" elements="30" classes="1" ncloc="56" statements="18" conditionals="4" coveredstatements="6"/>
            <class name="LinearCombinationIndex">
               <metrics coveredelements="8" coveredconditionals="0" complexity="10" coveredmethods="2" methods="8" elements="30" statements="18" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearCombinationIndex(double,AbstractProductComponent,double,AbstractProductComponent)" num="38" count="42" type="method"/>
            <line num="39" count="42" type="stmt"/>
            <line num="40" count="42" type="stmt"/>
            <line num="41" count="42" type="stmt"/>
            <line num="42" count="42" type="stmt"/>
            <line num="43" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="80" type="method"/>
            <line num="48" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex1() : AbstractProductComponent" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex2() : AbstractProductComponent" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScaling1() : double" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScaling2() : double" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/MaxIndex.java" name="MaxIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="MaxIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="27" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="MaxIndex(AbstractProductComponent)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/MinIndex.java" name="MinIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="MinIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="27" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="MinIndex(AbstractProductComponent)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/NumerairePerformanceIndex.java" name="NumerairePerformanceIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="106" coveredmethods="0" methods="4" elements="34" classes="1" ncloc="65" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="NumerairePerformanceIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="34" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NumerairePerformanceIndex(String,String,String,BusinessdayCalendar,DateRollConvention,DayCountConvention)" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="54" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/NumerairePerformanceOnScheduleIndex.java" name="NumerairePerformanceOnScheduleIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="105" coveredmethods="0" methods="5" elements="37" classes="1" ncloc="61" statements="28" conditionals="4" coveredstatements="0"/>
            <class name="NumerairePerformanceOnScheduleIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="37" statements="28" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NumerairePerformanceOnScheduleIndex(String,String,Schedule)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPeriod(LocalDateTime) : Period" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/PerformanceIndex.java" name="PerformanceIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="76" coveredmethods="0" methods="5" elements="22" classes="1" ncloc="39" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="PerformanceIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="22" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PerformanceIndex(AbstractProductComponent,AbstractProductComponent)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeratorIndex() : AbstractProductComponent" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDenominatorIndex() : AbstractProductComponent" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/PowIndex.java" name="PowIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="PowIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PowIndex(AbstractProductComponent,double)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ProductIndex.java" name="ProductIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="58" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="33" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="ProductIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductIndex(AbstractIndex,AbstractIndex)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/TimeDiscreteEndOfMonthIndex.java" name="TimeDiscreteEndOfMonthIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="15" classes="1" ncloc="34" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TimeDiscreteEndOfMonthIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeDiscreteEndOfMonthIndex(String,AbstractIndex,int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/TriggerIndex.java" name="TriggerIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="81" coveredmethods="0" methods="4" elements="33" classes="1" ncloc="53" statements="21" conditionals="8" coveredstatements="0"/>
            <class name="TriggerIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="33" statements="21" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TriggerIndex(AbstractProductComponent,AbstractProductComponent,AbstractProductComponent)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/UnsupportedIndex.java" name="UnsupportedIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="68" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="31" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="UnsupportedIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedIndex(String,Exception)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsupportedIndex(Exception)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor">
         <metrics coveredelements="171" complexity="96" loc="1151" methods="94" classes="16" statements="179" coveredconditionals="2" coveredmethods="57" elements="277" ncloc="570" files="13" conditionals="4" coveredstatements="112"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/AnalyticModelDescriptor.java" name="AnalyticModelDescriptor.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="9" loc="88" coveredmethods="4" methods="7" elements="32" classes="1" ncloc="54" statements="21" conditionals="4" coveredstatements="11"/>
            <class name="AnalyticModelDescriptor">
               <metrics coveredelements="17" coveredconditionals="2" complexity="9" coveredmethods="4" methods="7" elements="32" statements="21" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="3" visibility="public" signature="AnalyticModelDescriptor(LocalDate,Collection&lt;Curve&gt;,Collection&lt;VolatilitySurface&gt;)" num="30" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="37" type="cond"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelDescriptor(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="77" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurvesMap() : Map&lt;String, Curve&gt;" num="81" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaceMap() : Map&lt;String, VolatilitySurface&gt;" num="85" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/AssetModelDescriptor.java" name="AssetModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/BlackScholesModelDescriptor.java" name="BlackScholesModelDescriptor.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="8" loc="84" coveredmethods="6" methods="8" elements="21" classes="1" ncloc="43" statements="13" conditionals="0" coveredstatements="11"/>
            <class name="BlackScholesModelDescriptor">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="6" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double)" num="29" count="2" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="53" count="5" type="method"/>
            <line num="54" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="60" count="6" type="method"/>
            <line num="61" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="67" count="6" type="method"/>
            <line num="68" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="74" count="5" type="method"/>
            <line num="75" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="81" count="7" type="method"/>
            <line num="82" count="7" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/HestonModelDescriptor.java" name="HestonModelDescriptor.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="12" loc="121" coveredmethods="10" methods="12" elements="33" classes="1" ncloc="63" statements="21" conditionals="0" coveredstatements="19"/>
            <class name="HestonModelDescriptor">
               <metrics coveredelements="29" coveredconditionals="0" complexity="12" coveredmethods="10" methods="12" elements="33" statements="21" conditionals="0" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double,Double,Double,Double,Double)" num="34" count="124" type="method"/>
            <line num="37" count="125" type="stmt"/>
            <line num="38" count="125" type="stmt"/>
            <line num="39" count="125" type="stmt"/>
            <line num="40" count="125" type="stmt"/>
            <line num="41" count="125" type="stmt"/>
            <line num="42" count="125" type="stmt"/>
            <line num="43" count="125" type="stmt"/>
            <line num="44" count="125" type="stmt"/>
            <line num="45" count="124" type="stmt"/>
            <line num="46" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="62" count="126" type="method"/>
            <line num="63" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="69" count="246" type="method"/>
            <line num="70" count="246" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="76" count="245" type="method"/>
            <line num="77" count="246" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="83" count="247" type="method"/>
            <line num="84" count="247" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="90" count="126" type="method"/>
            <line num="91" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : Double" num="97" count="125" type="method"/>
            <line num="98" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : Double" num="104" count="126" type="method"/>
            <line num="105" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : Double" num="111" count="126" type="method"/>
            <line num="112" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : Double" num="118" count="126" type="method"/>
            <line num="119" count="126" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/InterestRateModelDescriptor.java" name="InterestRateModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwapLegProductDescriptor.java" name="InterestRateSwapLegProductDescriptor.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="10" loc="142" coveredmethods="7" methods="10" elements="36" classes="1" ncloc="60" statements="26" conditionals="0" coveredstatements="17"/>
            <class name="InterestRateSwapLegProductDescriptor">
               <metrics coveredelements="24" coveredconditionals="0" complexity="10" coveredmethods="7" methods="10" elements="36" statements="26" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwapLegProductDescriptor(String,String,ScheduleDescriptor,double,double,boolean)" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InterestRateSwapLegProductDescriptor(String,String,ScheduleDescriptor,double[],double[],boolean)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="83" count="4" type="method"/>
            <line num="84" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="92" count="2" type="method"/>
            <line num="93" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegScheduleDescriptor() : ScheduleDescriptor" num="101" count="6" type="method"/>
            <line num="102" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionals() : double[]" num="110" count="4" type="method"/>
            <line num="111" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreads() : double[]" num="119" count="4" type="method"/>
            <line num="120" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="128" count="4" type="method"/>
            <line num="129" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwapProductDescriptor.java" name="InterestRateSwapProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="61" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="27" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateSwapProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwapProductDescriptor(InterestRateProductDescriptor,InterestRateProductDescriptor)" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : InterestRateProductDescriptor" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : InterestRateProductDescriptor" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwaptionProductDescriptor.java" name="InterestRateSwaptionProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="74" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="33" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateSwaptionProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwaptionProductDescriptor(InterestRateSwapProductDescriptor,LocalDate,double)" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingSwap() : InterestRateSwapProductDescriptor" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExcerciseDate() : LocalDate" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikeRate() : double" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/MertonModelDescriptor.java" name="MertonModelDescriptor.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="108" coveredmethods="9" methods="11" elements="30" classes="1" ncloc="58" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="MertonModelDescriptor">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="30" statements="19" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double,Double,Double,Double)" num="28" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="62" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="69" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="76" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="83" count="2" type="method"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : Double" num="90" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : Double" num="97" count="2" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : Double" num="104" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/ScheduleDescriptor.java" name="ScheduleDescriptor.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="13" loc="224" coveredmethods="5" methods="13" elements="41" classes="4" ncloc="107" statements="28" conditionals="0" coveredstatements="8"/>
            <class name="ScheduleDescriptor">
               <metrics coveredelements="7" coveredconditionals="0" complexity="7" coveredmethods="3" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ScheduleDescriptor.InternalScheduleDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ScheduleDescriptor.ScheduleDescriptorFromPeriods">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ScheduleDescriptor.ScheduleDescriptorFromGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(List&lt;Period&gt;,DayCountConvention)" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(Schedule)" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="66" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,AbstractBusinessdayCalendar,int,int)" num="88" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="102" count="6" type="method"/>
            <line num="103" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="111" count="4" type="method"/>
            <line num="113" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleDescriptorFromPeriods(List&lt;Period&gt;,DayCountConvention)" num="156" count="2" type="method"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="163" count="10" type="method"/>
            <line num="165" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleDescriptorFromGenerator(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="198" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/SingleAssetDigitalOptionProductDescriptor.java" name="SingleAssetDigitalOptionProductDescriptor.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="51" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="32" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="SingleAssetDigitalOptionProductDescriptor">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetDigitalOptionProductDescriptor(String,LocalDate,double)" num="22" count="2" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : LocalDate" num="39" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="43" count="5" type="method"/>
            <line num="44" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNameOfUnderlying() : String" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/SingleAssetEuropeanOptionProductDescriptor.java" name="SingleAssetEuropeanOptionProductDescriptor.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="64" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="32" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="SingleAssetEuropeanOptionProductDescriptor">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetEuropeanOptionProductDescriptor(String,LocalDate,double)" num="27" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingName() : String" num="47" count="8" type="method"/>
            <line num="48" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : LocalDate" num="54" count="10" type="method"/>
            <line num="55" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : Double" num="61" count="10" type="method"/>
            <line num="62" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/modelling/descriptor/VarianceGammaModelDescriptor.java" name="VarianceGammaModelDescriptor.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="10" loc="106" coveredmethods="8" methods="10" elements="27" classes="1" ncloc="53" statements="17" conditionals="0" coveredstatements="15"/>
            <class name="VarianceGammaModelDescriptor">
               <metrics coveredelements="23" coveredconditionals="0" complexity="10" coveredmethods="8" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,double,double,double)" num="34" count="133" type="method"/>
            <line num="37" count="133" type="stmt"/>
            <line num="38" count="133" type="stmt"/>
            <line num="39" count="133" type="stmt"/>
            <line num="40" count="133" type="stmt"/>
            <line num="41" count="133" type="stmt"/>
            <line num="42" count="133" type="stmt"/>
            <line num="43" count="133" type="stmt"/>
            <line num="44" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="60" count="133" type="method"/>
            <line num="61" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="67" count="263" type="method"/>
            <line num="68" count="263" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="74" count="262" type="method"/>
            <line num="75" count="263" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="81" count="263" type="method"/>
            <line num="82" count="263" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="88" count="132" type="method"/>
            <line num="89" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="95" count="133" type="method"/>
            <line num="96" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="102" count="133" type="method"/>
            <line num="103" count="133" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation">
         <metrics coveredelements="106" complexity="137" loc="1284" methods="93" classes="6" statements="229" coveredconditionals="5" coveredmethods="36" elements="402" ncloc="715" files="6" conditionals="80" coveredstatements="65"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/AssetModelMonteCarloSimulationModel.java" name="AssetModelMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="90" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetModelMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloAssetModel.java" name="MonteCarloAssetModel.java">
            <metrics coveredelements="55" coveredconditionals="3" complexity="26" loc="209" coveredmethods="18" methods="21" elements="67" classes="1" ncloc="123" statements="40" conditionals="6" coveredstatements="34"/>
            <class name="MonteCarloAssetModel">
               <metrics coveredelements="55" coveredconditionals="3" complexity="26" coveredmethods="18" methods="21" elements="67" statements="40" conditionals="6" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(MonteCarloProcess)" num="41" count="725" type="method"/>
            <line num="42" count="725" type="stmt"/>
            <line num="44" count="725" type="stmt"/>
            <line num="45" count="725" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(ProcessModel,IndependentIncrements)" num="54" count="7" type="method"/>
            <line num="55" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(ProcessModel,MonteCarloProcess)" num="65" count="69" type="method"/>
            <line num="69" count="69" type="stmt"/>
            <line num="71" count="69" type="stmt"/>
            <line num="72" count="69" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="75" count="7515" type="method"/>
            <line num="77" count="7515" type="stmt"/>
            <line num="78" count="7515" type="stmt"/>
            <line falsecount="7515" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="7515" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="85" count="8729" type="method"/>
            <line num="87" count="8729" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="90" count="1204" type="method"/>
            <line num="92" count="1204" type="stmt"/>
            <line num="95" count="1204" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="98" count="8153" type="method"/>
            <line num="102" count="8153" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="105" count="6534" type="method"/>
            <line num="107" count="6534" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloAssetModel" num="115" count="672" type="method"/>
            <line num="117" count="672" type="stmt"/>
            <line num="119" count="672" type="stmt"/>
            <line num="120" count="672" type="stmt"/>
            <line num="121" count="672" type="stmt"/>
            <line num="122" count="672" type="stmt"/>
            <line num="123" count="672" type="stmt"/>
            <line falsecount="0" truecount="672" num="123" type="cond"/>
            <line num="124" count="672" type="stmt"/>
            <line num="126" count="672" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="672" type="stmt"/>
            <line falsecount="672" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="672" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="152" count="1000001" type="method"/>
            <line num="154" count="1000001" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="162" count="10" type="method"/>
            <line num="164" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="167" count="1411" type="method"/>
            <line num="169" count="1411" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="172" count="14065" type="method"/>
            <line num="174" count="14065" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="177" count="1136" type="method"/>
            <line num="179" count="1136" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="182" count="6534" type="method"/>
            <line num="184" count="6534" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : ProcessModel" num="192" count="816039" type="method"/>
            <line num="193" count="816039" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="201" count="4" type="method"/>
            <line num="202" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="205" count="4" type="method"/>
            <line num="207" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModel.java" name="MonteCarloBlackScholesModel.java">
            <metrics coveredelements="11" coveredconditionals="1" complexity="12" loc="165" coveredmethods="4" methods="7" elements="41" classes="1" ncloc="74" statements="24" conditionals="10" coveredstatements="6"/>
            <class name="MonteCarloBlackScholesModel">
               <metrics coveredelements="11" coveredconditionals="1" complexity="12" coveredmethods="4" methods="7" elements="41" statements="24" conditionals="10" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel(double,double,double,BrownianMotion)" num="60" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel(TimeDiscretization,int,double,double,double)" num="77" count="2" type="method"/>
            <line num="83" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="MonteCarloBlackScholesModel(BlackScholesModel,MonteCarloProcess)" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="101" count="13" type="method"/>
            <line num="103" count="13" type="stmt"/>
            <line num="104" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="13" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloBlackScholesModel" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="150" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : BlackScholesModel" num="162" count="815866" type="method"/>
            <line num="163" count="815866" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloMertonModel.java" name="MonteCarloMertonModel.java">
            <metrics coveredelements="22" coveredconditionals="1" complexity="26" loc="237" coveredmethods="7" methods="17" elements="77" classes="1" ncloc="133" statements="42" conditionals="18" coveredstatements="14"/>
            <class name="MonteCarloMertonModel">
               <metrics coveredelements="22" coveredconditionals="1" complexity="26" coveredmethods="7" methods="17" elements="77" statements="42" conditionals="18" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloMertonModel(TimeDiscretization,int,int,double,double,double,double,double,double,RandomVariableFactory)" num="70" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMertonModel(TimeDiscretization,int,int,double,double,double,double,double,double)" num="112" count="3" type="method"/>
            <line num="123" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="143" count="50" type="method"/>
            <line num="145" count="50" type="stmt"/>
            <line num="146" count="50" type="stmt"/>
            <line falsecount="50" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="153" count="50" type="method"/>
            <line num="155" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="165" count="90" type="method"/>
            <line num="167" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="170" count="80" type="method"/>
            <line num="172" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="183" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="223" count="130" type="method"/>
            <line num="225" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="233" count="80" type="method"/>
            <line num="235" count="80" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloMultiAssetBlackScholesModel.java" name="MonteCarloMultiAssetBlackScholesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="50" loc="430" coveredmethods="0" methods="32" elements="157" classes="1" ncloc="267" statements="93" conditionals="32" coveredstatements="0"/>
            <class name="MonteCarloMultiAssetBlackScholesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="50" coveredmethods="0" methods="32" elements="157" statements="93" conditionals="32" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(RandomVariableFactory,BrownianMotion,double[],double,double[][])" num="78" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(BrownianMotion,double[],double,double[],double[][])" num="128" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getFactorLoadingsFromVolatilityAnCorrelation(double[],double[][]) : double[][]" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(TimeDiscretization,int,double[],double,double[],double[][])" num="159" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(TimeDiscretization,int,int,double[],double,double[],double[][])" num="188" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="244" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadings() : double[][]" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatilities() : double[]" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCorrelations() : double[][]" num="327" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloMultiAssetBlackScholesModel" num="362" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="426" count="0" type="method"/>
            <line num="428" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloVarianceGammaModel.java" name="MonteCarloVarianceGammaModel.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="23" loc="153" coveredmethods="7" methods="16" elements="60" classes="1" ncloc="103" statements="30" conditionals="14" coveredstatements="11"/>
            <class name="MonteCarloVarianceGammaModel">
               <metrics coveredelements="18" coveredconditionals="0" complexity="23" coveredmethods="7" methods="16" elements="60" statements="30" conditionals="14" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloVarianceGammaModel(TimeDiscretization,int,int,double,double,double,double,double)" num="42" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
            <line num="53" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="69" count="37" type="method"/>
            <line num="71" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="74" count="37" type="method"/>
            <line num="76" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="86" count="64" type="method"/>
            <line num="88" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="91" count="54" type="method"/>
            <line num="93" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="101" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="139" count="91" type="method"/>
            <line num="141" count="91" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="149" count="54" type="method"/>
            <line num="151" count="54" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatilities">
         <metrics coveredelements="409" complexity="246" loc="2398" methods="132" classes="16" statements="581" coveredconditionals="66" coveredmethods="67" elements="891" ncloc="1280" files="13" conditionals="178" coveredstatements="276"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/AbstractVolatilitySurface.java" name="AbstractVolatilitySurface.java">
            <metrics coveredelements="56" coveredconditionals="13" complexity="24" loc="158" coveredmethods="9" methods="12" elements="72" classes="1" ncloc="101" statements="44" conditionals="16" coveredstatements="34"/>
            <class name="AbstractVolatilitySurface">
               <metrics coveredelements="56" coveredconditionals="13" complexity="24" coveredmethods="9" methods="12" elements="72" statements="44" conditionals="16" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="33" count="3229919" type="method"/>
            <line num="35" count="3229780" type="stmt"/>
            <line num="36" count="3229987" type="stmt"/>
            <line num="37" count="3230124" type="stmt"/>
            <line num="38" count="3230179" type="stmt"/>
            <line num="39" count="3230276" type="stmt"/>
            <line num="40" count="3230350" type="stmt"/>
            <line num="41" count="3230563" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="50" count="6460935" type="method"/>
            <line num="52" count="6461839" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="6456857" type="method"/>
            <line num="57" count="6457246" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="70" count="100988324" type="method"/>
            <line num="72" count="101050815" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="86" count="49812304" type="method"/>
            <line num="88" count="49817762" type="stmt"/>
            <line falsecount="957861" truecount="48869724" num="88" type="cond"/>
            <line num="89" count="48877739" type="stmt"/>
            <line num="92" count="957906" type="stmt"/>
            <line falsecount="957561" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="957661" type="stmt"/>
            <line falsecount="957260" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="957360" type="stmt"/>
            <line num="100" count="957399" type="stmt"/>
            <line num="102" count="956568" type="stmt"/>
            <line num="104" count="957497" type="stmt"/>
            <line num="105" count="957657" type="stmt"/>
            <line falsecount="957262" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="957292" type="stmt"/>
            <line num="114" count="956603" type="stmt"/>
            <line num="116" count="957641" type="stmt"/>
            <line falsecount="638685" truecount="319244" num="116" type="cond"/>
            <line num="117" count="319249" type="stmt"/>
            <line num="119" count="638691" type="stmt"/>
            <line falsecount="638575" truecount="144" num="119" type="cond"/>
            <line num="120" count="144" type="stmt"/>
            <line num="122" count="638616" type="stmt"/>
            <line falsecount="638468" truecount="144" num="122" type="cond"/>
            <line num="123" count="144" type="stmt"/>
            <line num="125" count="638468" type="stmt"/>
            <line falsecount="319272" truecount="319272" num="125" type="cond"/>
            <line num="126" count="319272" type="stmt"/>
            <line num="129" count="319274" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="143" count="432" type="method"/>
            <line num="144" count="432" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="147" count="95078534" type="method"/>
            <line num="148" count="95139391" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="151" count="1916486" type="method"/>
            <line num="152" count="1916715" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="155" count="957674" type="method"/>
            <line num="156" count="957756" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/AbstractVolatilitySurfaceParametric.java" name="AbstractVolatilitySurfaceParametric.java">
            <metrics coveredelements="27" coveredconditionals="5" complexity="10" loc="111" coveredmethods="4" methods="5" elements="37" classes="1" ncloc="60" statements="22" conditionals="10" coveredstatements="18"/>
            <class name="AbstractVolatilitySurfaceParametric">
               <metrics coveredelements="27" coveredconditionals="5" complexity="10" coveredmethods="4" methods="5" elements="37" statements="22" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurfaceParametric(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="42" count="2732" type="method"/>
            <line num="43" count="2732" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurfaceParametric(String,LocalDate)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;) : AbstractVolatilitySurfaceParametric" num="60" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;,ParameterTransformation) : AbstractVolatilitySurfaceParametric" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;,ParameterTransformation,OptimizerFactory) : AbstractVolatilitySurfaceParametric" num="81" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="82" type="cond"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="90" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="91" type="cond"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="92" type="cond"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilities.java" name="CapletVolatilities.java">
            <metrics coveredelements="48" coveredconditionals="13" complexity="24" loc="202" coveredmethods="3" methods="7" elements="88" classes="1" ncloc="125" statements="59" conditionals="22" coveredstatements="32"/>
            <class name="CapletVolatilities">
               <metrics coveredelements="48" coveredconditionals="13" complexity="24" coveredmethods="3" methods="7" elements="88" statements="59" conditionals="22" coveredstatements="32"/>
            </class>
            <line complexity="4" visibility="public" signature="CapletVolatilities(String,LocalDate,ForwardCurve,double[],double[],double[],QuotingConvention,DiscountCurve)" num="59" count="3227832" type="method"/>
            <line num="65" count="3227632" type="stmt"/>
            <line num="67" count="3227905" type="stmt"/>
            <line falsecount="3228028" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="3228159" type="stmt"/>
            <line falsecount="3228828" truecount="3228249" num="71" type="cond"/>
            <line num="72" count="3228385" type="stmt"/>
            <line num="73" count="3228509" type="stmt"/>
            <line num="74" count="3228579" type="stmt"/>
            <line num="75" count="3228636" type="stmt"/>
            <line complexity="1" visibility="private" signature="CapletVolatilities(String,LocalDate)" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="add(double,double,double) : void" num="94" count="3228868" type="method"/>
            <line num="95" count="3228980" type="stmt"/>
            <line num="96" count="3229048" type="stmt"/>
            <line num="97" count="3229141" type="stmt"/>
            <line falsecount="0" truecount="3229233" num="97" type="cond"/>
            <line num="98" count="3229366" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="3228240" type="stmt"/>
            <line num="106" count="3229680" type="stmt"/>
            <line num="107" count="3229489" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,VolatilitySurface.QuotingConvention) : double" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,VolatilitySurface.QuotingConvention) : double" num="116" count="51329760" type="method"/>
            <line num="118" count="51342937" type="stmt"/>
            <line falsecount="48143242" truecount="3227897" num="118" type="cond"/>
            <line num="119" count="3228086" type="stmt"/>
            <line num="122" count="48148867" type="stmt"/>
            <line num="123" count="48155094" type="stmt"/>
            <line falsecount="45162067" truecount="3020964" num="123" type="cond"/>
            <line num="124" count="3021001" type="stmt"/>
            <line num="127" count="45167102" type="stmt"/>
            <line num="128" count="45253260" type="stmt"/>
            <line falsecount="42022543" truecount="3229746" num="128" type="cond"/>
            <line num="129" count="3229742" type="stmt"/>
            <line num="131" count="45250687" type="stmt"/>
            <line num="134" count="45253606" type="stmt"/>
            <line num="135" count="45251221" type="stmt"/>
            <line falsecount="0" truecount="45250352" num="135" type="cond"/>
            <line num="136" count="45249626" type="stmt"/>
            <line num="138" count="45249321" type="stmt"/>
            <line falsecount="3229745" truecount="42021924" num="138" type="cond"/>
            <line num="139" count="42022333" type="stmt"/>
            <line num="142" count="45250085" type="stmt"/>
            <line num="146" count="45252033" type="stmt"/>
            <line num="148" count="45191857" type="stmt"/>
            <line num="151" count="48225446" type="stmt"/>
            <line complexity="8" visibility="public" signature="fromFile(File) : AbstractVolatilitySurface" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametric.java" name="CapletVolatilitiesParametric.java">
            <metrics coveredelements="52" coveredconditionals="4" complexity="11" loc="200" coveredmethods="8" methods="9" elements="54" classes="1" ncloc="92" statements="41" conditionals="4" coveredstatements="40"/>
            <class name="CapletVolatilitiesParametric">
               <metrics coveredelements="52" coveredconditionals="4" complexity="11" coveredmethods="8" methods="9" elements="54" statements="41" conditionals="4" coveredstatements="40"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,ForwardCurve,DiscountCurve,double,double,double,double,double,QuotingConvention)" num="49" count="2644" type="method"/>
            <line num="55" count="2645" type="stmt"/>
            <line num="56" count="2644" type="stmt"/>
            <line num="57" count="2645" type="stmt"/>
            <line num="58" count="2642" type="stmt"/>
            <line num="59" count="2642" type="stmt"/>
            <line num="60" count="2644" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,ForwardCurve,DiscountCurve,double,double,double,double,double)" num="76" count="86" type="method"/>
            <line num="80" count="86" type="stmt"/>
            <line num="81" count="86" type="stmt"/>
            <line num="82" count="86" type="stmt"/>
            <line num="83" count="86" type="stmt"/>
            <line num="84" count="86" type="stmt"/>
            <line num="85" count="86" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,double,double,double,double,double)" num="99" count="6" type="method"/>
            <line num="101" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,double,double,double,double)" num="114" count="6" type="method"/>
            <line num="115" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="121" count="4003" type="method"/>
            <line num="123" count="4003" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="129" count="1089671" type="method"/>
            <line num="131" count="1089694" type="stmt"/>
            <line falsecount="1020745" truecount="68970" num="131" type="cond"/>
            <line num="132" count="68975" type="stmt"/>
            <line num="135" count="1020765" type="stmt"/>
            <line num="141" count="1020788" type="stmt"/>
            <line num="142" count="1020801" type="stmt"/>
            <line falsecount="4294" truecount="1016527" num="142" type="cond"/>
            <line num="143" count="1016533" type="stmt"/>
            <line num="144" count="1016556" type="stmt"/>
            <line num="146" count="1016557" type="stmt"/>
            <line num="147" count="1016558" type="stmt"/>
            <line num="149" count="1016555" type="stmt"/>
            <line num="150" count="1016562" type="stmt"/>
            <line num="151" count="1016561" type="stmt"/>
            <line num="152" count="1016578" type="stmt"/>
            <line num="153" count="1016580" type="stmt"/>
            <line num="159" count="1016586" type="stmt"/>
            <line num="172" count="4294" type="stmt"/>
            <line num="175" count="1020871" type="stmt"/>
            <line num="176" count="1020874" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="179" count="2652" type="method"/>
            <line num="181" count="2648" type="stmt"/>
            <line num="182" count="2649" type="stmt"/>
            <line num="183" count="2649" type="stmt"/>
            <line num="184" count="2648" type="stmt"/>
            <line num="185" count="2649" type="stmt"/>
            <line num="187" count="2649" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="195" count="2646" type="method"/>
            <line num="197" count="2646" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricDisplacedFourParameterAnalytic.java" name="CapletVolatilitiesParametricDisplacedFourParameterAnalytic.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="175" coveredmethods="0" methods="6" elements="72" classes="1" ncloc="105" statements="52" conditionals="14" coveredstatements="0"/>
            <class name="CapletVolatilitiesParametricDisplacedFourParameterAnalytic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="6" elements="72" statements="52" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricDisplacedFourParameterAnalytic(String,LocalDate,ForwardCurve,DiscountCurve,double,boolean,double,double,double,double,double)" num="53" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricFourParameterPicewiseConstant.java" name="CapletVolatilitiesParametricFourParameterPicewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="110" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="55" statements="27" conditionals="6" coveredstatements="0"/>
            <class name="CapletVolatilitiesParametricFourParameterPicewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="39" statements="27" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricFourParameterPicewiseConstant(String,LocalDate,double,double,double,double,TimeDiscretization)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/OptionData.java" name="OptionData.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="8" loc="61" coveredmethods="3" methods="8" elements="22" classes="1" ncloc="43" statements="14" conditionals="0" coveredstatements="9"/>
            <class name="OptionData">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="3" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="OptionData(String,LocalDate,double,double,double,QuotingConvention)" num="22" count="40" type="method"/>
            <line num="23" count="40" type="stmt"/>
            <line num="24" count="40" type="stmt"/>
            <line num="25" count="40" type="stmt"/>
            <line num="26" count="40" type="stmt"/>
            <line num="27" count="40" type="stmt"/>
            <line num="28" count="40" type="stmt"/>
            <line num="29" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlying() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : double" num="48" count="80" type="method"/>
            <line num="49" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : QuotingConvention" num="52" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/OptionSmileData.java" name="OptionSmileData.java">
            <metrics coveredelements="25" coveredconditionals="3" complexity="10" loc="70" coveredmethods="7" methods="8" elements="29" classes="1" ncloc="50" statements="17" conditionals="4" coveredstatements="15"/>
            <class name="OptionSmileData">
               <metrics coveredelements="25" coveredconditionals="3" complexity="10" coveredmethods="7" methods="8" elements="29" statements="17" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="3" visibility="public" signature="OptionSmileData(String,LocalDate,double[],double,double[],QuotingConvention)" num="24" count="4" type="method"/>
            <line num="25" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="4" type="stmt"/>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="30" type="cond"/>
            <line num="31" count="40" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlying() : String" num="40" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="44" count="6" type="method"/>
            <line num="45" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="48" count="512" type="method"/>
            <line num="49" count="512" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="52" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSmile() : HashMap&lt;Double, OptionData&gt;" num="56" count="46" type="method"/>
            <line num="57" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOption(double) : OptionData" num="60" count="40" type="method"/>
            <line num="61" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/OptionSurfaceData.java" name="OptionSurfaceData.java">
            <metrics coveredelements="39" coveredconditionals="5" complexity="26" loc="193" coveredmethods="7" methods="13" elements="98" classes="1" ncloc="121" statements="65" conditionals="20" coveredstatements="27"/>
            <class name="OptionSurfaceData">
               <metrics coveredelements="39" coveredconditionals="5" complexity="26" coveredmethods="7" methods="13" elements="98" statements="65" conditionals="20" coveredstatements="27"/>
            </class>
            <line complexity="5" visibility="public" signature="OptionSurfaceData(String,LocalDate,double[],double[],double[][],QuotingConvention,DiscountCurve,DiscountCurve)" num="45" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="OptionSurfaceData(OptionSmileData[],DiscountCurve,DiscountCurve)" num="83" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="94" type="cond"/>
            <line num="95" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="123" count="5020" type="method"/>
            <line num="124" count="5019" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEquityForwardCurve() : DiscountCurve" num="127" count="5019" type="method"/>
            <line num="128" count="5018" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="140" count="250" type="method"/>
            <line num="141" count="250" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurface() : HashMap&lt;Double, OptionSmileData&gt;" num="144" count="8" type="method"/>
            <line num="145" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : double[]" num="148" count="504" type="method"/>
            <line num="149" count="505" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double) : double" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSmile(double) : OptionSmileData" num="190" count="502" type="method"/>
            <line num="191" count="502" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionATMMarketDataFromArray.java" name="SwaptionATMMarketDataFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="116" coveredmethods="0" methods="9" elements="56" classes="1" ncloc="79" statements="39" conditionals="8" coveredstatements="0"/>
            <class name="SwaptionATMMarketDataFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="9" elements="56" statements="39" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(double[],double[],double,double[][])" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(ForwardCurve,DiscountCurve,double[],double[],double,double[][])" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(ForwardCurve,DiscountCurve,TimeDiscretization,TimeDiscretization,double,double[][])" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptionMaturities() : TimeDiscretization" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenor() : TimeDiscretization" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapPeriodLength() : double" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatility(double,double) : double" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatility(double,double,double,double) : double" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionDataLattice.java" name="SwaptionDataLattice.java">
            <metrics coveredelements="150" coveredconditionals="23" complexity="98" loc="883" coveredmethods="26" methods="49" elements="324" classes="3" ncloc="425" statements="201" conditionals="74" coveredstatements="101"/>
            <class name="SwaptionDataLattice">
               <metrics coveredelements="135" coveredconditionals="20" complexity="84" coveredmethods="23" methods="44" elements="284" statements="180" conditionals="60" coveredstatements="92"/>
            </class>
            <class name="SwaptionDataLattice.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SwaptionDataLattice.DataKey">
               <metrics coveredelements="15" coveredconditionals="3" complexity="14" coveredmethods="3" methods="5" elements="40" statements="21" conditionals="14" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,double[],double[],double[],double[])" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,int[],int[],int[],double[])" num="113" count="12" type="method"/>
            <line num="116" count="12" type="stmt"/>
            <line num="118" count="12" type="stmt"/>
            <line falsecount="12" truecount="1344" num="118" type="cond"/>
            <line num="119" count="1344" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,String[],int[],double[])" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,int[],int[],int[],double[])" num="161" count="14" type="method"/>
            <line num="163" count="14" type="stmt"/>
            <line num="165" count="14" type="stmt"/>
            <line falsecount="14" truecount="350" num="165" type="cond"/>
            <line num="166" count="350" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,double[],double[],double[],double[])" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,String[],int[],double[])" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype)" num="228" count="32" type="method"/>
            <line num="230" count="32" type="stmt"/>
            <line num="231" count="32" type="stmt"/>
            <line num="232" count="32" type="stmt"/>
            <line num="233" count="32" type="stmt"/>
            <line num="234" count="32" type="stmt"/>
            <line num="235" count="32" type="stmt"/>
            <line num="236" count="32" type="stmt"/>
            <line num="237" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertLattice(QuotingConvention,AnalyticModel) : SwaptionDataLattice" num="249" count="14" type="method"/>
            <line num="250" count="14" type="stmt"/>
            <line complexity="4" visibility="public" signature="convertLattice(QuotingConvention,double,AnalyticModel) : SwaptionDataLattice" num="263" count="14" type="method"/>
            <line num="265" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="270" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="270" type="cond"/>
            <line num="272" count="14" type="stmt"/>
            <line num="273" count="14" type="stmt"/>
            <line num="274" count="14" type="stmt"/>
            <line num="275" count="14" type="stmt"/>
            <line num="277" count="14" type="stmt"/>
            <line num="278" count="350" type="stmt"/>
            <line num="279" count="350" type="stmt"/>
            <line num="280" count="350" type="stmt"/>
            <line num="281" count="350" type="stmt"/>
            <line num="284" count="14" type="stmt"/>
            <line complexity="3" visibility="public" signature="append(SwaptionDataLattice,AnalyticModel) : SwaptionDataLattice" num="302" count="6" type="method"/>
            <line num="304" count="6" type="stmt"/>
            <line num="306" count="6" type="stmt"/>
            <line num="308" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="308" type="cond"/>
            <line num="309" count="6" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="315" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getGridNodesPerMoneyness() : Map&lt;Integer, int[][]&gt;" num="327" count="1209" type="method"/>
            <line num="330" count="1209" type="stmt"/>
            <line falsecount="43" truecount="1166" num="330" type="cond"/>
            <line num="331" count="1166" type="stmt"/>
            <line num="335" count="43" type="stmt"/>
            <line num="337" count="43" type="stmt"/>
            <line num="338" count="4060" type="stmt"/>
            <line falsecount="3897" truecount="163" num="338" type="cond"/>
            <line num="339" count="163" type="stmt"/>
            <line num="340" count="163" type="stmt"/>
            <line num="341" count="163" type="stmt"/>
            <line num="343" count="4060" type="stmt"/>
            <line num="344" count="4060" type="stmt"/>
            <line num="347" count="43" type="stmt"/>
            <line num="348" count="43" type="stmt"/>
            <line num="349" count="163" type="stmt"/>
            <line num="351" count="163" type="stmt"/>
            <line num="352" count="163" type="stmt"/>
            <line num="354" count="163" type="stmt"/>
            <line num="356" count="43" type="stmt"/>
            <line num="357" count="43" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMoneynessPerGridNode() : Map&lt;Pair&lt;Integer, Integer&gt;, int[]&gt;" num="367" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMoneyness() : int[]" num="400" count="32" type="method"/>
            <line num="401" count="32" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMoneynessAsOffsets() : double[]" num="410" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : int[]" num="442" count="16" type="method"/>
            <line num="443" count="16" type="stmt"/>
            <line num="445" count="16" type="stmt"/>
            <line num="446" count="52" type="stmt"/>
            <line num="448" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMaturities(int) : int[]" num="457" count="165" type="method"/>
            <line num="458" count="165" type="stmt"/>
            <line num="459" count="165" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMaturities(double) : double[]" num="472" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenors() : int[]" num="487" count="10" type="method"/>
            <line num="488" count="10" type="stmt"/>
            <line num="490" count="10" type="stmt"/>
            <line num="491" count="62" type="stmt"/>
            <line num="493" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTenors(int,int) : int[]" num="503" count="930" type="method"/>
            <line num="505" count="930" type="stmt"/>
            <line num="506" count="930" type="stmt"/>
            <line num="507" count="930" type="stmt"/>
            <line num="508" count="4650" type="stmt"/>
            <line falsecount="15" truecount="4634" num="508" type="cond"/>
            <line num="509" count="4634" type="stmt"/>
            <line num="512" count="930" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTenors(double,double) : double[]" num="526" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="531" type="cond"/>
            <line num="532" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="convertMoneyness(double) : int" num="544" count="0" type="method"/>
            <line num="545" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="545" type="cond"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="547" type="cond"/>
            <line num="548" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertMaturity(int) : double" num="560" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertTenor(int,int) : double" num="572" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int,int) : boolean" num="585" count="11012" type="method"/>
            <line num="586" count="11012" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double) : double" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int,int) : double" num="611" count="8186" type="method"/>
            <line num="612" count="8186" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String,int) : double" num="623" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValue(DataKey) : double" num="633" count="8536" type="method"/>
            <line num="634" count="8536" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention,double,AnalyticModel) : double" num="650" count="0" type="method"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int,int,QuotingConvention,double,AnalyticModel) : double" num="668" count="350" type="method"/>
            <line num="669" count="350" type="stmt"/>
            <line num="670" count="350" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String,int,QuotingConvention,double,AnalyticModel) : double" num="685" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="17" visibility="private" signature="convertToConvention(double,DataKey,QuotingConvention,double,QuotingConvention,double,AnalyticModel) : double" num="704" count="350" type="method"/>
            <line num="707" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="707" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="708" type="cond"/>
            <line num="709" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="711" type="cond"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="720" count="350" type="stmt"/>
            <line num="721" count="350" type="stmt"/>
            <line num="723" count="350" type="stmt"/>
            <line num="724" count="350" type="stmt"/>
            <line num="725" count="350" type="stmt"/>
            <line num="726" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="726" type="cond"/>
            <line num="727" count="350" type="stmt"/>
            <line num="729" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="729" type="cond"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="735" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="735" type="cond"/>
            <line num="736" count="0" type="stmt"/>
            <line num="738" count="350" type="stmt"/>
            <line falsecount="350" truecount="0" num="738" type="cond"/>
            <line num="739" count="0" type="stmt"/>
            <line num="741" count="350" type="stmt"/>
            <line falsecount="0" truecount="350" num="741" type="cond"/>
            <line num="742" count="350" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="744" type="cond"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="756" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="763" count="712" type="method"/>
            <line num="764" count="712" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="770" count="15" type="method"/>
            <line num="771" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : double" num="777" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="784" count="773" type="method"/>
            <line num="785" count="773" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="791" count="26" type="method"/>
            <line num="792" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatMetaSchedule() : SchedulePrototype" num="798" count="667" type="method"/>
            <line num="799" count="667" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixMetaSchedule() : SchedulePrototype" num="805" count="666" type="method"/>
            <line num="806" count="666" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="809" count="0" type="method"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(int,int,int)" num="840" count="21242" type="method"/>
            <line num="841" count="21242" type="stmt"/>
            <line num="842" count="21242" type="stmt"/>
            <line num="843" count="21242" type="stmt"/>
            <line num="844" count="21242" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(double,double,double)" num="847" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="5" visibility="package" signature="DataKey(String,int)" num="854" count="0" type="method"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="equals(Object) : boolean" num="862" count="19509" type="method"/>
            <line num="864" count="19509" type="stmt"/>
            <line falsecount="19509" truecount="0" num="864" type="cond"/>
            <line num="865" count="0" type="stmt"/>
            <line num="868" count="19509" type="stmt"/>
            <line falsecount="19509" truecount="0" num="868" type="cond"/>
            <line num="869" count="0" type="stmt"/>
            <line num="872" count="19509" type="stmt"/>
            <line falsecount="19509" truecount="0" num="872" type="cond"/>
            <line num="873" count="0" type="stmt"/>
            <line num="875" count="19509" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="878" count="24755" type="method"/>
            <line num="880" count="24755" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionMarketData.java" name="SwaptionMarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SwaptionMarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatilities/VolatilitySurface.java" name="VolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatilitySurface.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.products">
         <metrics coveredelements="445" complexity="196" loc="3642" methods="110" classes="34" statements="927" coveredconditionals="38" coveredmethods="45" elements="1167" ncloc="1790" files="28" conditionals="130" coveredstatements="362"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AbstractAssetMonteCarloProduct.java" name="AbstractAssetMonteCarloProduct.java">
            <metrics coveredelements="6" coveredconditionals="1" complexity="3" loc="44" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="24" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="AbstractAssetMonteCarloProduct">
               <metrics coveredelements="6" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractAssetMonteCarloProduct()" num="25" count="1651" type="method"/>
            <line num="26" count="1651" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="32" count="2905" type="method"/>
            <line num="35" count="2905" type="stmt"/>
            <line falsecount="0" truecount="2905" num="35" type="cond"/>
            <line num="36" count="2905" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AsianOption.java" name="AsianOption.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="7" loc="136" coveredmethods="3" methods="7" elements="30" classes="1" ncloc="50" statements="23" conditionals="0" coveredstatements="19"/>
            <class name="AsianOption">
               <metrics coveredelements="22" coveredconditionals="0" complexity="7" coveredmethods="3" methods="7" elements="30" statements="23" conditionals="0" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="AsianOption(double,double,TimeDiscretization,Integer)" num="45" count="15" type="method"/>
            <line num="46" count="15" type="stmt"/>
            <line num="47" count="15" type="stmt"/>
            <line num="48" count="15" type="stmt"/>
            <line num="49" count="15" type="stmt"/>
            <line num="50" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsianOption(double,double,TimeDiscretization)" num="61" count="15" type="method"/>
            <line num="62" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="75" count="21" type="method"/>
            <line num="78" count="21" type="stmt"/>
            <line num="79" count="21" type="stmt"/>
            <line num="80" count="1669" type="stmt"/>
            <line num="81" count="1669" type="stmt"/>
            <line num="83" count="21" type="stmt"/>
            <line num="86" count="21" type="stmt"/>
            <line num="89" count="21" type="stmt"/>
            <line num="90" count="21" type="stmt"/>
            <line num="91" count="21" type="stmt"/>
            <line num="94" count="21" type="stmt"/>
            <line num="95" count="21" type="stmt"/>
            <line num="96" count="21" type="stmt"/>
            <line num="98" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimesForAveraging() : TimeDiscretization" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingIndex() : Integer" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AssetMonteCarloProduct.java" name="AssetMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BasketOption.java" name="BasketOption.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="86" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="33" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="BasketOption">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="21" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BasketOption(double,double,double[])" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BermudanDigitalOption.java" name="BermudanDigitalOption.java">
            <metrics coveredelements="48" coveredconditionals="4" complexity="10" loc="211" coveredmethods="4" methods="4" elements="63" classes="2" ncloc="95" statements="51" conditionals="8" coveredstatements="40"/>
            <class name="BermudanDigitalOption">
               <metrics coveredelements="48" coveredconditionals="4" complexity="10" coveredmethods="4" methods="4" elements="63" statements="51" conditionals="8" coveredstatements="40"/>
            </class>
            <class name="BermudanDigitalOption.ExerciseMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanDigitalOption(double[],double[],double[],ExerciseMethod,Map&lt;String, Object&gt;)" num="71" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="96" count="5" type="method"/>
            <line num="98" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line complexity="4" visibility="private" signature="getValues(double,AssetModelMonteCarloSimulationModel,double) : RandomVariable" num="113" count="5" type="method"/>
            <line num="121" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line num="125" count="5" type="stmt"/>
            <line num="127" count="5" type="stmt"/>
            <line falsecount="5" truecount="20" num="127" type="cond"/>
            <line num="129" count="20" type="stmt"/>
            <line num="130" count="20" type="stmt"/>
            <line num="131" count="20" type="stmt"/>
            <line num="134" count="20" type="stmt"/>
            <line num="135" count="20" type="stmt"/>
            <line num="136" count="20" type="stmt"/>
            <line num="139" count="20" type="stmt"/>
            <line num="142" count="20" type="stmt"/>
            <line num="144" count="20" type="stmt"/>
            <line num="145" count="20" type="stmt"/>
            <line num="148" count="20" type="stmt"/>
            <line num="149" count="20" type="stmt"/>
            <line num="151" count="20" type="stmt"/>
            <line num="153" count="20" type="stmt"/>
            <line num="154" count="20" type="stmt"/>
            <line num="155" count="20" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="20" type="stmt"/>
            <line num="176" count="20" type="stmt"/>
            <line num="190" count="5" type="stmt"/>
            <line num="191" count="5" type="stmt"/>
            <line num="192" count="5" type="stmt"/>
            <line num="194" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable) : RandomVariable[]" num="198" count="20" type="method"/>
            <line num="199" count="20" type="stmt"/>
            <line num="202" count="20" type="stmt"/>
            <line num="203" count="20" type="stmt"/>
            <line num="204" count="20" type="stmt"/>
            <line num="205" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BermudanOption.java" name="BermudanOption.java">
            <metrics coveredelements="76" coveredconditionals="11" complexity="19" loc="252" coveredmethods="7" methods="10" elements="97" classes="2" ncloc="137" statements="73" conditionals="14" coveredstatements="58"/>
            <class name="BermudanOption">
               <metrics coveredelements="76" coveredconditionals="11" complexity="19" coveredmethods="7" methods="10" elements="97" statements="73" conditionals="14" coveredstatements="58"/>
            </class>
            <class name="BermudanOption.ExerciseMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanOption(double[],double[],double[],ExerciseMethod)" num="71" count="19" type="method"/>
            <line num="76" count="19" type="stmt"/>
            <line num="77" count="19" type="stmt"/>
            <line num="78" count="19" type="stmt"/>
            <line num="79" count="19" type="stmt"/>
            <line num="80" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanOption(double[],double[],double[])" num="95" count="11" type="method"/>
            <line num="99" count="11" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="113" count="22" type="method"/>
            <line num="115" count="22" type="stmt"/>
            <line falsecount="18" truecount="4" num="115" type="cond"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line falsecount="4" truecount="526" num="118" type="cond"/>
            <line num="119" count="526" type="stmt"/>
            <line num="120" count="526" type="stmt"/>
            <line num="121" count="526" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="126" count="18" type="stmt"/>
            <line complexity="6" visibility="private" signature="getValues(double,AssetModelMonteCarloSimulationModel,double) : RandomVariable" num="130" count="548" type="method"/>
            <line num="138" count="548" type="stmt"/>
            <line num="140" count="548" type="stmt"/>
            <line num="142" count="548" type="stmt"/>
            <line falsecount="548" truecount="2026" num="142" type="cond"/>
            <line num="144" count="2026" type="stmt"/>
            <line num="145" count="2026" type="stmt"/>
            <line num="146" count="2026" type="stmt"/>
            <line num="149" count="2026" type="stmt"/>
            <line num="150" count="2026" type="stmt"/>
            <line num="151" count="2026" type="stmt"/>
            <line num="154" count="2026" type="stmt"/>
            <line num="159" count="2026" type="stmt"/>
            <line num="160" count="2026" type="stmt"/>
            <line num="161" count="2026" type="stmt"/>
            <line num="162" count="436" type="stmt"/>
            <line num="164" count="436" type="stmt"/>
            <line num="165" count="436" type="stmt"/>
            <line falsecount="436" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="436" type="stmt"/>
            <line num="170" count="436" type="stmt"/>
            <line num="173" count="436" type="stmt"/>
            <line num="175" count="436" type="stmt"/>
            <line num="176" count="436" type="stmt"/>
            <line num="177" count="436" type="stmt"/>
            <line num="178" count="1590" type="stmt"/>
            <line num="179" count="1590" type="stmt"/>
            <line num="181" count="1590" type="stmt"/>
            <line num="184" count="1590" type="stmt"/>
            <line falsecount="1060" truecount="530" num="184" type="cond"/>
            <line num="185" count="530" type="stmt"/>
            <line num="188" count="1590" type="stmt"/>
            <line num="189" count="1590" type="stmt"/>
            <line num="190" count="1590" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="2026" type="stmt"/>
            <line num="197" count="2026" type="stmt"/>
            <line num="199" count="548" type="stmt"/>
            <line num="202" count="548" type="stmt"/>
            <line num="203" count="548" type="stmt"/>
            <line num="204" count="548" type="stmt"/>
            <line num="206" count="548" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastValuationExerciseTime() : RandomVariable" num="209" count="2" type="method"/>
            <line num="210" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDates() : double[]" num="213" count="1" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionals() : double[]" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="225" count="436" type="method"/>
            <line num="226" count="436" type="stmt"/>
            <line num="227" count="436" type="stmt"/>
            <line num="230" count="436" type="stmt"/>
            <line falsecount="436" truecount="2180" num="230" type="cond"/>
            <line num="231" count="2180" type="stmt"/>
            <line num="234" count="436" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctionsBinning(RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesDeltaHedgedPortfolio.java" name="BlackScholesDeltaHedgedPortfolio.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="3" loc="117" coveredmethods="2" methods="2" elements="29" classes="1" ncloc="54" statements="25" conditionals="2" coveredstatements="25"/>
            <class name="BlackScholesDeltaHedgedPortfolio">
               <metrics coveredelements="29" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="29" statements="25" conditionals="2" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesDeltaHedgedPortfolio(double,double,double,double)" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="50" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="74" type="cond"/>
            <line num="76" count="100" type="stmt"/>
            <line num="77" count="100" type="stmt"/>
            <line num="80" count="100" type="stmt"/>
            <line num="92" count="100" type="stmt"/>
            <line num="93" count="100" type="stmt"/>
            <line num="96" count="100" type="stmt"/>
            <line num="97" count="100" type="stmt"/>
            <line num="100" count="100" type="stmt"/>
            <line num="101" count="100" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesHedgedPortfolio.java" name="BlackScholesHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="254" coveredmethods="0" methods="3" elements="70" classes="2" ncloc="141" statements="59" conditionals="8" coveredstatements="0"/>
            <class name="BlackScholesHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="70" statements="59" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="BlackScholesHedgedPortfolio.HedgeStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesHedgedPortfolio(double,double,double,double,double,double,HedgeStrategy)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesHedgedPortfolio(double,double,double,double)" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="92" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DeltaHedgedPortfolioWithAAD.java" name="DeltaHedgedPortfolioWithAAD.java">
            <metrics coveredelements="71" coveredconditionals="12" complexity="15" loc="207" coveredmethods="5" methods="7" elements="86" classes="1" ncloc="106" statements="63" conditionals="16" coveredstatements="54"/>
            <class name="DeltaHedgedPortfolioWithAAD">
               <metrics coveredelements="71" coveredconditionals="12" complexity="15" coveredmethods="5" methods="7" elements="86" statements="63" conditionals="16" coveredstatements="54"/>
            </class>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAAD(AssetMonteCarloProduct,int)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAAD(AssetMonteCarloProduct)" num="66" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="71" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="89" type="cond"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="113" type="cond"/>
            <line num="115" count="200" type="stmt"/>
            <line num="116" count="200" type="stmt"/>
            <line num="119" count="200" type="stmt"/>
            <line num="120" count="200" type="stmt"/>
            <line falsecount="200" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="200" type="stmt"/>
            <line num="126" count="200" type="stmt"/>
            <line num="127" count="200" type="stmt"/>
            <line falsecount="100" truecount="100" num="127" type="cond"/>
            <line num="128" count="100" type="stmt"/>
            <line num="132" count="200" type="stmt"/>
            <line num="135" count="200" type="stmt"/>
            <line num="137" count="200" type="stmt"/>
            <line num="144" count="200" type="stmt"/>
            <line num="145" count="200" type="stmt"/>
            <line num="148" count="200" type="stmt"/>
            <line num="149" count="200" type="stmt"/>
            <line num="152" count="200" type="stmt"/>
            <line num="153" count="200" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastOperationTimingValuation() : double" num="170" count="2" type="method"/>
            <line num="171" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastOperationTimingDerivative() : double" num="174" count="2" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable,RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctionsBinning(RandomVariable,RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="189" count="200" type="method"/>
            <line num="190" count="200" type="stmt"/>
            <line num="192" count="200" type="stmt"/>
            <line falsecount="198" truecount="2" num="192" type="cond"/>
            <line num="193" count="2" type="stmt"/>
            <line num="196" count="198" type="stmt"/>
            <line num="197" count="198" type="stmt"/>
            <line num="198" count="198" type="stmt"/>
            <line falsecount="198" truecount="3960" num="198" type="cond"/>
            <line num="199" count="3960" type="stmt"/>
            <line num="200" count="3960" type="stmt"/>
            <line num="201" count="3960" type="stmt"/>
            <line num="205" count="200" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DigitalOption.java" name="DigitalOption.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="9" loc="143" coveredmethods="4" methods="9" elements="34" classes="1" ncloc="57" statements="25" conditionals="0" coveredstatements="20"/>
            <class name="DigitalOption">
               <metrics coveredelements="24" coveredconditionals="0" complexity="9" coveredmethods="4" methods="9" elements="34" statements="25" conditionals="0" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double,int)" num="44" count="4" type="method"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double)" num="57" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOption(String,double,double)" num="61" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="79" count="15" type="method"/>
            <line num="84" count="15" type="stmt"/>
            <line num="87" count="15" type="stmt"/>
            <line num="90" count="15" type="stmt"/>
            <line num="91" count="15" type="stmt"/>
            <line num="92" count="15" type="stmt"/>
            <line num="95" count="15" type="stmt"/>
            <line num="96" count="15" type="stmt"/>
            <line num="97" count="15" type="stmt"/>
            <line num="99" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingIndex() : Integer" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNameOfUnderlying() : String" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DigitalOptionDeltaLikelihood.java" name="DigitalOptionDeltaLikelihood.java">
            <metrics coveredelements="25" coveredconditionals="2" complexity="6" loc="93" coveredmethods="2" methods="2" elements="32" classes="1" ncloc="46" statements="24" conditionals="6" coveredstatements="21"/>
            <class name="DigitalOptionDeltaLikelihood">
               <metrics coveredelements="25" coveredconditionals="2" complexity="6" coveredmethods="2" methods="2" elements="32" statements="24" conditionals="6" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOptionDeltaLikelihood(double,double)" num="35" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="51" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="58" type="cond"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOption.java" name="EuropeanOption.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="11" loc="145" coveredmethods="6" methods="10" elements="41" classes="1" ncloc="70" statements="31" conditionals="0" coveredstatements="26"/>
            <class name="EuropeanOption">
               <metrics coveredelements="32" coveredconditionals="0" complexity="11" coveredmethods="6" methods="10" elements="41" statements="31" conditionals="0" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOption(String,double,double)" num="46" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double,int)" num="60" count="1453" type="method"/>
            <line num="61" count="1453" type="stmt"/>
            <line num="62" count="1453" type="stmt"/>
            <line num="63" count="1453" type="stmt"/>
            <line num="64" count="1453" type="stmt"/>
            <line num="65" count="1453" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double)" num="73" count="1451" type="method"/>
            <line num="74" count="1451" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="87" count="2751" type="method"/>
            <line num="92" count="2751" type="stmt"/>
            <line num="95" count="2751" type="stmt"/>
            <line num="98" count="2751" type="stmt"/>
            <line num="99" count="2751" type="stmt"/>
            <line num="100" count="2751" type="stmt"/>
            <line num="103" count="2751" type="stmt"/>
            <line num="104" count="2751" type="stmt"/>
            <line num="105" count="2751" type="stmt"/>
            <line num="107" count="2751" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="110" count="4" type="method"/>
            <line num="112" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="124" count="2" type="method"/>
            <line num="126" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingIndex() : Integer" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNameOfUnderliyng() : String" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaLikelihood.java" name="EuropeanOptionDeltaLikelihood.java">
            <metrics coveredelements="30" coveredconditionals="1" complexity="4" loc="110" coveredmethods="2" methods="2" elements="34" classes="1" ncloc="52" statements="30" conditionals="2" coveredstatements="27"/>
            <class name="EuropeanOptionDeltaLikelihood">
               <metrics coveredelements="30" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="34" statements="30" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaLikelihood(double,double)" num="35" count="72" type="method"/>
            <line num="36" count="72" type="stmt"/>
            <line num="37" count="72" type="stmt"/>
            <line num="38" count="72" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="51" count="72" type="method"/>
            <line num="54" count="72" type="stmt"/>
            <line num="55" count="72" type="stmt"/>
            <line num="56" count="72" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="72" type="stmt"/>
            <line num="64" count="72" type="stmt"/>
            <line num="66" count="72" type="stmt"/>
            <line num="67" count="72" type="stmt"/>
            <line num="68" count="72" type="stmt"/>
            <line num="73" count="72" type="stmt"/>
            <line num="74" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="74" type="cond"/>
            <line num="78" count="72" type="stmt"/>
            <line num="80" count="72" type="stmt"/>
            <line num="81" count="72" type="stmt"/>
            <line num="83" count="72" type="stmt"/>
            <line num="84" count="72" type="stmt"/>
            <line num="86" count="72" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="72" type="stmt"/>
            <line num="99" count="72" type="stmt"/>
            <line num="100" count="72" type="stmt"/>
            <line num="101" count="72" type="stmt"/>
            <line num="104" count="72" type="stmt"/>
            <line num="105" count="72" type="stmt"/>
            <line num="106" count="72" type="stmt"/>
            <line num="108" count="72" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaPathwise.java" name="EuropeanOptionDeltaPathwise.java">
            <metrics coveredelements="18" coveredconditionals="1" complexity="5" loc="82" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="36" statements="16" conditionals="2" coveredstatements="15"/>
            <class name="EuropeanOptionDeltaPathwise">
               <metrics coveredelements="18" coveredconditionals="1" complexity="5" coveredmethods="2" methods="2" elements="20" statements="16" conditionals="2" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaPathwise(double,double)" num="39" count="72" type="method"/>
            <line num="40" count="72" type="stmt"/>
            <line num="41" count="72" type="stmt"/>
            <line num="42" count="72" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="55" count="72" type="method"/>
            <line num="57" count="72" type="stmt"/>
            <line falsecount="72" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="72" type="stmt"/>
            <line num="64" count="72" type="stmt"/>
            <line num="67" count="72" type="stmt"/>
            <line num="68" count="72" type="stmt"/>
            <line num="71" count="72" type="stmt"/>
            <line num="72" count="72" type="stmt"/>
            <line num="73" count="72" type="stmt"/>
            <line num="76" count="72" type="stmt"/>
            <line num="77" count="72" type="stmt"/>
            <line num="78" count="72" type="stmt"/>
            <line num="80" count="72" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaPathwiseForGeometricModel.java" name="EuropeanOptionDeltaPathwiseForGeometricModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="88" coveredmethods="0" methods="2" elements="20" classes="1" ncloc="33" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="EuropeanOptionDeltaPathwiseForGeometricModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="20" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaPathwiseForGeometricModel(double,double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionGammaLikelihood.java" name="EuropeanOptionGammaLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="121" coveredmethods="0" methods="3" elements="49" classes="1" ncloc="70" statements="40" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionGammaLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="49" statements="40" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionGammaLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionGammaPathwise.java" name="EuropeanOptionGammaPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="95" coveredmethods="0" methods="3" elements="28" classes="1" ncloc="46" statements="23" conditionals="2" coveredstatements="0"/>
            <class name="EuropeanOptionGammaPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="28" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionGammaPathwise(double,double)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionRhoLikelihood.java" name="EuropeanOptionRhoLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="117" coveredmethods="0" methods="3" elements="45" classes="1" ncloc="65" statements="36" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionRhoLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="45" statements="36" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionRhoLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionRhoPathwise.java" name="EuropeanOptionRhoPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="91" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="47" statements="22" conditionals="4" coveredstatements="0"/>
            <class name="EuropeanOptionRhoPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="29" statements="22" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionRhoPathwise(double,double)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionThetaPathwise.java" name="EuropeanOptionThetaPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="93" coveredmethods="0" methods="3" elements="32" classes="1" ncloc="49" statements="25" conditionals="4" coveredstatements="0"/>
            <class name="EuropeanOptionThetaPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="32" statements="25" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionThetaPathwise(double,double)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaLikelihood.java" name="EuropeanOptionVegaLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="118" coveredmethods="0" methods="3" elements="46" classes="1" ncloc="66" statements="37" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionVegaLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="46" statements="37" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionVegaLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaPathwise.java" name="EuropeanOptionVegaPathwise.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="6" loc="96" coveredmethods="2" methods="3" elements="32" classes="1" ncloc="49" statements="25" conditionals="4" coveredstatements="23"/>
            <class name="EuropeanOptionVegaPathwise">
               <metrics coveredelements="29" coveredconditionals="4" complexity="6" coveredmethods="2" methods="3" elements="32" statements="25" conditionals="4" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionVegaPathwise(double,double)" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000000" num="70" type="cond"/>
            <line num="72" count="1000000" type="stmt"/>
            <line falsecount="592067" truecount="407933" num="72" type="cond"/>
            <line num="75" count="407933" type="stmt"/>
            <line num="76" count="407933" type="stmt"/>
            <line num="77" count="407933" type="stmt"/>
            <line num="78" count="407933" type="stmt"/>
            <line num="80" count="407933" type="stmt"/>
            <line num="81" count="407933" type="stmt"/>
            <line num="83" count="407933" type="stmt"/>
            <line num="85" count="407933" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionWithBoundary.java" name="EuropeanOptionWithBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="264" coveredmethods="0" methods="8" elements="127" classes="3" ncloc="153" statements="95" conditionals="24" coveredstatements="0"/>
            <class name="EuropeanOptionWithBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="4" elements="96" statements="74" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="EuropeanOptionWithBoundary.BoundaryAdjustmentType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EuropeanOptionWithBoundary.ConstantBarrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="31" statements="21" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionWithBoundary(double,double)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getBoundaryAdjustment(double,double,AssetModelMonteCarloSimulationModel,RandomVariable) : RandomVariable" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRegressionBasisFunctions(double,AssetModelMonteCarloSimulationModel,RandomVariable) : RandomVariable[]" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantBarrier(AssetModelMonteCarloSimulationModel)" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBarrierDirection(int,RandomVariable[]) : RandomVariableFromDoubleArray[]" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBarrierLevel(int,RandomVariable[]) : RandomVariableFromDoubleArray" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUpperBarrier() : boolean" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/FiniteDifferenceDeltaHedgedPortfolio.java" name="FiniteDifferenceDeltaHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="134" coveredmethods="0" methods="2" elements="50" classes="1" ncloc="70" statements="42" conditionals="6" coveredstatements="0"/>
            <class name="FiniteDifferenceDeltaHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="50" statements="42" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FiniteDifferenceDeltaHedgedPortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="48" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/FiniteDifferenceHedgedPortfolio.java" name="FiniteDifferenceHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="95" coveredmethods="0" methods="2" elements="14" classes="2" ncloc="37" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifferenceHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FiniteDifferenceHedgedPortfolio.HedgeStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FiniteDifferenceHedgedPortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel,ArrayList&lt;AbstractAssetMonteCarloProduct&gt;,HedgeStrategy)" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="71" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/ForwardAgreement.java" name="ForwardAgreement.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="6" loc="124" coveredmethods="2" methods="5" elements="31" classes="1" ncloc="53" statements="26" conditionals="0" coveredstatements="14"/>
            <class name="ForwardAgreement">
               <metrics coveredelements="16" coveredconditionals="0" complexity="6" coveredmethods="2" methods="5" elements="31" statements="26" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardAgreement(String,double,double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreement(double,double,int)" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreement(double,double)" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="87" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/ForwardAgreementWithFundingRequirement.java" name="ForwardAgreementWithFundingRequirement.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="136" coveredmethods="2" methods="5" elements="35" classes="1" ncloc="59" statements="30" conditionals="0" coveredstatements="17"/>
            <class name="ForwardAgreementWithFundingRequirement">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="2" methods="5" elements="35" statements="30" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardAgreementWithFundingRequirement(String,double,double,FundingCapacity)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreementWithFundingRequirement(double,double,int,FundingCapacity)" num="67" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreementWithFundingRequirement(double,double)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="96" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/LocalRiskMinimizingHedgePortfolio.java" name="LocalRiskMinimizingHedgePortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="168" coveredmethods="0" methods="3" elements="64" classes="1" ncloc="85" statements="57" conditionals="4" coveredstatements="0"/>
            <class name="LocalRiskMinimizingHedgePortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="64" statements="57" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LocalRiskMinimizingHedgePortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel,TimeDiscretization,int)" num="49" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBasisFunctions(RandomVariable) : RandomVariable[]" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration.models">
         <metrics coveredelements="105" complexity="67" loc="502" methods="29" classes="4" statements="124" coveredconditionals="25" coveredmethods="16" elements="227" ncloc="286" files="4" conditionals="74" coveredstatements="64"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableHestonModel.java" name="CalibratableHestonModel.java">
            <metrics coveredelements="61" coveredconditionals="16" complexity="27" loc="168" coveredmethods="8" methods="10" elements="91" classes="1" ncloc="105" statements="49" conditionals="32" coveredstatements="37"/>
            <class name="CalibratableHestonModel">
               <metrics coveredelements="61" coveredconditionals="16" complexity="27" coveredmethods="8" methods="10" elements="91" statements="49" conditionals="32" coveredstatements="37"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableHestonModel(HestonModelDescriptor)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableHestonModel(HestonModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,boolean)" num="74" count="122" type="method"/>
            <line num="77" count="123" type="stmt"/>
            <line num="78" count="123" type="stmt"/>
            <line num="79" count="123" type="stmt"/>
            <line num="80" count="123" type="stmt"/>
            <line num="81" count="123" type="stmt"/>
            <line num="82" count="123" type="stmt"/>
            <line num="83" count="123" type="stmt"/>
            <line num="84" count="123" type="stmt"/>
            <line num="85" count="123" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableHestonModel" num="88" count="122" type="method"/>
            <line num="92" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="92" type="cond"/>
            <line num="93" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="93" type="cond"/>
            <line num="94" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="94" type="cond"/>
            <line num="95" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="95" type="cond"/>
            <line num="96" count="122" type="stmt"/>
            <line falsecount="0" truecount="122" num="96" type="cond"/>
            <line num="98" count="122" type="stmt"/>
            <line falsecount="122" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="122" type="stmt"/>
            <line num="107" count="122" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="110" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : HestonModel" num="115" count="121" type="method"/>
            <line num="117" count="121" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="122" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="6" visibility="private" signature="extractUpperBounds() : double[]" num="132" count="123" type="method"/>
            <line num="133" count="123" type="stmt"/>
            <line num="134" count="123" type="stmt"/>
            <line num="135" count="121" type="stmt"/>
            <line falsecount="123" truecount="0" num="135" type="cond"/>
            <line num="136" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="136" type="cond"/>
            <line num="137" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="137" type="cond"/>
            <line num="138" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="138" type="cond"/>
            <line num="139" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="139" type="cond"/>
            <line num="141" count="123" type="stmt"/>
            <line complexity="6" visibility="private" signature="extractLowerBounds() : double[]" num="144" count="123" type="method"/>
            <line num="145" count="123" type="stmt"/>
            <line num="146" count="123" type="stmt"/>
            <line num="147" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="147" type="cond"/>
            <line num="148" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="148" type="cond"/>
            <line num="149" count="122" type="stmt"/>
            <line falsecount="122" truecount="0" num="149" type="cond"/>
            <line num="150" count="122" type="stmt"/>
            <line falsecount="122" truecount="0" num="150" type="cond"/>
            <line num="151" count="122" type="stmt"/>
            <line falsecount="122" truecount="0" num="151" type="cond"/>
            <line num="153" count="123" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableMertonModel.java" name="CalibratableMertonModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="152" coveredmethods="0" methods="10" elements="75" classes="1" ncloc="94" statements="41" conditionals="24" coveredstatements="0"/>
            <class name="CalibratableMertonModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="10" elements="75" statements="41" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableMertonModel(MertonModelDescriptor)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableMertonModel(MertonModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation)" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableProcess" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : MertonModel" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="extractUpperBounds() : double[]" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="extractLowerBounds() : double[]" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableProcess.java" name="CalibratableProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CalibratableProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableVarianceGammaModel.java" name="CalibratableVarianceGammaModel.java">
            <metrics coveredelements="44" coveredconditionals="9" complexity="18" loc="123" coveredmethods="8" methods="9" elements="61" classes="1" ncloc="77" statements="34" conditionals="18" coveredstatements="27"/>
            <class name="CalibratableVarianceGammaModel">
               <metrics coveredelements="44" coveredconditionals="9" complexity="18" coveredmethods="8" methods="9" elements="61" statements="34" conditionals="18" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableVarianceGammaModel(VarianceGammaModelDescriptor)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableVarianceGammaModel(VarianceGammaModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation)" num="58" count="132" type="method"/>
            <line num="60" count="132" type="stmt"/>
            <line num="61" count="132" type="stmt"/>
            <line num="62" count="132" type="stmt"/>
            <line num="63" count="132" type="stmt"/>
            <line num="64" count="132" type="stmt"/>
            <line num="65" count="132" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableProcess" num="68" count="131" type="method"/>
            <line num="72" count="131" type="stmt"/>
            <line falsecount="0" truecount="131" num="72" type="cond"/>
            <line num="73" count="131" type="stmt"/>
            <line falsecount="0" truecount="131" num="73" type="cond"/>
            <line num="74" count="131" type="stmt"/>
            <line falsecount="0" truecount="131" num="74" type="cond"/>
            <line num="76" count="131" type="stmt"/>
            <line num="80" count="131" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : CharacteristicFunctionModel" num="88" count="130" type="method"/>
            <line num="90" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="99" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractUpperBounds() : double[]" num="104" count="132" type="method"/>
            <line num="105" count="132" type="stmt"/>
            <line num="106" count="132" type="stmt"/>
            <line num="107" count="132" type="stmt"/>
            <line falsecount="132" truecount="0" num="107" type="cond"/>
            <line num="108" count="132" type="stmt"/>
            <line falsecount="132" truecount="0" num="108" type="cond"/>
            <line num="109" count="132" type="stmt"/>
            <line falsecount="132" truecount="0" num="109" type="cond"/>
            <line num="111" count="132" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractLowerBounds() : double[]" num="114" count="132" type="method"/>
            <line num="115" count="132" type="stmt"/>
            <line num="116" count="132" type="stmt"/>
            <line num="117" count="132" type="stmt"/>
            <line falsecount="131" truecount="0" num="117" type="cond"/>
            <line num="118" count="131" type="stmt"/>
            <line falsecount="131" truecount="0" num="118" type="cond"/>
            <line num="119" count="131" type="stmt"/>
            <line falsecount="131" truecount="0" num="119" type="cond"/>
            <line num="121" count="131" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo">
         <metrics coveredelements="1585" complexity="1108" loc="7408" methods="474" classes="25" statements="2157" coveredconditionals="455" coveredmethods="208" elements="3725" ncloc="4792" files="25" conditionals="1094" coveredstatements="922"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/AbstractMonteCarloProduct.java" name="AbstractMonteCarloProduct.java">
            <metrics coveredelements="36" coveredconditionals="3" complexity="18" loc="167" coveredmethods="9" methods="13" elements="57" classes="1" ncloc="107" statements="38" conditionals="6" coveredstatements="24"/>
            <class name="AbstractMonteCarloProduct">
               <metrics coveredelements="36" coveredconditionals="3" complexity="18" coveredmethods="9" methods="13" elements="57" statements="38" conditionals="6" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractMonteCarloProduct(String)" num="25" count="153103" type="method"/>
            <line num="26" count="153093" type="stmt"/>
            <line num="27" count="153106" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractMonteCarloProduct()" num="30" count="1658" type="method"/>
            <line num="31" count="1658" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,Model) : Object" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="39" type="cond"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
            <line num="59" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="59" type="cond"/>
            <line num="60" count="3" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(MonteCarloSimulationModel) : double" num="81" count="9664" type="method"/>
            <line num="83" count="9664" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,MonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="86" count="652" type="method"/>
            <line num="89" count="652" type="stmt"/>
            <line num="91" count="652" type="stmt"/>
            <line falsecount="652" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="96" count="652" type="stmt"/>
            <line num="97" count="652" type="stmt"/>
            <line num="99" count="652" type="stmt"/>
            <line num="100" count="652" type="stmt"/>
            <line num="101" count="652" type="stmt"/>
            <line num="103" count="652" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(double,MonteCarloSimulationModel,Map&lt;String,Object&gt;) : Map&lt;String, Object&gt;" num="109" count="648" type="method"/>
            <line num="112" count="648" type="stmt"/>
            <line num="114" count="648" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(double,MonteCarloSimulationModel,String,Object) : Map&lt;String, Object&gt;" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(MonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(MonteCarloSimulationModel,Map&lt;String,Object&gt;) : Map&lt;String, Object&gt;" num="140" count="648" type="method"/>
            <line num="143" count="648" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(MonteCarloSimulationModel,String,Object) : Map&lt;String, Object&gt;" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="2" type="method"/>
            <line num="165" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/AbstractRandomVariableFactory.java" name="AbstractRandomVariableFactory.java">
            <metrics coveredelements="20" coveredconditionals="6" complexity="6" loc="52" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="33" statements="11" conditionals="6" coveredstatements="11"/>
            <class name="AbstractRandomVariableFactory">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariable" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="createRandomVariableArray(double[]) : RandomVariable[]" num="32" count="29" type="method"/>
            <line num="34" count="29" type="stmt"/>
            <line num="35" count="29" type="stmt"/>
            <line falsecount="29" truecount="232" num="35" type="cond"/>
            <line num="36" count="232" type="stmt"/>
            <line num="38" count="29" type="stmt"/>
            <line complexity="3" visibility="public" signature="createRandomVariableMatrix(double[][]) : RandomVariable[][]" num="41" count="105" type="method"/>
            <line num="43" count="105" type="stmt"/>
            <line num="44" count="105" type="stmt"/>
            <line falsecount="105" truecount="4960" num="44" type="cond"/>
            <line num="45" count="4960" type="stmt"/>
            <line num="46" count="4960" type="stmt"/>
            <line falsecount="4960" truecount="244800" num="46" type="cond"/>
            <line num="47" count="244800" type="stmt"/>
            <line num="50" count="105" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/BrownianBridge.java" name="BrownianBridge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="226" coveredmethods="0" methods="14" elements="65" classes="1" ncloc="107" statements="41" conditionals="10" coveredstatements="0"/>
            <class name="BrownianBridge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="14" elements="65" statements="41" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianBridge(TimeDiscretization,int,int,RandomVariable[],RandomVariable[])" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianBridge(TimeDiscretization,int,int,RandomVariable,RandomVariable)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="doGenerateBrownianMotion() : void" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int) : RandomVariable[]" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/BrownianMotion.java" name="BrownianMotion.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="113" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BrownianMotion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getBrownianIncrement(double,int) : RandomVariable" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/BrownianMotionFromMersenneRandomNumbers.java" name="BrownianMotionFromMersenneRandomNumbers.java">
            <metrics coveredelements="63" coveredconditionals="15" complexity="30" loc="259" coveredmethods="10" methods="16" elements="102" classes="1" ncloc="146" statements="60" conditionals="26" coveredstatements="38"/>
            <class name="BrownianMotionFromMersenneRandomNumbers">
               <metrics coveredelements="63" coveredconditionals="15" complexity="30" coveredmethods="10" methods="16" elements="102" statements="60" conditionals="26" coveredstatements="38"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionFromMersenneRandomNumbers(TimeDiscretization,int,int,int,RandomVariableFactory)" num="69" count="406" type="method"/>
            <line num="75" count="406" type="stmt"/>
            <line num="76" count="406" type="stmt"/>
            <line num="77" count="406" type="stmt"/>
            <line num="79" count="406" type="stmt"/>
            <line num="80" count="406" type="stmt"/>
            <line num="81" count="406" type="stmt"/>
            <line num="82" count="406" type="stmt"/>
            <line num="84" count="406" type="stmt"/>
            <line num="86" count="406" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionFromMersenneRandomNumbers(TimeDiscretization,int,int,int)" num="97" count="147" type="method"/>
            <line num="102" count="147" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="116" count="477447" type="method"/>
            <line num="118" count="477440" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="121" count="563508" type="method"/>
            <line num="125" count="563511" type="stmt"/>
            <line num="126" count="563554" type="stmt"/>
            <line falsecount="563175" truecount="379" num="126" type="cond"/>
            <line num="127" count="379" type="stmt"/>
            <line num="134" count="563553" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateBrownianMotion() : void" num="140" count="379" type="method"/>
            <line num="141" count="379" type="stmt"/>
            <line falsecount="379" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="379" type="stmt"/>
            <line num="149" count="379" type="stmt"/>
            <line num="152" count="379" type="stmt"/>
            <line num="153" count="379" type="stmt"/>
            <line falsecount="379" truecount="48531" num="153" type="cond"/>
            <line num="154" count="48531" type="stmt"/>
            <line num="164" count="379" type="stmt"/>
            <line falsecount="379" truecount="512308200" num="164" type="cond"/>
            <line num="165" count="512308200" type="stmt"/>
            <line falsecount="512308200" truecount="2147483647" num="165" type="cond"/>
            <line num="166" count="2147483647" type="stmt"/>
            <line num="168" count="2147483647" type="stmt"/>
            <line falsecount="2147483647" truecount="2147483647" num="168" type="cond"/>
            <line num="169" count="2147483647" type="stmt"/>
            <line num="170" count="2147483647" type="stmt"/>
            <line num="176" count="379" type="stmt"/>
            <line num="179" count="379" type="stmt"/>
            <line falsecount="379" truecount="48531" num="179" type="cond"/>
            <line num="180" count="48531" type="stmt"/>
            <line num="181" count="48531" type="stmt"/>
            <line falsecount="48531" truecount="93061" num="181" type="cond"/>
            <line num="182" count="93061" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="188" count="4264" type="method"/>
            <line num="190" count="4260" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="193" count="1551237" type="method"/>
            <line num="195" count="1551233" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="198" count="1004020" type="method"/>
            <line num="200" count="1004020" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="203" count="3911" type="method"/>
            <line num="205" count="3911" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="254" count="4" type="method"/>
            <line num="255" count="4" type="stmt"/>
            <line num="257" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/BrownianMotionFromRandomNumberGenerator.java" name="BrownianMotionFromRandomNumberGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="253" coveredmethods="0" methods="15" elements="102" classes="1" ncloc="147" statements="61" conditionals="26" coveredstatements="0"/>
            <class name="BrownianMotionFromRandomNumberGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="15" elements="102" statements="61" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionFromRandomNumberGenerator(TimeDiscretization,int,int,RandomNumberGenerator,RandomVariableFactory)" num="69" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionFromRandomNumberGenerator(TimeDiscretization,int,int,RandomNumberGenerator)" num="99" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="118" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateBrownianMotion() : void" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/BrownianMotionLazyInit.java" name="BrownianMotionLazyInit.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="77" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="BrownianMotionLazyInit">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionLazyInit(TimeDiscretization,int,int,int,RandomVariableFactory)" num="53" count="167" type="method"/>
            <line num="59" count="167" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionLazyInit(TimeDiscretization,int,int,int)" num="70" count="167" type="method"/>
            <line num="75" count="167" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/BrownianMotionView.java" name="BrownianMotionView.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="9" loc="87" coveredmethods="7" methods="9" elements="20" classes="1" ncloc="44" statements="11" conditionals="0" coveredstatements="9"/>
            <class name="BrownianMotionView">
               <metrics coveredelements="16" coveredconditionals="0" complexity="9" coveredmethods="7" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionView(BrownianMotion,Integer[])" num="42" count="26" type="method"/>
            <line num="43" count="26" type="stmt"/>
            <line num="44" count="26" type="stmt"/>
            <line num="45" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="48" count="52538" type="method"/>
            <line num="50" count="52537" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="53" count="400" type="method"/>
            <line num="55" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="58" count="92217" type="method"/>
            <line num="60" count="92217" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="63" count="389" type="method"/>
            <line num="65" count="389" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="68" count="573" type="method"/>
            <line num="70" count="573" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="83" count="52537" type="method"/>
            <line num="85" count="52538" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/BrownianMotionWithControlVariate.java" name="BrownianMotionWithControlVariate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="99" coveredmethods="0" methods="9" elements="34" classes="1" ncloc="57" statements="21" conditionals="4" coveredstatements="0"/>
            <class name="BrownianMotionWithControlVariate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="9" elements="34" statements="21" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionWithControlVariate(BrownianMotion)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/CorrelatedBrownianMotion.java" name="CorrelatedBrownianMotion.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="123" coveredmethods="0" methods="9" elements="29" classes="1" ncloc="52" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="CorrelatedBrownianMotion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="29" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CorrelatedBrownianMotion(BrownianMotion,double[][])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/GammaProcess.java" name="GammaProcess.java">
            <metrics coveredelements="48" coveredconditionals="15" complexity="28" loc="254" coveredmethods="3" methods="14" elements="98" classes="1" ncloc="144" statements="58" conditionals="26" coveredstatements="30"/>
            <class name="GammaProcess">
               <metrics coveredelements="48" coveredconditionals="15" complexity="28" coveredmethods="3" methods="14" elements="98" statements="58" conditionals="26" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="GammaProcess(TimeDiscretization,int,int,int,double,double)" num="70" count="7" type="method"/>
            <line num="77" count="7" type="stmt"/>
            <line num="78" count="7" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
            <line num="80" count="7" type="stmt"/>
            <line num="81" count="7" type="stmt"/>
            <line num="82" count="7" type="stmt"/>
            <line num="83" count="7" type="stmt"/>
            <line num="85" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="GammaProcess(TimeDiscretization,int,int,int,double)" num="97" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="117" count="1002" type="method"/>
            <line num="120" count="1002" type="stmt"/>
            <line num="121" count="1002" type="stmt"/>
            <line falsecount="995" truecount="7" num="121" type="cond"/>
            <line num="122" count="7" type="stmt"/>
            <line num="130" count="1002" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateGammaIncrements() : void" num="136" count="7" type="method"/>
            <line num="137" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="7" type="stmt"/>
            <line num="145" count="7" type="stmt"/>
            <line num="148" count="7" type="stmt"/>
            <line num="149" count="7" type="stmt"/>
            <line falsecount="7" truecount="700" num="149" type="cond"/>
            <line num="150" count="700" type="stmt"/>
            <line num="151" count="700" type="stmt"/>
            <line num="161" count="7" type="stmt"/>
            <line falsecount="7" truecount="160000" num="161" type="cond"/>
            <line num="162" count="160000" type="stmt"/>
            <line falsecount="160000" truecount="16000000" num="162" type="cond"/>
            <line num="163" count="16000000" type="stmt"/>
            <line num="165" count="16000000" type="stmt"/>
            <line falsecount="16000000" truecount="16000000" num="165" type="cond"/>
            <line num="166" count="16000000" type="stmt"/>
            <line num="167" count="16000000" type="stmt"/>
            <line num="173" count="7" type="stmt"/>
            <line num="176" count="7" type="stmt"/>
            <line falsecount="7" truecount="700" num="176" type="cond"/>
            <line num="177" count="700" type="stmt"/>
            <line num="178" count="700" type="stmt"/>
            <line falsecount="700" truecount="700" num="178" type="cond"/>
            <line num="179" count="700" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="208" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/IndependentIncrements.java" name="IndependentIncrements.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="2" loc="112" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="20" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="IndependentIncrements">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="package" signature="getIncrement(int) : RandomVariable[]" num="36" count="378723" type="method"/>
            <line num="38" count="378721" type="stmt"/>
            <line num="39" count="378717" type="stmt"/>
            <line falsecount="378726" truecount="531588" num="39" type="cond"/>
            <line num="40" count="531585" type="stmt"/>
            <line num="42" count="378725" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/IndependentIncrementsFromICDF.java" name="IndependentIncrementsFromICDF.java">
            <metrics coveredelements="57" coveredconditionals="17" complexity="30" loc="295" coveredmethods="7" methods="15" elements="101" classes="1" ncloc="148" statements="58" conditionals="28" coveredstatements="33"/>
            <class name="IndependentIncrementsFromICDF">
               <metrics coveredelements="57" coveredconditionals="17" complexity="30" coveredmethods="7" methods="15" elements="101" statements="58" conditionals="28" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="IndependentIncrementsFromICDF(TimeDiscretization,int,int,int,IntFunction&lt;IntFunction&lt;DoubleUnaryOperator&gt;&gt;,RandomVariableFactory)" num="92" count="4" type="method"/>
            <line num="99" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="IndependentIncrementsFromICDF(TimeDiscretization,int,int,int,IntFunction&lt;IntFunction&lt;DoubleUnaryOperator&gt;&gt;)" num="135" count="4" type="method"/>
            <line num="141" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="154" count="1600" type="method"/>
            <line num="158" count="1600" type="stmt"/>
            <line num="159" count="1600" type="stmt"/>
            <line falsecount="1596" truecount="4" num="159" type="cond"/>
            <line num="160" count="4" type="stmt"/>
            <line num="167" count="1600" type="stmt"/>
            <line complexity="9" visibility="private" signature="doGenerateIncrements() : void" num="173" count="4" type="method"/>
            <line num="174" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="182" count="4" type="stmt"/>
            <line num="185" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="186" type="cond"/>
            <line num="187" count="400" type="stmt"/>
            <line falsecount="400" truecount="1200" num="187" type="cond"/>
            <line num="188" count="1200" type="stmt"/>
            <line num="199" count="4" type="stmt"/>
            <line falsecount="4" truecount="1300000" num="199" type="cond"/>
            <line num="200" count="1300000" type="stmt"/>
            <line falsecount="1300000" truecount="130000000" num="200" type="cond"/>
            <line num="202" count="130000000" type="stmt"/>
            <line falsecount="130000000" truecount="390000000" num="202" type="cond"/>
            <line num="203" count="390000000" type="stmt"/>
            <line num="204" count="390000000" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="213" type="cond"/>
            <line num="214" count="400" type="stmt"/>
            <line num="215" count="400" type="stmt"/>
            <line falsecount="400" truecount="1200" num="215" type="cond"/>
            <line num="216" count="1200" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="222" count="4" type="method"/>
            <line num="224" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="227" count="2004" type="method"/>
            <line num="229" count="2004" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="232" count="4" type="method"/>
            <line num="234" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/JumpProcessIncrements.java" name="JumpProcessIncrements.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="219" coveredmethods="0" methods="13" elements="72" classes="1" ncloc="115" statements="41" conditionals="18" coveredstatements="0"/>
            <class name="JumpProcessIncrements">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="13" elements="72" statements="41" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JumpProcessIncrements(TimeDiscretization,double[],int,int,RandomVariableFactory)" num="66" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JumpProcessIncrements(TimeDiscretization,double[],int,int)" num="91" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : JumpProcessIncrements" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : JumpProcessIncrements" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="110" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="doGenerateIncrements() : void" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="214" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/MertonJumpProcess.java" name="MertonJumpProcess.java">
            <metrics coveredelements="50" coveredconditionals="7" complexity="21" loc="168" coveredmethods="12" methods="17" elements="62" classes="1" ncloc="117" statements="37" conditionals="8" coveredstatements="31"/>
            <class name="MertonJumpProcess">
               <metrics coveredelements="50" coveredconditionals="7" complexity="21" coveredmethods="12" methods="17" elements="62" statements="37" conditionals="8" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonJumpProcess(double,double,double,TimeDiscretization,int,int)" num="38" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int) : IntFunction&lt;DoubleUnaryOperator&gt;" num="49" count="1200" type="method"/>
            <line num="51" count="1200" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(int) : DoubleUnaryOperator" num="52" count="1200" type="method"/>
            <line num="54" count="1200" type="stmt"/>
            <line falsecount="800" truecount="400" num="54" type="cond"/>
            <line num="56" count="400" type="stmt"/>
            <line num="57" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="58" count="130000000" type="method"/>
            <line num="60" count="130000000" type="stmt"/>
            <line num="64" count="800" type="stmt"/>
            <line falsecount="400" truecount="400" num="64" type="cond"/>
            <line num="66" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="67" count="130000000" type="method"/>
            <line num="69" count="130000000" type="stmt"/>
            <line num="73" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="73" type="cond"/>
            <line num="75" count="400" type="stmt"/>
            <line num="76" count="400" type="stmt"/>
            <line num="77" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="78" count="130000000" type="method"/>
            <line num="80" count="130000000" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="95" count="1200" type="method"/>
            <line num="97" count="1200" type="stmt"/>
            <line falsecount="800" truecount="400" num="97" type="cond"/>
            <line num="98" count="400" type="stmt"/>
            <line num="99" count="400" type="stmt"/>
            <line num="100" count="400" type="stmt"/>
            <line num="103" count="800" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="111" count="1200" type="method"/>
            <line num="113" count="1200" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="116" count="4" type="method"/>
            <line num="118" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="121" count="2004" type="method"/>
            <line num="123" count="2004" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="126" count="4" type="method"/>
            <line num="128" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="131" count="4" type="method"/>
            <line num="133" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : double" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : double" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStDev() : double" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/MonteCarloProduct.java" name="MonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="143" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="25" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/MonteCarloSimulationModel.java" name="MonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="104" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getReferenceDate() : LocalDateTime" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/RandomVariableFactory.java" name="RandomVariableFactory.java">
            <metrics coveredelements="12" coveredconditionals="5" complexity="5" loc="86" coveredmethods="1" methods="1" elements="18" classes="1" ncloc="26" statements="9" conditionals="8" coveredstatements="6"/>
            <class name="RandomVariableFactory">
               <metrics coveredelements="12" coveredconditionals="5" complexity="5" coveredmethods="1" methods="1" elements="18" statements="9" conditionals="8" coveredstatements="6"/>
            </class>
            <line complexity="5" visibility="package" signature="getRandomVariableOrDefault(RandomVariableFactory,Object,RandomVariable) : RandomVariable" num="27" count="1080" type="method"/>
            <line num="28" count="1080" type="stmt"/>
            <line falsecount="360" truecount="720" num="28" type="cond"/>
            <line num="29" count="720" type="stmt"/>
            <line num="31" count="360" type="stmt"/>
            <line falsecount="360" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="360" type="stmt"/>
            <line falsecount="0" truecount="360" num="34" type="cond"/>
            <line num="35" count="360" type="stmt"/>
            <line falsecount="360" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="360" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/RandomVariableFloatFactory.java" name="RandomVariableFloatFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="32" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableFloatFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableFloatFactory()" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/RandomVariableFromArrayFactory.java" name="RandomVariableFromArrayFactory.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="7" loc="67" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="36" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="RandomVariableFromArrayFactory">
               <metrics coveredelements="18" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="18" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableFromArrayFactory()" num="26" count="6274" type="method"/>
            <line num="27" count="6276" type="stmt"/>
            <line num="28" count="6275" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromArrayFactory(boolean)" num="31" count="52" type="method"/>
            <line num="32" count="52" type="stmt"/>
            <line num="33" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariable" num="36" count="26807622" type="method"/>
            <line num="38" count="26807663" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="41" count="5102938" type="method"/>
            <line num="43" count="5102935" type="stmt"/>
            <line complexity="2" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="53" count="96101" type="method"/>
            <line num="55" count="96101" type="stmt"/>
            <line falsecount="8581" truecount="87520" num="55" type="cond"/>
            <line num="56" count="87520" type="stmt"/>
            <line num="58" count="8581" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="62" count="48" type="method"/>
            <line num="64" count="48" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/RandomVariableFromDoubleArray.java" name="RandomVariableFromDoubleArray.java">
            <metrics coveredelements="662" coveredconditionals="228" complexity="307" loc="1503" coveredmethods="55" methods="86" elements="1097" classes="1" ncloc="1180" statements="631" conditionals="380" coveredstatements="379"/>
            <class name="RandomVariableFromDoubleArray">
               <metrics coveredelements="662" coveredconditionals="228" complexity="307" coveredmethods="55" methods="86" elements="1097" statements="631" conditionals="380" coveredstatements="379"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableFromDoubleArray(RandomVariable)" num="60" count="508" type="method"/>
            <line num="61" count="508" type="stmt"/>
            <line num="62" count="508" type="stmt"/>
            <line num="63" count="508" type="stmt"/>
            <line falsecount="200" truecount="308" num="63" type="cond"/>
            <line num="64" count="508" type="stmt"/>
            <line falsecount="200" truecount="308" num="64" type="cond"/>
            <line num="65" count="508" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double)" num="73" count="685932" type="method"/>
            <line num="74" count="685809" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableFromDoubleArray(RandomVariable,DoubleUnaryOperator)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double,int)" num="99" count="10225408" type="method"/>
            <line num="100" count="10225135" type="stmt"/>
            <line num="101" count="10225909" type="stmt"/>
            <line num="102" count="10226101" type="stmt"/>
            <line num="103" count="10226227" type="stmt"/>
            <line num="104" count="10226233" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double)" num="113" count="9539831" type="method"/>
            <line num="114" count="9539737" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,int,double)" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double[],int)" num="145" count="494865074" type="method"/>
            <line num="146" count="494505535" type="stmt"/>
            <line num="147" count="495746483" type="stmt"/>
            <line num="148" count="496068838" type="stmt"/>
            <line num="149" count="496209567" type="stmt"/>
            <line num="150" count="496306314" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double[])" num="166" count="494932057" type="method"/>
            <line num="167" count="494715547" type="stmt"/>
            <line complexity="4" visibility="public" signature="RandomVariableFromDoubleArray(double,IntToDoubleFunction,int,int)" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(int) : void" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,IntToDoubleFunction,int)" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="206" count="35" type="method"/>
            <line num="208" count="35" type="stmt"/>
            <line falsecount="35" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="35" type="stmt"/>
            <line falsecount="19" truecount="16" num="211" type="cond"/>
            <line num="212" count="16" type="stmt"/>
            <line num="215" count="19" type="stmt"/>
            <line falsecount="19" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="19" type="stmt"/>
            <line falsecount="19" truecount="30080" num="219" type="cond"/>
            <line num="220" count="30080" type="stmt"/>
            <line falsecount="30080" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="225" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="228" count="290779418" type="method"/>
            <line num="230" count="291029723" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="233" count="700584907" type="method"/>
            <line num="235" count="701459491" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="238" count="2147483647" type="method"/>
            <line num="240" count="2147483647" type="stmt"/>
            <line falsecount="1984086982" truecount="264416861" num="240" type="cond"/>
            <line num="241" count="264501044" type="stmt"/>
            <line num="243" count="2147483647" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="247" count="423279051" type="method"/>
            <line num="249" count="423884071" type="stmt"/>
            <line falsecount="419629800" truecount="3555996" num="249" type="cond"/>
            <line num="250" count="3555999" type="stmt"/>
            <line num="252" count="420138716" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMin() : double" num="256" count="3" type="method"/>
            <line num="258" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="3" type="stmt"/>
            <line num="262" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="262" type="cond"/>
            <line num="263" count="3" type="stmt"/>
            <line num="265" count="3" type="stmt"/>
            <line falsecount="3" truecount="30000000" num="265" type="cond"/>
            <line num="266" count="30000000" type="stmt"/>
            <line num="268" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMax() : double" num="271" count="971" type="method"/>
            <line num="273" count="971" type="stmt"/>
            <line falsecount="0" truecount="971" num="273" type="cond"/>
            <line num="274" count="971" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage() : double" num="286" count="4278200" type="method"/>
            <line num="288" count="4278299" type="stmt"/>
            <line falsecount="736034" truecount="3542059" num="288" type="cond"/>
            <line num="289" count="3542059" type="stmt"/>
            <line num="291" count="736114" type="stmt"/>
            <line falsecount="735748" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="298" count="735852" type="stmt"/>
            <line num="299" count="735896" type="stmt"/>
            <line num="300" count="735940" type="stmt"/>
            <line falsecount="736415" truecount="1299861395" num="300" type="cond"/>
            <line num="301" count="1299397714" type="stmt"/>
            <line num="302" count="1300216605" type="stmt"/>
            <line num="303" count="1300255188" type="stmt"/>
            <line num="304" count="1299848764" type="stmt"/>
            <line num="306" count="736421" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage(RandomVariable) : double" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVariance() : double" num="332" count="2003" type="method"/>
            <line num="334" count="2003" type="stmt"/>
            <line falsecount="1976" truecount="27" num="334" type="cond"/>
            <line num="335" count="27" type="stmt"/>
            <line num="337" count="1976" type="stmt"/>
            <line falsecount="1976" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="1976" type="stmt"/>
            <line num="346" count="1976" type="stmt"/>
            <line num="347" count="1976" type="stmt"/>
            <line num="348" count="1976" type="stmt"/>
            <line falsecount="1976" truecount="466503225" num="348" type="cond"/>
            <line num="349" count="466503225" type="stmt"/>
            <line num="350" count="466503225" type="stmt"/>
            <line num="351" count="466503225" type="stmt"/>
            <line num="352" count="466503225" type="stmt"/>
            <line num="354" count="1976" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="394" count="1871" type="method"/>
            <line num="396" count="1871" type="stmt"/>
            <line falsecount="1844" truecount="27" num="396" type="cond"/>
            <line num="397" count="27" type="stmt"/>
            <line num="399" count="1844" type="stmt"/>
            <line falsecount="1844" truecount="0" num="399" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line num="403" count="1844" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="418" count="800" type="method"/>
            <line num="420" count="800" type="stmt"/>
            <line falsecount="798" truecount="2" num="420" type="cond"/>
            <line num="421" count="2" type="stmt"/>
            <line num="423" count="798" type="stmt"/>
            <line falsecount="798" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="798" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="445" count="135" type="method"/>
            <line num="447" count="135" type="stmt"/>
            <line falsecount="95" truecount="40" num="447" type="cond"/>
            <line num="448" count="40" type="stmt"/>
            <line num="450" count="95" type="stmt"/>
            <line falsecount="95" truecount="0" num="450" type="cond"/>
            <line num="451" count="0" type="stmt"/>
            <line num="454" count="95" type="stmt"/>
            <line num="455" count="95" type="stmt"/>
            <line num="457" count="95" type="stmt"/>
            <line num="459" count="95" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="462" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="465" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="501" count="33" type="method"/>
            <line num="504" count="33" type="stmt"/>
            <line num="506" count="33" type="stmt"/>
            <line falsecount="33" truecount="0" num="506" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="512" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="514" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="528" count="33" type="stmt"/>
            <line num="529" count="33" type="stmt"/>
            <line num="531" count="33" type="stmt"/>
            <line num="532" count="33" type="stmt"/>
            <line falsecount="33" truecount="3268" num="532" type="cond"/>
            <line num="534" count="3268" type="stmt"/>
            <line num="535" count="3268" type="stmt"/>
            <line falsecount="3268" truecount="228460086" num="535" type="cond"/>
            <line num="538" count="228460086" type="stmt"/>
            <line num="539" count="228460086" type="stmt"/>
            <line num="541" count="3268" type="stmt"/>
            <line num="543" count="33" type="stmt"/>
            <line num="546" count="33" type="stmt"/>
            <line falsecount="0" truecount="33" num="546" type="cond"/>
            <line num="547" count="33" type="stmt"/>
            <line falsecount="33" truecount="3301" num="547" type="cond"/>
            <line num="548" count="3301" type="stmt"/>
            <line num="553" count="33" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="556" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="563" type="cond"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="577" count="2147483647" type="method"/>
            <line num="579" count="123144989" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="582" count="25453617" type="method"/>
            <line num="584" count="25453615" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="602" count="858" type="method"/>
            <line num="604" count="858" type="stmt"/>
            <line falsecount="858" truecount="0" num="604" type="cond"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="609" count="858" type="stmt"/>
            <line complexity="3" visibility="public" signature="doubleValue() : Double" num="613" count="11778183" type="method"/>
            <line num="615" count="11778176" type="stmt"/>
            <line falsecount="0" truecount="11778174" num="615" type="cond"/>
            <line num="616" count="11778176" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="618" type="cond"/>
            <line num="619" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getOperator() : IntToDoubleFunction" num="626" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="628" type="cond"/>
            <line num="629" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="630" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="638" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="646" count="715" type="method"/>
            <line num="648" count="715" type="stmt"/>
            <line falsecount="99" truecount="616" num="648" type="cond"/>
            <line num="649" count="616" type="stmt"/>
            <line num="654" count="99" type="stmt"/>
            <line num="655" count="99" type="stmt"/>
            <line falsecount="99" truecount="4950000" num="655" type="cond"/>
            <line num="656" count="4950000" type="stmt"/>
            <line num="658" count="99" type="stmt"/>
            <line complexity="12" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="662" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="666" type="cond"/>
            <line num="667" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="669" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="672" type="cond"/>
            <line num="673" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="680" type="cond"/>
            <line num="681" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="685" type="cond"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="688" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="702" count="0" type="method"/>
            <line num="704" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="711" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="722" count="0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,DoubleBinaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="731" count="0" type="method"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double,double) : double" num="734" count="0" type="method"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cap(double) : RandomVariable" num="741" count="24571376" type="method"/>
            <line num="743" count="24596156" type="stmt"/>
            <line falsecount="24572514" truecount="0" num="743" type="cond"/>
            <line num="744" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="24582428" type="stmt"/>
            <line num="749" count="24819499" type="stmt"/>
            <line falsecount="24832513" truecount="2147483647" num="749" type="cond"/>
            <line num="750" count="2147483647" type="stmt"/>
            <line num="752" count="24836530" type="stmt"/>
            <line complexity="3" visibility="public" signature="floor(double) : RandomVariable" num="756" count="298216" type="method"/>
            <line num="758" count="298220" type="stmt"/>
            <line falsecount="297636" truecount="572" num="758" type="cond"/>
            <line num="759" count="572" type="stmt"/>
            <line num="760" count="572" type="stmt"/>
            <line num="763" count="297641" type="stmt"/>
            <line num="764" count="297648" type="stmt"/>
            <line falsecount="297652" truecount="463052913" num="764" type="cond"/>
            <line num="765" count="463139084" type="stmt"/>
            <line num="767" count="297650" type="stmt"/>
            <line complexity="3" visibility="public" signature="add(double) : RandomVariable" num="771" count="103049231" type="method"/>
            <line num="773" count="103098395" type="stmt"/>
            <line falsecount="102707547" truecount="320306" num="773" type="cond"/>
            <line num="774" count="320306" type="stmt"/>
            <line num="775" count="320306" type="stmt"/>
            <line num="778" count="102761753" type="stmt"/>
            <line num="779" count="103526944" type="stmt"/>
            <line falsecount="103599366" truecount="2147483647" num="779" type="cond"/>
            <line num="780" count="2147483647" type="stmt"/>
            <line num="782" count="103605511" type="stmt"/>
            <line complexity="3" visibility="public" signature="sub(double) : RandomVariable" num="786" count="14052083" type="method"/>
            <line num="788" count="14056587" type="stmt"/>
            <line falsecount="14039461" truecount="9337" num="788" type="cond"/>
            <line num="789" count="9337" type="stmt"/>
            <line num="790" count="9337" type="stmt"/>
            <line num="793" count="14043409" type="stmt"/>
            <line num="794" count="14090251" type="stmt"/>
            <line falsecount="14088422" truecount="2147483647" num="794" type="cond"/>
            <line num="795" count="2147483647" type="stmt"/>
            <line num="797" count="14088667" type="stmt"/>
            <line complexity="3" visibility="public" signature="bus(double) : RandomVariable" num="801" count="0" type="method"/>
            <line num="803" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="803" type="cond"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="mult(double) : RandomVariable" num="816" count="132282500" type="method"/>
            <line num="818" count="132342896" type="stmt"/>
            <line falsecount="127775460" truecount="4449194" num="818" type="cond"/>
            <line num="819" count="4449236" type="stmt"/>
            <line num="820" count="4449263" type="stmt"/>
            <line num="823" count="127831336" type="stmt"/>
            <line num="824" count="128120082" type="stmt"/>
            <line falsecount="128132123" truecount="2147483647" num="824" type="cond"/>
            <line num="825" count="2147483647" type="stmt"/>
            <line num="827" count="128134462" type="stmt"/>
            <line complexity="3" visibility="public" signature="div(double) : RandomVariable" num="831" count="5228833" type="method"/>
            <line num="833" count="5230376" type="stmt"/>
            <line falsecount="5223233" truecount="5111" num="833" type="cond"/>
            <line num="834" count="5111" type="stmt"/>
            <line num="835" count="5111" type="stmt"/>
            <line num="838" count="5224009" type="stmt"/>
            <line num="839" count="5229274" type="stmt"/>
            <line falsecount="5228927" truecount="639297090" num="839" type="cond"/>
            <line num="840" count="642048196" type="stmt"/>
            <line num="842" count="5228994" type="stmt"/>
            <line complexity="3" visibility="public" signature="vid(double) : RandomVariable" num="846" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="848" type="cond"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="854" type="cond"/>
            <line num="855" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="pow(double) : RandomVariable" num="861" count="12488" type="method"/>
            <line num="863" count="12488" type="stmt"/>
            <line falsecount="11634" truecount="854" num="863" type="cond"/>
            <line num="864" count="854" type="stmt"/>
            <line num="865" count="854" type="stmt"/>
            <line num="868" count="11634" type="stmt"/>
            <line num="869" count="11634" type="stmt"/>
            <line falsecount="11634" truecount="432820260" num="869" type="cond"/>
            <line num="870" count="432820260" type="stmt"/>
            <line num="872" count="11634" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="876" count="154109" type="method"/>
            <line num="878" count="154122" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="881" count="1162" type="method"/>
            <line num="884" count="1162" type="stmt"/>
            <line complexity="3" visibility="public" signature="squared() : RandomVariable" num="887" count="3739664" type="method"/>
            <line num="889" count="3739664" type="stmt"/>
            <line falsecount="3580128" truecount="159536" num="889" type="cond"/>
            <line num="890" count="159536" type="stmt"/>
            <line num="891" count="159536" type="stmt"/>
            <line num="894" count="3580128" type="stmt"/>
            <line num="895" count="3580128" type="stmt"/>
            <line falsecount="3580128" truecount="996584545" num="895" type="cond"/>
            <line num="896" count="996584545" type="stmt"/>
            <line num="898" count="3580128" type="stmt"/>
            <line complexity="3" visibility="public" signature="sqrt() : RandomVariable" num="902" count="3661" type="method"/>
            <line num="904" count="3661" type="stmt"/>
            <line falsecount="1715" truecount="1946" num="904" type="cond"/>
            <line num="905" count="1946" type="stmt"/>
            <line num="906" count="1946" type="stmt"/>
            <line num="909" count="1715" type="stmt"/>
            <line num="910" count="1715" type="stmt"/>
            <line falsecount="1715" truecount="239200554" num="910" type="cond"/>
            <line num="911" count="239228241" type="stmt"/>
            <line num="913" count="1715" type="stmt"/>
            <line complexity="3" visibility="public" signature="invert() : RandomVariable" num="917" count="29208469" type="method"/>
            <line num="919" count="29208441" type="stmt"/>
            <line falsecount="29055505" truecount="152844" num="919" type="cond"/>
            <line num="920" count="152844" type="stmt"/>
            <line num="921" count="152844" type="stmt"/>
            <line num="924" count="29055501" type="stmt"/>
            <line num="925" count="29055462" type="stmt"/>
            <line falsecount="29055602" truecount="1771570417" num="925" type="cond"/>
            <line num="926" count="1771538266" type="stmt"/>
            <line num="928" count="29055589" type="stmt"/>
            <line complexity="3" visibility="public" signature="abs() : RandomVariable" num="932" count="20174" type="method"/>
            <line num="934" count="20174" type="stmt"/>
            <line falsecount="19898" truecount="276" num="934" type="cond"/>
            <line num="935" count="276" type="stmt"/>
            <line num="936" count="276" type="stmt"/>
            <line num="939" count="19898" type="stmt"/>
            <line num="940" count="19898" type="stmt"/>
            <line falsecount="19898" truecount="1989800000" num="940" type="cond"/>
            <line num="941" count="1989800000" type="stmt"/>
            <line num="943" count="19898" type="stmt"/>
            <line complexity="3" visibility="public" signature="exp() : RandomVariableFromDoubleArray" num="947" count="636511" type="method"/>
            <line num="949" count="636560" type="stmt"/>
            <line falsecount="633968" truecount="2496" num="949" type="cond"/>
            <line num="950" count="2496" type="stmt"/>
            <line num="951" count="2496" type="stmt"/>
            <line num="954" count="634043" type="stmt"/>
            <line num="955" count="634506" type="stmt"/>
            <line falsecount="634492" truecount="2147483647" num="955" type="cond"/>
            <line num="956" count="2147483647" type="stmt"/>
            <line num="958" count="634499" type="stmt"/>
            <line complexity="3" visibility="public" signature="expm1() : RandomVariableFromDoubleArray" num="962" count="0" type="method"/>
            <line num="964" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="964" type="cond"/>
            <line num="965" count="0" type="stmt"/>
            <line num="966" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line num="970" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="970" type="cond"/>
            <line num="971" count="0" type="stmt"/>
            <line num="973" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="log() : RandomVariableFromDoubleArray" num="977" count="436358" type="method"/>
            <line num="979" count="436444" type="stmt"/>
            <line falsecount="430480" truecount="531" num="979" type="cond"/>
            <line num="980" count="531" type="stmt"/>
            <line num="981" count="531" type="stmt"/>
            <line num="984" count="432578" type="stmt"/>
            <line num="985" count="436538" type="stmt"/>
            <line falsecount="439562" truecount="2147483647" num="985" type="cond"/>
            <line num="986" count="2147483647" type="stmt"/>
            <line num="988" count="439627" type="stmt"/>
            <line complexity="3" visibility="public" signature="sin() : RandomVariable" num="992" count="0" type="method"/>
            <line num="994" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="994" type="cond"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1000" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1000" type="cond"/>
            <line num="1001" count="0" type="stmt"/>
            <line num="1003" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cos() : RandomVariable" num="1007" count="0" type="method"/>
            <line num="1009" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1009" type="cond"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1015" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1015" type="cond"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1018" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1026" count="43827960" type="method"/>
            <line num="1028" count="43873967" type="stmt"/>
            <line falsecount="43789654" truecount="0" num="1028" type="cond"/>
            <line num="1030" count="0" type="stmt"/>
            <line num="1034" count="43826959" type="stmt"/>
            <line num="1036" count="43742034" type="stmt"/>
            <line falsecount="43648328" truecount="60112" num="1036" type="cond"/>
            <line num="1037" count="60112" type="stmt"/>
            <line num="1038" count="60112" type="stmt"/>
            <line num="1040" count="43691113" type="stmt"/>
            <line falsecount="43601730" truecount="698" num="1040" type="cond"/>
            <line num="1041" count="698" type="stmt"/>
            <line num="1042" count="698" type="stmt"/>
            <line falsecount="698" truecount="6980000" num="1042" type="cond"/>
            <line num="1043" count="6980000" type="stmt"/>
            <line num="1045" count="698" type="stmt"/>
            <line num="1047" count="43637270" type="stmt"/>
            <line falsecount="5190542" truecount="38378289" num="1047" type="cond"/>
            <line num="1048" count="38405559" type="stmt"/>
            <line num="1051" count="5191471" type="stmt"/>
            <line num="1052" count="5209685" type="stmt"/>
            <line falsecount="5182328" truecount="2147483647" num="1052" type="cond"/>
            <line num="1053" count="2147483647" type="stmt"/>
            <line num="1055" count="5188591" type="stmt"/>
            <line complexity="8" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1059" count="4344550" type="method"/>
            <line num="1061" count="4344655" type="stmt"/>
            <line falsecount="4318887" truecount="25327" num="1061" type="cond"/>
            <line num="1063" count="25327" type="stmt"/>
            <line num="1067" count="4318996" type="stmt"/>
            <line num="1069" count="4318883" type="stmt"/>
            <line falsecount="3905846" truecount="412929" num="1069" type="cond"/>
            <line num="1070" count="412977" type="stmt"/>
            <line num="1071" count="412914" type="stmt"/>
            <line num="1073" count="3905902" type="stmt"/>
            <line falsecount="3905672" truecount="80" num="1073" type="cond"/>
            <line num="1074" count="80" type="stmt"/>
            <line num="1075" count="80" type="stmt"/>
            <line falsecount="80" truecount="820000" num="1075" type="cond"/>
            <line num="1076" count="820000" type="stmt"/>
            <line num="1078" count="80" type="stmt"/>
            <line num="1080" count="3905718" type="stmt"/>
            <line falsecount="341936" truecount="3563613" num="1080" type="cond"/>
            <line num="1081" count="3563616" type="stmt"/>
            <line num="1084" count="342008" type="stmt"/>
            <line num="1085" count="342763" type="stmt"/>
            <line falsecount="342236" truecount="2147483647" num="1085" type="cond"/>
            <line num="1086" count="2147483647" type="stmt"/>
            <line num="1088" count="342261" type="stmt"/>
            <line complexity="7" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1092" count="25327" type="method"/>
            <line num="1094" count="25327" type="stmt"/>
            <line falsecount="25327" truecount="0" num="1094" type="cond"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1100" count="25327" type="stmt"/>
            <line num="1102" count="25327" type="stmt"/>
            <line falsecount="8" truecount="25319" num="1102" type="cond"/>
            <line num="1103" count="25319" type="stmt"/>
            <line num="1104" count="25319" type="stmt"/>
            <line num="1106" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="1106" type="cond"/>
            <line num="1107" count="0" type="stmt"/>
            <line num="1108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1108" type="cond"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1111" count="0" type="stmt"/>
            <line num="1114" count="8" type="stmt"/>
            <line num="1115" count="8" type="stmt"/>
            <line falsecount="8" truecount="940000" num="1115" type="cond"/>
            <line num="1116" count="940000" type="stmt"/>
            <line num="1118" count="8" type="stmt"/>
            <line complexity="8" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1122" count="87322268" type="method"/>
            <line num="1124" count="87322211" type="stmt"/>
            <line falsecount="87316433" truecount="5088" num="1124" type="cond"/>
            <line num="1126" count="5088" type="stmt"/>
            <line num="1130" count="87316405" type="stmt"/>
            <line num="1132" count="87316099" type="stmt"/>
            <line falsecount="83694141" truecount="3621179" num="1132" type="cond"/>
            <line num="1133" count="3621179" type="stmt"/>
            <line num="1134" count="3621171" type="stmt"/>
            <line num="1136" count="83694583" type="stmt"/>
            <line falsecount="46643760" truecount="37050073" num="1136" type="cond"/>
            <line num="1137" count="37050300" type="stmt"/>
            <line num="1139" count="46643793" type="stmt"/>
            <line falsecount="46641417" truecount="2237" num="1139" type="cond"/>
            <line num="1140" count="2237" type="stmt"/>
            <line num="1141" count="2237" type="stmt"/>
            <line falsecount="2237" truecount="38080040" num="1141" type="cond"/>
            <line num="1142" count="38080040" type="stmt"/>
            <line num="1144" count="2237" type="stmt"/>
            <line num="1147" count="46641473" type="stmt"/>
            <line num="1148" count="46642121" type="stmt"/>
            <line falsecount="46640940" truecount="426149384" num="1148" type="cond"/>
            <line num="1149" count="433579301" type="stmt"/>
            <line num="1151" count="46641053" type="stmt"/>
            <line complexity="7" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1155" count="4846428" type="method"/>
            <line num="1157" count="4846559" type="stmt"/>
            <line falsecount="4845964" truecount="0" num="1157" type="cond"/>
            <line num="1159" count="0" type="stmt"/>
            <line num="1163" count="4846148" type="stmt"/>
            <line num="1165" count="4845930" type="stmt"/>
            <line falsecount="4542988" truecount="302731" num="1165" type="cond"/>
            <line num="1166" count="302731" type="stmt"/>
            <line num="1167" count="302731" type="stmt"/>
            <line num="1169" count="4543192" type="stmt"/>
            <line falsecount="994788" truecount="3548051" num="1169" type="cond"/>
            <line num="1170" count="3548048" type="stmt"/>
            <line num="1171" count="3548057" type="stmt"/>
            <line falsecount="3548056" truecount="877063674" num="1171" type="cond"/>
            <line num="1172" count="877300706" type="stmt"/>
            <line num="1174" count="3548056" type="stmt"/>
            <line num="1177" count="994894" type="stmt"/>
            <line num="1178" count="995919" type="stmt"/>
            <line falsecount="994360" truecount="2008176550" num="1178" type="cond"/>
            <line num="1179" count="2010063580" type="stmt"/>
            <line num="1181" count="994606" type="stmt"/>
            <line complexity="7" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1185" count="0" type="method"/>
            <line num="1187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1187" type="cond"/>
            <line num="1189" count="0" type="stmt"/>
            <line num="1193" count="0" type="stmt"/>
            <line num="1195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1195" type="cond"/>
            <line num="1196" count="0" type="stmt"/>
            <line num="1197" count="0" type="stmt"/>
            <line num="1199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1199" type="cond"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1201" type="cond"/>
            <line num="1202" count="0" type="stmt"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1208" type="cond"/>
            <line num="1209" count="0" type="stmt"/>
            <line num="1211" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1215" count="1980" type="method"/>
            <line num="1217" count="1980" type="stmt"/>
            <line falsecount="1980" truecount="0" num="1217" type="cond"/>
            <line num="1219" count="0" type="stmt"/>
            <line num="1223" count="1980" type="stmt"/>
            <line num="1225" count="1980" type="stmt"/>
            <line falsecount="1009" truecount="971" num="1225" type="cond"/>
            <line num="1226" count="971" type="stmt"/>
            <line num="1227" count="971" type="stmt"/>
            <line num="1229" count="1009" type="stmt"/>
            <line falsecount="1009" truecount="0" num="1229" type="cond"/>
            <line num="1230" count="0" type="stmt"/>
            <line num="1231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1231" type="cond"/>
            <line num="1232" count="0" type="stmt"/>
            <line num="1234" count="0" type="stmt"/>
            <line num="1236" count="1009" type="stmt"/>
            <line num="1237" count="1009" type="stmt"/>
            <line falsecount="1009" truecount="84800015" num="1237" type="cond"/>
            <line num="1238" count="84800015" type="stmt"/>
            <line num="1240" count="1009" type="stmt"/>
            <line complexity="8" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1244" count="203" type="method"/>
            <line num="1246" count="203" type="stmt"/>
            <line falsecount="203" truecount="0" num="1246" type="cond"/>
            <line num="1248" count="0" type="stmt"/>
            <line num="1252" count="203" type="stmt"/>
            <line num="1254" count="203" type="stmt"/>
            <line falsecount="203" truecount="0" num="1254" type="cond"/>
            <line num="1255" count="0" type="stmt"/>
            <line num="1256" count="0" type="stmt"/>
            <line num="1258" count="203" type="stmt"/>
            <line falsecount="203" truecount="0" num="1258" type="cond"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1260" type="cond"/>
            <line num="1261" count="0" type="stmt"/>
            <line num="1263" count="0" type="stmt"/>
            <line num="1265" count="203" type="stmt"/>
            <line falsecount="3" truecount="200" num="1265" type="cond"/>
            <line num="1266" count="200" type="stmt"/>
            <line num="1269" count="3" type="stmt"/>
            <line num="1270" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="1270" type="cond"/>
            <line num="1271" count="15" type="stmt"/>
            <line num="1273" count="3" type="stmt"/>
            <line complexity="7" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1277" count="5409856" type="method"/>
            <line num="1279" count="5410506" type="stmt"/>
            <line falsecount="5402377" truecount="0" num="1279" type="cond"/>
            <line num="1281" count="0" type="stmt"/>
            <line num="1285" count="5403098" type="stmt"/>
            <line num="1287" count="5398860" type="stmt"/>
            <line falsecount="5397261" truecount="0" num="1287" type="cond"/>
            <line num="1288" count="0" type="stmt"/>
            <line num="1290" count="5398535" type="stmt"/>
            <line falsecount="5394485" truecount="0" num="1290" type="cond"/>
            <line num="1291" count="0" type="stmt"/>
            <line num="1292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1292" type="cond"/>
            <line num="1293" count="0" type="stmt"/>
            <line num="1295" count="0" type="stmt"/>
            <line num="1298" count="5395471" type="stmt"/>
            <line num="1299" count="5409661" type="stmt"/>
            <line falsecount="5376020" truecount="2147483647" num="1299" type="cond"/>
            <line num="1300" count="2147483647" type="stmt"/>
            <line num="1302" count="5377430" type="stmt"/>
            <line complexity="7" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1306" count="5345083" type="method"/>
            <line num="1308" count="5347907" type="stmt"/>
            <line falsecount="5345832" truecount="0" num="1308" type="cond"/>
            <line num="1310" count="0" type="stmt"/>
            <line num="1314" count="5347126" type="stmt"/>
            <line num="1316" count="5345124" type="stmt"/>
            <line falsecount="5344577" truecount="1" num="1316" type="cond"/>
            <line num="1317" count="1" type="stmt"/>
            <line num="1319" count="5345610" type="stmt"/>
            <line falsecount="5342648" truecount="3" num="1319" type="cond"/>
            <line num="1320" count="3" type="stmt"/>
            <line num="1321" count="3" type="stmt"/>
            <line falsecount="3" truecount="30000" num="1321" type="cond"/>
            <line num="1322" count="30000" type="stmt"/>
            <line num="1324" count="3" type="stmt"/>
            <line num="1327" count="5343310" type="stmt"/>
            <line num="1328" count="5362066" type="stmt"/>
            <line falsecount="5333079" truecount="2147483647" num="1328" type="cond"/>
            <line num="1329" count="2147483647" type="stmt"/>
            <line num="1331" count="5334518" type="stmt"/>
            <line complexity="5" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1340" count="3567422" type="method"/>
            <line num="1343" count="3567422" type="stmt"/>
            <line num="1344" count="3567422" type="stmt"/>
            <line num="1345" count="3567422" type="stmt"/>
            <line num="1347" count="3567422" type="stmt"/>
            <line falsecount="3561403" truecount="6019" num="1347" type="cond"/>
            <line num="1348" count="6019" type="stmt"/>
            <line falsecount="1600" truecount="4419" num="1348" type="cond"/>
            <line num="1349" count="4419" type="stmt"/>
            <line num="1351" count="1600" type="stmt"/>
            <line num="1355" count="3561403" type="stmt"/>
            <line num="1356" count="3561403" type="stmt"/>
            <line num="1357" count="3561403" type="stmt"/>
            <line falsecount="3561403" truecount="903524400" num="1357" type="cond"/>
            <line num="1358" count="903524400" type="stmt"/>
            <line falsecount="563411525" truecount="340112875" num="1358" type="cond"/>
            <line num="1360" count="3561403" type="stmt"/>
            <line complexity="7" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1364" count="68717788" type="method"/>
            <line num="1366" count="68745849" type="stmt"/>
            <line falsecount="68549124" truecount="128" num="1366" type="cond"/>
            <line num="1368" count="128" type="stmt"/>
            <line num="1372" count="68617418" type="stmt"/>
            <line num="1374" count="68524156" type="stmt"/>
            <line falsecount="67939467" truecount="545272" num="1374" type="cond"/>
            <line num="1375" count="545279" type="stmt"/>
            <line num="1377" count="68007834" type="stmt"/>
            <line falsecount="67850961" truecount="460" num="1377" type="cond"/>
            <line num="1378" count="460" type="stmt"/>
            <line num="1379" count="460" type="stmt"/>
            <line falsecount="460" truecount="9900020" num="1379" type="cond"/>
            <line num="1380" count="9900020" type="stmt"/>
            <line num="1382" count="460" type="stmt"/>
            <line num="1385" count="67888156" type="stmt"/>
            <line num="1386" count="68357100" type="stmt"/>
            <line falsecount="67439701" truecount="79615940" num="1386" type="cond"/>
            <line num="1387" count="465699974" type="stmt"/>
            <line num="1389" count="67492201" type="stmt"/>
            <line complexity="14" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1393" count="94088996" type="method"/>
            <line num="1395" count="94176547" type="stmt"/>
            <line falsecount="93984002" truecount="254" num="1395" type="cond"/>
            <line num="1397" count="254" type="stmt"/>
            <line num="1401" count="94022175" type="stmt"/>
            <line num="1403" count="93900623" type="stmt"/>
            <line falsecount="93867553" truecount="10617" num="1403" type="cond"/>
            <line num="1404" count="10617" type="stmt"/>
            <line num="1405" count="10617" type="stmt"/>
            <line num="1407" count="93905116" type="stmt"/>
            <line falsecount="93801282" truecount="2966" num="1407" type="cond"/>
            <line num="1408" count="2966" type="stmt"/>
            <line num="1410" count="93827888" type="stmt"/>
            <line falsecount="83594433" truecount="10165006" num="1410" type="cond"/>
            <line num="1411" count="10165195" type="stmt"/>
            <line num="1413" count="83632728" type="stmt"/>
            <line falsecount="50444434" truecount="33124115" num="1413" type="cond"/>
            <line num="1414" count="33130703" type="stmt"/>
            <line num="1416" count="50507297" type="stmt"/>
            <line falsecount="78" truecount="50548042" num="1416" type="cond"/>
            <line num="1417" count="50601994" type="stmt"/>
            <line num="1418" count="51097755" type="stmt"/>
            <line falsecount="50302639" truecount="1435044323" num="1418" type="cond"/>
            <line num="1419" count="1499779457" type="stmt"/>
            <line num="1421" count="50365095" type="stmt"/>
            <line num="1424" count="78" type="stmt"/>
            <line complexity="2" visibility="public" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="1428" count="0" type="method"/>
            <line num="1431" count="0" type="stmt"/>
            <line num="1432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1432" type="cond"/>
            <line num="1433" count="0" type="stmt"/>
            <line num="1435" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1438" count="720" type="method"/>
            <line num="1440" count="720" type="stmt"/>
            <line falsecount="720" truecount="0" num="1440" type="cond"/>
            <line num="1442" count="0" type="stmt"/>
            <line num="1446" count="720" type="stmt"/>
            <line num="1448" count="720" type="stmt"/>
            <line falsecount="720" truecount="0" num="1448" type="cond"/>
            <line num="1449" count="0" type="stmt"/>
            <line num="1450" count="0" type="stmt"/>
            <line num="1453" count="720" type="stmt"/>
            <line num="1454" count="720" type="stmt"/>
            <line falsecount="720" truecount="13672225" num="1454" type="cond"/>
            <line num="1455" count="13710393" type="stmt"/>
            <line num="1457" count="720" type="stmt"/>
            <line complexity="7" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1461" count="660" type="method"/>
            <line num="1463" count="660" type="stmt"/>
            <line falsecount="660" truecount="0" num="1463" type="cond"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1469" count="660" type="stmt"/>
            <line num="1471" count="660" type="stmt"/>
            <line falsecount="660" truecount="0" num="1471" type="cond"/>
            <line num="1472" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line num="1476" count="660" type="stmt"/>
            <line num="1477" count="660" type="stmt"/>
            <line falsecount="660" truecount="13344942" num="1477" type="cond"/>
            <line num="1478" count="13382597" type="stmt"/>
            <line num="1480" count="660" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1484" count="1790" type="method"/>
            <line num="1486" count="1790" type="stmt"/>
            <line falsecount="222" truecount="1568" num="1486" type="cond"/>
            <line num="1487" count="1568" type="stmt"/>
            <line falsecount="1568" truecount="0" num="1487" type="cond"/>
            <line num="1490" count="222" type="stmt"/>
            <line num="1491" count="222" type="stmt"/>
            <line falsecount="222" truecount="4500000" num="1491" type="cond"/>
            <line num="1492" count="4500000" type="stmt"/>
            <line falsecount="4500000" truecount="0" num="1492" type="cond"/>
            <line num="1494" count="222" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="1498" count="78" type="method"/>
            <line num="1500" count="78" type="stmt"/>
            <line falsecount="0" truecount="78" num="1501" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/RandomVariableFromFloatArray.java" name="RandomVariableFromFloatArray.java">
            <metrics coveredelements="392" coveredconditionals="127" complexity="308" loc="1495" coveredmethods="40" methods="86" elements="1099" classes="1" ncloc="1166" statements="633" conditionals="380" coveredstatements="225"/>
            <class name="RandomVariableFromFloatArray">
               <metrics coveredelements="392" coveredconditionals="127" complexity="308" coveredmethods="40" methods="86" elements="1099" statements="633" conditionals="380" coveredstatements="225"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableFromFloatArray(RandomVariable)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableFromFloatArray(RandomVariable,DoubleUnaryOperator)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double,int)" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double)" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,float[])" num="124" count="40748" type="method"/>
            <line num="125" count="40748" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,int,double)" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,float[],int)" num="156" count="49329" type="method"/>
            <line num="157" count="49329" type="stmt"/>
            <line num="158" count="49329" type="stmt"/>
            <line num="159" count="49329" type="stmt"/>
            <line num="160" count="49329" type="stmt"/>
            <line num="161" count="49329" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double[])" num="174" count="8581" type="method"/>
            <line num="175" count="8581" type="stmt"/>
            <line complexity="4" visibility="public" signature="RandomVariableFromFloatArray(double,IntToDoubleFunction,int,int)" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(int) : void" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,IntToDoubleFunction,int)" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFloatArray(double[]) : float[]" num="214" count="8581" type="method"/>
            <line num="215" count="8581" type="stmt"/>
            <line num="216" count="8581" type="stmt"/>
            <line falsecount="8581" truecount="344471139" num="216" type="cond"/>
            <line num="217" count="344471139" type="stmt"/>
            <line num="219" count="8581" type="stmt"/>
            <line complexity="2" visibility="private" signature="getDoubleArray(float[]) : double[]" num="222" count="103" type="method"/>
            <line num="223" count="103" type="stmt"/>
            <line num="224" count="103" type="stmt"/>
            <line falsecount="103" truecount="10060000" num="224" type="cond"/>
            <line num="225" count="10060000" type="stmt"/>
            <line num="227" count="103" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="230" count="1" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000" num="243" type="cond"/>
            <line num="244" count="10000" type="stmt"/>
            <line falsecount="10000" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="252" count="25671" type="method"/>
            <line num="254" count="25671" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="257" count="57356" type="method"/>
            <line num="259" count="57356" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="262" count="2147483647" type="method"/>
            <line num="264" count="2147483647" type="stmt"/>
            <line falsecount="2147483647" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="2147483647" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="271" count="54742" type="method"/>
            <line num="273" count="54742" type="stmt"/>
            <line falsecount="54742" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="54742" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMin() : double" num="280" count="1" type="method"/>
            <line num="282" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="286" type="cond"/>
            <line num="287" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000000" num="289" type="cond"/>
            <line num="290" count="10000000" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMax() : double" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage() : double" num="310" count="1985" type="method"/>
            <line num="312" count="1985" type="stmt"/>
            <line falsecount="1985" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="1985" type="stmt"/>
            <line falsecount="1985" truecount="0" num="315" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="322" count="1985" type="stmt"/>
            <line num="323" count="1985" type="stmt"/>
            <line num="324" count="1985" type="stmt"/>
            <line falsecount="1985" truecount="352562188" num="324" type="cond"/>
            <line num="325" count="352562188" type="stmt"/>
            <line num="326" count="352562188" type="stmt"/>
            <line num="327" count="352562188" type="stmt"/>
            <line num="328" count="352562188" type="stmt"/>
            <line num="330" count="1985" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage(RandomVariable) : double" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVariance() : double" num="356" count="452" type="method"/>
            <line num="358" count="452" type="stmt"/>
            <line falsecount="452" truecount="0" num="358" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="452" type="stmt"/>
            <line falsecount="452" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="365" count="452" type="stmt"/>
            <line num="370" count="452" type="stmt"/>
            <line num="371" count="452" type="stmt"/>
            <line num="372" count="452" type="stmt"/>
            <line falsecount="452" truecount="146171112" num="372" type="cond"/>
            <line num="373" count="146171112" type="stmt"/>
            <line num="374" count="146171112" type="stmt"/>
            <line num="375" count="146171112" type="stmt"/>
            <line num="376" count="146171112" type="stmt"/>
            <line num="378" count="452" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="418" count="407" type="method"/>
            <line num="420" count="407" type="stmt"/>
            <line falsecount="407" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="407" type="stmt"/>
            <line falsecount="407" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="407" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="442" count="164" type="method"/>
            <line num="444" count="164" type="stmt"/>
            <line falsecount="164" truecount="0" num="444" type="cond"/>
            <line num="445" count="0" type="stmt"/>
            <line num="447" count="164" type="stmt"/>
            <line falsecount="164" truecount="0" num="447" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="164" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="457" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="469" count="5" type="method"/>
            <line num="471" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="474" type="cond"/>
            <line num="475" count="0" type="stmt"/>
            <line num="478" count="5" type="stmt"/>
            <line num="479" count="5" type="stmt"/>
            <line num="481" count="5" type="stmt"/>
            <line num="483" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="486" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="517" type="cond"/>
            <line num="518" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="525" count="9" type="method"/>
            <line num="528" count="9" type="stmt"/>
            <line num="530" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="530" type="cond"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="538" type="cond"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="552" count="9" type="stmt"/>
            <line num="553" count="9" type="stmt"/>
            <line num="555" count="9" type="stmt"/>
            <line num="556" count="9" type="stmt"/>
            <line falsecount="9" truecount="918" num="556" type="cond"/>
            <line num="558" count="918" type="stmt"/>
            <line num="559" count="918" type="stmt"/>
            <line falsecount="918" truecount="75429284" num="559" type="cond"/>
            <line num="562" count="75429284" type="stmt"/>
            <line num="563" count="75429284" type="stmt"/>
            <line num="565" count="918" type="stmt"/>
            <line num="567" count="9" type="stmt"/>
            <line num="570" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="570" type="cond"/>
            <line num="571" count="9" type="stmt"/>
            <line falsecount="9" truecount="927" num="571" type="cond"/>
            <line num="572" count="927" type="stmt"/>
            <line num="577" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="587" type="cond"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="601" count="2147483647" type="method"/>
            <line num="603" count="2147483647" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="606" count="1530" type="method"/>
            <line num="608" count="1530" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="613" type="cond"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="615" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="625" count="103" type="method"/>
            <line num="627" count="103" type="stmt"/>
            <line falsecount="103" truecount="0" num="627" type="cond"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="631" count="103" type="stmt"/>
            <line complexity="3" visibility="public" signature="doubleValue() : Double" num="635" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="637" type="cond"/>
            <line num="638" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="640" type="cond"/>
            <line num="641" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getOperator() : IntToDoubleFunction" num="648" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="650" type="cond"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="652" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="660" count="0" type="method"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="668" count="0" type="method"/>
            <line num="670" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="670" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="676" type="cond"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="683" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="688" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="690" type="cond"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="693" type="cond"/>
            <line num="694" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="698" type="cond"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="701" type="cond"/>
            <line num="702" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="709" type="cond"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="723" count="0" type="method"/>
            <line num="725" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="732" count="0" type="method"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="742" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="743" count="0" type="method"/>
            <line num="745" count="0" type="stmt"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cap(double) : RandomVariable" num="752" count="0" type="method"/>
            <line num="754" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="754" type="cond"/>
            <line num="755" count="0" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="floor(double) : RandomVariable" num="767" count="192" type="method"/>
            <line num="769" count="192" type="stmt"/>
            <line falsecount="192" truecount="0" num="769" type="cond"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="774" count="192" type="stmt"/>
            <line num="775" count="192" type="stmt"/>
            <line falsecount="192" truecount="10400000" num="775" type="cond"/>
            <line num="776" count="10400000" type="stmt"/>
            <line num="778" count="192" type="stmt"/>
            <line complexity="3" visibility="public" signature="add(double) : RandomVariable" num="782" count="1546" type="method"/>
            <line num="784" count="1546" type="stmt"/>
            <line falsecount="1546" truecount="0" num="784" type="cond"/>
            <line num="785" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line num="789" count="1546" type="stmt"/>
            <line num="790" count="1546" type="stmt"/>
            <line falsecount="1546" truecount="93000025" num="790" type="cond"/>
            <line num="791" count="93000025" type="stmt"/>
            <line num="793" count="1546" type="stmt"/>
            <line complexity="3" visibility="public" signature="sub(double) : RandomVariable" num="797" count="1673" type="method"/>
            <line num="799" count="1673" type="stmt"/>
            <line falsecount="1673" truecount="0" num="799" type="cond"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="804" count="1673" type="stmt"/>
            <line num="805" count="1673" type="stmt"/>
            <line falsecount="1673" truecount="78420000" num="805" type="cond"/>
            <line num="806" count="78420000" type="stmt"/>
            <line num="808" count="1673" type="stmt"/>
            <line complexity="3" visibility="public" signature="bus(double) : RandomVariable" num="812" count="0" type="method"/>
            <line num="814" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="814" type="cond"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="820" type="cond"/>
            <line num="821" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="mult(double) : RandomVariable" num="827" count="2929" type="method"/>
            <line num="829" count="2929" type="stmt"/>
            <line falsecount="2929" truecount="0" num="829" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="834" count="2929" type="stmt"/>
            <line num="835" count="2929" type="stmt"/>
            <line falsecount="2929" truecount="141700040" num="835" type="cond"/>
            <line num="836" count="141700040" type="stmt"/>
            <line num="838" count="2929" type="stmt"/>
            <line complexity="3" visibility="public" signature="div(double) : RandomVariable" num="842" count="166" type="method"/>
            <line num="844" count="166" type="stmt"/>
            <line falsecount="166" truecount="0" num="844" type="cond"/>
            <line num="845" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line num="849" count="166" type="stmt"/>
            <line num="850" count="166" type="stmt"/>
            <line falsecount="166" truecount="3260015" num="850" type="cond"/>
            <line num="851" count="3260015" type="stmt"/>
            <line num="853" count="166" type="stmt"/>
            <line complexity="3" visibility="public" signature="vid(double) : RandomVariable" num="857" count="0" type="method"/>
            <line num="859" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="859" type="cond"/>
            <line num="860" count="0" type="stmt"/>
            <line num="861" count="0" type="stmt"/>
            <line num="864" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="865" type="cond"/>
            <line num="866" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="pow(double) : RandomVariable" num="872" count="486" type="method"/>
            <line num="874" count="486" type="stmt"/>
            <line falsecount="486" truecount="0" num="874" type="cond"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="879" count="486" type="stmt"/>
            <line num="880" count="486" type="stmt"/>
            <line falsecount="486" truecount="48000036" num="880" type="cond"/>
            <line num="881" count="48000036" type="stmt"/>
            <line num="883" count="486" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="887" count="0" type="method"/>
            <line num="889" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="892" count="0" type="method"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="squared() : RandomVariable" num="898" count="4039" type="method"/>
            <line num="900" count="4039" type="stmt"/>
            <line falsecount="4039" truecount="0" num="900" type="cond"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line num="905" count="4039" type="stmt"/>
            <line num="906" count="4039" type="stmt"/>
            <line falsecount="4039" truecount="40720018" num="906" type="cond"/>
            <line num="907" count="40720018" type="stmt"/>
            <line num="909" count="4039" type="stmt"/>
            <line complexity="3" visibility="public" signature="sqrt() : RandomVariable" num="913" count="3" type="method"/>
            <line num="915" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="915" type="cond"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line num="920" count="3" type="stmt"/>
            <line num="921" count="3" type="stmt"/>
            <line falsecount="3" truecount="18" num="921" type="cond"/>
            <line num="922" count="18" type="stmt"/>
            <line num="924" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="invert() : RandomVariable" num="928" count="0" type="method"/>
            <line num="930" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="930" type="cond"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="936" type="cond"/>
            <line num="937" count="0" type="stmt"/>
            <line num="939" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="abs() : RandomVariable" num="943" count="98" type="method"/>
            <line num="945" count="98" type="stmt"/>
            <line falsecount="98" truecount="0" num="945" type="cond"/>
            <line num="946" count="0" type="stmt"/>
            <line num="947" count="0" type="stmt"/>
            <line num="950" count="98" type="stmt"/>
            <line num="951" count="98" type="stmt"/>
            <line falsecount="98" truecount="9800000" num="951" type="cond"/>
            <line num="952" count="9800000" type="stmt"/>
            <line num="954" count="98" type="stmt"/>
            <line complexity="3" visibility="public" signature="exp() : RandomVariableFromFloatArray" num="958" count="1012" type="method"/>
            <line num="960" count="1012" type="stmt"/>
            <line falsecount="1012" truecount="0" num="960" type="cond"/>
            <line num="961" count="0" type="stmt"/>
            <line num="962" count="0" type="stmt"/>
            <line num="965" count="1012" type="stmt"/>
            <line num="966" count="1012" type="stmt"/>
            <line falsecount="1012" truecount="35920000" num="966" type="cond"/>
            <line num="967" count="35920000" type="stmt"/>
            <line num="969" count="1012" type="stmt"/>
            <line complexity="3" visibility="public" signature="log() : RandomVariableFromFloatArray" num="973" count="774" type="method"/>
            <line num="975" count="774" type="stmt"/>
            <line falsecount="774" truecount="0" num="975" type="cond"/>
            <line num="976" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line num="980" count="774" type="stmt"/>
            <line num="981" count="774" type="stmt"/>
            <line falsecount="774" truecount="15480000" num="981" type="cond"/>
            <line num="982" count="15480000" type="stmt"/>
            <line num="984" count="774" type="stmt"/>
            <line complexity="3" visibility="public" signature="sin() : RandomVariable" num="988" count="0" type="method"/>
            <line num="990" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="990" type="cond"/>
            <line num="991" count="0" type="stmt"/>
            <line num="992" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="996" type="cond"/>
            <line num="997" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cos() : RandomVariable" num="1003" count="0" type="method"/>
            <line num="1005" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1005" type="cond"/>
            <line num="1006" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1011" type="cond"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1022" count="18014" type="method"/>
            <line num="1024" count="18014" type="stmt"/>
            <line falsecount="18014" truecount="0" num="1024" type="cond"/>
            <line num="1026" count="0" type="stmt"/>
            <line num="1030" count="18014" type="stmt"/>
            <line num="1032" count="18014" type="stmt"/>
            <line falsecount="18014" truecount="0" num="1032" type="cond"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1034" count="0" type="stmt"/>
            <line num="1036" count="18014" type="stmt"/>
            <line falsecount="18014" truecount="0" num="1036" type="cond"/>
            <line num="1037" count="0" type="stmt"/>
            <line num="1038" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1038" type="cond"/>
            <line num="1039" count="0" type="stmt"/>
            <line num="1041" count="0" type="stmt"/>
            <line num="1043" count="18014" type="stmt"/>
            <line num="1044" count="18014" type="stmt"/>
            <line falsecount="18014" truecount="2147483647" num="1044" type="cond"/>
            <line num="1045" count="2147483647" type="stmt"/>
            <line num="1047" count="18014" type="stmt"/>
            <line complexity="7" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1051" count="908" type="method"/>
            <line num="1053" count="908" type="stmt"/>
            <line falsecount="908" truecount="0" num="1053" type="cond"/>
            <line num="1055" count="0" type="stmt"/>
            <line num="1059" count="908" type="stmt"/>
            <line num="1061" count="908" type="stmt"/>
            <line falsecount="908" truecount="0" num="1061" type="cond"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1065" count="908" type="stmt"/>
            <line falsecount="908" truecount="0" num="1065" type="cond"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1067" type="cond"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1070" count="0" type="stmt"/>
            <line num="1073" count="908" type="stmt"/>
            <line num="1074" count="908" type="stmt"/>
            <line falsecount="908" truecount="18680036" num="1074" type="cond"/>
            <line num="1075" count="18680036" type="stmt"/>
            <line num="1077" count="908" type="stmt"/>
            <line complexity="7" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1081" count="0" type="method"/>
            <line num="1083" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1083" type="cond"/>
            <line num="1085" count="0" type="stmt"/>
            <line num="1089" count="0" type="stmt"/>
            <line num="1091" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1091" type="cond"/>
            <line num="1092" count="0" type="stmt"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1095" type="cond"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1097" type="cond"/>
            <line num="1098" count="0" type="stmt"/>
            <line num="1100" count="0" type="stmt"/>
            <line num="1103" count="0" type="stmt"/>
            <line num="1104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1104" type="cond"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1107" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1111" count="5955" type="method"/>
            <line num="1113" count="5955" type="stmt"/>
            <line falsecount="5955" truecount="0" num="1113" type="cond"/>
            <line num="1115" count="0" type="stmt"/>
            <line num="1119" count="5955" type="stmt"/>
            <line num="1121" count="5955" type="stmt"/>
            <line falsecount="5955" truecount="0" num="1121" type="cond"/>
            <line num="1122" count="0" type="stmt"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1125" count="5955" type="stmt"/>
            <line falsecount="4168" truecount="1787" num="1125" type="cond"/>
            <line num="1126" count="1787" type="stmt"/>
            <line num="1127" count="4168" type="stmt"/>
            <line falsecount="4168" truecount="0" num="1127" type="cond"/>
            <line num="1128" count="0" type="stmt"/>
            <line num="1129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1129" type="cond"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1132" count="0" type="stmt"/>
            <line num="1135" count="4168" type="stmt"/>
            <line num="1136" count="4168" type="stmt"/>
            <line falsecount="4168" truecount="54960020" num="1136" type="cond"/>
            <line num="1137" count="54960020" type="stmt"/>
            <line num="1139" count="4168" type="stmt"/>
            <line complexity="7" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1143" count="2241" type="method"/>
            <line num="1145" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="0" num="1145" type="cond"/>
            <line num="1147" count="0" type="stmt"/>
            <line num="1151" count="2241" type="stmt"/>
            <line num="1153" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="0" num="1153" type="cond"/>
            <line num="1154" count="0" type="stmt"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1157" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="0" num="1157" type="cond"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1159" type="cond"/>
            <line num="1160" count="0" type="stmt"/>
            <line num="1162" count="0" type="stmt"/>
            <line num="1165" count="2241" type="stmt"/>
            <line num="1166" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="112020000" num="1166" type="cond"/>
            <line num="1167" count="112020000" type="stmt"/>
            <line num="1169" count="2241" type="stmt"/>
            <line complexity="7" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1173" count="0" type="method"/>
            <line num="1175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1175" type="cond"/>
            <line num="1177" count="0" type="stmt"/>
            <line num="1181" count="0" type="stmt"/>
            <line num="1183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1183" type="cond"/>
            <line num="1184" count="0" type="stmt"/>
            <line num="1185" count="0" type="stmt"/>
            <line num="1187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1187" type="cond"/>
            <line num="1188" count="0" type="stmt"/>
            <line num="1189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1189" type="cond"/>
            <line num="1190" count="0" type="stmt"/>
            <line num="1192" count="0" type="stmt"/>
            <line num="1195" count="0" type="stmt"/>
            <line num="1196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1196" type="cond"/>
            <line num="1197" count="0" type="stmt"/>
            <line num="1199" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1203" count="5" type="method"/>
            <line num="1205" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="1205" type="cond"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1211" count="5" type="stmt"/>
            <line num="1213" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="1213" type="cond"/>
            <line num="1214" count="0" type="stmt"/>
            <line num="1215" count="0" type="stmt"/>
            <line num="1217" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="1217" type="cond"/>
            <line num="1218" count="0" type="stmt"/>
            <line num="1219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1219" type="cond"/>
            <line num="1220" count="0" type="stmt"/>
            <line num="1222" count="0" type="stmt"/>
            <line num="1224" count="5" type="stmt"/>
            <line num="1225" count="5" type="stmt"/>
            <line falsecount="5" truecount="400005" num="1225" type="cond"/>
            <line num="1226" count="400005" type="stmt"/>
            <line num="1228" count="5" type="stmt"/>
            <line complexity="8" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1232" count="1" type="method"/>
            <line num="1234" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1234" type="cond"/>
            <line num="1236" count="0" type="stmt"/>
            <line num="1240" count="1" type="stmt"/>
            <line num="1242" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1242" type="cond"/>
            <line num="1243" count="0" type="stmt"/>
            <line num="1244" count="0" type="stmt"/>
            <line num="1246" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1246" type="cond"/>
            <line num="1247" count="0" type="stmt"/>
            <line num="1248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1248" type="cond"/>
            <line num="1249" count="0" type="stmt"/>
            <line num="1251" count="0" type="stmt"/>
            <line num="1253" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1253" type="cond"/>
            <line num="1254" count="0" type="stmt"/>
            <line num="1257" count="1" type="stmt"/>
            <line num="1258" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1258" type="cond"/>
            <line num="1259" count="5" type="stmt"/>
            <line num="1261" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1265" count="0" type="method"/>
            <line num="1267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1267" type="cond"/>
            <line num="1269" count="0" type="stmt"/>
            <line num="1273" count="0" type="stmt"/>
            <line num="1275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1275" type="cond"/>
            <line num="1276" count="0" type="stmt"/>
            <line num="1277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1277" type="cond"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1279" type="cond"/>
            <line num="1280" count="0" type="stmt"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1285" count="0" type="stmt"/>
            <line num="1286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1286" type="cond"/>
            <line num="1287" count="0" type="stmt"/>
            <line num="1289" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1293" count="0" type="method"/>
            <line num="1295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1295" type="cond"/>
            <line num="1297" count="0" type="stmt"/>
            <line num="1301" count="0" type="stmt"/>
            <line num="1303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1303" type="cond"/>
            <line num="1304" count="0" type="stmt"/>
            <line num="1305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1305" type="cond"/>
            <line num="1306" count="0" type="stmt"/>
            <line num="1307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1307" type="cond"/>
            <line num="1308" count="0" type="stmt"/>
            <line num="1310" count="0" type="stmt"/>
            <line num="1313" count="0" type="stmt"/>
            <line num="1314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1314" type="cond"/>
            <line num="1315" count="0" type="stmt"/>
            <line num="1317" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1326" count="964" type="method"/>
            <line num="1329" count="964" type="stmt"/>
            <line num="1330" count="964" type="stmt"/>
            <line num="1331" count="964" type="stmt"/>
            <line num="1333" count="964" type="stmt"/>
            <line falsecount="964" truecount="0" num="1333" type="cond"/>
            <line num="1334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1334" type="cond"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1337" count="0" type="stmt"/>
            <line num="1341" count="964" type="stmt"/>
            <line num="1342" count="964" type="stmt"/>
            <line num="1343" count="964" type="stmt"/>
            <line falsecount="964" truecount="27760000" num="1343" type="cond"/>
            <line num="1344" count="27760000" type="stmt"/>
            <line falsecount="5196388" truecount="22563612" num="1344" type="cond"/>
            <line num="1346" count="964" type="stmt"/>
            <line complexity="10" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1350" count="2758" type="method"/>
            <line num="1352" count="2758" type="stmt"/>
            <line falsecount="2758" truecount="0" num="1352" type="cond"/>
            <line num="1354" count="0" type="stmt"/>
            <line num="1358" count="2758" type="stmt"/>
            <line num="1360" count="2758" type="stmt"/>
            <line falsecount="1381" truecount="1377" num="1360" type="cond"/>
            <line num="1361" count="1377" type="stmt"/>
            <line num="1362" count="1381" type="stmt"/>
            <line falsecount="1381" truecount="0" num="1362" type="cond"/>
            <line num="1363" count="0" type="stmt"/>
            <line num="1364" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1364" type="cond"/>
            <line num="1365" count="0" type="stmt"/>
            <line num="1367" count="0" type="stmt"/>
            <line num="1369" count="1381" type="stmt"/>
            <line falsecount="1381" truecount="0" num="1369" type="cond"/>
            <line num="1370" count="0" type="stmt"/>
            <line num="1371" count="0" type="stmt"/>
            <line num="1372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1372" type="cond"/>
            <line num="1373" count="0" type="stmt"/>
            <line num="1375" count="0" type="stmt"/>
            <line num="1378" count="1381" type="stmt"/>
            <line num="1379" count="1381" type="stmt"/>
            <line falsecount="1381" truecount="81740010" num="1379" type="cond"/>
            <line num="1380" count="81740010" type="stmt"/>
            <line num="1382" count="1381" type="stmt"/>
            <line complexity="14" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1386" count="1529" type="method"/>
            <line num="1388" count="1529" type="stmt"/>
            <line falsecount="1529" truecount="0" num="1388" type="cond"/>
            <line num="1390" count="0" type="stmt"/>
            <line num="1394" count="1529" type="stmt"/>
            <line num="1396" count="1529" type="stmt"/>
            <line falsecount="1529" truecount="0" num="1396" type="cond"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1398" count="0" type="stmt"/>
            <line num="1400" count="1529" type="stmt"/>
            <line falsecount="1529" truecount="0" num="1400" type="cond"/>
            <line num="1401" count="0" type="stmt"/>
            <line num="1403" count="1529" type="stmt"/>
            <line falsecount="1527" truecount="2" num="1403" type="cond"/>
            <line num="1404" count="2" type="stmt"/>
            <line num="1406" count="1527" type="stmt"/>
            <line falsecount="148" truecount="1379" num="1406" type="cond"/>
            <line num="1407" count="1379" type="stmt"/>
            <line num="1409" count="148" type="stmt"/>
            <line falsecount="0" truecount="148" num="1409" type="cond"/>
            <line num="1410" count="148" type="stmt"/>
            <line num="1411" count="148" type="stmt"/>
            <line falsecount="148" truecount="14800000" num="1411" type="cond"/>
            <line num="1412" count="14800000" type="stmt"/>
            <line num="1414" count="148" type="stmt"/>
            <line num="1417" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="1421" count="0" type="method"/>
            <line num="1424" count="0" type="stmt"/>
            <line num="1425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1425" type="cond"/>
            <line num="1426" count="0" type="stmt"/>
            <line num="1428" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1431" count="0" type="method"/>
            <line num="1433" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1433" type="cond"/>
            <line num="1435" count="0" type="stmt"/>
            <line num="1439" count="0" type="stmt"/>
            <line num="1441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1441" type="cond"/>
            <line num="1442" count="0" type="stmt"/>
            <line num="1443" count="0" type="stmt"/>
            <line num="1446" count="0" type="stmt"/>
            <line num="1447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1447" type="cond"/>
            <line num="1448" count="0" type="stmt"/>
            <line num="1450" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1454" count="0" type="method"/>
            <line num="1456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1456" type="cond"/>
            <line num="1458" count="0" type="stmt"/>
            <line num="1462" count="0" type="stmt"/>
            <line num="1464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1464" type="cond"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1466" count="0" type="stmt"/>
            <line num="1469" count="0" type="stmt"/>
            <line num="1470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1470" type="cond"/>
            <line num="1471" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1477" count="0" type="method"/>
            <line num="1479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1479" type="cond"/>
            <line num="1480" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1480" type="cond"/>
            <line num="1482" count="0" type="stmt"/>
            <line num="1483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1483" type="cond"/>
            <line num="1484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1484" type="cond"/>
            <line num="1486" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="1490" count="0" type="method"/>
            <line num="1492" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1493" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/RandomVariableLazyEvaluation.java" name="RandomVariableLazyEvaluation.java">
            <metrics coveredelements="152" coveredconditionals="21" complexity="217" loc="1265" coveredmethods="40" methods="124" elements="652" classes="1" ncloc="933" statements="376" conditionals="152" coveredstatements="91"/>
            <class name="RandomVariableLazyEvaluation">
               <metrics coveredelements="152" coveredconditionals="21" complexity="217" coveredmethods="40" methods="124" elements="652" statements="376" conditionals="152" coveredstatements="91"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableLazyEvaluation(RandomVariable)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableLazyEvaluation(RandomVariable,DoubleUnaryOperator)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,double)" num="98" count="6" type="method"/>
            <line num="99" count="6" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line num="101" count="6" type="stmt"/>
            <line num="102" count="6" type="stmt"/>
            <line num="103" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,int,double)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,double[])" num="132" count="11" type="method"/>
            <line num="133" count="11" type="stmt"/>
            <line num="134" count="11" type="stmt"/>
            <line num="135" count="11" type="stmt"/>
            <line num="136" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="137" count="2627644" type="method"/>
            <line num="139" count="2638154" type="stmt"/>
            <line num="142" count="11" type="stmt"/>
            <line num="143" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,IntToDoubleFunction,int)" num="153" count="11" type="method"/>
            <line num="154" count="11" type="stmt"/>
            <line num="155" count="11" type="stmt"/>
            <line num="156" count="11" type="stmt"/>
            <line num="157" count="11" type="stmt"/>
            <line num="158" count="11" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="186" count="6" type="method"/>
            <line num="188" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="191" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="197" count="5" type="method"/>
            <line num="199" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="5" type="stmt"/>
            <line num="203" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="212" count="87" type="method"/>
            <line num="214" count="87" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : double" num="220" count="1" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : double" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAverage() : double" num="242" count="7" type="method"/>
            <line num="244" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="244" type="cond"/>
            <line num="245" count="1" type="stmt"/>
            <line num="247" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAverage(RandomVariable) : double" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVariance() : double" num="272" count="9" type="method"/>
            <line num="274" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="274" type="cond"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="8" type="stmt"/>
            <line num="282" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line num="284" count="44" type="stmt"/>
            <line num="285" count="44" type="stmt"/>
            <line num="287" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="320" count="1" type="method"/>
            <line num="322" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="325" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="380" count="5" type="method"/>
            <line num="382" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="382" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="385" type="cond"/>
            <line num="386" count="0" type="stmt"/>
            <line num="389" count="5" type="stmt"/>
            <line num="390" count="5" type="stmt"/>
            <line num="392" count="5" type="stmt"/>
            <line num="394" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="445" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="450" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="458" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="458" type="cond"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="490" type="cond"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="503" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="527" count="94" type="method"/>
            <line num="529" count="94" type="stmt"/>
            <line complexity="2" visibility="public" signature="expand(int) : RandomVariable" num="535" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="551" count="18" type="method"/>
            <line num="553" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="553" type="cond"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="559" count="18" type="stmt"/>
            <line num="561" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="doubleValue() : Double" num="565" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="577" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRandomVariable() : RandomVariableFromDoubleArray" num="582" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="583" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="593" count="15" type="method"/>
            <line num="595" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="597" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line num="604" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="608" count="11" type="method"/>
            <line num="610" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="610" type="cond"/>
            <line num="611" count="5" type="stmt"/>
            <line num="615" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="616" count="56" type="method"/>
            <line num="618" count="56" type="stmt"/>
            <line num="621" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="cache() : RandomVariable" num="625" count="23" type="method"/>
            <line num="627" count="23" type="stmt"/>
            <line num="629" count="23" type="stmt"/>
            <line falsecount="15" truecount="8" num="629" type="cond"/>
            <line num="630" count="8" type="stmt"/>
            <line num="631" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="632" count="0" type="method"/>
            <line num="634" count="0" type="stmt"/>
            <line num="639" count="23" type="stmt"/>
            <line complexity="7" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="642" count="5" type="method"/>
            <line num="645" count="5" type="stmt"/>
            <line num="647" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="647" type="cond"/>
            <line num="648" count="0" type="stmt"/>
            <line num="650" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="650" type="cond"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="652" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="659" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="663" count="0" type="method"/>
            <line num="665" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="673" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="683" count="5" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="686" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="694" count="5" type="stmt"/>
            <line num="695" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="696" count="54" type="method"/>
            <line num="698" count="54" type="stmt"/>
            <line num="701" count="5" type="stmt"/>
            <line complexity="13" visibility="public" signature="apply(DoubleBinaryOperator,DoubleBinaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="712" type="cond"/>
            <line num="713" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="724" count="0" type="method"/>
            <line num="726" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="732" count="0" type="method"/>
            <line num="734" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="741" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="745" count="0" type="method"/>
            <line num="747" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="751" type="cond"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="754" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="761" type="cond"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="765" count="0" type="method"/>
            <line num="767" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="775" count="0" type="method"/>
            <line num="777" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="782" type="cond"/>
            <line num="783" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="792" count="0" type="method"/>
            <line num="794" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="803" count="0" type="method"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="815" type="cond"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="819" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="820" count="0" type="method"/>
            <line num="822" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="828" count="0" type="method"/>
            <line num="830" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="836" type="cond"/>
            <line num="837" count="0" type="stmt"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="841" count="0" type="method"/>
            <line num="843" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="860" type="cond"/>
            <line num="861" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="862" count="0" type="method"/>
            <line num="864" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line num="880" count="0" type="stmt"/>
            <line num="881" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="881" type="cond"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="883" count="0" type="method"/>
            <line num="885" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="891" count="0" type="method"/>
            <line num="893" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="907" count="0" type="method"/>
            <line num="909" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="910" count="0" type="method"/>
            <line num="912" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="920" count="0" type="method"/>
            <line num="922" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="923" count="0" type="method"/>
            <line num="925" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="933" count="2" type="method"/>
            <line num="935" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="936" count="11" type="method"/>
            <line num="938" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="946" count="1" type="method"/>
            <line num="948" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="949" count="1" type="method"/>
            <line num="951" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="959" count="1" type="method"/>
            <line num="961" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="962" count="1" type="method"/>
            <line num="964" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="972" count="2" type="method"/>
            <line num="974" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="975" count="11" type="method"/>
            <line num="977" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="985" count="2" type="method"/>
            <line num="987" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="988" count="12" type="method"/>
            <line num="990" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="998" count="0" type="method"/>
            <line num="1000" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="1006" count="2" type="method"/>
            <line num="1008" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="1009" count="13" type="method"/>
            <line num="1011" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="1019" count="1" type="method"/>
            <line num="1021" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="1027" count="0" type="method"/>
            <line num="1029" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="1035" count="0" type="method"/>
            <line num="1037" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="1043" count="0" type="method"/>
            <line num="1045" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="1051" count="0" type="method"/>
            <line num="1053" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1059" count="1" type="method"/>
            <line num="1061" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1062" count="10" type="method"/>
            <line num="1064" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1073" count="2" type="method"/>
            <line num="1075" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1076" count="24" type="method"/>
            <line num="1078" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1083" count="0" type="method"/>
            <line num="1085" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1086" count="0" type="method"/>
            <line num="1088" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1096" count="0" type="method"/>
            <line num="1098" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1099" count="0" type="method"/>
            <line num="1101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1106" count="0" type="method"/>
            <line num="1108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1109" count="0" type="method"/>
            <line num="1111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1116" count="0" type="method"/>
            <line num="1118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1119" count="0" type="method"/>
            <line num="1121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1126" count="1" type="method"/>
            <line num="1128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1131" count="1" type="method"/>
            <line num="1133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1136" count="0" type="method"/>
            <line num="1138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1139" count="0" type="method"/>
            <line num="1141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1146" count="0" type="method"/>
            <line num="1148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1149" count="0" type="method"/>
            <line num="1151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1156" count="0" type="method"/>
            <line num="1158" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double,double,double) : double" num="1159" count="0" type="method"/>
            <line num="1161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1161" type="cond"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1166" count="0" type="method"/>
            <line num="1168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="1169" count="0" type="method"/>
            <line num="1171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1179" count="0" type="method"/>
            <line num="1181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1187" count="0" type="method"/>
            <line num="1189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1190" count="0" type="method"/>
            <line num="1192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1201" count="0" type="method"/>
            <line num="1203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1204" count="0" type="method"/>
            <line num="1206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1209" count="0" type="method"/>
            <line num="1211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1219" count="0" type="method"/>
            <line num="1221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1222" count="0" type="method"/>
            <line num="1224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1227" count="0" type="method"/>
            <line num="1229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1237" count="0" type="method"/>
            <line num="1239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1240" count="0" type="method"/>
            <line num="1242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1245" count="0" type="method"/>
            <line num="1247" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1252" count="0" type="method"/>
            <line num="1254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1254" type="cond"/>
            <line num="1255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1255" type="cond"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1259" type="cond"/>
            <line num="1260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1260" type="cond"/>
            <line num="1262" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/RandomVariableLazyEvaluationFactory.java" name="RandomVariableLazyEvaluationFactory.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="31" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RandomVariableLazyEvaluationFactory">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="22" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="27" count="11" type="method"/>
            <line num="29" count="11" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/VarianceGammaProcess.java" name="VarianceGammaProcess.java">
            <metrics coveredelements="44" coveredconditionals="7" complexity="18" loc="178" coveredmethods="10" methods="14" elements="54" classes="1" ncloc="98" statements="32" conditionals="8" coveredstatements="27"/>
            <class name="VarianceGammaProcess">
               <metrics coveredelements="44" coveredconditionals="7" complexity="18" coveredmethods="10" methods="14" elements="54" statements="32" conditionals="8" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaProcess(double,double,double,TimeDiscretization,int,int,int)" num="46" count="5" type="method"/>
            <line num="49" count="5" type="stmt"/>
            <line num="50" count="5" type="stmt"/>
            <line num="51" count="5" type="stmt"/>
            <line num="52" count="5" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="54" count="5" type="stmt"/>
            <line num="55" count="5" type="stmt"/>
            <line num="56" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="61" count="500" type="method"/>
            <line num="64" count="500" type="stmt"/>
            <line num="65" count="500" type="stmt"/>
            <line falsecount="495" truecount="5" num="65" type="cond"/>
            <line num="66" count="5" type="stmt"/>
            <line num="74" count="500" type="stmt"/>
            <line complexity="4" visibility="private" signature="doGenerateVarianceGammaIncrements() : void" num="80" count="5" type="method"/>
            <line num="81" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="5" type="stmt"/>
            <line num="88" count="5" type="stmt"/>
            <line num="91" count="5" type="stmt"/>
            <line num="99" count="5" type="stmt"/>
            <line falsecount="5" truecount="500" num="99" type="cond"/>
            <line num="102" count="500" type="stmt"/>
            <line falsecount="500" truecount="500" num="102" type="cond"/>
            <line num="103" count="500" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="116" count="99" type="method"/>
            <line num="117" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="123" count="99" type="method"/>
            <line num="124" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="130" count="99" type="method"/>
            <line num="131" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGammaProcess() : GammaProcess" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="148" count="4" type="method"/>
            <line num="150" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="153" count="1204" type="method"/>
            <line num="155" count="1204" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="158" count="4" type="method"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="163" count="4" type="method"/>
            <line num="165" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.simple">
         <metrics coveredelements="0" complexity="84" loc="811" methods="38" classes="5" statements="190" coveredconditionals="0" coveredmethods="0" elements="314" ncloc="446" files="3" conditionals="86" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/simple/AbstractLIBORMarketModel.java" name="AbstractLIBORMarketModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="169" coveredmethods="0" methods="11" elements="51" classes="1" ncloc="88" statements="30" conditionals="10" coveredstatements="0"/>
            <class name="AbstractLIBORMarketModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="11" elements="51" statements="30" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORMarketModel(TimeDiscretization,BrownianMotionLazyInit)" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="65" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="140" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/simple/SimpleLIBORMarketModel.java" name="SimpleLIBORMarketModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="49" loc="463" coveredmethods="0" methods="24" elements="183" classes="3" ncloc="265" statements="113" conditionals="46" coveredstatements="0"/>
            <class name="SimpleLIBORMarketModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="49" coveredmethods="0" methods="24" elements="183" statements="113" conditionals="46" coveredstatements="0"/>
            </class>
            <class name="SimpleLIBORMarketModel.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SimpleLIBORMarketModel.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,TimeDiscretization,int,double[],LIBORCovarianceModel)" num="50" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,double[],LIBORCovarianceModel,BrownianMotionLazyInit)" num="72" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,TimeDiscretization,int,double[],LIBORVolatilityModel,LIBORCorrelationModel)" num="98" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,TimeDiscretization,int,double[],LIBORVolatilityModel)" num="122" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialValue() : RandomVariable[]" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(int) : RandomVariableFromDoubleArray" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int,RandomVariable[]) : RandomVariable" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDrift(int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="186" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftAproximationMethod() : Driftapproximation" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="7" visibility="protected" signature="getLMMTerminasureDriftEuler(int,int,RandomVariable[]) : double[]" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getLMMTerminasureDriftLineIntegral(int,int,RandomVariable[],RandomVariable[]) : double[]" num="275" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getNumeraire(int) : RandomVariable" num="335" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDriftAproximationMethod(Driftapproximation) : void" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeasure(Measure) : void" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCovarianceModel(LIBORCovarianceModel) : void" num="408" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : SimpleLIBORMarketModel" num="417" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : LIBORMarketModelFromCovarianceModel" num="435" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="444" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="453" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="458" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/simple/SimpleLIBORMarketModelWithWMC.java" name="SimpleLIBORMarketModelWithWMC.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="179" coveredmethods="0" methods="3" elements="80" classes="1" ncloc="93" statements="47" conditionals="30" coveredstatements="0"/>
            <class name="SimpleLIBORMarketModelWithWMC">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="3" elements="80" statements="47" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModelWithWMC(TimeDiscretizationFromArray,TimeDiscretizationFromArray,int,double[],LIBORVolatilityModel,LIBORCorrelationModel,SimpleLIBORMarketModel)" num="41" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="66" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="17" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="83" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.model">
         <metrics coveredelements="0" complexity="4" loc="216" methods="3" classes="2" statements="7" coveredconditionals="0" coveredmethods="0" elements="12" ncloc="39" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/model/AbstractProcessModel.java" name="AbstractProcessModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="18" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="AbstractProcessModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/model/ProcessModel.java" name="ProcessModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="174" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ProcessModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.functions">
         <metrics coveredelements="667" complexity="289" loc="4030" methods="130" classes="15" statements="772" coveredconditionals="119" coveredmethods="77" elements="1154" ncloc="1857" files="12" conditionals="252" coveredstatements="471"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/AnalyticFormulas.java" name="AnalyticFormulas.java">
            <metrics coveredelements="213" coveredconditionals="33" complexity="120" loc="1787" coveredmethods="31" methods="53" elements="448" classes="1" ncloc="842" statements="299" conditionals="96" coveredstatements="149"/>
            <class name="AnalyticFormulas">
               <metrics coveredelements="213" coveredconditionals="33" complexity="120" coveredmethods="31" methods="53" elements="448" statements="299" conditionals="96" coveredstatements="149"/>
            </class>
            <line complexity="1" visibility="private" signature="AnalyticFormulas()" num="37" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="blackScholesGeneralizedOptionValue(double,double,double,double,double) : double" num="54" count="19949422" type="method"/>
            <line num="61" count="19953692" type="stmt"/>
            <line falsecount="19955941" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="19958041" type="stmt"/>
            <line falsecount="19960606" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="19963456" type="stmt"/>
            <line falsecount="18549848" truecount="1423620" num="68" type="cond"/>
            <line num="71" count="1423712" type="stmt"/>
            <line num="76" count="18553868" type="stmt"/>
            <line num="77" count="18561290" type="stmt"/>
            <line num="79" count="18564760" type="stmt"/>
            <line num="81" count="18571469" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesGeneralizedOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="98" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionValue(double,double,double,double,double) : double" num="129" count="663" type="method"/>
            <line num="136" count="663" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionValue(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="155" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionValue(RandomVariable,double,double,double,double) : RandomVariable" num="181" count="1" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionValue(double,double,double,double,double,boolean) : double" num="208" count="239" type="method"/>
            <line num="216" count="239" type="stmt"/>
            <line num="217" count="239" type="stmt"/>
            <line falsecount="120" truecount="119" num="217" type="cond"/>
            <line num="218" count="119" type="stmt"/>
            <line num="221" count="120" type="stmt"/>
            <line num="222" count="120" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesATMOptionValue(double,double,double,double) : double" num="235" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="blackScholesOptionDelta(double,double,double,double,double) : double" num="268" count="73" type="method"/>
            <line num="275" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="278" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="282" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="294" count="73" type="stmt"/>
            <line falsecount="73" truecount="0" num="294" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="302" count="73" type="stmt"/>
            <line num="304" count="73" type="stmt"/>
            <line num="306" count="73" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionDelta(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="324" count="100" type="method"/>
            <line num="331" count="100" type="stmt"/>
            <line falsecount="100" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="337" count="100" type="stmt"/>
            <line num="339" count="100" type="stmt"/>
            <line num="341" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionDelta(RandomVariable,double,double,double,double) : RandomVariable" num="359" count="100" type="method"/>
            <line num="366" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionDelta(RandomVariable,RandomVariable,RandomVariable,double,RandomVariable) : RandomVariable" num="383" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionGamma(double,double,double,double,double) : double" num="414" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionGamma(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="447" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionGamma(RandomVariable,double,double,double,double) : RandomVariable" num="480" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionVega(double,double,double,double,double) : double" num="504" count="74" type="method"/>
            <line num="511" count="74" type="stmt"/>
            <line falsecount="74" truecount="0" num="511" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line num="519" count="74" type="stmt"/>
            <line num="521" count="74" type="stmt"/>
            <line num="523" count="74" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionVega(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="541" count="0" type="method"/>
            <line num="548" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="548" type="cond"/>
            <line num="551" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionVega(RandomVariable,double,double,double,double) : RandomVariable" num="578" count="0" type="method"/>
            <line num="585" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionTheta(double,double,double,double,double) : double" num="598" count="0" type="method"/>
            <line num="605" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="605" type="cond"/>
            <line num="608" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionRho(double,double,double,double,double) : double" num="632" count="1" type="method"/>
            <line num="639" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="639" type="cond"/>
            <line num="642" count="0" type="stmt"/>
            <line num="647" count="1" type="stmt"/>
            <line num="649" count="1" type="stmt"/>
            <line num="651" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="blackScholesOptionImpliedVolatility(double,double,double,double,double) : double" num="667" count="8205" type="method"/>
            <line num="676" count="8205" type="stmt"/>
            <line num="677" count="8205" type="stmt"/>
            <line num="679" count="8205" type="stmt"/>
            <line falsecount="8202" truecount="3" num="679" type="cond"/>
            <line num="682" count="3" type="stmt"/>
            <line num="687" count="8203" type="stmt"/>
            <line num="688" count="8203" type="stmt"/>
            <line num="690" count="8203" type="stmt"/>
            <line num="691" count="8203" type="stmt"/>
            <line num="694" count="8203" type="stmt"/>
            <line falsecount="7048" truecount="1155" num="694" type="cond"/>
            <line num="695" count="1155" type="stmt"/>
            <line num="699" count="7048" type="stmt"/>
            <line num="700" count="7048" type="stmt"/>
            <line falsecount="7047" truecount="2236762" num="700" type="cond"/>
            <line num="701" count="2238175" type="stmt"/>
            <line num="704" count="2233195" type="stmt"/>
            <line num="705" count="2235940" type="stmt"/>
            <line num="706" count="2238362" type="stmt"/>
            <line num="707" count="2249272" type="stmt"/>
            <line num="709" count="2249657" type="stmt"/>
            <line num="711" count="2252584" type="stmt"/>
            <line num="714" count="7047" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesDigitalOptionValue(double,double,double,double,double) : double" num="728" count="217" type="method"/>
            <line num="735" count="217" type="stmt"/>
            <line falsecount="217" truecount="0" num="735" type="cond"/>
            <line num="738" count="0" type="stmt"/>
            <line num="743" count="217" type="stmt"/>
            <line num="744" count="217" type="stmt"/>
            <line num="746" count="217" type="stmt"/>
            <line num="748" count="217" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionDelta(double,double,double,double,double) : double" num="762" count="4" type="method"/>
            <line num="769" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="769" type="cond"/>
            <line num="772" count="0" type="stmt"/>
            <line num="777" count="4" type="stmt"/>
            <line num="778" count="4" type="stmt"/>
            <line num="780" count="4" type="stmt"/>
            <line num="782" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionVega(double,double,double,double,double) : double" num="796" count="1" type="method"/>
            <line num="803" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="803" type="cond"/>
            <line num="806" count="0" type="stmt"/>
            <line num="811" count="1" type="stmt"/>
            <line num="812" count="1" type="stmt"/>
            <line num="814" count="1" type="stmt"/>
            <line num="816" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionRho(double,double,double,double,double) : double" num="830" count="1" type="method"/>
            <line num="837" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="837" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line num="842" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="842" type="cond"/>
            <line num="843" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line num="850" count="1" type="stmt"/>
            <line num="852" count="1" type="stmt"/>
            <line num="855" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelCapletValue(double,double,double,double,double,double) : double" num="870" count="98" type="method"/>
            <line num="879" count="98" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelCapletImpliedVolatility(double,double,double,double,double,double) : double" num="893" count="0" type="method"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelDigitalCapletValue(double,double,double,double,double,double) : double" num="916" count="214" type="method"/>
            <line num="925" count="214" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelDigitalCapletDelta(double,double,double,double,double,double) : double" num="939" count="1" type="method"/>
            <line num="948" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelDgitialCapletValue(double,double,double,double,double,double) : double" num="964" count="0" type="method"/>
            <line num="972" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelSwaptionValue(double,double,double,double,double) : double" num="985" count="784" type="method"/>
            <line num="993" count="784" type="stmt"/>
            <line complexity="1" visibility="public" signature="margrabeExchangeOptionValue(double,double,double,double,double,double) : double" num="1011" count="0" type="method"/>
            <line num="1019" count="0" type="stmt"/>
            <line num="1020" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionValue(double,double,double,double,double) : double" num="1046" count="43156762" type="method"/>
            <line num="1053" count="43164287" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="1074" count="308" type="method"/>
            <line num="1081" count="308" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionImpliedVolatility(double,double,double,double,double) : double" num="1102" count="487643" type="method"/>
            <line num="1109" count="487640" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionDelta(double,double,double,double,double) : double" num="1130" count="18052" type="method"/>
            <line num="1137" count="18052" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSOptionValue(double,double,double,double,double,double,double) : double" num="1157" count="1" type="method"/>
            <line num="1166" count="1" type="stmt"/>
            <line num="1167" count="1" type="stmt"/>
            <line num="1168" count="1" type="stmt"/>
            <line num="1170" count="1" type="stmt"/>
            <line num="1171" count="1" type="stmt"/>
            <line num="1173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSFloorValue(double,double,double,double,double,double,double) : double" num="1189" count="0" type="method"/>
            <line num="1198" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSAdjustedRate(double,double,double,double,double,double) : double" num="1216" count="1" type="method"/>
            <line num="1224" count="1" type="stmt"/>
            <line num="1225" count="1" type="stmt"/>
            <line num="1226" count="1" type="stmt"/>
            <line num="1228" count="1" type="stmt"/>
            <line num="1229" count="1" type="stmt"/>
            <line num="1231" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrHaganLognormalBlackVolatilityApproximation(double,double,double,double,double,double,double) : double" num="1247" count="0" type="method"/>
            <line num="1249" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="sabrHaganLognormalBlackVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1266" count="0" type="method"/>
            <line num="1269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1269" type="cond"/>
            <line num="1270" count="0" type="stmt"/>
            <line num="1273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1273" type="cond"/>
            <line num="1274" count="0" type="stmt"/>
            <line num="1277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1277" type="cond"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1281" type="cond"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1286" count="0" type="stmt"/>
            <line num="1287" count="0" type="stmt"/>
            <line num="1289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1289" type="cond"/>
            <line num="1294" count="0" type="stmt"/>
            <line num="1296" count="0" type="stmt"/>
            <line num="1299" count="0" type="stmt"/>
            <line num="1305" count="0" type="stmt"/>
            <line num="1307" count="0" type="stmt"/>
            <line num="1309" count="0" type="stmt"/>
            <line num="1311" count="0" type="stmt"/>
            <line num="1315" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1315" type="cond"/>
            <line num="1317" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="sabrBerestyckiNormalVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1341" count="12774832" type="method"/>
            <line num="1344" count="12777387" type="stmt"/>
            <line num="1345" count="12779550" type="stmt"/>
            <line num="1347" count="12780307" type="stmt"/>
            <line num="1349" count="12782616" type="stmt"/>
            <line num="1350" count="12785258" type="stmt"/>
            <line falsecount="0" truecount="12787165" num="1350" type="cond"/>
            <line num="1351" count="12787519" type="stmt"/>
            <line num="1353" count="0" type="stmt"/>
            <line num="1356" count="12796850" type="stmt"/>
            <line num="1358" count="12801213" type="stmt"/>
            <line num="1359" count="12800466" type="stmt"/>
            <line falsecount="12726008" truecount="74019" num="1359" type="cond"/>
            <line num="1361" count="74017" type="stmt"/>
            <line num="1363" count="12726083" type="stmt"/>
            <line falsecount="12662037" truecount="67607" num="1363" type="cond"/>
            <line num="1365" count="67607" type="stmt"/>
            <line falsecount="0" truecount="67607" num="1365" type="cond"/>
            <line num="1366" count="67607" type="stmt"/>
            <line num="1368" count="0" type="stmt"/>
            <line num="1372" count="12663448" type="stmt"/>
            <line num="1374" count="12804546" type="stmt"/>
            <line num="1376" count="12811247" type="stmt"/>
            <line complexity="2" visibility="public" signature="sabrNormalVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1393" count="0" type="method"/>
            <line num="1396" count="0" type="stmt"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1399" count="0" type="stmt"/>
            <line num="1401" count="0" type="stmt"/>
            <line num="1402" count="0" type="stmt"/>
            <line num="1404" count="0" type="stmt"/>
            <line num="1405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1405" type="cond"/>
            <line num="1407" count="0" type="stmt"/>
            <line num="1410" count="0" type="stmt"/>
            <line num="1411" count="0" type="stmt"/>
            <line num="1414" count="0" type="stmt"/>
            <line num="1416" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="sabrAlphaApproximation(double,double,double,double,double,double,double) : double" num="1432" count="0" type="method"/>
            <line num="1435" count="0" type="stmt"/>
            <line num="1438" count="0" type="stmt"/>
            <line num="1440" count="0" type="stmt"/>
            <line num="1441" count="0" type="stmt"/>
            <line num="1442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1442" type="cond"/>
            <line num="1443" count="0" type="stmt"/>
            <line num="1445" count="0" type="stmt"/>
            <line num="1446" count="0" type="stmt"/>
            <line num="1448" count="0" type="stmt"/>
            <line num="1449" count="0" type="stmt"/>
            <line num="1451" count="0" type="stmt"/>
            <line num="1452" count="0" type="stmt"/>
            <line num="1454" count="0" type="stmt"/>
            <line num="1456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrNormalVolatilitySkewApproximation(double,double,double,double,double,double,double) : double" num="1473" count="3" type="method"/>
            <line num="1475" count="3" type="stmt"/>
            <line num="1478" count="3" type="stmt"/>
            <line num="1480" count="3" type="stmt"/>
            <line num="1481" count="3" type="stmt"/>
            <line num="1483" count="3" type="stmt"/>
            <line num="1496" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrNormalVolatilityCurvatureApproximation(double,double,double,double,double,double,double) : double" num="1513" count="3" type="method"/>
            <line num="1515" count="3" type="stmt"/>
            <line num="1518" count="3" type="stmt"/>
            <line num="1536" count="3" type="stmt"/>
            <line num="1537" count="3" type="stmt"/>
            <line num="1538" count="3" type="stmt"/>
            <line num="1539" count="3" type="stmt"/>
            <line num="1541" count="3" type="stmt"/>
            <line num="1542" count="3" type="stmt"/>
            <line num="1543" count="3" type="stmt"/>
            <line num="1545" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="volatilityConversionLognormalATMtoNormalATM(double,double,double,double) : double" num="1558" count="1" type="method"/>
            <line num="1559" count="1" type="stmt"/>
            <line num="1560" count="1" type="stmt"/>
            <line num="1561" count="1" type="stmt"/>
            <line num="1563" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="volatilityConversionLognormalToNormal(double,double,double,double,double) : double" num="1576" count="1" type="method"/>
            <line num="1577" count="1" type="stmt"/>
            <line num="1578" count="1" type="stmt"/>
            <line num="1580" count="1" type="stmt"/>
            <line num="1582" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="price(java.util.Date,java.util.Date,double,double,double,int) : double" num="1597" count="0" type="method"/>
            <line num="1605" count="0" type="stmt"/>
            <line num="1607" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1607" type="cond"/>
            <line num="1608" count="0" type="stmt"/>
            <line num="1611" count="0" type="stmt"/>
            <line num="1612" count="0" type="stmt"/>
            <line num="1613" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1613" type="cond"/>
            <line num="1614" count="0" type="stmt"/>
            <line num="1617" count="0" type="stmt"/>
            <line num="1618" count="0" type="stmt"/>
            <line num="1621" count="0" type="stmt"/>
            <line num="1622" count="0" type="stmt"/>
            <line num="1625" count="0" type="stmt"/>
            <line num="1626" count="0" type="stmt"/>
            <line num="1627" count="0" type="stmt"/>
            <line num="1629" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="price(double,double,double,double,int) : double" num="1645" count="0" type="method"/>
            <line num="1652" count="0" type="stmt"/>
            <line num="1654" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1654" type="cond"/>
            <line num="1655" count="0" type="stmt"/>
            <line num="1658" count="0" type="stmt"/>
            <line num="1659" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1659" type="cond"/>
            <line num="1660" count="0" type="stmt"/>
            <line num="1663" count="0" type="stmt"/>
            <line num="1664" count="0" type="stmt"/>
            <line num="1668" count="0" type="stmt"/>
            <line num="1669" count="0" type="stmt"/>
            <line num="1670" count="0" type="stmt"/>
            <line num="1672" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierGeneralizedOptionVega(double,double,double,double,double) : double" num="1689" count="0" type="method"/>
            <line num="1696" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1696" type="cond"/>
            <line num="1697" count="0" type="stmt"/>
            <line num="1699" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1699" type="cond"/>
            <line num="1701" count="0" type="stmt"/>
            <line num="1706" count="0" type="stmt"/>
            <line num="1708" count="0" type="stmt"/>
            <line num="1710" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesGeneralizedOptionVega(double,double,double,double,double) : double" num="1728" count="0" type="method"/>
            <line num="1735" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1735" type="cond"/>
            <line num="1738" count="0" type="stmt"/>
            <line num="1743" count="0" type="stmt"/>
            <line num="1745" count="0" type="stmt"/>
            <line num="1747" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="constantElasticityOfVarianceOptionValue(double,double,double,double,double,double,boolean) : double" num="1767" count="318" type="method"/>
            <line num="1775" count="318" type="stmt"/>
            <line num="1776" count="318" type="stmt"/>
            <line num="1777" count="318" type="stmt"/>
            <line num="1778" count="318" type="stmt"/>
            <line num="1779" count="318" type="stmt"/>
            <line num="1780" count="318" type="stmt"/>
            <line num="1781" count="318" type="stmt"/>
            <line falsecount="159" truecount="159" num="1781" type="cond"/>
            <line num="1782" count="159" type="stmt"/>
            <line num="1784" count="159" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/BachelierModel.java" name="BachelierModel.java">
            <metrics coveredelements="111" coveredconditionals="19" complexity="41" loc="823" coveredmethods="21" methods="23" elements="140" classes="1" ncloc="303" statements="85" conditionals="32" coveredstatements="71"/>
            <class name="BachelierModel">
               <metrics coveredelements="111" coveredconditionals="19" complexity="41" coveredmethods="21" methods="23" elements="140" statements="85" conditionals="32" coveredstatements="71"/>
            </class>
            <line complexity="1" visibility="private" signature="BachelierModel()" num="44" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="bachelierOptionValue(double,double,double,double,double) : double" num="67" count="88093470" type="method"/>
            <line num="74" count="88171192" type="stmt"/>
            <line falsecount="88237765" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="88270461" type="stmt"/>
            <line falsecount="74495635" truecount="13811130" num="77" type="cond"/>
            <line num="78" count="13813815" type="stmt"/>
            <line num="83" count="74528009" type="stmt"/>
            <line num="85" count="74529112" type="stmt"/>
            <line num="88" count="75063109" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="110" count="326" type="method"/>
            <line num="117" count="326" type="stmt"/>
            <line falsecount="326" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="122" count="326" type="stmt"/>
            <line num="123" count="326" type="stmt"/>
            <line num="125" count="326" type="stmt"/>
            <line num="128" count="326" type="stmt"/>
            <line complexity="4" visibility="public" signature="bachelierOptionImpliedVolatility(double,double,double,double,double) : double" num="150" count="488185" type="method"/>
            <line num="159" count="488183" type="stmt"/>
            <line num="160" count="488159" type="stmt"/>
            <line num="163" count="488167" type="stmt"/>
            <line num="164" count="488177" type="stmt"/>
            <line num="167" count="488188" type="stmt"/>
            <line num="168" count="488003" type="stmt"/>
            <line falsecount="487979" truecount="45186363" num="168" type="cond"/>
            <line num="169" count="45262001" type="stmt"/>
            <line num="171" count="45061739" type="stmt"/>
            <line num="173" count="45455060" type="stmt"/>
            <line num="175" count="45562166" type="stmt"/>
            <line num="178" count="488005" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierOptionDelta(double,double,double,double,double) : double" num="199" count="18178" type="method"/>
            <line num="206" count="18178" type="stmt"/>
            <line falsecount="18178" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="18178" type="stmt"/>
            <line falsecount="17454" truecount="724" num="209" type="cond"/>
            <line num="210" count="724" type="stmt"/>
            <line num="215" count="17454" type="stmt"/>
            <line num="217" count="17454" type="stmt"/>
            <line num="219" count="17454" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierDigitalOptionDelta(double,double,double,double,double) : double" num="245" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="287" count="18" type="method"/>
            <line num="294" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="299" count="18" type="stmt"/>
            <line num="300" count="18" type="stmt"/>
            <line num="302" count="18" type="stmt"/>
            <line num="304" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierOptionVega(double,double,double,double,double) : double" num="326" count="126" type="method"/>
            <line num="333" count="126" type="stmt"/>
            <line falsecount="126" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="126" type="stmt"/>
            <line falsecount="126" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="343" count="126" type="stmt"/>
            <line num="345" count="126" type="stmt"/>
            <line num="347" count="126" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="369" count="18" type="method"/>
            <line num="376" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="18" type="stmt"/>
            <line num="382" count="18" type="stmt"/>
            <line num="384" count="18" type="stmt"/>
            <line num="386" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionValue(double,double,double,double,double) : double" num="409" count="1050" type="method"/>
            <line num="416" count="1050" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="438" count="18" type="method"/>
            <line num="445" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionImpliedVolatility(double,double,double,double,double) : double" num="467" count="550" type="method"/>
            <line num="474" count="550" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionDelta(double,double,double,double,double) : double" num="497" count="126" type="method"/>
            <line num="504" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="527" count="18" type="method"/>
            <line num="534" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionVega(double,double,double,double,double) : double" num="556" count="126" type="method"/>
            <line num="563" count="126" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="585" count="18" type="method"/>
            <line num="592" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionValue(double,double,double,double,double) : double" num="613" count="402" type="method"/>
            <line num="620" count="402" type="stmt"/>
            <line falsecount="25" truecount="377" num="620" type="cond"/>
            <line num="621" count="402" type="stmt"/>
            <line num="623" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="644" count="9" type="method"/>
            <line num="652" count="9" type="stmt"/>
            <line num="654" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionImpliedVolatility(double,double,double,double,double) : double" num="676" count="275" type="method"/>
            <line num="683" count="275" type="stmt"/>
            <line num="685" count="275" type="stmt"/>
            <line falsecount="25" truecount="250" num="685" type="cond"/>
            <line num="686" count="275" type="stmt"/>
            <line num="688" count="275" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionDelta(double,double,double,double,double) : double" num="709" count="36" type="method"/>
            <line num="716" count="36" type="stmt"/>
            <line falsecount="0" truecount="36" num="716" type="cond"/>
            <line num="717" count="36" type="stmt"/>
            <line num="719" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="745" count="9" type="method"/>
            <line num="753" count="9" type="stmt"/>
            <line num="755" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionVega(double,double,double,double,double) : double" num="776" count="36" type="method"/>
            <line num="783" count="36" type="stmt"/>
            <line falsecount="0" truecount="36" num="783" type="cond"/>
            <line num="784" count="36" type="stmt"/>
            <line num="786" count="36" type="stmt"/>
            <line num="788" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="809" count="9" type="method"/>
            <line num="817" count="9" type="stmt"/>
            <line num="819" count="9" type="stmt"/>
            <line num="821" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/BarrierOptions.java" name="BarrierOptions.java">
            <metrics coveredelements="97" coveredconditionals="26" complexity="23" loc="237" coveredmethods="1" methods="2" elements="102" classes="2" ncloc="146" statements="74" conditionals="26" coveredstatements="70"/>
            <class name="BarrierOptions">
               <metrics coveredelements="97" coveredconditionals="26" complexity="23" coveredmethods="1" methods="2" elements="102" statements="74" conditionals="26" coveredstatements="70"/>
            </class>
            <class name="BarrierOptions.BarrierType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="BarrierOptions()" num="27" count="0" type="method"/>
            <line complexity="22" visibility="public" signature="blackScholesBarrierOptionValue(double,double,double,double,double,double,boolean,double,double,BarrierType) : double" num="45" count="36" type="method"/>
            <line num="56" count="36" type="stmt"/>
            <line falsecount="18" truecount="18" num="56" type="cond"/>
            <line num="57" count="36" type="stmt"/>
            <line num="59" count="36" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line num="65" count="12" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="68" count="6" type="stmt"/>
            <line num="69" count="12" type="stmt"/>
            <line num="70" count="12" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="36" type="stmt"/>
            <line num="77" count="36" type="stmt"/>
            <line num="78" count="36" type="stmt"/>
            <line num="79" count="36" type="stmt"/>
            <line num="80" count="36" type="stmt"/>
            <line num="82" count="36" type="stmt"/>
            <line num="84" count="36" type="stmt"/>
            <line num="86" count="36" type="stmt"/>
            <line num="89" count="36" type="stmt"/>
            <line num="91" count="36" type="stmt"/>
            <line num="93" count="36" type="stmt"/>
            <line num="97" count="36" type="stmt"/>
            <line num="101" count="36" type="stmt"/>
            <line num="107" count="36" type="stmt"/>
            <line num="113" count="36" type="stmt"/>
            <line num="117" count="36" type="stmt"/>
            <line num="122" count="36" type="stmt"/>
            <line num="124" count="36" type="stmt"/>
            <line num="132" count="12" type="stmt"/>
            <line num="133" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="133" type="cond"/>
            <line num="136" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="136" type="cond"/>
            <line num="138" count="4" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="146" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="146" type="cond"/>
            <line num="148" count="4" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="154" count="12" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="156" type="cond"/>
            <line num="159" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="159" type="cond"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="169" type="cond"/>
            <line num="171" count="1" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="177" count="6" type="stmt"/>
            <line num="185" count="12" type="stmt"/>
            <line num="186" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="186" type="cond"/>
            <line num="189" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="189" type="cond"/>
            <line num="191" count="4" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="199" type="cond"/>
            <line num="201" count="4" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="207" count="12" type="stmt"/>
            <line num="208" count="6" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="209" type="cond"/>
            <line num="212" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="212" type="cond"/>
            <line num="214" count="1" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="222" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="222" type="cond"/>
            <line num="224" count="1" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="230" count="6" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="36" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/DoubleTernaryOperator.java" name="DoubleTernaryOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DoubleTernaryOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/GammaDistribution.java" name="GammaDistribution.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="31" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="GammaDistribution">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="GammaDistribution(double,double)" num="17" count="700" type="method"/>
            <line num="18" count="700" type="stmt"/>
            <line num="19" count="700" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="28" count="16000000" type="method"/>
            <line num="29" count="16000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/JarqueBeraTest.java" name="JarqueBeraTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="14" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="JarqueBeraTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="JarqueBeraTest()" num="28" count="5" type="method"/>
            <line complexity="1" visibility="public" signature="test(RandomVariable) : double" num="38" count="961" type="method"/>
            <line num="39" count="961" type="stmt"/>
            <line num="40" count="961" type="stmt"/>
            <line num="42" count="961" type="stmt"/>
            <line num="43" count="961" type="stmt"/>
            <line num="45" count="961" type="stmt"/>
            <line num="47" count="961" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/LinearAlgebra.java" name="LinearAlgebra.java">
            <metrics coveredelements="88" coveredconditionals="22" complexity="60" loc="565" coveredmethods="12" methods="21" elements="231" classes="2" ncloc="256" statements="140" conditionals="70" coveredstatements="54"/>
            <class name="LinearAlgebra">
               <metrics coveredelements="83" coveredconditionals="22" complexity="58" coveredmethods="10" methods="19" elements="226" statements="137" conditionals="70" coveredstatements="51"/>
            </class>
            <class name="LinearAlgebra.EigenValueIndex">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="6" visibility="package" signature="&lt;clinit&gt;, line 36()" num="36" count="48" type="method"/>
            <line num="38" count="48" type="stmt"/>
            <line num="43" count="48" type="stmt"/>
            <line falsecount="48" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="48" type="stmt"/>
            <line falsecount="0" truecount="48" num="59" type="cond"/>
            <line num="60" count="48" type="stmt"/>
            <line num="62" count="48" type="stmt"/>
            <line complexity="4" visibility="public" signature="solveLinearEquationTikonov(double[][],double[],double) : double[]" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="solveLinearEquationTikonov(double[][],double[],double,double,double) : double[]" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="solveLinearEquation(double[][],double[]) : double[]" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="solveLinearEquationSVD(double[][],double[]) : double[]" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="invert(double[][]) : double[][]" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="solveLinearEquationSymmetric(double[][],double[]) : double[]" num="293" count="3427534" type="method"/>
            <line num="294" count="3427550" type="stmt"/>
            <line falsecount="0" truecount="3427532" num="294" type="cond"/>
            <line num="295" count="3427524" type="stmt"/>
            <line num="296" count="3427642" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="solveLinearEquationLeastSquare(double[][],double[]) : double[]" num="321" count="1" type="method"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="solveLinearEquationLeastSquare(double[][],double[][]) : double[][]" num="339" count="2" type="method"/>
            <line num="341" count="2" type="stmt"/>
            <line num="342" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorMatrix(double[][],int) : double[][]" num="353" count="3044" type="method"/>
            <line num="354" count="3043" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorReduction(double[][],int) : double[][]" num="364" count="1524" type="method"/>
            <line num="365" count="1521" type="stmt"/>
            <line complexity="7" visibility="private" signature="getFactorMatrixUsingCommonsMath(double[][],int) : double[][]" num="376" count="3046" type="method"/>
            <line num="381" count="3046" type="stmt"/>
            <line num="382" count="3046" type="stmt"/>
            <line num="384" count="3040" type="stmt"/>
            <line falsecount="3049" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="3048" type="stmt"/>
            <line num="391" count="3048" type="stmt"/>
            <line num="392" count="3049" type="stmt"/>
            <line complexity="1" visibility="package" signature="EigenValueIndex(int,double)" num="399" count="119376" type="method"/>
            <line num="400" count="119415" type="stmt"/>
            <line num="400" count="119464" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(EigenValueIndex) : int" num="403" count="116120" type="method"/>
            <line num="404" count="116135" type="stmt"/>
            <line num="406" count="3049" type="stmt"/>
            <line num="407" count="3049" type="stmt"/>
            <line falsecount="3047" truecount="119311" num="407" type="cond"/>
            <line num="408" count="119351" type="stmt"/>
            <line num="410" count="3043" type="stmt"/>
            <line num="413" count="3032" type="stmt"/>
            <line num="414" count="3045" type="stmt"/>
            <line falsecount="3047" truecount="16217" num="414" type="cond"/>
            <line num="415" count="16224" type="stmt"/>
            <line num="416" count="16227" type="stmt"/>
            <line num="417" count="16226" type="stmt"/>
            <line falsecount="10245" truecount="5979" num="417" type="cond"/>
            <line num="418" count="16226" type="stmt"/>
            <line num="419" count="16228" type="stmt"/>
            <line falsecount="16195" truecount="644096" num="419" type="cond"/>
            <line num="420" count="643972" type="stmt"/>
            <line num="422" count="16198" type="stmt"/>
            <line num="423" count="16203" type="stmt"/>
            <line falsecount="16225" truecount="644533" num="423" type="cond"/>
            <line num="424" count="644399" type="stmt"/>
            <line num="428" count="3050" type="stmt"/>
            <line complexity="6" visibility="public" signature="factorReductionUsingCommonsMath(double[][],int) : double[][]" num="438" count="1519" type="method"/>
            <line num="441" count="1517" type="stmt"/>
            <line num="444" count="1524" type="stmt"/>
            <line falsecount="1519" truecount="59579" num="444" type="cond"/>
            <line num="445" count="59605" type="stmt"/>
            <line num="446" count="59620" type="stmt"/>
            <line falsecount="59451" truecount="320421" num="446" type="cond"/>
            <line num="447" count="320375" type="stmt"/>
            <line num="449" count="59458" type="stmt"/>
            <line falsecount="0" truecount="59463" num="449" type="cond"/>
            <line num="450" count="59456" type="stmt"/>
            <line falsecount="59571" truecount="320472" num="450" type="cond"/>
            <line num="451" count="320491" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="463" count="1523" type="stmt"/>
            <line num="465" count="1525" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp(double[][]) : double[][]" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp(RealMatrix) : RealMatrix" num="490" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="transpose(double[][]) : double[][]" num="500" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pseudoInverse(double[][]) : double[][]" num="524" count="1" type="method"/>
            <line num="525" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="525" type="cond"/>
            <line num="527" count="1" type="stmt"/>
            <line num="528" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="diag(double[]) : double[][]" num="543" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="548" type="cond"/>
            <line num="549" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multMatrices(double[][],double[][]) : double[][]" num="562" count="1" type="method"/>
            <line num="563" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/LogNormalDistribution.java" name="LogNormalDistribution.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="96" coveredmethods="0" methods="11" elements="29" classes="2" ncloc="50" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="LogNormalDistribution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LogNormalDistribution.LogNormalDistributionParameters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LogNormalDistributionParameters(double,double,double,double)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMean() : double" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMu() : double" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LogNormalDistribution()" num="48" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getParametersFromMuAndSigma(double,double) : LogNormalDistributionParameters" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParametersFromMeanAndStdDev(double,double) : LogNormalDistributionParameters" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="density(double) : double" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cumulativeDistribution(double) : double" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/NonCentralChiSquaredDistribution.java" name="NonCentralChiSquaredDistribution.java">
            <metrics coveredelements="49" coveredconditionals="8" complexity="10" loc="138" coveredmethods="2" methods="4" elements="59" classes="1" ncloc="69" statements="43" conditionals="12" coveredstatements="39"/>
            <class name="NonCentralChiSquaredDistribution">
               <metrics coveredelements="49" coveredconditionals="8" complexity="10" coveredmethods="2" methods="4" elements="59" statements="43" conditionals="12" coveredstatements="39"/>
            </class>
            <line complexity="2" visibility="public" signature="NonCentralChiSquaredDistribution(double,double)" num="40" count="636" type="method"/>
            <line num="41" count="636" type="stmt"/>
            <line num="42" count="636" type="stmt"/>
            <line num="44" count="636" type="stmt"/>
            <line num="45" count="636" type="stmt"/>
            <line num="46" count="636" type="stmt"/>
            <line num="47" count="636" type="stmt"/>
            <line num="49" count="636" type="stmt"/>
            <line falsecount="636" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="636" type="stmt"/>
            <line complexity="6" visibility="public" signature="cumulativeDistribution(double) : double" num="62" count="636" type="method"/>
            <line num="63" count="636" type="stmt"/>
            <line falsecount="636" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="636" type="stmt"/>
            <line num="68" count="636" type="stmt"/>
            <line num="70" count="636" type="stmt"/>
            <line num="72" count="636" type="stmt"/>
            <line num="73" count="636" type="stmt"/>
            <line num="78" count="636" type="stmt"/>
            <line num="79" count="636" type="stmt"/>
            <line num="80" count="636" type="stmt"/>
            <line num="81" count="636" type="stmt"/>
            <line falsecount="0" truecount="148552" num="81" type="cond"/>
            <line num="83" count="148552" type="stmt"/>
            <line num="84" count="148552" type="stmt"/>
            <line num="87" count="148552" type="stmt"/>
            <line num="89" count="148552" type="stmt"/>
            <line num="90" count="148552" type="stmt"/>
            <line num="92" count="148552" type="stmt"/>
            <line falsecount="147916" truecount="636" num="92" type="cond"/>
            <line num="93" count="636" type="stmt"/>
            <line num="95" count="147916" type="stmt"/>
            <line num="98" count="636" type="stmt"/>
            <line num="99" count="636" type="stmt"/>
            <line num="100" count="636" type="stmt"/>
            <line num="106" count="636" type="stmt"/>
            <line falsecount="0" truecount="95082" num="106" type="cond"/>
            <line num="107" count="95082" type="stmt"/>
            <line num="108" count="95082" type="stmt"/>
            <line num="111" count="95082" type="stmt"/>
            <line num="113" count="95082" type="stmt"/>
            <line num="114" count="95082" type="stmt"/>
            <line num="116" count="95082" type="stmt"/>
            <line falsecount="94446" truecount="636" num="116" type="cond"/>
            <line num="117" count="636" type="stmt"/>
            <line num="119" count="94446" type="stmt"/>
            <line num="122" count="636" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDegreesOfFreedom() : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNonCentrality() : double" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/NormalDistribution.java" name="NormalDistribution.java">
            <metrics coveredelements="82" coveredconditionals="9" complexity="10" loc="163" coveredmethods="4" methods="5" elements="85" classes="1" ncloc="98" statements="70" conditionals="10" coveredstatements="69"/>
            <class name="NormalDistribution">
               <metrics coveredelements="82" coveredconditionals="9" complexity="10" coveredmethods="4" methods="5" elements="85" statements="70" conditionals="10" coveredstatements="69"/>
            </class>
            <line complexity="1" visibility="private" signature="NormalDistribution()" num="17" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="density(double) : double" num="26" count="75539174" type="method"/>
            <line num="27" count="75703013" type="stmt"/>
            <line complexity="1" visibility="public" signature="cumulativeDistribution(double) : double" num="37" count="121023454" type="method"/>
            <line num="38" count="121087377" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="47" count="2147483647" type="method"/>
            <line num="48" count="2147483647" type="stmt"/>
            <line complexity="6" visibility="public" signature="inverseCumulativeNormalDistributionWichura(double) : double" num="67" count="2147483647" type="method"/>
            <line num="68" count="2147483647" type="stmt"/>
            <line num="69" count="2147483647" type="stmt"/>
            <line num="70" count="2147483647" type="stmt"/>
            <line num="73" count="2147483647" type="stmt"/>
            <line num="74" count="2147483647" type="stmt"/>
            <line num="75" count="2147483647" type="stmt"/>
            <line num="76" count="2147483647" type="stmt"/>
            <line num="77" count="2147483647" type="stmt"/>
            <line num="78" count="2147483647" type="stmt"/>
            <line num="79" count="2147483647" type="stmt"/>
            <line num="80" count="2147483647" type="stmt"/>
            <line num="81" count="2147483647" type="stmt"/>
            <line num="82" count="2147483647" type="stmt"/>
            <line num="83" count="2147483647" type="stmt"/>
            <line num="84" count="2147483647" type="stmt"/>
            <line num="85" count="2147483647" type="stmt"/>
            <line num="86" count="2147483647" type="stmt"/>
            <line num="87" count="2147483647" type="stmt"/>
            <line num="91" count="2147483647" type="stmt"/>
            <line num="92" count="2147483647" type="stmt"/>
            <line num="93" count="2147483647" type="stmt"/>
            <line num="94" count="2147483647" type="stmt"/>
            <line num="95" count="2147483647" type="stmt"/>
            <line num="96" count="2147483647" type="stmt"/>
            <line num="97" count="2147483647" type="stmt"/>
            <line num="98" count="2147483647" type="stmt"/>
            <line num="99" count="2147483647" type="stmt"/>
            <line num="100" count="2147483647" type="stmt"/>
            <line num="101" count="2147483647" type="stmt"/>
            <line num="102" count="2147483647" type="stmt"/>
            <line num="103" count="2147483647" type="stmt"/>
            <line num="104" count="2147483647" type="stmt"/>
            <line num="105" count="2147483647" type="stmt"/>
            <line num="109" count="2147483647" type="stmt"/>
            <line num="110" count="2147483647" type="stmt"/>
            <line num="111" count="2147483647" type="stmt"/>
            <line num="112" count="2147483647" type="stmt"/>
            <line num="113" count="2147483647" type="stmt"/>
            <line num="114" count="2147483647" type="stmt"/>
            <line num="115" count="2147483647" type="stmt"/>
            <line num="116" count="2147483647" type="stmt"/>
            <line num="117" count="2147483647" type="stmt"/>
            <line num="118" count="2147483647" type="stmt"/>
            <line num="119" count="2147483647" type="stmt"/>
            <line num="120" count="2147483647" type="stmt"/>
            <line num="121" count="2147483647" type="stmt"/>
            <line num="122" count="2147483647" type="stmt"/>
            <line num="123" count="2147483647" type="stmt"/>
            <line num="126" count="2147483647" type="stmt"/>
            <line num="127" count="2147483647" type="stmt"/>
            <line num="129" count="2147483647" type="stmt"/>
            <line falsecount="631541500" truecount="2147483647" num="129" type="cond"/>
            <line num="130" count="2147483647" type="stmt"/>
            <line num="131" count="2147483647" type="stmt"/>
            <line num="135" count="631541500" type="stmt"/>
            <line falsecount="315863507" truecount="315677993" num="135" type="cond"/>
            <line num="136" count="315677993" type="stmt"/>
            <line num="138" count="315863507" type="stmt"/>
            <line num="141" count="631541500" type="stmt"/>
            <line falsecount="631541500" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="631541500" type="stmt"/>
            <line num="145" count="631541500" type="stmt"/>
            <line falsecount="352" truecount="631541148" num="145" type="cond"/>
            <line num="146" count="631541148" type="stmt"/>
            <line num="147" count="631541148" type="stmt"/>
            <line num="151" count="352" type="stmt"/>
            <line num="152" count="352" type="stmt"/>
            <line num="156" count="631541500" type="stmt"/>
            <line falsecount="315863507" truecount="315677993" num="156" type="cond"/>
            <line num="157" count="315677993" type="stmt"/>
            <line num="160" count="631541500" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/PoissonDistribution.java" name="PoissonDistribution.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="3" loc="38" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="19" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="PoissonDistribution">
               <metrics coveredelements="14" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="14" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="PoissonDistribution(double)" num="16" count="400" type="method"/>
            <line num="17" count="400" type="stmt"/>
            <line num="18" count="400" type="stmt"/>
            <line complexity="2" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="27" count="130000000" type="method"/>
            <line num="28" count="130000000" type="stmt"/>
            <line num="29" count="130000000" type="stmt"/>
            <line num="30" count="130000000" type="stmt"/>
            <line num="31" count="130000000" type="stmt"/>
            <line falsecount="130000000" truecount="959601" num="31" type="cond"/>
            <line num="32" count="959601" type="stmt"/>
            <line num="33" count="959601" type="stmt"/>
            <line num="34" count="959601" type="stmt"/>
            <line num="36" count="130000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/functions/SABRModel.java" name="SABRModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="5" elements="33" classes="1" ncloc="44" statements="24" conditionals="4" coveredstatements="0"/>
            <class name="SABRModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="33" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SABRModel()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[]) : double[]" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[],double[],double[]) : double[]" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[],double[],double[],double[],double[]) : double[]" num="46" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.templatemethoddesign">
         <metrics coveredelements="0" complexity="41" loc="419" methods="18" classes="2" statements="101" coveredconditionals="0" coveredmethods="0" elements="153" ncloc="205" files="1" conditionals="34" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/templatemethoddesign/LogNormalProcess.java" name="LogNormalProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="419" coveredmethods="0" methods="18" elements="153" classes="2" ncloc="205" statements="101" conditionals="34" coveredstatements="0"/>
            <class name="LogNormalProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="18" elements="153" statements="101" conditionals="34" coveredstatements="0"/>
            </class>
            <class name="LogNormalProcess.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LogNormalProcess(int,BrownianMotion)" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LogNormalProcess(TimeDiscretization,int,int)" num="59" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LogNormalProcess(TimeDiscretization,int,int,int,int)" num="86" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProcessValue(int) : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="doPrecalculateProcess() : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="343" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="357" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="377" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="384" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="setBrownianMotion(BrownianMotion) : void" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setScheme(Scheme) : void" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet.smile">
         <metrics coveredelements="0" complexity="7" loc="66" methods="2" classes="2" statements="16" coveredconditionals="0" coveredmethods="0" elements="28" ncloc="40" files="2" conditionals="10" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/smile/LinearSmileInterpolater.java" name="LinearSmileInterpolater.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="56" coveredmethods="0" methods="2" elements="28" classes="1" ncloc="36" statements="16" conditionals="10" coveredstatements="0"/>
            <class name="LinearSmileInterpolater">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="2" elements="28" statements="16" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearSmileInterpolater(double[][],double[])" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="calculateInterpolatedExtrapolatedSmileVolatility(double,int) : double" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata/model/volatility/caplet/smile/SmileInterpolationExtrapolationMethod.java" name="SmileInterpolationExtrapolationMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SmileInterpolationExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model.volatilities">
         <metrics coveredelements="0" complexity="24" loc="234" methods="12" classes="3" statements="44" coveredconditionals="0" coveredmethods="0" elements="72" ncloc="116" files="2" conditionals="16" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/volatilities/AbstractVolatilitySurface.java" name="AbstractVolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="158" coveredmethods="0" methods="12" elements="72" classes="1" ncloc="101" statements="44" conditionals="16" coveredstatements="0"/>
            <class name="AbstractVolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="12" elements="72" statements="44" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/marketdata2/model/volatilities/VolatilitySurface.java" name="VolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatilitySurface.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.models.covariance">
         <metrics coveredelements="1106" complexity="654" loc="6747" methods="306" classes="42" statements="1779" coveredconditionals="212" coveredmethods="139" elements="2707" ncloc="3789" files="41" conditionals="622" coveredstatements="755"/>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractLIBORCovarianceModel.java" name="AbstractLIBORCovarianceModel.java">
            <metrics coveredelements="39" coveredconditionals="7" complexity="12" loc="131" coveredmethods="8" methods="8" elements="41" classes="1" ncloc="70" statements="25" conditionals="8" coveredstatements="24"/>
            <class name="AbstractLIBORCovarianceModel">
               <metrics coveredelements="39" coveredconditionals="7" complexity="12" coveredmethods="8" methods="8" elements="41" statements="25" conditionals="8" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORCovarianceModel(TimeDiscretization,TimeDiscretization,int)" num="37" count="5536" type="method"/>
            <line num="38" count="5532" type="stmt"/>
            <line num="39" count="5534" type="stmt"/>
            <line num="40" count="5534" type="stmt"/>
            <line num="41" count="5535" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(double,double,RandomVariable[]) : RandomVariable[]" num="44" count="59698041" type="method"/>
            <line num="46" count="59749114" type="stmt"/>
            <line num="47" count="59695280" type="stmt"/>
            <line falsecount="58465027" truecount="1257696" num="47" type="cond"/>
            <line num="48" count="1258836" type="stmt"/>
            <line num="50" count="59755776" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(double,int,RandomVariable[]) : RandomVariable[]" num="56" count="59792252" type="method"/>
            <line num="58" count="59815298" type="stmt"/>
            <line num="59" count="59711254" type="stmt"/>
            <line falsecount="58446264" truecount="1289389" num="59" type="cond"/>
            <line num="60" count="1290417" type="stmt"/>
            <line num="62" count="59761185" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCovariance(double,int,int,RandomVariable[]) : RandomVariable" num="80" count="548346" type="method"/>
            <line num="82" count="548346" type="stmt"/>
            <line num="83" count="548340" type="stmt"/>
            <line falsecount="548340" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="548346" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCovariance(int,int,int,RandomVariable[]) : RandomVariable" num="93" count="329119" type="method"/>
            <line num="96" count="329119" type="stmt"/>
            <line num="97" count="329146" type="stmt"/>
            <line num="100" count="329152" type="stmt"/>
            <line num="103" count="329146" type="stmt"/>
            <line falsecount="329093" truecount="1645228" num="103" type="cond"/>
            <line num="104" count="1645252" type="stmt"/>
            <line num="107" count="329097" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="111" count="66775" type="method"/>
            <line num="113" count="66809" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="116" count="10468" type="method"/>
            <line num="118" count="10475" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="121" count="1979021" type="method"/>
            <line num="123" count="1979050" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractLIBORCovarianceModelParametric.java" name="AbstractLIBORCovarianceModelParametric.java">
            <metrics coveredelements="169" coveredconditionals="40" complexity="51" loc="480" coveredmethods="11" methods="14" elements="230" classes="2" ncloc="292" statements="156" conditionals="60" coveredstatements="118"/>
            <class name="AbstractLIBORCovarianceModelParametric">
               <metrics coveredelements="160" coveredconditionals="38" complexity="46" coveredmethods="8" methods="11" elements="219" statements="152" conditionals="56" coveredstatements="114"/>
            </class>
            <class name="AbstractLIBORCovarianceModelParametric.FutureTaskWithPriority">
               <metrics coveredelements="9" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="11" statements="4" conditionals="4" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORCovarianceModelParametric(TimeDiscretization,TimeDiscretization,int)" num="78" count="5534" type="method"/>
            <line num="79" count="5534" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="89" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="92" type="cond"/>
            <line num="93" count="14" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(LIBORMarketModel,CalibrationProduct[]) : AbstractLIBORCovarianceModelParametric" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getCloneCalibrated(LIBORMarketModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractLIBORCovarianceModelParametric" num="155" count="12" type="method"/>
            <line num="158" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="158" type="cond"/>
            <line num="159" count="2" type="stmt"/>
            <line num="162" count="12" type="stmt"/>
            <line num="163" count="12" type="stmt"/>
            <line num="164" count="12" type="stmt"/>
            <line num="165" count="12" type="stmt"/>
            <line num="166" count="12" type="stmt"/>
            <line num="168" count="12" type="stmt"/>
            <line num="169" count="12" type="stmt"/>
            <line num="170" count="12" type="stmt"/>
            <line num="171" count="12" type="stmt"/>
            <line num="172" count="12" type="stmt"/>
            <line num="173" count="12" type="stmt"/>
            <line num="174" count="12" type="stmt"/>
            <line num="175" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="175" type="cond"/>
            <line num="177" count="12" type="stmt"/>
            <line num="178" count="12" type="stmt"/>
            <line num="180" count="12" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="182" count="893" type="method"/>
            <line num="185" count="893" type="stmt"/>
            <line num="189" count="893" type="stmt"/>
            <line num="190" count="893" type="stmt"/>
            <line num="191" count="893" type="stmt"/>
            <line num="193" count="893" type="stmt"/>
            <line num="194" count="893" type="stmt"/>
            <line falsecount="893" truecount="137522" num="194" type="cond"/>
            <line num="195" count="137522" type="stmt"/>
            <line num="196" count="137522" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="197" count="137520" type="method"/>
            <line num="199" count="137512" type="stmt"/>
            <line num="200" count="137513" type="stmt"/>
            <line num="203" count="8930" type="stmt"/>
            <line num="207" count="137522" type="stmt"/>
            <line falsecount="0" truecount="137522" num="207" type="cond"/>
            <line num="208" count="137522" type="stmt"/>
            <line num="209" count="137522" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="893" type="stmt"/>
            <line falsecount="893" truecount="137522" num="217" type="cond"/>
            <line num="218" count="137522" type="stmt"/>
            <line num="219" count="137522" type="stmt"/>
            <line num="220" count="137522" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="235" count="12" type="stmt"/>
            <line num="236" count="12" type="stmt"/>
            <line num="242" count="12" type="stmt"/>
            <line num="243" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="243" type="cond"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="254" type="cond"/>
            <line num="255" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="275" type="cond"/>
            <line num="276" count="10" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="FutureTaskWithPriority(Callable&lt;T&gt;,int)" num="319" count="231248" type="method"/>
            <line num="320" count="231249" type="stmt"/>
            <line num="321" count="231247" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPriority() : int" num="323" count="2728240" type="method"/>
            <line num="324" count="2728240" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(FutureTaskWithPriority&lt;T&gt;) : int" num="326" count="682060" type="method"/>
            <line num="328" count="682060" type="stmt"/>
            <line falsecount="682060" truecount="0" num="328" type="cond"/>
            <line falsecount="0" truecount="682060" num="328" type="cond"/>
            <line complexity="15" visibility="public" signature="getCloneCalibratedLegazy(LIBORMarketModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractLIBORCovarianceModelParametric" num="333" count="10" type="method"/>
            <line num="335" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="10" type="stmt"/>
            <line num="339" count="10" type="stmt"/>
            <line num="340" count="10" type="stmt"/>
            <line num="341" count="10" type="stmt"/>
            <line num="342" count="10" type="stmt"/>
            <line num="343" count="10" type="stmt"/>
            <line num="345" count="10" type="stmt"/>
            <line num="346" count="10" type="stmt"/>
            <line num="347" count="10" type="stmt"/>
            <line num="348" count="10" type="stmt"/>
            <line num="349" count="10" type="stmt"/>
            <line num="350" count="10" type="stmt"/>
            <line num="351" count="10" type="stmt"/>
            <line num="352" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="352" type="cond"/>
            <line num="353" count="10" type="stmt"/>
            <line num="361" count="10" type="stmt"/>
            <line num="362" count="10" type="stmt"/>
            <line num="364" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="364" type="cond"/>
            <line num="365" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="365" type="cond"/>
            <line num="366" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="366" type="cond"/>
            <line num="367" count="10" type="stmt"/>
            <line falsecount="3" truecount="7" num="367" type="cond"/>
            <line num="368" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="368" type="cond"/>
            <line num="369" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="369" type="cond"/>
            <line num="371" count="10" type="stmt"/>
            <line num="372" count="10" type="stmt"/>
            <line num="374" count="10" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="376" count="2108" type="method"/>
            <line num="379" count="2107" type="stmt"/>
            <line num="383" count="2107" type="stmt"/>
            <line num="384" count="2103" type="stmt"/>
            <line num="385" count="2103" type="stmt"/>
            <line num="387" count="2105" type="stmt"/>
            <line num="388" count="2107" type="stmt"/>
            <line falsecount="2108" truecount="231248" num="388" type="cond"/>
            <line num="389" count="231250" type="stmt"/>
            <line num="392" count="231247" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="394" count="231188" type="method"/>
            <line num="396" count="231174" type="stmt"/>
            <line num="397" count="231170" type="stmt"/>
            <line num="400" count="13975" type="stmt"/>
            <line num="406" count="231247" type="stmt"/>
            <line falsecount="0" truecount="231244" num="406" type="cond"/>
            <line num="407" count="231244" type="stmt"/>
            <line num="408" count="231251" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="2108" type="stmt"/>
            <line falsecount="2108" truecount="231239" num="415" type="cond"/>
            <line num="416" count="231239" type="stmt"/>
            <line num="417" count="231239" type="stmt"/>
            <line num="418" count="231243" type="stmt"/>
            <line falsecount="14162" truecount="217081" num="418" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="427" count="10" type="stmt"/>
            <line num="428" count="10" type="stmt"/>
            <line num="429" count="10" type="stmt"/>
            <line num="432" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="447" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="455" count="10" type="stmt"/>
            <line num="456" count="10" type="stmt"/>
            <line num="458" count="10" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="468" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="468" type="cond"/>
            <line num="469" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="475" count="0" type="method"/>
            <line num="477" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractShortRateVolatilityModel.java" name="AbstractShortRateVolatilityModel.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="AbstractShortRateVolatilityModel">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractShortRateVolatilityModel(TimeDiscretization)" num="30" count="30" type="method"/>
            <line num="31" count="30" type="stmt"/>
            <line num="32" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="40" count="7999827" type="method"/>
            <line num="42" count="8029094" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractShortRateVolatilityModelParametric.java" name="AbstractShortRateVolatilityModelParametric.java">
            <metrics coveredelements="84" coveredconditionals="18" complexity="27" loc="419" coveredmethods="6" methods="7" elements="123" classes="1" ncloc="166" statements="82" conditionals="34" coveredstatements="60"/>
            <class name="AbstractShortRateVolatilityModelParametric">
               <metrics coveredelements="84" coveredconditionals="18" complexity="27" coveredmethods="6" methods="7" elements="123" statements="82" conditionals="34" coveredstatements="60"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractShortRateVolatilityModelParametric(TimeDiscretization)" num="67" count="30" type="method"/>
            <line num="68" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="85" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="2" truecount="16" num="89" type="cond"/>
            <line num="90" count="16" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(ShortRateModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractShortRateVolatilityModelParametric" num="136" count="1" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="14" visibility="public" signature="getCloneCalibratedLegazy(ShortRateModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractShortRateVolatilityModelParametric" num="279" count="1" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="298" type="cond"/>
            <line num="299" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="310" type="cond"/>
            <line num="311" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="311" type="cond"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="313" type="cond"/>
            <line num="314" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="314" type="cond"/>
            <line num="315" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="315" type="cond"/>
            <line num="316" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="316" type="cond"/>
            <line num="318" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="324" count="28" type="method"/>
            <line num="327" count="28" type="stmt"/>
            <line num="331" count="28" type="stmt"/>
            <line num="332" count="28" type="stmt"/>
            <line num="333" count="28" type="stmt"/>
            <line num="335" count="28" type="stmt"/>
            <line num="336" count="28" type="stmt"/>
            <line falsecount="28" truecount="193" num="336" type="cond"/>
            <line num="337" count="195" type="stmt"/>
            <line num="338" count="195" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="339" count="194" type="method"/>
            <line num="341" count="196" type="stmt"/>
            <line num="342" count="196" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="349" count="196" type="stmt"/>
            <line falsecount="195" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="354" count="196" type="stmt"/>
            <line num="355" count="195" type="stmt"/>
            <line num="356" count="194" type="stmt"/>
            <line num="359" count="28" type="stmt"/>
            <line falsecount="28" truecount="196" num="359" type="cond"/>
            <line num="360" count="196" type="stmt"/>
            <line num="361" count="196" type="stmt"/>
            <line num="362" count="196" type="stmt"/>
            <line falsecount="0" truecount="196" num="362" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/BlendedLocalVolatilityModel.java" name="BlendedLocalVolatilityModel.java">
            <metrics coveredelements="44" coveredconditionals="8" complexity="28" loc="321" coveredmethods="8" methods="14" elements="107" classes="1" ncloc="134" statements="69" conditionals="24" coveredstatements="28"/>
            <class name="BlendedLocalVolatilityModel">
               <metrics coveredelements="44" coveredconditionals="8" complexity="28" coveredmethods="8" methods="14" elements="107" statements="69" conditionals="24" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,ForwardCurve,RandomVariable,boolean)" num="79" count="184" type="method"/>
            <line num="80" count="184" type="stmt"/>
            <line num="82" count="184" type="stmt"/>
            <line num="83" count="184" type="stmt"/>
            <line num="84" count="184" type="stmt"/>
            <line num="85" count="184" type="stmt"/>
            <line complexity="2" visibility="public" signature="BlendedLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,ForwardCurve,double,boolean)" num="108" count="184" type="method"/>
            <line num="109" count="184" type="stmt"/>
            <line num="111" count="184" type="stmt"/>
            <line falsecount="0" truecount="185" num="111" type="cond"/>
            <line num="112" count="185" type="stmt"/>
            <line num="113" count="185" type="stmt"/>
            <line num="114" count="185" type="stmt"/>
            <line num="115" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,double,boolean)" num="140" count="1" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,ForwardCurve,double,boolean)" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="188" count="1" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="192" count="184" type="method"/>
            <line num="194" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="211" count="3" type="method"/>
            <line num="213" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="213" type="cond"/>
            <line num="214" count="3" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="240" count="182" type="method"/>
            <line num="242" count="182" type="stmt"/>
            <line falsecount="184" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="183" type="stmt"/>
            <line falsecount="0" truecount="184" num="246" type="cond"/>
            <line num="247" count="184" type="stmt"/>
            <line num="248" count="183" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="259" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="264" count="286783" type="method"/>
            <line num="266" count="286803" type="stmt"/>
            <line num="268" count="286470" type="stmt"/>
            <line num="269" count="286429" type="stmt"/>
            <line falsecount="286243" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="286433" type="stmt"/>
            <line falsecount="0" truecount="286251" num="275" type="cond"/>
            <line num="276" count="286262" type="stmt"/>
            <line num="277" count="286931" type="stmt"/>
            <line falsecount="286986" truecount="1434431" num="277" type="cond"/>
            <line num="278" count="1434558" type="stmt"/>
            <line num="282" count="286998" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="290" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/DisplacedLocalVolatilityModel.java" name="DisplacedLocalVolatilityModel.java">
            <metrics coveredelements="41" coveredconditionals="9" complexity="26" loc="230" coveredmethods="7" methods="12" elements="97" classes="1" ncloc="120" statements="61" conditionals="24" coveredstatements="25"/>
            <class name="DisplacedLocalVolatilityModel">
               <metrics coveredelements="41" coveredconditionals="9" complexity="26" coveredmethods="7" methods="12" elements="97" statements="61" conditionals="24" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,RandomVariable,boolean)" num="67" count="1551" type="method"/>
            <line num="68" count="1551" type="stmt"/>
            <line num="69" count="1551" type="stmt"/>
            <line num="70" count="1551" type="stmt"/>
            <line num="71" count="1551" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="95" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line num="97" count="3" type="stmt"/>
            <line num="98" count="3" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="121" count="12" type="method"/>
            <line num="123" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="123" type="cond"/>
            <line num="124" count="12" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="140" count="1" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line falsecount="1" truecount="48" num="144" type="cond"/>
            <line num="145" count="48" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="150" count="1549" type="method"/>
            <line num="152" count="1549" type="stmt"/>
            <line falsecount="1549" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="1549" type="stmt"/>
            <line falsecount="0" truecount="1549" num="156" type="cond"/>
            <line num="157" count="1549" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="169" count="654" type="method"/>
            <line num="171" count="654" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="174" count="39086897" type="method"/>
            <line num="176" count="39122355" type="stmt"/>
            <line num="178" count="38659899" type="stmt"/>
            <line falsecount="25600" truecount="38670914" num="178" type="cond"/>
            <line num="179" count="38697456" type="stmt"/>
            <line num="180" count="39151874" type="stmt"/>
            <line falsecount="39216195" truecount="39195261" num="180" type="cond"/>
            <line num="181" count="39210029" type="stmt"/>
            <line num="185" count="39279164" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ExponentialDecayLocalVolatilityModel.java" name="ExponentialDecayLocalVolatilityModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="254" coveredmethods="0" methods="13" elements="102" classes="1" ncloc="124" statements="65" conditionals="24" coveredstatements="0"/>
            <class name="ExponentialDecayLocalVolatilityModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="13" elements="102" statements="65" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialDecayLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,RandomVariable,boolean)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ExponentialDecayLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,double,boolean)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentialDecayLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/HullWhiteLocalVolatilityModel.java" name="HullWhiteLocalVolatilityModel.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="13" loc="121" coveredmethods="2" methods="8" elements="39" classes="1" ncloc="59" statements="23" conditionals="8" coveredstatements="9"/>
            <class name="HullWhiteLocalVolatilityModel">
               <metrics coveredelements="15" coveredconditionals="4" complexity="13" coveredmethods="2" methods="8" elements="39" statements="23" conditionals="8" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double)" num="53" count="9" type="method"/>
            <line num="54" count="9" type="stmt"/>
            <line num="55" count="9" type="stmt"/>
            <line num="56" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="83" count="15518" type="method"/>
            <line num="85" count="15498" type="stmt"/>
            <line num="87" count="15430" type="stmt"/>
            <line falsecount="3200" truecount="12249" num="87" type="cond"/>
            <line num="88" count="12265" type="stmt"/>
            <line num="89" count="12473" type="stmt"/>
            <line falsecount="12473" truecount="12476" num="89" type="cond"/>
            <line num="90" count="12476" type="stmt"/>
            <line num="94" count="15674" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModel.java" name="LIBORCorrelationModel.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="84" coveredmethods="2" methods="4" elements="10" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="4"/>
            <class name="LIBORCorrelationModel">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModel(TimeDiscretization,TimeDiscretization)" num="34" count="1943" type="method"/>
            <line num="35" count="1943" type="stmt"/>
            <line num="36" count="1944" type="stmt"/>
            <line num="37" count="1943" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="54" count="4077801" type="method"/>
            <line num="55" count="4079502" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModelExponentialDecay.java" name="LIBORCorrelationModelExponentialDecay.java">
            <metrics coveredelements="47" coveredconditionals="11" complexity="18" loc="165" coveredmethods="7" methods="10" elements="75" classes="1" ncloc="98" statements="49" conditionals="16" coveredstatements="29"/>
            <class name="LIBORCorrelationModelExponentialDecay">
               <metrics coveredelements="47" coveredconditionals="11" complexity="18" coveredmethods="7" methods="10" elements="75" statements="49" conditionals="16" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelExponentialDecay(TimeDiscretization,TimeDiscretization,int,double,boolean)" num="50" count="897" type="method"/>
            <line num="51" count="898" type="stmt"/>
            <line num="53" count="898" type="stmt"/>
            <line num="54" count="899" type="stmt"/>
            <line num="55" count="895" type="stmt"/>
            <line num="57" count="898" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelExponentialDecay(TimeDiscretization,TimeDiscretization,int,double)" num="60" count="214" type="method"/>
            <line num="61" count="214" type="stmt"/>
            <line num="63" count="214" type="stmt"/>
            <line num="64" count="214" type="stmt"/>
            <line num="65" count="214" type="stmt"/>
            <line num="67" count="214" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORCorrelationModelExponentialDecay" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int) : double" num="84" count="63006923" type="method"/>
            <line num="86" count="63050291" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelation(int,int,int) : double" num="89" count="219230" type="method"/>
            <line num="91" count="219230" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="94" count="59227611" type="method"/>
            <line num="96" count="59269290" type="stmt"/>
            <line complexity="6" visibility="private" signature="initialize(int,double) : void" num="99" count="1113" type="method"/>
            <line num="105" count="1111" type="stmt"/>
            <line num="107" count="1112" type="stmt"/>
            <line num="108" count="1113" type="stmt"/>
            <line falsecount="1113" truecount="43436" num="108" type="cond"/>
            <line num="109" count="43458" type="stmt"/>
            <line falsecount="43411" truecount="1732716" num="109" type="cond"/>
            <line num="111" count="1734801" type="stmt"/>
            <line num="118" count="1112" type="stmt"/>
            <line num="120" count="1112" type="stmt"/>
            <line falsecount="1113" truecount="43704" num="120" type="cond"/>
            <line num="121" count="43684" type="stmt"/>
            <line falsecount="43701" truecount="897536" num="121" type="cond"/>
            <line num="122" count="895777" type="stmt"/>
            <line num="123" count="896147" type="stmt"/>
            <line falsecount="899237" truecount="4347115" num="123" type="cond"/>
            <line num="124" count="4350157" type="stmt"/>
            <line num="126" count="900016" type="stmt"/>
            <line num="127" count="900030" type="stmt"/>
            <line num="129" count="43713" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="133" count="2271" type="method"/>
            <line num="135" count="2271" type="stmt"/>
            <line falsecount="0" truecount="2271" num="135" type="cond"/>
            <line num="136" count="2271" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORCorrelationModel" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModelThreeParameterExponentialDecay.java" name="LIBORCorrelationModelThreeParameterExponentialDecay.java">
            <metrics coveredelements="48" coveredconditionals="12" complexity="19" loc="185" coveredmethods="4" methods="9" elements="97" classes="1" ncloc="130" statements="68" conditionals="20" coveredstatements="32"/>
            <class name="LIBORCorrelationModelThreeParameterExponentialDecay">
               <metrics coveredelements="48" coveredconditionals="12" complexity="19" coveredmethods="4" methods="9" elements="97" statements="68" conditionals="20" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelThreeParameterExponentialDecay(TimeDiscretization,TimeDiscretization,int,double,double,double,boolean)" num="42" count="829" type="method"/>
            <line num="43" count="830" type="stmt"/>
            <line num="45" count="831" type="stmt"/>
            <line num="46" count="830" type="stmt"/>
            <line num="47" count="827" type="stmt"/>
            <line num="48" count="830" type="stmt"/>
            <line num="49" count="829" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORCorrelationModelThreeParameterExponentialDecay" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,int) : double" num="80" count="7810117" type="method"/>
            <line num="82" count="7812912" type="stmt"/>
            <line num="83" count="7889213" type="stmt"/>
            <line falsecount="7889028" truecount="412" num="83" type="cond"/>
            <line num="84" count="411" type="stmt"/>
            <line num="88" count="7889745" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCorrelation(int,int,int) : double" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="101" count="1313719" type="method"/>
            <line num="103" count="1313754" type="stmt"/>
            <line complexity="6" visibility="private" signature="initialize(int,double,double,double) : void" num="106" count="410" type="method"/>
            <line num="111" count="404" type="stmt"/>
            <line num="112" count="409" type="stmt"/>
            <line num="113" count="410" type="stmt"/>
            <line num="115" count="409" type="stmt"/>
            <line num="116" count="410" type="stmt"/>
            <line falsecount="412" truecount="16413" num="116" type="cond"/>
            <line num="117" count="16420" type="stmt"/>
            <line falsecount="16389" truecount="306370" num="117" type="cond"/>
            <line num="119" count="307494" type="stmt"/>
            <line num="120" count="305787" type="stmt"/>
            <line num="121" count="305275" type="stmt"/>
            <line num="122" count="305529" type="stmt"/>
            <line num="123" count="305740" type="stmt"/>
            <line num="125" count="16402" type="stmt"/>
            <line num="131" count="412" type="stmt"/>
            <line num="133" count="412" type="stmt"/>
            <line falsecount="411" truecount="16470" num="133" type="cond"/>
            <line num="134" count="16471" type="stmt"/>
            <line falsecount="16464" truecount="315505" num="134" type="cond"/>
            <line num="135" count="315619" type="stmt"/>
            <line num="136" count="315351" type="stmt"/>
            <line falsecount="315220" truecount="1832869" num="136" type="cond"/>
            <line num="137" count="1833042" type="stmt"/>
            <line num="139" count="315486" type="stmt"/>
            <line num="140" count="315025" type="stmt"/>
            <line num="142" count="16468" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORCorrelationModel" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModel.java" name="LIBORCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="149" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="20" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelBH.java" name="LIBORCovarianceModelBH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="116" coveredmethods="0" methods="8" elements="47" classes="1" ncloc="67" statements="33" conditionals="6" coveredstatements="0"/>
            <class name="LIBORCovarianceModelBH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="8" elements="47" statements="33" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelBH(TimeDiscretization,TimeDiscretization,int,double[])" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelBH(TimeDiscretization,TimeDiscretization,int)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelCalibrateable.java" name="LIBORCovarianceModelCalibrateable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORCovarianceModelCalibrateable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelExponentialForm5Param.java" name="LIBORCovarianceModelExponentialForm5Param.java">
            <metrics coveredelements="45" coveredconditionals="6" complexity="23" loc="152" coveredmethods="9" methods="12" elements="79" classes="1" ncloc="111" statements="51" conditionals="16" coveredstatements="30"/>
            <class name="LIBORCovarianceModelExponentialForm5Param">
               <metrics coveredelements="45" coveredconditionals="6" complexity="23" coveredmethods="9" methods="12" elements="79" statements="51" conditionals="16" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int,RandomVariable[])" num="40" count="539" type="method"/>
            <line num="41" count="540" type="stmt"/>
            <line num="43" count="540" type="stmt"/>
            <line num="44" count="540" type="stmt"/>
            <line num="45" count="541" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int,double[])" num="48" count="5" type="method"/>
            <line num="49" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int)" num="52" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="55" count="535" type="method"/>
            <line num="57" count="535" type="stmt"/>
            <line num="58" count="536" type="stmt"/>
            <line num="59" count="536" type="stmt"/>
            <line num="60" count="536" type="stmt"/>
            <line num="61" count="536" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="64" count="352" type="method"/>
            <line num="66" count="352" type="stmt"/>
            <line num="68" count="352" type="stmt"/>
            <line num="69" count="352" type="stmt"/>
            <line falsecount="0" truecount="352" num="69" type="cond"/>
            <line num="70" count="352" type="stmt"/>
            <line num="72" count="352" type="stmt"/>
            <line falsecount="0" truecount="352" num="72" type="cond"/>
            <line num="73" count="352" type="stmt"/>
            <line num="76" count="352" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="79" count="548" type="method"/>
            <line num="81" count="549" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="84" count="168" type="method"/>
            <line num="86" count="168" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="89" count="8" type="method"/>
            <line num="91" count="8" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line num="93" count="8" type="stmt"/>
            <line falsecount="8" truecount="40" num="93" type="cond"/>
            <line num="94" count="40" type="stmt"/>
            <line num="96" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="99" count="554744" type="method"/>
            <line num="101" count="554815" type="stmt"/>
            <line num="102" count="554342" type="stmt"/>
            <line falsecount="554775" truecount="3009768" num="102" type="cond"/>
            <line num="103" count="3013447" type="stmt"/>
            <line num="104" count="3036699" type="stmt"/>
            <line num="108" count="554940" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelExponentialForm7Param.java" name="LIBORCovarianceModelExponentialForm7Param.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="16" loc="107" coveredmethods="5" methods="7" elements="54" classes="1" ncloc="76" statements="39" conditionals="8" coveredstatements="29"/>
            <class name="LIBORCovarianceModelExponentialForm7Param">
               <metrics coveredelements="40" coveredconditionals="6" complexity="16" coveredmethods="5" methods="7" elements="54" statements="39" conditionals="8" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm7Param(TimeDiscretization,TimeDiscretization,int)" num="29" count="422" type="method"/>
            <line num="30" count="422" type="stmt"/>
            <line num="32" count="420" type="stmt"/>
            <line num="33" count="422" type="stmt"/>
            <line num="34" count="422" type="stmt"/>
            <line num="35" count="422" type="stmt"/>
            <line num="36" count="422" type="stmt"/>
            <line num="37" count="421" type="stmt"/>
            <line num="38" count="422" type="stmt"/>
            <line num="40" count="421" type="stmt"/>
            <line num="41" count="421" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="44" count="418" type="method"/>
            <line num="46" count="418" type="stmt"/>
            <line num="47" count="419" type="stmt"/>
            <line num="48" count="419" type="stmt"/>
            <line num="49" count="420" type="stmt"/>
            <line num="50" count="418" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="53" count="420" type="method"/>
            <line num="55" count="420" type="stmt"/>
            <line num="57" count="419" type="stmt"/>
            <line num="58" count="420" type="stmt"/>
            <line falsecount="8" truecount="412" num="58" type="cond"/>
            <line num="59" count="412" type="stmt"/>
            <line num="61" count="420" type="stmt"/>
            <line falsecount="10" truecount="410" num="61" type="cond"/>
            <line num="62" count="410" type="stmt"/>
            <line num="65" count="419" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="68" count="6" type="method"/>
            <line num="70" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="73" count="1313932" type="method"/>
            <line num="75" count="1314012" type="stmt"/>
            <line num="76" count="1312559" type="stmt"/>
            <line falsecount="1314005" truecount="7863568" num="76" type="cond"/>
            <line num="77" count="7866525" type="stmt"/>
            <line num="78" count="7806641" type="stmt"/>
            <line num="79" count="7808538" type="stmt"/>
            <line num="82" count="1314342" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelFromVolatilityAndCorrelation.java" name="LIBORCovarianceModelFromVolatilityAndCorrelation.java">
            <metrics coveredelements="62" coveredconditionals="11" complexity="29" loc="209" coveredmethods="7" methods="12" elements="120" classes="1" ncloc="141" statements="78" conditionals="30" coveredstatements="44"/>
            <class name="LIBORCovarianceModelFromVolatilityAndCorrelation">
               <metrics coveredelements="62" coveredconditionals="11" complexity="29" coveredmethods="7" methods="12" elements="120" statements="78" conditionals="30" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelFromVolatilityAndCorrelation(TimeDiscretization,TimeDiscretization,LIBORVolatilityModel,LIBORCorrelationModel)" num="40" count="2461" type="method"/>
            <line num="41" count="2461" type="stmt"/>
            <line num="43" count="2461" type="stmt"/>
            <line num="44" count="2461" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="47" count="58621197" type="method"/>
            <line num="49" count="58660155" type="stmt"/>
            <line num="51" count="58527221" type="stmt"/>
            <line num="52" count="58183030" type="stmt"/>
            <line falsecount="58175491" truecount="59940117" num="52" type="cond"/>
            <line num="53" count="59971688" type="stmt"/>
            <line num="56" count="58206897" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovariance(int,int,int,RandomVariable[]) : RandomVariable" num="82" count="219230" type="method"/>
            <line num="85" count="219230" type="stmt"/>
            <line num="86" count="219230" type="stmt"/>
            <line num="88" count="219230" type="stmt"/>
            <line num="90" count="219230" type="stmt"/>
            <line num="92" count="219230" type="stmt"/>
            <line complexity="5" visibility="public" signature="getParameter() : RandomVariable[]" num="95" count="30" type="method"/>
            <line num="97" count="30" type="stmt"/>
            <line num="98" count="30" type="stmt"/>
            <line num="100" count="30" type="stmt"/>
            <line num="101" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="101" type="cond"/>
            <line num="102" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="102" type="cond"/>
            <line num="104" count="30" type="stmt"/>
            <line num="106" count="30" type="stmt"/>
            <line num="107" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="107" type="cond"/>
            <line num="108" count="30" type="stmt"/>
            <line num="109" count="30" type="stmt"/>
            <line num="111" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="119" count="692" type="method"/>
            <line num="121" count="692" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="124" count="11" type="method"/>
            <line num="126" count="11" type="stmt"/>
            <line num="127" count="11" type="stmt"/>
            <line num="128" count="11" type="stmt"/>
            <line falsecount="11" truecount="528" num="128" type="cond"/>
            <line num="129" count="528" type="stmt"/>
            <line num="131" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="142" count="2241" type="method"/>
            <line num="144" count="2241" type="stmt"/>
            <line num="145" count="2241" type="stmt"/>
            <line num="147" count="2241" type="stmt"/>
            <line num="148" count="2241" type="stmt"/>
            <line num="150" count="2241" type="stmt"/>
            <line num="151" count="2241" type="stmt"/>
            <line falsecount="0" truecount="2241" num="151" type="cond"/>
            <line num="152" count="2241" type="stmt"/>
            <line num="153" count="2241" type="stmt"/>
            <line num="154" count="2241" type="stmt"/>
            <line num="155" count="2241" type="stmt"/>
            <line falsecount="0" truecount="2241" num="155" type="cond"/>
            <line num="156" count="2241" type="stmt"/>
            <line num="160" count="2241" type="stmt"/>
            <line falsecount="2241" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="2241" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityModel() : LIBORVolatilityModel" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationModel() : LIBORCorrelationModel" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelStochasticHestonVolatility.java" name="LIBORCovarianceModelStochasticHestonVolatility.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="316" coveredmethods="0" methods="22" elements="164" classes="1" ncloc="212" statements="108" conditionals="34" coveredstatements="0"/>
            <class name="LIBORCovarianceModelStochasticHestonVolatility">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="22" elements="164" statements="108" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticHestonVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,RandomVariable,RandomVariable,RandomVariable,boolean)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticHestonVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,double,double,double,boolean)" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="setParameter(RandomVariable[]) : void" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelStochasticVolatility.java" name="LIBORCovarianceModelStochasticVolatility.java">
            <metrics coveredelements="84" coveredconditionals="11" complexity="39" loc="306" coveredmethods="15" methods="22" elements="149" classes="1" ncloc="200" statements="97" conditionals="30" coveredstatements="58"/>
            <class name="LIBORCovarianceModelStochasticVolatility">
               <metrics coveredelements="84" coveredconditionals="11" complexity="39" coveredmethods="15" methods="22" elements="149" statements="97" conditionals="30" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,RandomVariable,RandomVariable,boolean)" num="72" count="182" type="method"/>
            <line num="73" count="182" type="stmt"/>
            <line num="75" count="182" type="stmt"/>
            <line num="76" count="182" type="stmt"/>
            <line num="77" count="182" type="stmt"/>
            <line num="78" count="184" type="stmt"/>
            <line num="80" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,double,double,boolean)" num="92" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="103" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line complexity="4" visibility="private" signature="setParameter(RandomVariable[]) : void" num="124" count="184" type="method"/>
            <line num="125" count="183" type="stmt"/>
            <line falsecount="184" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="184" type="stmt"/>
            <line falsecount="183" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="184" type="stmt"/>
            <line num="135" count="184" type="stmt"/>
            <line num="137" count="184" type="stmt"/>
            <line num="139" count="184" type="stmt"/>
            <line num="140" count="184" type="stmt"/>
            <line num="142" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="145" count="184" type="method"/>
            <line num="147" count="184" type="stmt"/>
            <line num="148" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="151" count="184" type="method"/>
            <line num="153" count="184" type="stmt"/>
            <line num="154" count="182" type="stmt"/>
            <line num="155" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="158" count="184" type="method"/>
            <line num="160" count="184" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="163" count="2" type="method"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="167" type="cond"/>
            <line num="168" count="14" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="173" count="285179" type="method"/>
            <line num="176" count="285028" type="stmt"/>
            <line num="177" count="287026" type="stmt"/>
            <line falsecount="286833" truecount="184" num="177" type="cond"/>
            <line num="178" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="195" count="368" type="method"/>
            <line num="197" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="200" count="184" type="method"/>
            <line num="202" count="184" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="205" count="7359" type="method"/>
            <line num="207" count="7359" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="210" count="7360" type="method"/>
            <line num="212" count="7360" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="214" count="7544" type="method"/>
            <line num="216" count="7544" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="219" count="7357" type="method"/>
            <line num="221" count="7358" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="184" type="stmt"/>
            <line num="238" count="286974" type="stmt"/>
            <line num="239" count="286926" type="stmt"/>
            <line num="240" count="286878" type="stmt"/>
            <line num="245" count="286666" type="stmt"/>
            <line num="247" count="286832" type="stmt"/>
            <line falsecount="0" truecount="286758" num="247" type="cond"/>
            <line num="248" count="286859" type="stmt"/>
            <line num="249" count="286967" type="stmt"/>
            <line falsecount="287020" truecount="1434774" num="249" type="cond"/>
            <line num="250" count="1434832" type="stmt"/>
            <line num="254" count="287024" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModel.java" name="LIBORVolatilityModel.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="96" coveredmethods="3" methods="5" elements="11" classes="1" ncloc="34" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="LIBORVolatilityModel">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="LIBORVolatilityModel()" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModel(TimeDiscretization,TimeDiscretization)" num="42" count="5184" type="method"/>
            <line num="43" count="5187" type="stmt"/>
            <line num="44" count="5186" type="stmt"/>
            <line num="45" count="5188" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="66" count="65037994" type="method"/>
            <line num="67" count="65052567" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="73" count="65264964" type="method"/>
            <line num="74" count="65312122" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFourParameterExponentialForm.java" name="LIBORVolatilityModelFourParameterExponentialForm.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="19" loc="263" coveredmethods="5" methods="9" elements="97" classes="1" ncloc="145" statements="68" conditionals="20" coveredstatements="29"/>
            <class name="LIBORVolatilityModelFourParameterExponentialForm">
               <metrics coveredelements="40" coveredconditionals="6" complexity="19" coveredmethods="5" methods="9" elements="97" statements="68" conditionals="20" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="72" count="893" type="method"/>
            <line num="73" count="893" type="stmt"/>
            <line num="74" count="892" type="stmt"/>
            <line num="75" count="893" type="stmt"/>
            <line num="76" count="893" type="stmt"/>
            <line num="77" count="893" type="stmt"/>
            <line num="78" count="892" type="stmt"/>
            <line num="79" count="892" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="93" count="892" type="method"/>
            <line num="94" count="892" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="109" count="59" type="method"/>
            <line num="110" count="59" type="stmt"/>
            <line num="111" count="59" type="stmt"/>
            <line num="112" count="59" type="stmt"/>
            <line num="113" count="59" type="stmt"/>
            <line num="114" count="59" type="stmt"/>
            <line num="115" count="59" type="stmt"/>
            <line num="116" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="130" count="58" type="method"/>
            <line num="131" count="58" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFourParameterExponentialForm" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="167" count="3310737" type="method"/>
            <line num="170" count="3311408" type="stmt"/>
            <line num="171" count="3339272" type="stmt"/>
            <line falsecount="3339084" truecount="405" num="171" type="cond"/>
            <line num="172" count="405" type="stmt"/>
            <line num="175" count="3335713" type="stmt"/>
            <line falsecount="2868173" truecount="469582" num="175" type="cond"/>
            <line num="176" count="469608" type="stmt"/>
            <line num="177" count="469433" type="stmt"/>
            <line num="178" count="469124" type="stmt"/>
            <line num="180" count="469174" type="stmt"/>
            <line num="181" count="469215" type="stmt"/>
            <line falsecount="314652" truecount="154772" num="181" type="cond"/>
            <line num="183" count="154796" type="stmt"/>
            <line num="187" count="314691" type="stmt"/>
            <line num="190" count="469281" type="stmt"/>
            <line num="193" count="3333348" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFourParameterExponentialFormIntegrated.java" name="LIBORVolatilityModelFourParameterExponentialFormIntegrated.java">
            <metrics coveredelements="60" coveredconditionals="5" complexity="25" loc="333" coveredmethods="4" methods="10" elements="157" classes="1" ncloc="194" statements="117" conditionals="30" coveredstatements="51"/>
            <class name="LIBORVolatilityModelFourParameterExponentialFormIntegrated">
               <metrics coveredelements="60" coveredconditionals="5" complexity="25" coveredmethods="4" methods="10" elements="157" statements="117" conditionals="30" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="121" count="1001" type="method"/>
            <line num="122" count="1001" type="stmt"/>
            <line num="123" count="1001" type="stmt"/>
            <line num="124" count="1001" type="stmt"/>
            <line num="125" count="1001" type="stmt"/>
            <line num="126" count="1001" type="stmt"/>
            <line num="127" count="1001" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFourParameterExponentialFormIntegrated" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="163" count="23080" type="method"/>
            <line num="166" count="23091" type="stmt"/>
            <line num="167" count="23058" type="stmt"/>
            <line num="168" count="23029" type="stmt"/>
            <line num="170" count="23012" type="stmt"/>
            <line falsecount="23018" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="174" count="23032" type="stmt"/>
            <line num="176" count="23085" type="stmt"/>
            <line complexity="2" visibility="private" signature="getIntegratedVariance(double) : RandomVariable" num="179" count="46119" type="method"/>
            <line num="181" count="46132" type="stmt"/>
            <line falsecount="45537" truecount="601" num="181" type="cond"/>
            <line num="182" count="601" type="stmt"/>
            <line num="194" count="45544" type="stmt"/>
            <line num="195" count="45549" type="stmt"/>
            <line num="196" count="45526" type="stmt"/>
            <line num="197" count="45515" type="stmt"/>
            <line num="198" count="45509" type="stmt"/>
            <line num="199" count="45528" type="stmt"/>
            <line num="201" count="45514" type="stmt"/>
            <line num="202" count="45517" type="stmt"/>
            <line num="204" count="45514" type="stmt"/>
            <line num="205" count="45573" type="stmt"/>
            <line num="207" count="45549" type="stmt"/>
            <line num="208" count="45582" type="stmt"/>
            <line num="209" count="45570" type="stmt"/>
            <line num="217" count="45556" type="stmt"/>
            <line num="218" count="45550" type="stmt"/>
            <line num="220" count="45547" type="stmt"/>
            <line num="221" count="45548" type="stmt"/>
            <line num="222" count="45564" type="stmt"/>
            <line num="224" count="45551" type="stmt"/>
            <line num="225" count="45543" type="stmt"/>
            <line num="226" count="45544" type="stmt"/>
            <line num="228" count="45553" type="stmt"/>
            <line num="229" count="45555" type="stmt"/>
            <line num="230" count="45576" type="stmt"/>
            <line num="231" count="45562" type="stmt"/>
            <line num="232" count="45566" type="stmt"/>
            <line num="243" count="45553" type="stmt"/>
            <line num="244" count="45577" type="stmt"/>
            <line num="245" count="45584" type="stmt"/>
            <line num="246" count="45578" type="stmt"/>
            <line num="247" count="45584" type="stmt"/>
            <line num="248" count="45585" type="stmt"/>
            <line num="250" count="45594" type="stmt"/>
            <line complexity="2" visibility="private" signature="polynom(RandomVariable,double[]) : RandomVariable" num="253" count="227010" type="method"/>
            <line num="254" count="227088" type="stmt"/>
            <line num="256" count="227025" type="stmt"/>
            <line falsecount="226897" truecount="677631" num="256" type="cond"/>
            <line num="257" count="678499" type="stmt"/>
            <line num="259" count="227050" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFromGivenMatrix.java" name="LIBORVolatilityModelFromGivenMatrix.java">
            <metrics coveredelements="35" coveredconditionals="7" complexity="22" loc="226" coveredmethods="7" methods="11" elements="82" classes="1" ncloc="126" statements="49" conditionals="22" coveredstatements="21"/>
            <class name="LIBORVolatilityModelFromGivenMatrix">
               <metrics coveredelements="35" coveredconditionals="7" complexity="22" coveredmethods="7" methods="11" elements="82" statements="49" conditionals="22" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[][],boolean)" num="47" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,RandomVariable[][],boolean)" num="69" count="50" type="method"/>
            <line num="74" count="50" type="stmt"/>
            <line num="76" count="50" type="stmt"/>
            <line num="77" count="50" type="stmt"/>
            <line num="78" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,RandomVariable[][])" num="89" count="50" type="method"/>
            <line num="93" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[][],boolean)" num="106" count="105" type="method"/>
            <line num="112" count="105" type="stmt"/>
            <line num="114" count="105" type="stmt"/>
            <line num="115" count="105" type="stmt"/>
            <line num="116" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[][])" num="129" count="105" type="method"/>
            <line num="134" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,double[][])" num="145" count="104" type="method"/>
            <line num="149" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="153" count="1879792" type="method"/>
            <line num="155" count="1880770" type="stmt"/>
            <line complexity="5" visibility="public" signature="getParameter() : RandomVariable[]" num="158" count="5" type="method"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="161" type="cond"/>
            <line num="162" count="5" type="stmt"/>
            <line num="163" count="5" type="stmt"/>
            <line falsecount="5" truecount="20" num="163" type="cond"/>
            <line num="164" count="20" type="stmt"/>
            <line falsecount="20" truecount="80" num="164" type="cond"/>
            <line num="165" count="80" type="stmt"/>
            <line falsecount="50" truecount="30" num="165" type="cond"/>
            <line num="166" count="30" type="stmt"/>
            <line num="170" count="5" type="stmt"/>
            <line num="174" count="5" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFromGivenMatrix" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelMaturityDependentFourParameterExponentialForm.java" name="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm.java">
            <metrics coveredelements="22" coveredconditionals="1" complexity="24" loc="268" coveredmethods="3" methods="18" elements="111" classes="1" ncloc="195" statements="81" conditionals="12" coveredstatements="18"/>
            <class name="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm">
               <metrics coveredelements="22" coveredconditionals="1" complexity="24" coveredmethods="3" methods="18" elements="111" statements="81" conditionals="12" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[])" num="33" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],double[],double[])" num="57" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double)" num="79" count="831" type="method"/>
            <line num="84" count="833" type="stmt"/>
            <line num="85" count="831" type="stmt"/>
            <line num="86" count="830" type="stmt"/>
            <line num="86" count="834" type="stmt"/>
            <line num="87" count="833" type="stmt"/>
            <line num="87" count="831" type="stmt"/>
            <line num="88" count="834" type="stmt"/>
            <line num="88" count="834" type="stmt"/>
            <line num="89" count="833" type="stmt"/>
            <line num="89" count="834" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double,double,double)" num="100" count="832" type="method"/>
            <line num="102" count="834" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double[],double[],double[],double[])" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelMaturityDependentFourParameterExponentialForm" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="154" count="7867883" type="method"/>
            <line num="157" count="7870653" type="stmt"/>
            <line num="158" count="7844152" type="stmt"/>
            <line num="159" count="7822564" type="stmt"/>
            <line num="161" count="7824790" type="stmt"/>
            <line num="162" count="7826282" type="stmt"/>
            <line falsecount="7827690" truecount="0" num="162" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="7829664" type="stmt"/>
            <line num="171" count="7816893" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelPiecewiseConstant.java" name="LIBORVolatilityModelPiecewiseConstant.java">
            <metrics coveredelements="93" coveredconditionals="26" complexity="41" loc="294" coveredmethods="8" methods="14" elements="182" classes="1" ncloc="219" statements="114" conditionals="54" coveredstatements="59"/>
            <class name="LIBORVolatilityModelPiecewiseConstant">
               <metrics coveredelements="93" coveredconditionals="26" complexity="41" coveredmethods="8" methods="14" elements="182" statements="114" conditionals="54" coveredstatements="59"/>
            </class>
            <line complexity="7" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[],boolean)" num="36" count="2243" type="method"/>
            <line num="37" count="2243" type="stmt"/>
            <line num="39" count="2243" type="stmt"/>
            <line num="44" count="2243" type="stmt"/>
            <line num="45" count="2243" type="stmt"/>
            <line num="46" count="2243" type="stmt"/>
            <line falsecount="2243" truecount="17944" num="46" type="cond"/>
            <line num="47" count="17944" type="stmt"/>
            <line num="48" count="17944" type="stmt"/>
            <line falsecount="17944" truecount="143552" num="48" type="cond"/>
            <line num="49" count="143552" type="stmt"/>
            <line falsecount="107664" truecount="35888" num="49" type="cond"/>
            <line num="50" count="35888" type="stmt"/>
            <line num="53" count="107664" type="stmt"/>
            <line num="55" count="17944" type="stmt"/>
            <line num="58" count="2243" type="stmt"/>
            <line falsecount="2241" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2241" type="stmt"/>
            <line falsecount="0" truecount="2241" num="62" type="cond"/>
            <line num="63" count="2241" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="2243" type="stmt"/>
            <line falsecount="2243" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="2243" type="stmt"/>
            <line num="73" count="2243" type="stmt"/>
            <line num="74" count="2243" type="stmt"/>
            <line complexity="4" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[][],boolean)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[],boolean)" num="113" count="3" type="method"/>
            <line num="114" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line falsecount="3" truecount="24" num="123" type="cond"/>
            <line num="124" count="24" type="stmt"/>
            <line num="125" count="24" type="stmt"/>
            <line falsecount="24" truecount="192" num="125" type="cond"/>
            <line num="126" count="192" type="stmt"/>
            <line falsecount="144" truecount="48" num="126" type="cond"/>
            <line num="127" count="48" type="stmt"/>
            <line num="130" count="144" type="stmt"/>
            <line num="132" count="24" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="135" type="cond"/>
            <line num="136" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="3" type="stmt"/>
            <line num="153" count="3" type="stmt"/>
            <line num="154" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[],boolean)" num="157" count="3" type="method"/>
            <line num="158" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double,boolean)" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="165" count="3" type="method"/>
            <line num="166" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double)" num="169" count="3" type="method"/>
            <line num="170" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="173" count="4507" type="method"/>
            <line num="175" count="4507" type="stmt"/>
            <line falsecount="0" truecount="4507" num="175" type="cond"/>
            <line num="176" count="4507" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModel" num="182" count="2241" type="method"/>
            <line num="184" count="2241" type="stmt"/>
            <line complexity="7" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="194" count="56811406" type="method"/>
            <line num="197" count="56865800" type="stmt"/>
            <line num="198" count="56678578" type="stmt"/>
            <line num="199" count="56527259" type="stmt"/>
            <line num="201" count="56561675" type="stmt"/>
            <line num="202" count="56582550" type="stmt"/>
            <line falsecount="52128940" truecount="4482240" num="202" type="cond"/>
            <line num="204" count="4482240" type="stmt"/>
            <line num="206" count="4482240" type="stmt"/>
            <line falsecount="4482240" truecount="0" num="206" type="cond"/>
            <line num="210" count="52149855" type="stmt"/>
            <line num="211" count="52086889" type="stmt"/>
            <line falsecount="52121039" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="52142909" type="stmt"/>
            <line falsecount="52056237" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="52096403" type="stmt"/>
            <line num="219" count="51953101" type="stmt"/>
            <line falsecount="51987278" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="52008590" type="stmt"/>
            <line falsecount="51903261" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="51940172" type="stmt"/>
            <line num="227" count="52072301" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSimulationTimeDiscretization() : TimeDiscretization" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeToMaturityDiscretization() : TimeDiscretization" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelTimeHomogenousPiecewiseConstant.java" name="LIBORVolatilityModelTimeHomogenousPiecewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="174" coveredmethods="0" methods="9" elements="62" classes="1" ncloc="96" statements="37" conditionals="16" coveredstatements="0"/>
            <class name="LIBORVolatilityModelTimeHomogenousPiecewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="9" elements="62" statements="37" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[])" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[])" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelTimeHomogenousPiecewiseConstant" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelTwoParameterExponentialForm.java" name="LIBORVolatilityModelTwoParameterExponentialForm.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="13" loc="156" coveredmethods="4" methods="8" elements="49" classes="1" ncloc="91" statements="31" conditionals="10" coveredstatements="20"/>
            <class name="LIBORVolatilityModelTwoParameterExponentialForm">
               <metrics coveredelements="30" coveredconditionals="6" complexity="13" coveredmethods="4" methods="8" elements="49" statements="31" conditionals="10" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,boolean)" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,boolean)" num="64" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double)" num="76" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelTwoParameterExponentialForm" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="110" count="1770" type="method"/>
            <line num="113" count="1770" type="stmt"/>
            <line num="114" count="1770" type="stmt"/>
            <line falsecount="1769" truecount="1" num="114" type="cond"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1770" type="stmt"/>
            <line falsecount="1320" truecount="450" num="118" type="cond"/>
            <line num="119" count="450" type="stmt"/>
            <line num="120" count="450" type="stmt"/>
            <line num="121" count="450" type="stmt"/>
            <line num="123" count="450" type="stmt"/>
            <line num="124" count="450" type="stmt"/>
            <line falsecount="330" truecount="120" num="124" type="cond"/>
            <line num="126" count="120" type="stmt"/>
            <line num="130" count="330" type="stmt"/>
            <line num="133" count="450" type="stmt"/>
            <line num="136" count="1770" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModel.java" name="ShortRateVolatilityModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelAsGiven.java" name="ShortRateVolatilityModelAsGiven.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="50" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ShortRateVolatilityModelAsGiven">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelAsGiven(TimeDiscretization,double[],double[])" num="29" count="9" type="method"/>
            <line num="30" count="9" type="stmt"/>
            <line num="31" count="9" type="stmt"/>
            <line num="32" count="9" type="stmt"/>
            <line num="33" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="36" count="267476" type="method"/>
            <line num="38" count="267563" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="41" count="24738" type="method"/>
            <line num="43" count="24762" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="46" count="134140" type="method"/>
            <line num="48" count="134151" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelCalibrateable.java" name="ShortRateVolatilityModelCalibrateable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelCalibrateable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelHoLee.java" name="ShortRateVolatilityModelHoLee.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="45" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelHoLee">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelHoLee(double)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelParametric.java" name="ShortRateVolatilityModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelPiecewiseConstant.java" name="ShortRateVolatilityModelPiecewiseConstant.java">
            <metrics coveredelements="78" coveredconditionals="18" complexity="36" loc="242" coveredmethods="8" methods="12" elements="136" classes="1" ncloc="176" statements="82" conditionals="42" coveredstatements="52"/>
            <class name="ShortRateVolatilityModelPiecewiseConstant">
               <metrics coveredelements="78" coveredconditionals="18" complexity="36" coveredmethods="8" methods="12" elements="136" statements="82" conditionals="42" coveredstatements="52"/>
            </class>
            <line complexity="3" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],boolean,boolean)" num="35" count="29" type="method"/>
            <line num="36" count="29" type="stmt"/>
            <line num="38" count="29" type="stmt"/>
            <line falsecount="29" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="29" type="stmt"/>
            <line falsecount="29" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="29" type="stmt"/>
            <line num="47" count="29" type="stmt"/>
            <line num="48" count="29" type="stmt"/>
            <line num="49" count="29" type="stmt"/>
            <line num="50" count="29" type="stmt"/>
            <line num="51" count="29" type="stmt"/>
            <line num="52" count="29" type="stmt"/>
            <line complexity="11" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],boolean,boolean)" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="65" type="cond"/>
            <line num="66" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="66" type="cond"/>
            <line num="67" count="8" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="72" type="cond"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="88" type="cond"/>
            <line num="89" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="95" type="cond"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],boolean)" num="114" count="1" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],boolean)" num="118" count="29" type="method"/>
            <line num="119" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="122" count="279379" type="method"/>
            <line num="126" count="279416" type="stmt"/>
            <line num="129" count="279237" type="stmt"/>
            <line num="130" count="278942" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(double) : RandomVariable" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="145" count="7230987" type="method"/>
            <line num="149" count="7259071" type="stmt"/>
            <line num="151" count="7199387" type="stmt"/>
            <line num="152" count="7159734" type="stmt"/>
            <line complexity="6" visibility="public" signature="getParameter() : RandomVariable[]" num="155" count="2" type="method"/>
            <line num="157" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="157" type="cond"/>
            <line num="158" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="158" type="cond"/>
            <line num="159" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="164" type="cond"/>
            <line num="165" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractShortRateVolatilityModelParametric" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractShortRateVolatilityModelParametric" num="199" count="29" type="method"/>
            <line num="201" count="29" type="stmt"/>
            <line num="202" count="29" type="stmt"/>
            <line num="204" count="29" type="stmt"/>
            <line falsecount="0" truecount="29" num="204" type="cond"/>
            <line num="205" count="29" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityTimeDiscretization() : TimeDiscretization" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructCovarianceModelFromLIBORCovarianceModel.java" name="TermStructCovarianceModelFromLIBORCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="76" coveredmethods="0" methods="3" elements="39" classes="1" ncloc="47" statements="22" conditionals="14" coveredstatements="0"/>
            <class name="TermStructCovarianceModelFromLIBORCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="39" statements="22" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructCovarianceModelFromLIBORCovarianceModel(AbstractLIBORCovarianceModelParametric)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getFactorLoading(double,double,double,TimeDiscretization,RandomVariable[],TermStructureModel) : RandomVariable[]" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructCovarianceModelFromLIBORCovarianceModelParametric.java" name="TermStructCovarianceModelFromLIBORCovarianceModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="124" coveredmethods="0" methods="7" elements="74" classes="1" ncloc="84" statements="45" conditionals="22" coveredstatements="0"/>
            <class name="TermStructCovarianceModelFromLIBORCovarianceModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="7" elements="74" statements="45" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructCovarianceModelFromLIBORCovarianceModelParametric(TermStructureTenorTimeScaling,AbstractLIBORCovarianceModelParametric)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getScaledTenorTime(double,double) : double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getFactorLoading(double,double,double,TimeDiscretization,RandomVariable[],TermStructureModel) : RandomVariable[]" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameters(double[]) : TermStructureCovarianceModelParametric" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : TermStructureCovarianceModelParametric" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureCovarianceModel.java" name="TermStructureCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="16" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureCovarianceModelParametric.java" name="TermStructureCovarianceModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="213" coveredmethods="0" methods="3" elements="110" classes="1" ncloc="142" statements="77" conditionals="30" coveredstatements="0"/>
            <class name="TermStructureCovarianceModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="3" elements="110" statements="77" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="13" visibility="public" signature="getCloneCalibrated(TermStructureModel,CalibrationProduct[],Map&lt;String, Object&gt;) : TermStructureCovarianceModelParametric" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureFactorLoadingsModel.java" name="TermStructureFactorLoadingsModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureFactorLoadingsModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureFactorLoadingsModelParametric.java" name="TermStructureFactorLoadingsModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureFactorLoadingsModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureTenorTimeScaling.java" name="TermStructureTenorTimeScaling.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureTenorTimeScaling">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureTenorTimeScalingPicewiseConstant.java" name="TermStructureTenorTimeScalingPicewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="85" coveredmethods="0" methods="5" elements="38" classes="1" ncloc="59" statements="25" conditionals="8" coveredstatements="0"/>
            <class name="TermStructureTenorTimeScalingPicewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="38" statements="25" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TermStructureTenorTimeScalingPicewiseConstant(TimeDiscretization,double[])" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getScaledTenorTime(double,double) : double" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : TermStructureTenorTimeScaling" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : TermStructureTenorTimeScaling" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="finmath lib 6.0.9-SNAPSHOT" timestamp="1666616199609">
      <metrics coveredelements="10431" complexity="1606" loc="29908" methods="703" classes="145" statements="10560" packages="44" coveredconditionals="835" coveredmethods="635" elements="12413" ncloc="19431" files="129" conditionals="1150" coveredstatements="8961"/>
      <package name="net.finmath.montecarlo.interestrate">
         <metrics coveredelements="2444" complexity="324" loc="7101" methods="102" classes="16" statements="2756" coveredconditionals="238" coveredmethods="84" elements="3210" ncloc="4572" files="11" conditionals="352" coveredstatements="2122"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/CapValuationTest.java" name="CapValuationTest.java">
            <metrics coveredelements="61" coveredconditionals="2" complexity="4" loc="221" coveredmethods="3" methods="3" elements="61" classes="1" ncloc="122" statements="56" conditionals="2" coveredstatements="56"/>
            <class name="CapValuationTest">
               <metrics coveredelements="61" complexity="4" methods="3" testruns="1" statements="56" coveredconditionals="2" coveredmethods="3" elements="61" testfailures="0" testduration="36.008" conditionals="2" coveredstatements="56" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="CapValuationTest()" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="init(int) : void" num="75" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCap() : void" num="164" testsuccess="true" count="1" testduration="36.008" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line falsecount="1" truecount="78" num="173" type="cond"/>
            <line num="175" count="78" type="stmt"/>
            <line num="176" count="78" type="stmt"/>
            <line num="178" count="78" type="stmt"/>
            <line num="179" count="78" type="stmt"/>
            <line num="180" count="78" type="stmt"/>
            <line num="181" count="78" type="stmt"/>
            <line num="182" count="78" type="stmt"/>
            <line num="185" count="78" type="stmt"/>
            <line num="188" count="78" type="stmt"/>
            <line num="189" count="78" type="stmt"/>
            <line num="192" count="78" type="stmt"/>
            <line num="193" count="78" type="stmt"/>
            <line num="194" count="78" type="stmt"/>
            <line num="195" count="78" type="stmt"/>
            <line num="197" count="78" type="stmt"/>
            <line num="199" count="78" type="stmt"/>
            <line num="202" count="78" type="stmt"/>
            <line num="203" count="78" type="stmt"/>
            <line num="204" count="78" type="stmt"/>
            <line num="207" count="78" type="stmt"/>
            <line num="208" count="78" type="stmt"/>
            <line num="210" count="78" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/HullWhiteModelCalibrationTest.java" name="HullWhiteModelCalibrationTest.java">
            <metrics coveredelements="182" coveredconditionals="13" complexity="13" loc="389" coveredmethods="5" methods="5" elements="184" classes="1" ncloc="249" statements="165" conditionals="14" coveredstatements="164"/>
            <class name="HullWhiteModelCalibrationTest">
               <metrics coveredelements="182" complexity="13" methods="5" testruns="1" statements="165" coveredconditionals="13" coveredmethods="5" elements="184" testfailures="0" testduration="8.969" conditionals="14" coveredstatements="164" testpasses="1"/>
            </class>
            <line complexity="2" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve) : CalibrationProduct" num="68" count="7" type="method"/>
            <line num="70" count="7" type="stmt"/>
            <line num="71" count="7" type="stmt"/>
            <line num="72" count="7" type="stmt"/>
            <line num="74" count="7" type="stmt"/>
            <line falsecount="7" truecount="90" num="74" type="cond"/>
            <line num="75" count="90" type="stmt"/>
            <line num="76" count="90" type="stmt"/>
            <line num="77" count="90" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
            <line num="82" count="7" type="stmt"/>
            <line num="85" count="7" type="stmt"/>
            <line num="86" count="7" type="stmt"/>
            <line num="93" count="7" type="stmt"/>
            <line num="95" count="7" type="stmt"/>
            <line complexity="6" visibility="public" signature="testATMSwaptionCalibration() : void" num="107" testsuccess="true" count="1" testduration="8.969" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line falsecount="1" truecount="7" num="156" type="cond"/>
            <line num="158" count="7" type="stmt"/>
            <line num="159" count="7" type="stmt"/>
            <line num="160" count="7" type="stmt"/>
            <line num="161" count="7" type="stmt"/>
            <line num="164" count="7" type="stmt"/>
            <line num="165" count="7" type="stmt"/>
            <line num="167" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="7" type="stmt"/>
            <line num="173" count="7" type="stmt"/>
            <line num="174" count="7" type="stmt"/>
            <line num="176" count="7" type="stmt"/>
            <line num="178" count="7" type="stmt"/>
            <line num="180" count="7" type="stmt"/>
            <line num="181" count="7" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line falsecount="1" truecount="7" num="206" type="cond"/>
            <line num="207" count="7" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="8" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line falsecount="1" truecount="7" num="226" type="cond"/>
            <line num="227" count="7" type="stmt"/>
            <line num="228" count="7" type="stmt"/>
            <line num="229" count="7" type="stmt"/>
            <line num="230" count="7" type="stmt"/>
            <line num="231" count="7" type="stmt"/>
            <line num="232" count="7" type="stmt"/>
            <line num="233" count="7" type="stmt"/>
            <line num="234" count="7" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="251" count="1" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="274" count="1" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line falsecount="1" truecount="21" num="316" type="cond"/>
            <line num="318" count="21" type="stmt"/>
            <line num="319" count="21" type="stmt"/>
            <line num="321" count="21" type="stmt"/>
            <line num="322" count="21" type="stmt"/>
            <line num="323" count="21" type="stmt"/>
            <line num="324" count="21" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="21" type="stmt"/>
            <line num="370" count="21" type="stmt"/>
            <line num="371" count="21" type="stmt"/>
            <line num="372" count="21" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line falsecount="1" truecount="22" num="379" type="cond"/>
            <line num="380" count="22" type="stmt"/>
            <line num="381" count="22" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="386" count="7" type="method"/>
            <line num="387" count="7" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/HullWhiteModelTest.java" name="HullWhiteModelTest.java">
            <metrics coveredelements="414" coveredconditionals="36" complexity="39" loc="956" coveredmethods="13" methods="14" elements="444" classes="1" ncloc="579" statements="380" conditionals="50" coveredstatements="365"/>
            <class name="HullWhiteModelTest">
               <metrics coveredelements="414" complexity="39" methods="14" testruns="9" statements="380" coveredconditionals="36" coveredmethods="13" elements="444" testfailures="0" testduration="199.879" conditionals="50" coveredstatements="365" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelTest()" num="109" count="9" type="method"/>
            <line num="110" count="9" type="stmt"/>
            <line num="111" count="9" type="stmt"/>
            <line num="112" count="9" type="stmt"/>
            <line num="113" count="9" type="stmt"/>
            <line complexity="4" visibility="public" signature="initModels() : void" num="116" count="9" type="method"/>
            <line num="120" count="9" type="stmt"/>
            <line num="121" count="9" type="stmt"/>
            <line num="122" count="9" type="stmt"/>
            <line num="125" count="9" type="stmt"/>
            <line num="136" count="9" type="stmt"/>
            <line num="139" count="9" type="stmt"/>
            <line num="151" count="9" type="stmt"/>
            <line num="153" count="9" type="stmt"/>
            <line num="158" count="9" type="stmt"/>
            <line num="159" count="9" type="stmt"/>
            <line num="161" count="9" type="stmt"/>
            <line num="170" count="9" type="stmt"/>
            <line num="175" count="9" type="stmt"/>
            <line num="176" count="9" type="stmt"/>
            <line num="179" count="9" type="stmt"/>
            <line num="182" count="9" type="stmt"/>
            <line num="184" count="9" type="stmt"/>
            <line num="186" count="9" type="stmt"/>
            <line num="196" count="9" type="stmt"/>
            <line num="197" count="9" type="stmt"/>
            <line falsecount="9" truecount="360" num="197" type="cond"/>
            <line num="198" count="360" type="stmt"/>
            <line falsecount="360" truecount="14400" num="198" type="cond"/>
            <line num="200" count="14400" type="stmt"/>
            <line num="201" count="14400" type="stmt"/>
            <line num="202" count="14400" type="stmt"/>
            <line num="203" count="14400" type="stmt"/>
            <line num="205" count="14400" type="stmt"/>
            <line num="206" count="14400" type="stmt"/>
            <line num="207" count="14400" type="stmt"/>
            <line num="209" count="14400" type="stmt"/>
            <line num="211" count="14400" type="stmt"/>
            <line num="212" count="14400" type="stmt"/>
            <line falsecount="7020" truecount="7380" num="212" type="cond"/>
            <line num="213" count="7380" type="stmt"/>
            <line num="216" count="7020" type="stmt"/>
            <line num="224" count="14400" type="stmt"/>
            <line num="227" count="9" type="stmt"/>
            <line num="232" count="9" type="stmt"/>
            <line num="239" count="9" type="stmt"/>
            <line num="244" count="9" type="stmt"/>
            <line num="247" count="9" type="stmt"/>
            <line num="250" count="9" type="stmt"/>
            <line num="253" count="9" type="stmt"/>
            <line num="256" count="9" type="stmt"/>
            <line num="261" count="9" type="stmt"/>
            <line num="264" count="9" type="stmt"/>
            <line num="266" count="9" type="stmt"/>
            <line num="268" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBond() : void" num="272" testsuccess="true" count="1" testduration="14.729" type="method"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line falsecount="1" truecount="41" num="284" type="cond"/>
            <line num="285" count="41" type="stmt"/>
            <line num="286" count="41" type="stmt"/>
            <line num="289" count="41" type="stmt"/>
            <line num="292" count="41" type="stmt"/>
            <line num="293" count="41" type="stmt"/>
            <line num="296" count="41" type="stmt"/>
            <line num="297" count="41" type="stmt"/>
            <line num="300" count="41" type="stmt"/>
            <line num="301" count="41" type="stmt"/>
            <line falsecount="41" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="41" type="stmt"/>
            <line num="305" count="41" type="stmt"/>
            <line num="308" count="41" type="stmt"/>
            <line num="309" count="41" type="stmt"/>
            <line num="312" count="41" type="stmt"/>
            <line num="313" count="41" type="stmt"/>
            <line num="315" count="41" type="stmt"/>
            <line num="317" count="41" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSwap() : void" num="332" testsuccess="true" count="1" testduration="71.113" type="method"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line falsecount="1" truecount="114" num="370" type="cond"/>
            <line num="372" count="114" type="stmt"/>
            <line num="373" count="114" type="stmt"/>
            <line num="375" count="114" type="stmt"/>
            <line num="376" count="114" type="stmt"/>
            <line num="378" count="114" type="stmt"/>
            <line num="380" count="114" type="stmt"/>
            <line num="383" count="114" type="stmt"/>
            <line num="386" count="114" type="stmt"/>
            <line num="389" count="114" type="stmt"/>
            <line num="390" count="114" type="stmt"/>
            <line num="393" count="114" type="stmt"/>
            <line num="395" count="114" type="stmt"/>
            <line num="398" count="114" type="stmt"/>
            <line num="399" count="114" type="stmt"/>
            <line num="402" count="114" type="stmt"/>
            <line num="403" count="114" type="stmt"/>
            <line num="406" count="114" type="stmt"/>
            <line num="407" count="114" type="stmt"/>
            <line num="409" count="114" type="stmt"/>
            <line num="411" count="114" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line complexity="8" visibility="public" signature="testCaplet() : void" num="427" testsuccess="true" count="1" testduration="16.109" type="method"/>
            <line num="432" count="1" type="stmt"/>
            <line num="433" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="438" type="cond"/>
            <line num="440" count="30" type="stmt"/>
            <line num="441" count="30" type="stmt"/>
            <line num="443" count="30" type="stmt"/>
            <line num="444" count="30" type="stmt"/>
            <line num="445" count="30" type="stmt"/>
            <line num="446" count="30" type="stmt"/>
            <line num="448" count="30" type="stmt"/>
            <line num="449" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="449" type="cond"/>
            <line num="450" count="30" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="457" count="30" type="stmt"/>
            <line num="458" count="30" type="stmt"/>
            <line num="460" count="30" type="stmt"/>
            <line num="463" count="30" type="stmt"/>
            <line num="466" count="30" type="stmt"/>
            <line num="467" count="30" type="stmt"/>
            <line num="468" count="30" type="stmt"/>
            <line num="471" count="30" type="stmt"/>
            <line num="472" count="30" type="stmt"/>
            <line num="473" count="30" type="stmt"/>
            <line num="476" count="30" type="stmt"/>
            <line num="477" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="477" type="cond"/>
            <line num="478" count="30" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="480" type="cond"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="487" count="30" type="stmt"/>
            <line num="488" count="30" type="stmt"/>
            <line num="490" count="30" type="stmt"/>
            <line num="492" count="30" type="stmt"/>
            <line num="493" count="30" type="stmt"/>
            <line num="494" count="30" type="stmt"/>
            <line num="497" count="30" type="stmt"/>
            <line num="498" count="30" type="stmt"/>
            <line num="501" count="30" type="stmt"/>
            <line num="502" count="30" type="stmt"/>
            <line num="504" count="30" type="stmt"/>
            <line num="506" count="30" type="stmt"/>
            <line num="507" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="507" type="cond"/>
            <line num="508" count="30" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line num="516" count="1" type="stmt"/>
            <line num="521" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="524" testsuccess="true" count="1" testduration="16.488" type="method"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="535" type="cond"/>
            <line num="537" count="30" type="stmt"/>
            <line num="538" count="30" type="stmt"/>
            <line num="540" count="30" type="stmt"/>
            <line num="544" count="30" type="stmt"/>
            <line num="545" count="30" type="stmt"/>
            <line num="546" count="30" type="stmt"/>
            <line num="547" count="30" type="stmt"/>
            <line num="548" count="30" type="stmt"/>
            <line num="550" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="550" type="cond"/>
            <line num="551" count="150" type="stmt"/>
            <line num="552" count="150" type="stmt"/>
            <line num="553" count="150" type="stmt"/>
            <line num="555" count="30" type="stmt"/>
            <line num="558" count="30" type="stmt"/>
            <line num="559" count="30" type="stmt"/>
            <line num="562" count="30" type="stmt"/>
            <line num="563" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="563" type="cond"/>
            <line num="564" count="150" type="stmt"/>
            <line num="568" count="30" type="stmt"/>
            <line num="571" count="30" type="stmt"/>
            <line num="572" count="30" type="stmt"/>
            <line num="575" count="30" type="stmt"/>
            <line num="576" count="30" type="stmt"/>
            <line num="579" count="30" type="stmt"/>
            <line num="580" count="30" type="stmt"/>
            <line num="581" count="30" type="stmt"/>
            <line num="582" count="30" type="stmt"/>
            <line num="585" count="30" type="stmt"/>
            <line num="586" count="30" type="stmt"/>
            <line num="588" count="30" type="stmt"/>
            <line num="590" count="30" type="stmt"/>
            <line num="593" count="1" type="stmt"/>
            <line num="595" count="1" type="stmt"/>
            <line num="596" count="1" type="stmt"/>
            <line num="597" count="1" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBermudanSwaption() : void" num="605" testsuccess="true" count="1" testduration="25.479" type="method"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
            <line num="613" count="1" type="stmt"/>
            <line num="615" count="1" type="stmt"/>
            <line num="616" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="616" type="cond"/>
            <line num="618" count="30" type="stmt"/>
            <line num="619" count="30" type="stmt"/>
            <line num="621" count="30" type="stmt"/>
            <line num="625" count="30" type="stmt"/>
            <line num="626" count="30" type="stmt"/>
            <line num="627" count="30" type="stmt"/>
            <line num="628" count="30" type="stmt"/>
            <line num="629" count="30" type="stmt"/>
            <line num="631" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="631" type="cond"/>
            <line num="632" count="150" type="stmt"/>
            <line num="633" count="150" type="stmt"/>
            <line num="634" count="150" type="stmt"/>
            <line num="636" count="30" type="stmt"/>
            <line num="639" count="30" type="stmt"/>
            <line num="640" count="30" type="stmt"/>
            <line num="643" count="30" type="stmt"/>
            <line num="644" count="30" type="stmt"/>
            <line num="646" count="30" type="stmt"/>
            <line num="647" count="30" type="stmt"/>
            <line num="649" count="30" type="stmt"/>
            <line num="650" count="30" type="stmt"/>
            <line num="652" count="30" type="stmt"/>
            <line num="653" count="30" type="stmt"/>
            <line num="656" count="30" type="stmt"/>
            <line num="659" count="30" type="stmt"/>
            <line num="660" count="30" type="stmt"/>
            <line num="663" count="30" type="stmt"/>
            <line num="664" count="30" type="stmt"/>
            <line num="667" count="30" type="stmt"/>
            <line num="668" count="30" type="stmt"/>
            <line num="669" count="30" type="stmt"/>
            <line num="670" count="30" type="stmt"/>
            <line num="673" count="30" type="stmt"/>
            <line num="674" count="30" type="stmt"/>
            <line num="676" count="30" type="stmt"/>
            <line num="678" count="30" type="stmt"/>
            <line num="681" count="1" type="stmt"/>
            <line num="683" count="1" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line num="685" count="1" type="stmt"/>
            <line num="690" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCapletSmile() : void" num="693" testsuccess="true" count="1" testduration="15.556" type="method"/>
            <line num="695" count="1" type="stmt"/>
            <line num="700" count="1" type="stmt"/>
            <line num="701" count="1" type="stmt"/>
            <line num="703" count="1" type="stmt"/>
            <line num="705" count="1" type="stmt"/>
            <line num="706" count="1" type="stmt"/>
            <line num="707" count="1" type="stmt"/>
            <line num="708" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="708" type="cond"/>
            <line num="710" count="8" type="stmt"/>
            <line num="712" count="8" type="stmt"/>
            <line num="713" count="8" type="stmt"/>
            <line num="714" count="8" type="stmt"/>
            <line num="716" count="8" type="stmt"/>
            <line num="717" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="717" type="cond"/>
            <line num="718" count="8" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="725" count="8" type="stmt"/>
            <line num="726" count="8" type="stmt"/>
            <line num="729" count="8" type="stmt"/>
            <line num="732" count="8" type="stmt"/>
            <line num="733" count="8" type="stmt"/>
            <line num="734" count="8" type="stmt"/>
            <line num="737" count="8" type="stmt"/>
            <line num="738" count="8" type="stmt"/>
            <line num="739" count="8" type="stmt"/>
            <line num="742" count="8" type="stmt"/>
            <line num="743" count="8" type="stmt"/>
            <line num="744" count="8" type="stmt"/>
            <line num="746" count="8" type="stmt"/>
            <line num="747" count="8" type="stmt"/>
            <line num="748" count="8" type="stmt"/>
            <line num="749" count="8" type="stmt"/>
            <line num="752" count="8" type="stmt"/>
            <line num="753" count="8" type="stmt"/>
            <line num="756" count="8" type="stmt"/>
            <line num="757" count="8" type="stmt"/>
            <line num="759" count="8" type="stmt"/>
            <line num="761" count="8" type="stmt"/>
            <line num="764" count="1" type="stmt"/>
            <line num="766" count="1" type="stmt"/>
            <line num="767" count="1" type="stmt"/>
            <line num="768" count="1" type="stmt"/>
            <line num="773" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testZeroCMSSwap() : void" num="777" testsuccess="true" count="1" testduration="26.063" type="method"/>
            <line num="783" count="1" type="stmt"/>
            <line num="784" count="1" type="stmt"/>
            <line num="786" count="1" type="stmt"/>
            <line num="788" count="1" type="stmt"/>
            <line num="789" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="789" type="cond"/>
            <line num="791" count="10" type="stmt"/>
            <line num="793" count="10" type="stmt"/>
            <line num="796" count="10" type="stmt"/>
            <line num="797" count="10" type="stmt"/>
            <line num="798" count="10" type="stmt"/>
            <line num="799" count="10" type="stmt"/>
            <line num="800" count="10" type="stmt"/>
            <line num="802" count="10" type="stmt"/>
            <line falsecount="10" truecount="100" num="802" type="cond"/>
            <line num="803" count="100" type="stmt"/>
            <line num="804" count="100" type="stmt"/>
            <line num="805" count="100" type="stmt"/>
            <line num="807" count="10" type="stmt"/>
            <line num="809" count="10" type="stmt"/>
            <line num="812" count="10" type="stmt"/>
            <line num="815" count="10" type="stmt"/>
            <line num="816" count="10" type="stmt"/>
            <line falsecount="10" truecount="100" num="816" type="cond"/>
            <line num="817" count="100" type="stmt"/>
            <line num="821" count="10" type="stmt"/>
            <line num="822" count="10" type="stmt"/>
            <line num="823" count="10" type="stmt"/>
            <line num="826" count="10" type="stmt"/>
            <line num="827" count="10" type="stmt"/>
            <line num="829" count="10" type="stmt"/>
            <line num="830" count="10" type="stmt"/>
            <line num="833" count="10" type="stmt"/>
            <line num="834" count="10" type="stmt"/>
            <line num="836" count="10" type="stmt"/>
            <line num="838" count="10" type="stmt"/>
            <line num="841" count="1" type="stmt"/>
            <line num="843" count="1" type="stmt"/>
            <line num="844" count="1" type="stmt"/>
            <line num="845" count="1" type="stmt"/>
            <line num="850" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLIBORInArrearsFloatLeg() : void" num="853" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="859" count="1" type="stmt"/>
            <line num="860" count="1" type="stmt"/>
            <line num="861" count="1" type="stmt"/>
            <line num="862" count="1" type="stmt"/>
            <line num="863" count="1" type="stmt"/>
            <line num="864" count="1" type="stmt"/>
            <line num="866" count="1" type="stmt"/>
            <line num="871" count="1" type="stmt"/>
            <line num="872" count="1" type="stmt"/>
            <line num="873" count="1" type="stmt"/>
            <line num="874" count="1" type="stmt"/>
            <line num="876" count="1" type="stmt"/>
            <line num="878" count="1" type="stmt"/>
            <line num="879" count="1" type="stmt"/>
            <line num="882" count="1" type="stmt"/>
            <line num="883" count="1" type="stmt"/>
            <line num="885" count="1" type="stmt"/>
            <line num="886" count="1" type="stmt"/>
            <line num="889" count="1" type="stmt"/>
            <line num="890" count="1" type="stmt"/>
            <line num="892" count="1" type="stmt"/>
            <line num="894" count="1" type="stmt"/>
            <line num="899" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPutOnMoneyMarketAccount() : void" num="902" testsuccess="true" count="1" testduration="14.317" type="method"/>
            <line num="908" count="1" type="stmt"/>
            <line num="910" count="1" type="stmt"/>
            <line num="911" count="1" type="stmt"/>
            <line num="914" count="1" type="stmt"/>
            <line num="915" count="1" type="stmt"/>
            <line num="917" count="1" type="stmt"/>
            <line num="918" count="1" type="stmt"/>
            <line num="921" count="1" type="stmt"/>
            <line num="922" count="1" type="stmt"/>
            <line num="924" count="1" type="stmt"/>
            <line num="926" count="1" type="stmt"/>
            <line num="931" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,Schedule,Schedule,String) : double" num="934" count="0" type="method"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[],String) : double" num="940" count="108" type="method"/>
            <line num="941" count="108" type="stmt"/>
            <line num="942" count="108" type="stmt"/>
            <line num="943" count="108" type="stmt"/>
            <line num="944" count="108" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="949" count="98" type="method"/>
            <line num="950" count="98" type="stmt"/>
            <line num="951" count="98" type="stmt"/>
            <line falsecount="98" truecount="0" num="951" type="cond"/>
            <line num="952" count="0" type="stmt"/>
            <line num="954" count="98" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationAADTest.java" name="LIBORMarketModelCalibrationAADTest.java">
            <metrics coveredelements="309" coveredconditionals="22" complexity="43" loc="805" coveredmethods="12" methods="14" elements="362" classes="4" ncloc="539" statements="318" conditionals="30" coveredstatements="275"/>
            <class name="LIBORMarketModelCalibrationAADTest">
               <metrics coveredelements="309" complexity="43" methods="14" testruns="2" statements="318" coveredconditionals="22" coveredmethods="12" elements="362" testfailures="0" testduration="1419.41" conditionals="30" coveredstatements="275" testpasses="2"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerDerivativeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerSolverType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="104" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORMarketModelCalibrationAADTest(OptimizerSolverType,OptimizerDerivativeType,OptimizerType,ValueUnit)" num="153" count="2" type="method"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="testATMSwaptionCalibration() : void" num="198" count="2" type="method"/>
            <line num="201" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="224" count="2" type="method"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line falsecount="2" truecount="96" num="262" type="cond"/>
            <line num="263" count="96" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line falsecount="2" truecount="308" num="269" type="cond"/>
            <line num="270" count="308" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="276" type="cond"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="279" count="893" type="method"/>
            <line num="281" count="893" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="301" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="305" count="2" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="323" count="2" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line num="338" count="2" type="stmt"/>
            <line num="351" count="2" type="stmt"/>
            <line num="370" count="2" type="stmt"/>
            <line num="371" count="2" type="stmt"/>
            <line num="372" count="2" type="stmt"/>
            <line num="373" count="2" type="stmt"/>
            <line falsecount="2" truecount="392" num="373" type="cond"/>
            <line num="375" count="392" type="stmt"/>
            <line num="376" count="392" type="stmt"/>
            <line num="377" count="392" type="stmt"/>
            <line num="378" count="392" type="stmt"/>
            <line num="381" count="392" type="stmt"/>
            <line num="382" count="392" type="stmt"/>
            <line num="384" count="392" type="stmt"/>
            <line falsecount="308" truecount="84" num="384" type="cond"/>
            <line num="385" count="84" type="stmt"/>
            <line num="388" count="308" type="stmt"/>
            <line num="390" count="308" type="stmt"/>
            <line num="391" count="308" type="stmt"/>
            <line num="393" count="308" type="stmt"/>
            <line num="395" count="308" type="stmt"/>
            <line num="396" count="308" type="stmt"/>
            <line num="398" count="308" type="stmt"/>
            <line num="405" count="2" type="stmt"/>
            <line num="406" count="2" type="stmt"/>
            <line num="407" count="2" type="stmt"/>
            <line num="408" count="2" type="stmt"/>
            <line num="413" count="2" type="stmt"/>
            <line num="415" count="2" type="stmt"/>
            <line num="418" count="2" type="stmt"/>
            <line num="421" count="2" type="stmt"/>
            <line num="424" count="2" type="stmt"/>
            <line num="426" count="2" type="stmt"/>
            <line num="427" count="2" type="stmt"/>
            <line num="428" count="2" type="stmt"/>
            <line num="429" count="2" type="stmt"/>
            <line num="430" count="2" type="stmt"/>
            <line num="431" count="2" type="stmt"/>
            <line num="435" count="2" type="stmt"/>
            <line num="436" count="2" type="stmt"/>
            <line num="440" count="2" type="stmt"/>
            <line num="441" count="2" type="stmt"/>
            <line num="442" count="2" type="stmt"/>
            <line num="444" count="2" type="stmt"/>
            <line num="445" count="2" type="stmt"/>
            <line num="446" count="2" type="stmt"/>
            <line num="448" count="2" type="stmt"/>
            <line num="453" count="2" type="stmt"/>
            <line num="454" count="2" type="stmt"/>
            <line falsecount="2" truecount="308" num="454" type="cond"/>
            <line num="455" count="308" type="stmt"/>
            <line falsecount="308" truecount="0" num="455" type="cond"/>
            <line num="456" count="308" type="stmt"/>
            <line num="458" count="2" type="stmt"/>
            <line num="467" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="469" type="cond"/>
            <line falsecount="0" truecount="2" num="470" type="cond"/>
            <line num="473" count="2" type="stmt"/>
            <line num="475" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="478" count="2" type="method"/>
            <line num="479" count="2" type="stmt"/>
            <line num="480" count="2" type="stmt"/>
            <line num="481" count="2" type="stmt"/>
            <line num="482" count="2" type="stmt"/>
            <line num="483" count="2" type="stmt"/>
            <line num="484" count="2" type="stmt"/>
            <line num="486" count="2" type="stmt"/>
            <line num="488" count="2" type="stmt"/>
            <line num="489" count="2" type="stmt"/>
            <line num="490" count="2" type="stmt"/>
            <line num="491" count="2" type="stmt"/>
            <line num="492" count="2" type="stmt"/>
            <line num="493" count="2" type="stmt"/>
            <line num="494" count="2" type="stmt"/>
            <line num="495" count="2" type="stmt"/>
            <line num="496" count="2" type="stmt"/>
            <line num="498" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="501" count="2" type="method"/>
            <line num="503" count="2" type="stmt"/>
            <line num="504" count="2" type="stmt"/>
            <line num="505" count="2" type="stmt"/>
            <line num="506" count="2" type="stmt"/>
            <line num="507" count="2" type="stmt"/>
            <line num="508" count="2" type="stmt"/>
            <line num="509" count="2" type="stmt"/>
            <line num="510" count="2" type="stmt"/>
            <line num="511" count="2" type="stmt"/>
            <line num="513" count="2" type="stmt"/>
            <line num="514" count="2" type="stmt"/>
            <line num="515" count="2" type="stmt"/>
            <line num="517" count="2" type="stmt"/>
            <line num="518" count="2" type="stmt"/>
            <line num="520" count="2" type="stmt"/>
            <line num="521" count="2" type="stmt"/>
            <line num="523" count="2" type="stmt"/>
            <line num="533" count="2" type="stmt"/>
            <line num="536" count="2" type="stmt"/>
            <line num="537" count="2" type="stmt"/>
            <line num="538" count="2" type="stmt"/>
            <line num="539" count="2" type="stmt"/>
            <line num="540" count="2" type="stmt"/>
            <line num="541" count="2" type="stmt"/>
            <line num="542" count="2" type="stmt"/>
            <line num="543" count="2" type="stmt"/>
            <line falsecount="2" truecount="42" num="543" type="cond"/>
            <line num="545" count="42" type="stmt"/>
            <line num="546" count="42" type="stmt"/>
            <line num="548" count="42" type="stmt"/>
            <line num="549" count="42" type="stmt"/>
            <line num="550" count="42" type="stmt"/>
            <line num="551" count="42" type="stmt"/>
            <line num="554" count="2" type="stmt"/>
            <line num="557" count="2" type="stmt"/>
            <line num="571" count="2" type="stmt"/>
            <line num="576" count="2" type="stmt"/>
            <line num="577" count="2" type="stmt"/>
            <line num="582" count="2" type="stmt"/>
            <line num="583" count="2" type="stmt"/>
            <line num="586" count="2" type="stmt"/>
            <line num="588" count="2" type="stmt"/>
            <line num="590" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="593" count="308" type="method"/>
            <line num="594" count="308" type="stmt"/>
            <line complexity="6" visibility="private" signature="createATMCalibrationItem(double,double,double,int,double,double,ForwardCurve,DiscountCurve,ValueUnit) : CalibrationProduct" num="597" count="616" type="method"/>
            <line num="599" count="616" type="stmt"/>
            <line num="600" count="616" type="stmt"/>
            <line num="601" count="616" type="stmt"/>
            <line num="602" count="616" type="stmt"/>
            <line falsecount="616" truecount="12760" num="602" type="cond"/>
            <line num="603" count="12760" type="stmt"/>
            <line num="604" count="12760" type="stmt"/>
            <line num="605" count="12760" type="stmt"/>
            <line num="607" count="616" type="stmt"/>
            <line num="609" count="616" type="stmt"/>
            <line num="616" count="616" type="stmt"/>
            <line num="617" count="616" type="stmt"/>
            <line num="618" count="308" type="stmt"/>
            <line num="619" count="308" type="stmt"/>
            <line num="620" count="308" type="stmt"/>
            <line num="621" count="308" type="stmt"/>
            <line num="625" count="308" type="stmt"/>
            <line num="626" count="308" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="308" type="stmt"/>
            <line num="631" count="308" type="stmt"/>
            <line num="632" count="308" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="616" type="stmt"/>
            <line complexity="6" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,ForwardCurve,DiscountCurve,ValueUnit) : CalibrationProduct" num="640" count="0" type="method"/>
            <line num="642" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="evaluateCalibration(LIBORModel,BrownianMotion,List&lt;String&gt;,List&lt;CalibrationProduct&gt;,List&lt;CalibrationProduct&gt;,double,double,String) : void" num="689" count="2" type="method"/>
            <line num="693" count="2" type="stmt"/>
            <line num="694" count="2" type="stmt"/>
            <line num="695" count="2" type="stmt"/>
            <line num="696" count="2" type="stmt"/>
            <line num="697" count="96" type="stmt"/>
            <line num="700" count="2" type="stmt"/>
            <line num="701" count="2" type="stmt"/>
            <line num="703" count="2" type="stmt"/>
            <line num="704" count="2" type="stmt"/>
            <line num="705" count="2" type="stmt"/>
            <line num="706" count="2" type="stmt"/>
            <line falsecount="2" truecount="308" num="706" type="cond"/>
            <line num="707" count="308" type="stmt"/>
            <line num="708" count="308" type="stmt"/>
            <line num="709" count="308" type="stmt"/>
            <line num="710" count="288" type="stmt"/>
            <line num="711" count="288" type="stmt"/>
            <line num="712" count="288" type="stmt"/>
            <line num="713" count="288" type="stmt"/>
            <line num="714" count="288" type="stmt"/>
            <line num="720" count="2" type="stmt"/>
            <line num="721" count="2" type="stmt"/>
            <line num="722" count="2" type="stmt"/>
            <line num="723" count="2" type="stmt"/>
            <line falsecount="2" truecount="308" num="723" type="cond"/>
            <line num="724" count="308" type="stmt"/>
            <line num="725" count="308" type="stmt"/>
            <line num="726" count="308" type="stmt"/>
            <line num="727" count="288" type="stmt"/>
            <line num="728" count="288" type="stmt"/>
            <line num="729" count="288" type="stmt"/>
            <line num="730" count="288" type="stmt"/>
            <line num="731" count="288" type="stmt"/>
            <line num="738" count="2" type="stmt"/>
            <line num="742" count="2" type="stmt"/>
            <line num="743" count="2" type="stmt"/>
            <line num="745" count="2" type="stmt"/>
            <line num="746" count="2" type="stmt"/>
            <line num="747" count="2" type="stmt"/>
            <line num="748" count="2" type="stmt"/>
            <line num="749" count="2" type="stmt"/>
            <line num="750" count="2" type="stmt"/>
            <line num="751" count="2" type="stmt"/>
            <line num="754" count="2" type="stmt"/>
            <line num="755" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="printConfigurations(ValueUnit,OptimizerType,OptimizerDerivativeType,OptimizerSolverType,int,long,double,int,int,int,int) : void" num="758" count="2" type="method"/>
            <line num="760" count="2" type="stmt"/>
            <line num="761" count="2" type="stmt"/>
            <line num="763" count="2" type="stmt"/>
            <line num="764" count="2" type="stmt"/>
            <line num="765" count="2" type="stmt"/>
            <line num="766" count="2" type="stmt"/>
            <line num="767" count="2" type="stmt"/>
            <line num="768" count="2" type="stmt"/>
            <line num="769" count="2" type="stmt"/>
            <line num="770" count="2" type="stmt"/>
            <line num="771" count="2" type="stmt"/>
            <line num="772" count="2" type="stmt"/>
            <line num="773" count="2" type="stmt"/>
            <line num="774" count="2" type="stmt"/>
            <line num="775" count="2" type="stmt"/>
            <line num="776" count="2" type="stmt"/>
            <line num="777" count="2" type="stmt"/>
            <line num="778" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="createInitialCovarianceModel(RandomVariableFactory,TimeDiscretization,TimeDiscretization,int) : AbstractLIBORCovarianceModelParametric" num="782" count="2" type="method"/>
            <line num="784" count="2" type="stmt"/>
            <line num="785" count="2" type="stmt"/>
            <line num="786" count="2" type="stmt"/>
            <line num="795" count="2" type="stmt"/>
            <line num="798" count="2" type="stmt"/>
            <line num="801" count="2" type="stmt"/>
            <line num="803" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationSmileTest.java" name="LIBORMarketModelCalibrationSmileTest.java">
            <metrics coveredelements="109" coveredconditionals="8" complexity="17" loc="476" coveredmethods="3" methods="5" elements="199" classes="1" ncloc="313" statements="182" conditionals="12" coveredstatements="98"/>
            <class name="LIBORMarketModelCalibrationSmileTest">
               <metrics coveredelements="109" complexity="17" methods="5" testruns="1" statements="182" coveredconditionals="8" coveredmethods="3" elements="199" testfailures="0" testduration="3137.81" conditionals="12" coveredstatements="98" testpasses="1"/>
            </class>
            <line complexity="7" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve,String) : CalibrationProduct" num="77" count="19" type="method"/>
            <line num="79" count="19" type="stmt"/>
            <line num="80" count="19" type="stmt"/>
            <line num="81" count="19" type="stmt"/>
            <line num="83" count="19" type="stmt"/>
            <line falsecount="19" truecount="380" num="83" type="cond"/>
            <line num="84" count="380" type="stmt"/>
            <line num="85" count="380" type="stmt"/>
            <line num="86" count="380" type="stmt"/>
            <line num="88" count="19" type="stmt"/>
            <line num="91" count="19" type="stmt"/>
            <line num="94" count="19" type="stmt"/>
            <line num="95" count="19" type="stmt"/>
            <line num="102" count="19" type="stmt"/>
            <line num="103" count="19" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="19" type="stmt"/>
            <line num="106" count="19" type="stmt"/>
            <line num="107" count="19" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="19" type="stmt"/>
            <line num="117" count="19" type="stmt"/>
            <line num="118" count="19" type="stmt"/>
            <line num="119" count="19" type="stmt"/>
            <line num="120" count="19" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="19" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwaptionSmileCalibration() : void" num="133" testsuccess="true" count="1" testduration="3137.81" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="198" type="cond"/>
            <line num="199" count="9" type="stmt"/>
            <line num="200" count="9" type="stmt"/>
            <line num="201" count="9" type="stmt"/>
            <line num="203" count="9" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="210" type="cond"/>
            <line num="212" count="10" type="stmt"/>
            <line num="213" count="10" type="stmt"/>
            <line num="214" count="10" type="stmt"/>
            <line num="216" count="10" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="7" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line falsecount="1" truecount="19" num="313" type="cond"/>
            <line num="314" count="19" type="stmt"/>
            <line num="315" count="19" type="stmt"/>
            <line num="316" count="19" type="stmt"/>
            <line num="317" count="15" type="stmt"/>
            <line num="318" count="15" type="stmt"/>
            <line num="319" count="15" type="stmt"/>
            <line num="320" count="15" type="stmt"/>
            <line num="321" count="15" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="338" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="473" count="19" type="method"/>
            <line num="474" count="19" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationTest.java" name="LIBORMarketModelCalibrationTest.java">
            <metrics coveredelements="268" coveredconditionals="21" complexity="32" loc="649" coveredmethods="7" methods="7" elements="294" classes="3" ncloc="458" statements="259" conditionals="28" coveredstatements="240"/>
            <class name="LIBORMarketModelCalibrationTest">
               <metrics coveredelements="268" complexity="32" methods="7" testruns="3" statements="259" coveredconditionals="21" coveredmethods="7" elements="294" testfailures="0" testduration="9983.628999999999" conditionals="28" coveredstatements="240" testpasses="3"/>
            </class>
            <class name="LIBORMarketModelCalibrationTest.LIBORMarketModelType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationTest.CalibrationProductType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="98" count="2" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelCalibrationTest(LIBORMarketModelType,CalibrationProductType)" num="120" count="3" type="method"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line complexity="17" visibility="public" signature="testATMSwaptionCalibration() : void" num="136" count="3" type="method"/>
            <line num="140" count="3" type="stmt"/>
            <line num="141" count="3" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line num="148" count="3" type="stmt"/>
            <line num="149" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="151" count="3" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="164" count="3" type="stmt"/>
            <line num="165" count="3" type="stmt"/>
            <line num="170" count="3" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line num="177" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line num="212" count="3" type="stmt"/>
            <line num="232" count="3" type="stmt"/>
            <line num="233" count="3" type="stmt"/>
            <line num="234" count="3" type="stmt"/>
            <line num="235" count="3" type="stmt"/>
            <line falsecount="3" truecount="588" num="235" type="cond"/>
            <line num="237" count="588" type="stmt"/>
            <line num="238" count="588" type="stmt"/>
            <line num="239" count="588" type="stmt"/>
            <line num="240" count="588" type="stmt"/>
            <line num="243" count="588" type="stmt"/>
            <line num="244" count="588" type="stmt"/>
            <line num="246" count="588" type="stmt"/>
            <line falsecount="462" truecount="126" num="246" type="cond"/>
            <line num="247" count="126" type="stmt"/>
            <line num="250" count="462" type="stmt"/>
            <line num="252" count="462" type="stmt"/>
            <line num="253" count="462" type="stmt"/>
            <line num="255" count="462" type="stmt"/>
            <line num="257" count="462" type="stmt"/>
            <line num="259" count="462" type="stmt"/>
            <line num="260" count="462" type="stmt"/>
            <line num="261" count="462" type="stmt"/>
            <line falsecount="154" truecount="308" num="261" type="cond"/>
            <line num="262" count="462" type="stmt"/>
            <line num="269" count="3" type="stmt"/>
            <line num="270" count="3" type="stmt"/>
            <line num="271" count="3" type="stmt"/>
            <line num="272" count="3" type="stmt"/>
            <line num="277" count="3" type="stmt"/>
            <line num="281" count="3" type="stmt"/>
            <line num="282" count="3" type="stmt"/>
            <line num="285" count="3" type="stmt"/>
            <line num="288" count="3" type="stmt"/>
            <line num="290" count="3" type="stmt"/>
            <line num="291" count="3" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="3" type="stmt"/>
            <line num="305" count="3" type="stmt"/>
            <line num="308" count="3" type="stmt"/>
            <line num="311" count="3" type="stmt"/>
            <line num="312" count="3" type="stmt"/>
            <line num="313" count="3" type="stmt"/>
            <line num="314" count="3" type="stmt"/>
            <line num="315" count="3" type="stmt"/>
            <line num="319" count="3" type="stmt"/>
            <line num="320" count="3" type="stmt"/>
            <line num="321" count="3" type="stmt"/>
            <line num="322" count="3" type="stmt"/>
            <line num="323" count="3" type="stmt"/>
            <line num="324" count="3" type="stmt"/>
            <line num="329" count="3" type="stmt"/>
            <line num="330" count="3" type="stmt"/>
            <line num="331" count="3" type="stmt"/>
            <line num="332" count="3" type="stmt"/>
            <line num="333" count="3" type="stmt"/>
            <line num="334" count="3" type="stmt"/>
            <line num="336" count="3" type="stmt"/>
            <line num="341" count="3" type="stmt"/>
            <line num="342" count="3" type="stmt"/>
            <line falsecount="3" truecount="462" num="342" type="cond"/>
            <line num="343" count="462" type="stmt"/>
            <line num="345" count="3" type="stmt"/>
            <line num="354" count="3" type="stmt"/>
            <line num="356" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="356" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="364" count="3" type="stmt"/>
            <line num="365" count="3" type="stmt"/>
            <line num="367" count="3" type="stmt"/>
            <line num="368" count="3" type="stmt"/>
            <line num="369" count="3" type="stmt"/>
            <line num="370" count="3" type="stmt"/>
            <line falsecount="3" truecount="462" num="370" type="cond"/>
            <line num="371" count="462" type="stmt"/>
            <line num="372" count="462" type="stmt"/>
            <line num="373" count="462" type="stmt"/>
            <line num="374" count="462" type="stmt"/>
            <line num="375" count="432" type="stmt"/>
            <line num="376" count="432" type="stmt"/>
            <line num="377" count="432" type="stmt"/>
            <line num="378" count="432" type="stmt"/>
            <line num="379" count="432" type="stmt"/>
            <line num="380" count="432" type="stmt"/>
            <line num="381" count="432" type="stmt"/>
            <line num="383" count="432" type="stmt"/>
            <line falsecount="432" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="399" count="3" type="stmt"/>
            <line num="400" count="3" type="stmt"/>
            <line num="401" count="3" type="stmt"/>
            <line num="402" count="3" type="stmt"/>
            <line num="403" count="3" type="stmt"/>
            <line num="404" count="3" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="3" type="stmt"/>
            <line num="410" count="3" type="stmt"/>
            <line num="411" count="3" type="stmt"/>
            <line num="412" count="3" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="420" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="420" type="cond"/>
            <line num="421" count="3" type="stmt"/>
            <line num="423" count="3" type="stmt"/>
            <line num="424" count="3" type="stmt"/>
            <line falsecount="3" truecount="462" num="424" type="cond"/>
            <line num="425" count="462" type="stmt"/>
            <line num="426" count="462" type="stmt"/>
            <line num="427" count="462" type="stmt"/>
            <line num="428" count="432" type="stmt"/>
            <line num="429" count="432" type="stmt"/>
            <line num="430" count="432" type="stmt"/>
            <line num="431" count="432" type="stmt"/>
            <line falsecount="432" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="441" count="3" type="stmt"/>
            <line num="442" count="3" type="stmt"/>
            <line num="444" count="3" type="stmt"/>
            <line num="445" count="3" type="stmt"/>
            <line num="446" count="3" type="stmt"/>
            <line num="447" count="3" type="stmt"/>
            <line num="449" count="3" type="stmt"/>
            <line complexity="7" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve,CalibrationProductType) : CalibrationProduct" num="452" count="1386" type="method"/>
            <line num="454" count="1386" type="stmt"/>
            <line num="455" count="1386" type="stmt"/>
            <line num="456" count="1386" type="stmt"/>
            <line num="458" count="1386" type="stmt"/>
            <line falsecount="1386" truecount="28710" num="458" type="cond"/>
            <line num="459" count="28710" type="stmt"/>
            <line num="460" count="28710" type="stmt"/>
            <line num="461" count="28710" type="stmt"/>
            <line num="463" count="1386" type="stmt"/>
            <line num="466" count="1386" type="stmt"/>
            <line num="469" count="1386" type="stmt"/>
            <line num="470" count="1386" type="stmt"/>
            <line num="477" count="1386" type="stmt"/>
            <line num="478" count="1386" type="stmt"/>
            <line num="479" count="924" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="924" type="stmt"/>
            <line num="482" count="924" type="stmt"/>
            <line num="483" count="462" type="stmt"/>
            <line num="484" count="462" type="stmt"/>
            <line num="485" count="462" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="1386" type="stmt"/>
            <line num="492" count="1386" type="stmt"/>
            <line num="493" count="924" type="stmt"/>
            <line num="494" count="924" type="stmt"/>
            <line num="495" count="924" type="stmt"/>
            <line num="496" count="462" type="stmt"/>
            <line num="497" count="462" type="stmt"/>
            <line num="501" count="462" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="506" count="1386" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="509" count="3" type="method"/>
            <line num="510" count="3" type="stmt"/>
            <line num="511" count="3" type="stmt"/>
            <line num="512" count="3" type="stmt"/>
            <line num="513" count="3" type="stmt"/>
            <line num="514" count="3" type="stmt"/>
            <line num="515" count="3" type="stmt"/>
            <line num="517" count="3" type="stmt"/>
            <line num="519" count="3" type="stmt"/>
            <line num="520" count="3" type="stmt"/>
            <line num="521" count="3" type="stmt"/>
            <line num="522" count="3" type="stmt"/>
            <line num="523" count="3" type="stmt"/>
            <line num="524" count="3" type="stmt"/>
            <line num="525" count="3" type="stmt"/>
            <line num="526" count="3" type="stmt"/>
            <line num="527" count="3" type="stmt"/>
            <line num="529" count="3" type="stmt"/>
            <line complexity="4" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="532" count="3" type="method"/>
            <line num="534" count="3" type="stmt"/>
            <line num="535" count="3" type="stmt"/>
            <line num="536" count="3" type="stmt"/>
            <line num="537" count="3" type="stmt"/>
            <line num="538" count="3" type="stmt"/>
            <line num="539" count="3" type="stmt"/>
            <line num="540" count="3" type="stmt"/>
            <line num="541" count="3" type="stmt"/>
            <line num="542" count="3" type="stmt"/>
            <line num="544" count="3" type="stmt"/>
            <line num="545" count="3" type="stmt"/>
            <line num="546" count="3" type="stmt"/>
            <line num="548" count="3" type="stmt"/>
            <line num="549" count="3" type="stmt"/>
            <line num="551" count="3" type="stmt"/>
            <line num="552" count="3" type="stmt"/>
            <line num="554" count="3" type="stmt"/>
            <line num="564" count="3" type="stmt"/>
            <line num="567" count="3" type="stmt"/>
            <line num="568" count="3" type="stmt"/>
            <line num="569" count="3" type="stmt"/>
            <line num="570" count="3" type="stmt"/>
            <line num="571" count="3" type="stmt"/>
            <line num="572" count="3" type="stmt"/>
            <line num="573" count="3" type="stmt"/>
            <line num="574" count="3" type="stmt"/>
            <line falsecount="3" truecount="63" num="574" type="cond"/>
            <line num="576" count="63" type="stmt"/>
            <line num="577" count="63" type="stmt"/>
            <line num="579" count="63" type="stmt"/>
            <line num="580" count="63" type="stmt"/>
            <line num="581" count="63" type="stmt"/>
            <line num="582" count="63" type="stmt"/>
            <line num="585" count="3" type="stmt"/>
            <line num="588" count="3" type="stmt"/>
            <line num="602" count="3" type="stmt"/>
            <line num="607" count="3" type="stmt"/>
            <line num="608" count="3" type="stmt"/>
            <line num="613" count="3" type="stmt"/>
            <line num="614" count="3" type="stmt"/>
            <line num="615" count="3" type="stmt"/>
            <line num="617" count="3" type="stmt"/>
            <line num="620" count="3" type="stmt"/>
            <line num="623" count="3" type="stmt"/>
            <line num="625" count="3" type="stmt"/>
            <line num="626" count="3" type="stmt"/>
            <line num="627" count="63" type="stmt"/>
            <line num="628" count="63" type="stmt"/>
            <line num="629" count="63" type="stmt"/>
            <line num="630" count="63" type="stmt"/>
            <line num="632" count="3" type="stmt"/>
            <line num="634" count="3" type="stmt"/>
            <line num="636" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="636" type="cond"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="643" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="646" count="1386" type="method"/>
            <line num="647" count="1386" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelInterpolationTest.java" name="LIBORMarketModelInterpolationTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="4" loc="169" coveredmethods="4" methods="4" elements="41" classes="1" ncloc="103" statements="37" conditionals="0" coveredstatements="37"/>
            <class name="LIBORMarketModelInterpolationTest">
               <metrics coveredelements="41" complexity="4" methods="4" testruns="3" statements="37" coveredconditionals="0" coveredmethods="4" elements="41" testfailures="0" testduration="185.02" conditionals="0" coveredstatements="37" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="38" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelInterpolationTest(LIBORMarketModelFromCovarianceModel.InterpolationMethod)" num="60" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line num="64" count="3" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(LIBORMarketModelFromCovarianceModel.InterpolationMethod,RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="68" count="3" type="method"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line num="98" count="3" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line num="104" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="131" count="3" type="stmt"/>
            <line num="136" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="142" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterpolatedLastLIBOR() : void" num="145" count="3" type="method"/>
            <line num="148" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="153" count="3" type="stmt"/>
            <line num="155" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="163" count="3" type="stmt"/>
            <line num="164" count="3" type="stmt"/>
            <line num="166" count="3" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelMultiCurveValuationTest.java" name="LIBORMarketModelMultiCurveValuationTest.java">
            <metrics coveredelements="306" coveredconditionals="43" complexity="34" loc="671" coveredmethods="12" methods="12" elements="309" classes="1" ncloc="401" statements="253" conditionals="44" coveredstatements="251"/>
            <class name="LIBORMarketModelMultiCurveValuationTest">
               <metrics coveredelements="306" complexity="34" methods="12" testruns="14" statements="253" coveredconditionals="43" coveredmethods="12" elements="309" testfailures="0" testduration="3317.133" conditionals="44" coveredstatements="251" testpasses="14"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="60" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelMultiCurveValuationTest(Measure)" num="79" count="14" type="method"/>
            <line num="81" count="14" type="stmt"/>
            <line num="84" count="14" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="87" count="14" type="method"/>
            <line num="93" count="14" type="stmt"/>
            <line num="94" count="14" type="stmt"/>
            <line num="95" count="14" type="stmt"/>
            <line num="98" count="14" type="stmt"/>
            <line num="106" count="14" type="stmt"/>
            <line num="116" count="14" type="stmt"/>
            <line num="117" count="14" type="stmt"/>
            <line num="119" count="14" type="stmt"/>
            <line num="124" count="14" type="stmt"/>
            <line num="125" count="14" type="stmt"/>
            <line falsecount="14" truecount="560" num="125" type="cond"/>
            <line num="126" count="560" type="stmt"/>
            <line falsecount="560" truecount="22400" num="126" type="cond"/>
            <line num="128" count="22400" type="stmt"/>
            <line num="129" count="22400" type="stmt"/>
            <line num="130" count="22400" type="stmt"/>
            <line num="132" count="22400" type="stmt"/>
            <line num="133" count="22400" type="stmt"/>
            <line falsecount="10920" truecount="11480" num="133" type="cond"/>
            <line num="134" count="11480" type="stmt"/>
            <line num="136" count="10920" type="stmt"/>
            <line num="140" count="22400" type="stmt"/>
            <line num="143" count="14" type="stmt"/>
            <line num="148" count="14" type="stmt"/>
            <line num="156" count="14" type="stmt"/>
            <line num="164" count="14" type="stmt"/>
            <line num="167" count="14" type="stmt"/>
            <line num="170" count="14" type="stmt"/>
            <line num="173" count="14" type="stmt"/>
            <line num="178" count="14" type="stmt"/>
            <line num="188" count="14" type="stmt"/>
            <line num="190" count="14" type="stmt"/>
            <line num="192" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBond() : void" num="195" count="2" type="method"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line falsecount="2" truecount="82" num="205" type="cond"/>
            <line num="206" count="82" type="stmt"/>
            <line num="207" count="82" type="stmt"/>
            <line num="210" count="82" type="stmt"/>
            <line num="213" count="82" type="stmt"/>
            <line num="214" count="82" type="stmt"/>
            <line num="217" count="82" type="stmt"/>
            <line num="219" count="82" type="stmt"/>
            <line num="222" count="82" type="stmt"/>
            <line num="223" count="82" type="stmt"/>
            <line num="225" count="82" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwap() : void" num="235" count="2" type="method"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="244" type="cond"/>
            <line num="246" count="60" type="stmt"/>
            <line num="248" count="60" type="stmt"/>
            <line num="251" count="60" type="stmt"/>
            <line num="252" count="60" type="stmt"/>
            <line num="253" count="60" type="stmt"/>
            <line num="254" count="60" type="stmt"/>
            <line num="256" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="256" type="cond"/>
            <line num="257" count="600" type="stmt"/>
            <line num="258" count="600" type="stmt"/>
            <line num="259" count="600" type="stmt"/>
            <line num="261" count="60" type="stmt"/>
            <line num="263" count="60" type="stmt"/>
            <line num="266" count="60" type="stmt"/>
            <line num="269" count="60" type="stmt"/>
            <line num="270" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="270" type="cond"/>
            <line num="271" count="600" type="stmt"/>
            <line num="275" count="60" type="stmt"/>
            <line num="278" count="60" type="stmt"/>
            <line num="279" count="60" type="stmt"/>
            <line num="281" count="60" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="291" type="cond"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCaplet() : void" num="298" count="2" type="method"/>
            <line num="303" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="307" type="cond"/>
            <line num="309" count="60" type="stmt"/>
            <line num="310" count="60" type="stmt"/>
            <line num="312" count="60" type="stmt"/>
            <line num="313" count="60" type="stmt"/>
            <line num="314" count="60" type="stmt"/>
            <line num="315" count="60" type="stmt"/>
            <line num="317" count="60" type="stmt"/>
            <line num="320" count="60" type="stmt"/>
            <line num="323" count="60" type="stmt"/>
            <line num="324" count="60" type="stmt"/>
            <line num="327" count="60" type="stmt"/>
            <line num="328" count="60" type="stmt"/>
            <line num="329" count="60" type="stmt"/>
            <line num="330" count="60" type="stmt"/>
            <line num="331" count="60" type="stmt"/>
            <line num="332" count="60" type="stmt"/>
            <line num="333" count="60" type="stmt"/>
            <line num="336" count="60" type="stmt"/>
            <line num="337" count="60" type="stmt"/>
            <line num="339" count="60" type="stmt"/>
            <line num="342" count="2" type="stmt"/>
            <line num="343" count="2" type="stmt"/>
            <line num="348" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="348" type="cond"/>
            <line num="349" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDigitalCaplet() : void" num="355" count="2" type="method"/>
            <line num="360" count="2" type="stmt"/>
            <line num="361" count="2" type="stmt"/>
            <line num="363" count="2" type="stmt"/>
            <line num="364" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="364" type="cond"/>
            <line num="366" count="60" type="stmt"/>
            <line num="367" count="60" type="stmt"/>
            <line num="369" count="60" type="stmt"/>
            <line num="370" count="60" type="stmt"/>
            <line num="372" count="60" type="stmt"/>
            <line num="375" count="60" type="stmt"/>
            <line num="378" count="60" type="stmt"/>
            <line num="379" count="60" type="stmt"/>
            <line num="382" count="60" type="stmt"/>
            <line num="383" count="60" type="stmt"/>
            <line num="384" count="60" type="stmt"/>
            <line num="385" count="60" type="stmt"/>
            <line num="386" count="60" type="stmt"/>
            <line num="387" count="60" type="stmt"/>
            <line num="388" count="60" type="stmt"/>
            <line num="389" count="60" type="stmt"/>
            <line num="392" count="60" type="stmt"/>
            <line num="393" count="60" type="stmt"/>
            <line num="395" count="60" type="stmt"/>
            <line num="398" count="2" type="stmt"/>
            <line num="403" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="406" count="2" type="method"/>
            <line num="411" count="2" type="stmt"/>
            <line num="412" count="2" type="stmt"/>
            <line num="414" count="2" type="stmt"/>
            <line num="415" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="415" type="cond"/>
            <line num="417" count="60" type="stmt"/>
            <line num="418" count="60" type="stmt"/>
            <line num="420" count="60" type="stmt"/>
            <line num="424" count="60" type="stmt"/>
            <line num="425" count="60" type="stmt"/>
            <line num="426" count="60" type="stmt"/>
            <line num="427" count="60" type="stmt"/>
            <line num="429" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="429" type="cond"/>
            <line num="430" count="300" type="stmt"/>
            <line num="431" count="300" type="stmt"/>
            <line num="432" count="300" type="stmt"/>
            <line num="434" count="60" type="stmt"/>
            <line num="437" count="60" type="stmt"/>
            <line num="440" count="60" type="stmt"/>
            <line num="441" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="441" type="cond"/>
            <line num="442" count="300" type="stmt"/>
            <line num="446" count="60" type="stmt"/>
            <line num="447" count="60" type="stmt"/>
            <line num="448" count="60" type="stmt"/>
            <line num="451" count="60" type="stmt"/>
            <line num="452" count="60" type="stmt"/>
            <line num="453" count="60" type="stmt"/>
            <line num="456" count="60" type="stmt"/>
            <line num="457" count="60" type="stmt"/>
            <line num="458" count="60" type="stmt"/>
            <line num="461" count="60" type="stmt"/>
            <line num="462" count="60" type="stmt"/>
            <line num="464" count="60" type="stmt"/>
            <line num="465" count="60" type="stmt"/>
            <line num="467" count="60" type="stmt"/>
            <line num="468" count="60" type="stmt"/>
            <line num="471" count="2" type="stmt"/>
            <line num="472" count="2" type="stmt"/>
            <line num="477" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaptionSmile() : void" num="480" count="2" type="method"/>
            <line num="485" count="2" type="stmt"/>
            <line num="486" count="2" type="stmt"/>
            <line num="488" count="2" type="stmt"/>
            <line num="489" count="2" type="stmt"/>
            <line num="490" count="2" type="stmt"/>
            <line num="492" count="2" type="stmt"/>
            <line num="493" count="2" type="stmt"/>
            <line falsecount="2" truecount="30" num="493" type="cond"/>
            <line num="495" count="30" type="stmt"/>
            <line num="500" count="30" type="stmt"/>
            <line num="501" count="30" type="stmt"/>
            <line num="502" count="30" type="stmt"/>
            <line num="504" count="30" type="stmt"/>
            <line falsecount="30" truecount="300" num="504" type="cond"/>
            <line num="505" count="300" type="stmt"/>
            <line num="506" count="300" type="stmt"/>
            <line num="507" count="300" type="stmt"/>
            <line num="509" count="30" type="stmt"/>
            <line num="512" count="30" type="stmt"/>
            <line num="515" count="30" type="stmt"/>
            <line num="516" count="30" type="stmt"/>
            <line falsecount="30" truecount="300" num="516" type="cond"/>
            <line num="517" count="300" type="stmt"/>
            <line num="520" count="30" type="stmt"/>
            <line num="521" count="30" type="stmt"/>
            <line num="525" count="30" type="stmt"/>
            <line num="528" count="30" type="stmt"/>
            <line num="529" count="30" type="stmt"/>
            <line num="530" count="30" type="stmt"/>
            <line num="533" count="30" type="stmt"/>
            <line num="534" count="30" type="stmt"/>
            <line num="535" count="30" type="stmt"/>
            <line num="538" count="30" type="stmt"/>
            <line num="539" count="30" type="stmt"/>
            <line num="541" count="30" type="stmt"/>
            <line num="544" count="2" type="stmt"/>
            <line num="545" count="2" type="stmt"/>
            <line num="550" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="testSwaptionCalibration() : void" num="553" count="2" type="method"/>
            <line num="559" count="2" type="stmt"/>
            <line num="565" count="2" type="stmt"/>
            <line num="566" count="2" type="stmt"/>
            <line falsecount="2" truecount="16" num="566" type="cond"/>
            <line num="567" count="16" type="stmt"/>
            <line num="568" count="16" type="stmt"/>
            <line falsecount="16" truecount="72" num="568" type="cond"/>
            <line num="572" count="72" type="stmt"/>
            <line num="573" count="72" type="stmt"/>
            <line num="574" count="72" type="stmt"/>
            <line num="575" count="72" type="stmt"/>
            <line num="577" count="72" type="stmt"/>
            <line falsecount="72" truecount="744" num="577" type="cond"/>
            <line num="578" count="744" type="stmt"/>
            <line num="579" count="744" type="stmt"/>
            <line num="580" count="744" type="stmt"/>
            <line num="582" count="72" type="stmt"/>
            <line num="585" count="72" type="stmt"/>
            <line num="588" count="72" type="stmt"/>
            <line num="589" count="72" type="stmt"/>
            <line num="592" count="72" type="stmt"/>
            <line num="597" count="72" type="stmt"/>
            <line num="598" count="72" type="stmt"/>
            <line falsecount="72" truecount="0" num="598" type="cond"/>
            <line num="600" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="606" count="72" type="stmt"/>
            <line num="607" count="72" type="stmt"/>
            <line num="608" count="72" type="stmt"/>
            <line num="612" count="2" type="stmt"/>
            <line num="617" count="2" type="stmt"/>
            <line num="619" count="2" type="stmt"/>
            <line num="620" count="2" type="stmt"/>
            <line num="627" count="2" type="stmt"/>
            <line num="629" count="2" type="stmt"/>
            <line num="640" count="2" type="stmt"/>
            <line num="644" count="2" type="stmt"/>
            <line num="647" count="2" type="stmt"/>
            <line num="648" count="2" type="stmt"/>
            <line num="649" count="14" type="stmt"/>
            <line num="652" count="2" type="stmt"/>
            <line num="653" count="2" type="stmt"/>
            <line falsecount="2" truecount="72" num="653" type="cond"/>
            <line num="654" count="72" type="stmt"/>
            <line num="655" count="72" type="stmt"/>
            <line num="656" count="72" type="stmt"/>
            <line num="657" count="72" type="stmt"/>
            <line num="658" count="72" type="stmt"/>
            <line num="660" count="2" type="stmt"/>
            <line num="661" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="664" count="402" type="method"/>
            <line num="665" count="402" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="668" count="252" type="method"/>
            <line num="669" count="252" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelNormalAADSensitivitiesTest.java" name="LIBORMarketModelNormalAADSensitivitiesTest.java">
            <metrics coveredelements="357" coveredconditionals="38" complexity="44" loc="919" coveredmethods="10" methods="11" elements="400" classes="1" ncloc="595" statements="335" conditionals="54" coveredstatements="309"/>
            <class name="LIBORMarketModelNormalAADSensitivitiesTest">
               <metrics coveredelements="357" complexity="44" methods="11" testruns="15" statements="335" coveredconditionals="38" coveredmethods="10" elements="400" testfailures="0" testduration="2106.25" conditionals="54" coveredstatements="309" testpasses="15"/>
            </class>
            <line complexity="3" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="77" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line falsecount="2" truecount="40" num="106" type="cond"/>
            <line num="107" count="40" type="stmt"/>
            <line num="108" count="40" type="stmt"/>
            <line num="109" count="40" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelNormalAADSensitivitiesTest(String,AbstractLIBORMonteCarloProduct,Optional&lt;Integer&gt;,boolean)" num="281" count="15" type="method"/>
            <line num="282" count="15" type="stmt"/>
            <line num="283" count="15" type="stmt"/>
            <line num="284" count="15" type="stmt"/>
            <line num="285" count="15" type="stmt"/>
            <line complexity="7" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,RandomVariableFactory,int,int,double,Optional&lt;Integer&gt;,double,int,int,double) : LIBORModelMonteCarloSimulationModel" num="288" count="50" type="method"/>
            <line num="299" count="50" type="stmt"/>
            <line num="300" count="50" type="stmt"/>
            <line num="301" count="50" type="stmt"/>
            <line num="303" count="50" type="stmt"/>
            <line num="304" count="50" type="stmt"/>
            <line num="305" count="50" type="stmt"/>
            <line falsecount="40" truecount="10" num="305" type="cond"/>
            <line num="306" count="10" type="stmt"/>
            <line num="307" count="10" type="stmt"/>
            <line num="310" count="40" type="stmt"/>
            <line num="314" count="50" type="stmt"/>
            <line num="324" count="50" type="stmt"/>
            <line num="325" count="50" type="stmt"/>
            <line num="327" count="50" type="stmt"/>
            <line num="330" count="50" type="stmt"/>
            <line num="331" count="50" type="stmt"/>
            <line falsecount="0" truecount="50" num="331" type="cond"/>
            <line num="332" count="50" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="341" count="50" type="stmt"/>
            <line num="343" count="50" type="stmt"/>
            <line num="344" count="50" type="stmt"/>
            <line falsecount="50" truecount="200" num="344" type="cond"/>
            <line num="345" count="200" type="stmt"/>
            <line falsecount="200" truecount="800" num="345" type="cond"/>
            <line num="346" count="800" type="stmt"/>
            <line falsecount="800" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="350" count="800" type="stmt"/>
            <line num="354" count="50" type="stmt"/>
            <line num="355" count="50" type="stmt"/>
            <line num="360" count="50" type="stmt"/>
            <line num="368" count="50" type="stmt"/>
            <line num="376" count="50" type="stmt"/>
            <line num="379" count="50" type="stmt"/>
            <line num="382" count="50" type="stmt"/>
            <line num="385" count="50" type="stmt"/>
            <line num="388" count="50" type="stmt"/>
            <line num="394" count="50" type="stmt"/>
            <line num="395" count="50" type="stmt"/>
            <line num="397" count="50" type="stmt"/>
            <line num="399" count="50" type="stmt"/>
            <line num="401" count="50" type="stmt"/>
            <line complexity="9" visibility="public" signature="testVega() : void" num="410" count="5" type="method"/>
            <line num="413" count="5" type="stmt"/>
            <line num="414" count="5" type="stmt"/>
            <line num="415" count="5" type="stmt"/>
            <line num="416" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="416" type="cond"/>
            <line num="417" count="5" type="stmt"/>
            <line num="418" count="5" type="stmt"/>
            <line num="419" count="5" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="5" type="stmt"/>
            <line num="428" count="5" type="stmt"/>
            <line num="431" count="5" type="stmt"/>
            <line num="432" count="5" type="stmt"/>
            <line num="433" count="5" type="stmt"/>
            <line num="439" count="5" type="stmt"/>
            <line num="440" count="5" type="stmt"/>
            <line num="442" count="5" type="stmt"/>
            <line num="443" count="5" type="stmt"/>
            <line num="445" count="5" type="stmt"/>
            <line num="452" count="5" type="stmt"/>
            <line num="454" count="5" type="stmt"/>
            <line num="455" count="5" type="stmt"/>
            <line num="456" count="5" type="stmt"/>
            <line num="460" count="5" type="stmt"/>
            <line num="461" count="5" type="stmt"/>
            <line num="463" count="5" type="stmt"/>
            <line num="464" count="5" type="stmt"/>
            <line num="465" count="5" type="stmt"/>
            <line num="466" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="466" type="cond"/>
            <line num="467" count="5" type="stmt"/>
            <line falsecount="5" truecount="20" num="467" type="cond"/>
            <line num="468" count="20" type="stmt"/>
            <line falsecount="20" truecount="80" num="468" type="cond"/>
            <line num="469" count="80" type="stmt"/>
            <line num="470" count="80" type="stmt"/>
            <line num="471" count="80" type="stmt"/>
            <line falsecount="0" truecount="80" num="471" type="cond"/>
            <line num="472" count="80" type="stmt"/>
            <line num="473" count="80" type="stmt"/>
            <line num="474" count="80" type="stmt"/>
            <line falsecount="49" truecount="31" num="474" type="cond"/>
            <line num="475" count="31" type="stmt"/>
            <line num="476" count="31" type="stmt"/>
            <line num="480" count="80" type="stmt"/>
            <line num="489" count="5" type="stmt"/>
            <line num="490" count="5" type="stmt"/>
            <line num="496" count="5" type="stmt"/>
            <line num="499" count="5" type="stmt"/>
            <line num="501" count="5" type="stmt"/>
            <line num="503" count="5" type="stmt"/>
            <line num="506" count="5" type="stmt"/>
            <line num="513" count="5" type="stmt"/>
            <line num="515" count="5" type="stmt"/>
            <line num="517" count="5" type="stmt"/>
            <line num="519" count="5" type="stmt"/>
            <line num="521" count="5" type="stmt"/>
            <line num="523" count="5" type="stmt"/>
            <line num="525" count="5" type="stmt"/>
            <line num="528" count="5" type="stmt"/>
            <line num="529" count="5" type="stmt"/>
            <line num="531" count="5" type="stmt"/>
            <line num="537" count="5" type="stmt"/>
            <line num="538" count="5" type="stmt"/>
            <line num="540" count="5" type="stmt"/>
            <line num="541" count="5" type="stmt"/>
            <line num="542" count="5" type="stmt"/>
            <line num="543" count="5" type="stmt"/>
            <line num="544" count="5" type="stmt"/>
            <line num="545" count="5" type="stmt"/>
            <line num="546" count="5" type="stmt"/>
            <line num="547" count="5" type="stmt"/>
            <line num="548" count="5" type="stmt"/>
            <line num="549" count="5" type="stmt"/>
            <line num="550" count="5" type="stmt"/>
            <line num="552" count="5" type="stmt"/>
            <line num="553" count="5" type="stmt"/>
            <line complexity="9" visibility="public" signature="testDelta() : void" num="562" count="5" type="method"/>
            <line num="565" count="5" type="stmt"/>
            <line num="572" count="5" type="stmt"/>
            <line num="573" count="5" type="stmt"/>
            <line num="575" count="5" type="stmt"/>
            <line num="577" count="5" type="stmt"/>
            <line num="578" count="5" type="stmt"/>
            <line num="579" count="5" type="stmt"/>
            <line num="584" count="5" type="stmt"/>
            <line num="585" count="5" type="stmt"/>
            <line num="587" count="5" type="stmt"/>
            <line num="588" count="5" type="stmt"/>
            <line num="590" count="5" type="stmt"/>
            <line num="597" count="5" type="stmt"/>
            <line num="599" count="5" type="stmt"/>
            <line num="600" count="5" type="stmt"/>
            <line num="601" count="5" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="607" count="5" type="stmt"/>
            <line num="608" count="5" type="stmt"/>
            <line num="610" count="5" type="stmt"/>
            <line num="611" count="5" type="stmt"/>
            <line num="612" count="5" type="stmt"/>
            <line num="613" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="613" type="cond"/>
            <line num="614" count="5" type="stmt"/>
            <line falsecount="5" truecount="400" num="614" type="cond"/>
            <line num="615" count="400" type="stmt"/>
            <line num="616" count="400" type="stmt"/>
            <line num="617" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="617" type="cond"/>
            <line num="618" count="400" type="stmt"/>
            <line num="619" count="400" type="stmt"/>
            <line num="620" count="400" type="stmt"/>
            <line falsecount="147" truecount="253" num="620" type="cond"/>
            <line num="621" count="253" type="stmt"/>
            <line num="622" count="253" type="stmt"/>
            <line num="625" count="400" type="stmt"/>
            <line num="631" count="5" type="stmt"/>
            <line num="632" count="5" type="stmt"/>
            <line num="638" count="5" type="stmt"/>
            <line num="641" count="5" type="stmt"/>
            <line num="643" count="5" type="stmt"/>
            <line num="645" count="5" type="stmt"/>
            <line num="648" count="5" type="stmt"/>
            <line num="655" count="5" type="stmt"/>
            <line num="657" count="5" type="stmt"/>
            <line num="659" count="5" type="stmt"/>
            <line num="661" count="5" type="stmt"/>
            <line num="663" count="5" type="stmt"/>
            <line num="665" count="5" type="stmt"/>
            <line num="667" count="5" type="stmt"/>
            <line num="670" count="5" type="stmt"/>
            <line num="671" count="5" type="stmt"/>
            <line num="673" count="5" type="stmt"/>
            <line num="679" count="5" type="stmt"/>
            <line num="680" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="680" type="cond"/>
            <line num="681" count="5" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="690" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="690" type="cond"/>
            <line num="691" count="5" type="stmt"/>
            <line num="692" count="5" type="stmt"/>
            <line num="694" count="5" type="stmt"/>
            <line num="695" count="5" type="stmt"/>
            <line num="696" count="5" type="stmt"/>
            <line num="698" count="5" type="stmt"/>
            <line num="699" count="5" type="stmt"/>
            <line num="700" count="5" type="stmt"/>
            <line num="701" count="5" type="stmt"/>
            <line num="702" count="5" type="stmt"/>
            <line num="703" count="5" type="stmt"/>
            <line num="704" count="5" type="stmt"/>
            <line num="705" count="5" type="stmt"/>
            <line num="706" count="5" type="stmt"/>
            <line num="707" count="5" type="stmt"/>
            <line num="708" count="5" type="stmt"/>
            <line num="710" count="5" type="stmt"/>
            <line num="711" count="5" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="testGenericDelta() : void" num="724" count="5" type="method"/>
            <line num="732" count="5" type="stmt"/>
            <line num="733" count="5" type="stmt"/>
            <line num="735" count="5" type="stmt"/>
            <line num="737" count="5" type="stmt"/>
            <line num="738" count="5" type="stmt"/>
            <line num="739" count="5" type="stmt"/>
            <line num="744" count="5" type="stmt"/>
            <line num="745" count="5" type="stmt"/>
            <line num="747" count="5" type="stmt"/>
            <line num="748" count="5" type="stmt"/>
            <line num="750" count="5" type="stmt"/>
            <line num="757" count="5" type="stmt"/>
            <line num="759" count="5" type="stmt"/>
            <line num="760" count="5" type="stmt"/>
            <line num="761" count="5" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="766" count="5" type="stmt"/>
            <line num="768" count="5" type="stmt"/>
            <line num="769" count="5" type="stmt"/>
            <line num="771" count="5" type="stmt"/>
            <line num="773" count="5" type="stmt"/>
            <line num="774" count="5" type="stmt"/>
            <line num="775" count="5" type="stmt"/>
            <line num="776" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="776" type="cond"/>
            <line num="777" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Entry&lt;String, RandomVariable&gt;) : String" num="779" count="430" type="method"/>
            <line num="781" count="430" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Entry&lt;String, RandomVariable&gt;) : Double" num="785" count="430" type="method"/>
            <line num="787" count="430" type="stmt"/>
            <line num="788" count="430" type="stmt"/>
            <line num="789" count="430" type="stmt"/>
            <line falsecount="30" truecount="400" num="789" type="cond"/>
            <line num="790" count="400" type="stmt"/>
            <line num="791" count="400" type="stmt"/>
            <line falsecount="147" truecount="253" num="791" type="cond"/>
            <line num="792" count="253" type="stmt"/>
            <line num="795" count="429" type="stmt"/>
            <line num="803" count="5" type="stmt"/>
            <line num="809" count="5" type="stmt"/>
            <line num="812" count="5" type="stmt"/>
            <line num="814" count="5" type="stmt"/>
            <line num="816" count="5" type="stmt"/>
            <line num="819" count="5" type="stmt"/>
            <line num="821" count="5" type="stmt"/>
            <line num="830" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="830" type="cond"/>
            <line num="831" count="5" type="stmt"/>
            <line num="832" count="5" type="stmt"/>
            <line num="834" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(String,Double) : void" num="836" count="430" type="method"/>
            <line num="837" count="430" type="stmt"/>
            <line num="840" count="5" type="stmt"/>
            <line num="841" count="5" type="stmt"/>
            <line num="842" count="5" type="stmt"/>
            <line num="843" count="5" type="stmt"/>
            <line num="844" count="5" type="stmt"/>
            <line num="845" count="5" type="stmt"/>
            <line num="846" count="5" type="stmt"/>
            <line num="847" count="5" type="stmt"/>
            <line num="848" count="5" type="stmt"/>
            <line num="849" count="5" type="stmt"/>
            <line num="854" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="854" type="cond"/>
            <line num="855" count="1" type="stmt"/>
            <line num="856" count="1" type="stmt"/>
            <line num="858" count="1" type="stmt"/>
            <line num="860" count="1" type="stmt"/>
            <line num="861" count="1" type="stmt"/>
            <line num="863" count="1" type="stmt"/>
            <line num="865" count="1" type="stmt"/>
            <line num="866" count="1" type="stmt"/>
            <line num="867" count="1" type="stmt"/>
            <line num="869" count="1" type="stmt"/>
            <line num="870" count="1" type="stmt"/>
            <line num="871" count="1" type="stmt"/>
            <line num="873" count="1" type="stmt"/>
            <line num="875" count="1" type="stmt"/>
            <line num="877" count="1" type="stmt"/>
            <line num="878" count="1" type="stmt"/>
            <line num="880" count="1" type="stmt"/>
            <line num="882" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="882" type="cond"/>
            <line num="883" count="1" type="stmt"/>
            <line num="884" count="1" type="stmt"/>
            <line num="886" count="1" type="stmt"/>
            <line num="888" count="1" type="stmt"/>
            <line num="889" count="1" type="stmt"/>
            <line num="891" count="1" type="stmt"/>
            <line num="892" count="1" type="stmt"/>
            <line num="893" count="1" type="stmt"/>
            <line num="894" count="1" type="stmt"/>
            <line num="896" count="1" type="stmt"/>
            <line num="898" count="1" type="stmt"/>
            <line num="900" count="1" type="stmt"/>
            <line num="901" count="1" type="stmt"/>
            <line num="903" count="1" type="stmt"/>
            <line num="905" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAllocatedMemory() : long" num="912" count="45" type="method"/>
            <line num="913" count="45" type="stmt"/>
            <line num="914" count="45" type="stmt"/>
            <line num="915" count="45" type="stmt"/>
            <line num="916" count="45" type="stmt"/>
            <line num="917" count="45" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelValuationTest.java" name="LIBORMarketModelValuationTest.java">
            <metrics coveredelements="397" coveredconditionals="55" complexity="43" loc="817" coveredmethods="15" methods="15" elements="400" classes="1" ncloc="479" statements="329" conditionals="56" coveredstatements="327"/>
            <class name="LIBORMarketModelValuationTest">
               <metrics coveredelements="397" complexity="43" methods="15" testruns="40" statements="329" coveredconditionals="55" coveredmethods="15" elements="400" testfailures="0" testduration="30243.829" conditionals="56" coveredstatements="327" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="63" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelValuationTest(RandomVariableFactory)" num="84" count="40" type="method"/>
            <line num="87" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="90" count="41" type="method"/>
            <line num="96" count="41" type="stmt"/>
            <line num="97" count="41" type="stmt"/>
            <line num="98" count="41" type="stmt"/>
            <line num="101" count="41" type="stmt"/>
            <line num="111" count="41" type="stmt"/>
            <line num="112" count="41" type="stmt"/>
            <line num="114" count="41" type="stmt"/>
            <line num="119" count="41" type="stmt"/>
            <line num="120" count="41" type="stmt"/>
            <line num="125" count="41" type="stmt"/>
            <line num="133" count="41" type="stmt"/>
            <line num="140" count="41" type="stmt"/>
            <line num="143" count="41" type="stmt"/>
            <line num="146" count="41" type="stmt"/>
            <line num="149" count="41" type="stmt"/>
            <line num="154" count="41" type="stmt"/>
            <line num="156" count="41" type="stmt"/>
            <line num="158" count="41" type="stmt"/>
            <line num="160" count="41" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBond() : void" num="163" count="4" type="method"/>
            <line num="169" count="4" type="stmt"/>
            <line num="171" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="173" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line falsecount="4" truecount="644" num="174" type="cond"/>
            <line num="175" count="644" type="stmt"/>
            <line num="178" count="644" type="stmt"/>
            <line num="181" count="644" type="stmt"/>
            <line num="182" count="644" type="stmt"/>
            <line num="185" count="644" type="stmt"/>
            <line num="186" count="644" type="stmt"/>
            <line num="189" count="644" type="stmt"/>
            <line num="190" count="644" type="stmt"/>
            <line num="192" count="644" type="stmt"/>
            <line num="195" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="199" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testFRA() : void" num="202" count="4" type="method"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="211" count="4" type="stmt"/>
            <line falsecount="4" truecount="628" num="211" type="cond"/>
            <line num="213" count="628" type="stmt"/>
            <line num="216" count="628" type="stmt"/>
            <line num="217" count="628" type="stmt"/>
            <line num="218" count="628" type="stmt"/>
            <line num="219" count="628" type="stmt"/>
            <line num="221" count="628" type="stmt"/>
            <line falsecount="628" truecount="628" num="221" type="cond"/>
            <line num="222" count="628" type="stmt"/>
            <line num="223" count="628" type="stmt"/>
            <line num="224" count="628" type="stmt"/>
            <line num="226" count="628" type="stmt"/>
            <line num="228" count="628" type="stmt"/>
            <line num="231" count="628" type="stmt"/>
            <line num="234" count="628" type="stmt"/>
            <line num="235" count="628" type="stmt"/>
            <line falsecount="628" truecount="628" num="235" type="cond"/>
            <line num="236" count="628" type="stmt"/>
            <line num="240" count="628" type="stmt"/>
            <line num="243" count="628" type="stmt"/>
            <line num="244" count="628" type="stmt"/>
            <line num="246" count="628" type="stmt"/>
            <line num="249" count="4" type="stmt"/>
            <line num="250" count="4" type="stmt"/>
            <line num="256" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwap() : void" num="259" count="4" type="method"/>
            <line num="264" count="4" type="stmt"/>
            <line num="265" count="4" type="stmt"/>
            <line num="267" count="4" type="stmt"/>
            <line num="268" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="268" type="cond"/>
            <line num="270" count="120" type="stmt"/>
            <line num="273" count="120" type="stmt"/>
            <line num="274" count="120" type="stmt"/>
            <line num="275" count="120" type="stmt"/>
            <line num="276" count="120" type="stmt"/>
            <line num="278" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="278" type="cond"/>
            <line num="279" count="1200" type="stmt"/>
            <line num="280" count="1200" type="stmt"/>
            <line num="281" count="1200" type="stmt"/>
            <line num="283" count="120" type="stmt"/>
            <line num="285" count="120" type="stmt"/>
            <line num="288" count="120" type="stmt"/>
            <line num="291" count="120" type="stmt"/>
            <line num="292" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="292" type="cond"/>
            <line num="293" count="1200" type="stmt"/>
            <line num="297" count="120" type="stmt"/>
            <line num="300" count="120" type="stmt"/>
            <line num="301" count="120" type="stmt"/>
            <line num="303" count="120" type="stmt"/>
            <line num="306" count="4" type="stmt"/>
            <line num="307" count="4" type="stmt"/>
            <line num="313" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDigitalCaplet() : void" num="316" count="4" type="method"/>
            <line num="321" count="4" type="stmt"/>
            <line num="322" count="4" type="stmt"/>
            <line num="324" count="4" type="stmt"/>
            <line num="325" count="4" type="stmt"/>
            <line falsecount="4" truecount="152" num="325" type="cond"/>
            <line num="327" count="152" type="stmt"/>
            <line num="328" count="152" type="stmt"/>
            <line num="330" count="152" type="stmt"/>
            <line num="333" count="152" type="stmt"/>
            <line num="336" count="152" type="stmt"/>
            <line num="337" count="152" type="stmt"/>
            <line num="340" count="152" type="stmt"/>
            <line num="341" count="152" type="stmt"/>
            <line num="342" count="152" type="stmt"/>
            <line num="343" count="152" type="stmt"/>
            <line num="344" count="152" type="stmt"/>
            <line num="345" count="152" type="stmt"/>
            <line num="346" count="152" type="stmt"/>
            <line num="347" count="152" type="stmt"/>
            <line num="350" count="152" type="stmt"/>
            <line num="351" count="152" type="stmt"/>
            <line num="353" count="152" type="stmt"/>
            <line num="356" count="4" type="stmt"/>
            <line num="357" count="4" type="stmt"/>
            <line num="362" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="365" count="4" type="method"/>
            <line num="370" count="4" type="stmt"/>
            <line num="371" count="4" type="stmt"/>
            <line num="373" count="4" type="stmt"/>
            <line num="374" count="4" type="stmt"/>
            <line falsecount="4" truecount="136" num="374" type="cond"/>
            <line num="376" count="136" type="stmt"/>
            <line num="377" count="136" type="stmt"/>
            <line num="379" count="136" type="stmt"/>
            <line num="383" count="136" type="stmt"/>
            <line num="384" count="136" type="stmt"/>
            <line num="385" count="136" type="stmt"/>
            <line num="386" count="136" type="stmt"/>
            <line num="388" count="136" type="stmt"/>
            <line falsecount="136" truecount="680" num="388" type="cond"/>
            <line num="389" count="680" type="stmt"/>
            <line num="390" count="680" type="stmt"/>
            <line num="391" count="680" type="stmt"/>
            <line num="393" count="136" type="stmt"/>
            <line num="396" count="136" type="stmt"/>
            <line num="399" count="136" type="stmt"/>
            <line num="400" count="136" type="stmt"/>
            <line falsecount="136" truecount="680" num="400" type="cond"/>
            <line num="401" count="680" type="stmt"/>
            <line num="405" count="136" type="stmt"/>
            <line num="406" count="136" type="stmt"/>
            <line num="407" count="136" type="stmt"/>
            <line num="410" count="136" type="stmt"/>
            <line num="411" count="136" type="stmt"/>
            <line num="412" count="136" type="stmt"/>
            <line num="415" count="136" type="stmt"/>
            <line num="416" count="136" type="stmt"/>
            <line num="418" count="136" type="stmt"/>
            <line num="421" count="4" type="stmt"/>
            <line num="422" count="4" type="stmt"/>
            <line num="427" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCaplet() : void" num="430" count="4" type="method"/>
            <line num="435" count="4" type="stmt"/>
            <line num="436" count="4" type="stmt"/>
            <line num="438" count="4" type="stmt"/>
            <line num="439" count="4" type="stmt"/>
            <line falsecount="4" truecount="152" num="439" type="cond"/>
            <line num="441" count="152" type="stmt"/>
            <line num="442" count="152" type="stmt"/>
            <line num="444" count="152" type="stmt"/>
            <line num="448" count="152" type="stmt"/>
            <line num="449" count="152" type="stmt"/>
            <line num="450" count="152" type="stmt"/>
            <line num="451" count="152" type="stmt"/>
            <line num="453" count="152" type="stmt"/>
            <line falsecount="152" truecount="152" num="453" type="cond"/>
            <line num="454" count="152" type="stmt"/>
            <line num="455" count="152" type="stmt"/>
            <line num="456" count="152" type="stmt"/>
            <line num="458" count="152" type="stmt"/>
            <line num="461" count="152" type="stmt"/>
            <line num="464" count="152" type="stmt"/>
            <line num="465" count="152" type="stmt"/>
            <line falsecount="152" truecount="152" num="465" type="cond"/>
            <line num="466" count="152" type="stmt"/>
            <line num="470" count="152" type="stmt"/>
            <line num="471" count="152" type="stmt"/>
            <line num="472" count="152" type="stmt"/>
            <line num="475" count="152" type="stmt"/>
            <line num="476" count="152" type="stmt"/>
            <line num="477" count="152" type="stmt"/>
            <line num="480" count="152" type="stmt"/>
            <line num="481" count="152" type="stmt"/>
            <line num="483" count="152" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCapletSmile() : void" num="495" count="4" type="method"/>
            <line num="500" count="4" type="stmt"/>
            <line num="501" count="4" type="stmt"/>
            <line num="502" count="4" type="stmt"/>
            <line num="504" count="4" type="stmt"/>
            <line num="505" count="4" type="stmt"/>
            <line num="506" count="4" type="stmt"/>
            <line num="508" count="4" type="stmt"/>
            <line num="509" count="4" type="stmt"/>
            <line falsecount="4" truecount="60" num="509" type="cond"/>
            <line num="511" count="60" type="stmt"/>
            <line num="515" count="60" type="stmt"/>
            <line num="516" count="60" type="stmt"/>
            <line num="517" count="60" type="stmt"/>
            <line num="519" count="60" type="stmt"/>
            <line falsecount="60" truecount="60" num="519" type="cond"/>
            <line num="520" count="60" type="stmt"/>
            <line num="521" count="60" type="stmt"/>
            <line num="522" count="60" type="stmt"/>
            <line num="524" count="60" type="stmt"/>
            <line num="527" count="60" type="stmt"/>
            <line num="530" count="60" type="stmt"/>
            <line num="531" count="60" type="stmt"/>
            <line falsecount="60" truecount="60" num="531" type="cond"/>
            <line num="532" count="60" type="stmt"/>
            <line num="535" count="60" type="stmt"/>
            <line num="537" count="60" type="stmt"/>
            <line num="540" count="60" type="stmt"/>
            <line num="541" count="60" type="stmt"/>
            <line num="544" count="60" type="stmt"/>
            <line num="545" count="60" type="stmt"/>
            <line num="546" count="60" type="stmt"/>
            <line num="549" count="60" type="stmt"/>
            <line num="550" count="60" type="stmt"/>
            <line num="552" count="60" type="stmt"/>
            <line num="553" count="60" type="stmt"/>
            <line num="554" count="60" type="stmt"/>
            <line num="555" count="60" type="stmt"/>
            <line num="556" count="60" type="stmt"/>
            <line num="557" count="60" type="stmt"/>
            <line num="559" count="60" type="stmt"/>
            <line num="562" count="4" type="stmt"/>
            <line num="563" count="4" type="stmt"/>
            <line num="568" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaptionSmile() : void" num="571" count="4" type="method"/>
            <line num="576" count="4" type="stmt"/>
            <line num="577" count="4" type="stmt"/>
            <line num="579" count="4" type="stmt"/>
            <line num="580" count="4" type="stmt"/>
            <line num="581" count="4" type="stmt"/>
            <line num="583" count="4" type="stmt"/>
            <line num="584" count="4" type="stmt"/>
            <line falsecount="4" truecount="60" num="584" type="cond"/>
            <line num="586" count="60" type="stmt"/>
            <line num="591" count="60" type="stmt"/>
            <line num="592" count="60" type="stmt"/>
            <line num="593" count="60" type="stmt"/>
            <line num="595" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="595" type="cond"/>
            <line num="596" count="600" type="stmt"/>
            <line num="597" count="600" type="stmt"/>
            <line num="598" count="600" type="stmt"/>
            <line num="600" count="60" type="stmt"/>
            <line num="603" count="60" type="stmt"/>
            <line num="606" count="60" type="stmt"/>
            <line num="607" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="607" type="cond"/>
            <line num="608" count="600" type="stmt"/>
            <line num="611" count="60" type="stmt"/>
            <line num="612" count="60" type="stmt"/>
            <line num="616" count="60" type="stmt"/>
            <line num="619" count="60" type="stmt"/>
            <line num="620" count="60" type="stmt"/>
            <line num="621" count="60" type="stmt"/>
            <line num="624" count="60" type="stmt"/>
            <line num="625" count="60" type="stmt"/>
            <line num="626" count="60" type="stmt"/>
            <line num="629" count="60" type="stmt"/>
            <line num="630" count="60" type="stmt"/>
            <line num="632" count="60" type="stmt"/>
            <line num="635" count="4" type="stmt"/>
            <line num="636" count="4" type="stmt"/>
            <line num="641" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testLIBORInArrearsConvexity() : void" num="644" count="4" type="method"/>
            <line num="649" count="4" type="stmt"/>
            <line num="650" count="4" type="stmt"/>
            <line num="652" count="4" type="stmt"/>
            <line num="653" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="653" type="cond"/>
            <line num="654" count="120" type="stmt"/>
            <line num="655" count="120" type="stmt"/>
            <line num="656" count="120" type="stmt"/>
            <line num="657" count="120" type="stmt"/>
            <line num="658" count="120" type="stmt"/>
            <line num="660" count="120" type="stmt"/>
            <line num="661" count="120" type="stmt"/>
            <line num="662" count="120" type="stmt"/>
            <line num="664" count="120" type="stmt"/>
            <line num="665" count="120" type="stmt"/>
            <line num="666" count="120" type="stmt"/>
            <line num="668" count="120" type="stmt"/>
            <line num="670" count="120" type="stmt"/>
            <line falsecount="116" truecount="4" num="670" type="cond"/>
            <line num="671" count="4" type="stmt"/>
            <line num="673" count="120" type="stmt"/>
            <line falsecount="8" truecount="112" num="673" type="cond"/>
            <line num="674" count="112" type="stmt"/>
            <line num="677" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="testSwaptionCalibration() : void" num="684" count="4" type="method"/>
            <line num="690" count="4" type="stmt"/>
            <line num="695" count="4" type="stmt"/>
            <line num="696" count="4" type="stmt"/>
            <line falsecount="4" truecount="32" num="696" type="cond"/>
            <line num="697" count="32" type="stmt"/>
            <line num="698" count="32" type="stmt"/>
            <line falsecount="32" truecount="144" num="698" type="cond"/>
            <line num="702" count="144" type="stmt"/>
            <line num="703" count="144" type="stmt"/>
            <line num="704" count="144" type="stmt"/>
            <line num="705" count="144" type="stmt"/>
            <line num="707" count="144" type="stmt"/>
            <line falsecount="144" truecount="1488" num="707" type="cond"/>
            <line num="708" count="1488" type="stmt"/>
            <line num="709" count="1488" type="stmt"/>
            <line num="710" count="1488" type="stmt"/>
            <line num="712" count="144" type="stmt"/>
            <line num="715" count="144" type="stmt"/>
            <line num="718" count="144" type="stmt"/>
            <line num="719" count="144" type="stmt"/>
            <line num="722" count="144" type="stmt"/>
            <line num="727" count="144" type="stmt"/>
            <line num="728" count="144" type="stmt"/>
            <line falsecount="0" truecount="144" num="728" type="cond"/>
            <line num="730" count="144" type="stmt"/>
            <line num="732" count="144" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="746" count="4" type="stmt"/>
            <line num="751" count="4" type="stmt"/>
            <line num="753" count="4" type="stmt"/>
            <line num="760" count="4" type="stmt"/>
            <line num="763" count="4" type="stmt"/>
            <line num="766" count="4" type="stmt"/>
            <line num="767" count="4" type="stmt"/>
            <line num="768" count="4" type="stmt"/>
            <line num="769" count="4" type="stmt"/>
            <line num="771" count="4" type="stmt"/>
            <line num="778" count="4" type="stmt"/>
            <line num="783" count="4" type="stmt"/>
            <line num="784" count="4" type="stmt"/>
            <line num="785" count="20" type="stmt"/>
            <line num="788" count="4" type="stmt"/>
            <line num="791" count="4" type="stmt"/>
            <line num="792" count="4" type="stmt"/>
            <line num="793" count="4" type="stmt"/>
            <line falsecount="4" truecount="144" num="793" type="cond"/>
            <line num="794" count="144" type="stmt"/>
            <line num="795" count="144" type="stmt"/>
            <line num="796" count="144" type="stmt"/>
            <line num="797" count="144" type="stmt"/>
            <line num="798" count="144" type="stmt"/>
            <line num="799" count="144" type="stmt"/>
            <line num="801" count="4" type="stmt"/>
            <line num="803" count="4" type="stmt"/>
            <line num="804" count="4" type="stmt"/>
            <line num="805" count="4" type="stmt"/>
            <line num="807" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="810" count="1692" type="method"/>
            <line num="811" count="1692" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="814" count="392" type="method"/>
            <line num="815" count="392" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelWithTenorRefinementCalibrationTest.java" name="LIBORMarketModelWithTenorRefinementCalibrationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="1029" coveredmethods="0" methods="12" elements="516" classes="1" ncloc="734" statements="442" conditionals="62" coveredstatements="0"/>
            <class name="LIBORMarketModelWithTenorRefinementCalibrationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="12" elements="516" statements="442" conditionals="62" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelWithTenorRefinementCalibrationTest()" num="99" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve) : CalibrationProduct" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwaptionSmileCalibration() : void" num="132" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="23" visibility="public" signature="testATMSwaptionCalibration() : void" num="298" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="380" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line num="604" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="608" type="cond"/>
            <line num="609" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(double[],double[]) : void" num="627" count="0" type="method"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="647" type="cond"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="660" type="cond"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="670" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="697" type="cond"/>
            <line num="698" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="726" type="cond"/>
            <line num="727" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="741" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="746" type="cond"/>
            <line num="747" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(double[],double[]) : void" num="765" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line num="785" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="785" type="cond"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="799" type="cond"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="836" type="cond"/>
            <line num="837" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line num="863" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="870" type="cond"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line num="873" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line num="883" count="0" type="stmt"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="891" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line num="903" count="0" type="stmt"/>
            <line num="904" count="0" type="stmt"/>
            <line num="905" count="0" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line num="908" count="0" type="stmt"/>
            <line num="909" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="914" count="0" type="method"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line num="918" count="0" type="stmt"/>
            <line num="919" count="0" type="stmt"/>
            <line num="920" count="0" type="stmt"/>
            <line num="921" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line num="923" count="0" type="stmt"/>
            <line num="924" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line num="928" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line num="950" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line num="952" count="0" type="stmt"/>
            <line num="953" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line num="956" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="956" type="cond"/>
            <line num="958" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line num="961" count="0" type="stmt"/>
            <line num="962" count="0" type="stmt"/>
            <line num="963" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line num="970" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1002" count="0" type="stmt"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1008" count="0" type="stmt"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1018" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1019" type="cond"/>
            <line num="1020" count="0" type="stmt"/>
            <line num="1021" count="0" type="stmt"/>
            <line num="1023" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="1026" count="0" type="method"/>
            <line num="1027" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation">
         <metrics coveredelements="481" complexity="59" loc="1130" methods="32" classes="4" statements="402" coveredconditionals="50" coveredmethods="32" elements="486" ncloc="657" files="4" conditionals="52" coveredstatements="399"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest.java" name="MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest.java">
            <metrics coveredelements="129" coveredconditionals="8" complexity="8" loc="326" coveredmethods="3" methods="3" elements="133" classes="1" ncloc="181" statements="120" conditionals="10" coveredstatements="118"/>
            <class name="MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest">
               <metrics coveredelements="129" complexity="8" methods="3" testruns="1" statements="120" coveredconditionals="8" coveredmethods="3" elements="133" testfailures="0" testduration="4.586" conditionals="10" coveredstatements="118" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="72" testsuccess="true" count="1" testduration="4.586" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloBlackScholesModel(RandomVariableFactory,BrownianMotion) : MonteCarloAssetModel" num="112" count="5" type="method"/>
            <line num="114" count="5" type="stmt"/>
            <line num="117" count="5" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line complexity="6" visibility="public" signature="getSensitivityApproximations(double,int,boolean) : Map&lt;String, Object&gt;" num="123" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="229" type="cond"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line falsecount="1" truecount="101" num="258" type="cond"/>
            <line num="259" count="101" type="stmt"/>
            <line num="260" count="101" type="stmt"/>
            <line falsecount="100" truecount="1" num="260" type="cond"/>
            <line num="261" count="1" type="stmt"/>
            <line num="263" count="100" type="stmt"/>
            <line num="264" count="100" type="stmt"/>
            <line num="265" count="100" type="stmt"/>
            <line num="266" count="100" type="stmt"/>
            <line num="267" count="100" type="stmt"/>
            <line num="268" count="100" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="277" type="cond"/>
            <line num="278" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableArithmeticTest.java" name="RandomVariableDifferentiableArithmeticTest.java">
            <metrics coveredelements="54" coveredconditionals="0" complexity="7" loc="162" coveredmethods="7" methods="7" elements="54" classes="1" ncloc="89" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="RandomVariableDifferentiableArithmeticTest">
               <metrics coveredelements="54" complexity="7" methods="7" testruns="20" statements="47" coveredconditionals="0" coveredmethods="7" elements="54" testfailures="0" testduration="0.034" conditionals="0" coveredstatements="47" testpasses="20"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableArithmeticTest(RandomVariableDifferentiableFactory)" num="39" count="20" type="method"/>
            <line num="40" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSubSelf() : void" num="43" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticDivSelf() : void" num="67" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticExpLog() : void" num="91" count="4" type="method"/>
            <line num="94" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line num="110" count="4" type="stmt"/>
            <line num="112" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSqrtSquared() : void" num="115" count="4" type="method"/>
            <line num="118" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSqrtMultSqrt() : void" num="139" count="4" type="method"/>
            <line num="142" count="4" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line num="150" count="4" type="stmt"/>
            <line num="151" count="4" type="stmt"/>
            <line num="153" count="4" type="stmt"/>
            <line num="154" count="4" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableTest.java" name="RandomVariableDifferentiableTest.java">
            <metrics coveredelements="248" coveredconditionals="42" complexity="38" loc="504" coveredmethods="16" methods="16" elements="249" classes="1" ncloc="303" statements="191" conditionals="42" coveredstatements="190"/>
            <class name="RandomVariableDifferentiableTest">
               <metrics coveredelements="248" complexity="38" methods="16" testruns="52" statements="191" coveredconditionals="42" coveredmethods="16" elements="249" testfailures="0" testduration="274.86300000000006" conditionals="42" coveredstatements="190" testpasses="52"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableTest(RandomVariableDifferentiableFactory)" num="45" count="52" type="method"/>
            <line num="46" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableDeterministc() : void" num="49" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStochastic() : void" num="70" count="4" type="method"/>
            <line num="74" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSqrtPow() : void" num="98" count="4" type="method"/>
            <line num="102" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSquaredPow() : void" num="113" count="4" type="method"/>
            <line num="117" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="124" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStandardDeviation() : void" num="128" count="4" type="method"/>
            <line num="132" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableSimpleGradient() : void" num="139" count="4" type="method"/>
            <line num="142" count="4" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line num="148" count="4" type="stmt"/>
            <line num="151" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line num="165" count="4" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line num="171" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="174" type="cond"/>
            <line num="175" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableSimpleGradient2() : void" num="179" count="4" type="method"/>
            <line num="182" count="4" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line num="188" count="4" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line num="194" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="198" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="211" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="213" type="cond"/>
            <line num="214" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSum() : void" num="218" count="4" type="method"/>
            <line num="222" count="4" type="stmt"/>
            <line num="224" count="4" type="stmt"/>
            <line num="226" count="4" type="stmt"/>
            <line falsecount="4" truecount="400000" num="226" type="cond"/>
            <line num="227" count="400000" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="236" count="4" type="stmt"/>
            <line num="238" count="4" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="239" type="cond"/>
            <line num="240" count="4000" type="stmt"/>
            <line num="243" count="4" type="stmt"/>
            <line num="244" count="4" type="stmt"/>
            <line num="246" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="250" count="4" type="stmt"/>
            <line falsecount="4" truecount="4" num="250" type="cond"/>
            <line num="251" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="testRandomVariableGradientBiggerSum() : void" num="256" count="4" type="method"/>
            <line num="259" count="4" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
            <line num="263" count="4" type="stmt"/>
            <line num="264" count="4" type="stmt"/>
            <line num="265" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000000" num="265" type="cond"/>
            <line num="266" count="4000000" type="stmt"/>
            <line num="269" count="4" type="stmt"/>
            <line num="272" count="4" type="stmt"/>
            <line num="275" count="4" type="stmt"/>
            <line num="277" count="4" type="stmt"/>
            <line num="279" count="4" type="stmt"/>
            <line num="280" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="280" type="cond"/>
            <line num="281" count="4000" type="stmt"/>
            <line num="284" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="287" count="4" type="stmt"/>
            <line num="289" count="4" type="stmt"/>
            <line num="291" count="4" type="stmt"/>
            <line num="292" count="4" type="stmt"/>
            <line num="294" count="4" type="stmt"/>
            <line num="296" count="4" type="stmt"/>
            <line num="297" count="4" type="stmt"/>
            <line num="298" count="4" type="stmt"/>
            <line num="300" count="4" type="stmt"/>
            <line num="301" count="4" type="stmt"/>
            <line num="303" count="4" type="stmt"/>
            <line falsecount="4" truecount="4" num="303" type="cond"/>
            <line num="304" count="4" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSum2() : void" num="312" count="4" type="method"/>
            <line num="316" count="4" type="stmt"/>
            <line num="318" count="4" type="stmt"/>
            <line num="320" count="4" type="stmt"/>
            <line falsecount="4" truecount="160000" num="320" type="cond"/>
            <line num="321" count="160000" type="stmt"/>
            <line num="325" count="4" type="stmt"/>
            <line num="329" count="4" type="stmt"/>
            <line num="331" count="4" type="stmt"/>
            <line num="332" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="332" type="cond"/>
            <line num="333" count="4000" type="stmt"/>
            <line num="336" count="4" type="stmt"/>
            <line num="337" count="4" type="stmt"/>
            <line num="339" count="4" type="stmt"/>
            <line num="340" count="4" type="stmt"/>
            <line num="341" count="4" type="stmt"/>
            <line num="343" count="4" type="stmt"/>
            <line falsecount="4" truecount="4" num="343" type="cond"/>
            <line num="344" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableExpectation() : void" num="349" count="4" type="method"/>
            <line num="352" count="4" type="stmt"/>
            <line num="353" count="4" type="stmt"/>
            <line num="354" count="4" type="stmt"/>
            <line num="355" count="4" type="stmt"/>
            <line num="357" count="4" type="stmt"/>
            <line num="359" count="4" type="stmt"/>
            <line num="361" count="4" type="stmt"/>
            <line num="363" count="4" type="stmt"/>
            <line num="365" count="4" type="stmt"/>
            <line num="366" count="4" type="stmt"/>
            <line num="367" count="4" type="stmt"/>
            <line num="368" count="4" type="stmt"/>
            <line num="370" count="4" type="stmt"/>
            <line num="373" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="373" type="cond"/>
            <line num="374" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSumWithConstants() : void" num="378" count="4" type="method"/>
            <line num="382" count="4" type="stmt"/>
            <line num="385" count="4" type="stmt"/>
            <line num="386" count="4" type="stmt"/>
            <line falsecount="4" truecount="160000" num="386" type="cond"/>
            <line num="387" count="160000" type="stmt"/>
            <line num="390" count="4" type="stmt"/>
            <line num="391" count="4" type="stmt"/>
            <line num="394" count="4" type="stmt"/>
            <line num="398" count="4" type="stmt"/>
            <line num="405" count="4" type="stmt"/>
            <line num="407" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="407" type="cond"/>
            <line num="408" count="4000" type="stmt"/>
            <line num="409" count="4000" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="415" count="4" type="stmt"/>
            <line num="416" count="4" type="stmt"/>
            <line num="417" count="4" type="stmt"/>
            <line num="419" count="4" type="stmt"/>
            <line falsecount="4" truecount="4" num="419" type="cond"/>
            <line num="420" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="testRandomVariableDifferentiableInterfaceVsFiniteDifferences() : void" num="424" count="4" type="method"/>
            <line num="427" count="4" type="stmt"/>
            <line num="428" count="4" type="stmt"/>
            <line num="430" count="4" type="stmt"/>
            <line num="432" count="4" type="stmt"/>
            <line num="435" count="4" type="stmt"/>
            <line num="436" count="4" type="stmt"/>
            <line num="438" count="4" type="stmt"/>
            <line num="439" count="4" type="stmt"/>
            <line falsecount="4" truecount="200" num="439" type="cond"/>
            <line num="440" count="200" type="stmt"/>
            <line falsecount="200" truecount="20000000" num="440" type="cond"/>
            <line num="441" count="20000000" type="stmt"/>
            <line num="443" count="200" type="stmt"/>
            <line num="449" count="4" type="stmt"/>
            <line num="450" count="4" type="stmt"/>
            <line num="451" count="4" type="stmt"/>
            <line num="458" count="4" type="stmt"/>
            <line num="459" count="4" type="stmt"/>
            <line falsecount="4" truecount="200" num="459" type="cond"/>
            <line num="460" count="200" type="stmt"/>
            <line num="464" count="4" type="stmt"/>
            <line num="466" count="4" type="stmt"/>
            <line num="467" count="4" type="stmt"/>
            <line falsecount="4" truecount="200" num="467" type="cond"/>
            <line num="469" count="200" type="stmt"/>
            <line num="470" count="200" type="stmt"/>
            <line num="472" count="200" type="stmt"/>
            <line num="473" count="200" type="stmt"/>
            <line num="476" count="200" type="stmt"/>
            <line num="478" count="4" type="stmt"/>
            <line num="480" count="4" type="stmt"/>
            <line num="481" count="4" type="stmt"/>
            <line num="483" count="4" type="stmt"/>
            <line falsecount="4" truecount="200" num="483" type="cond"/>
            <line num="484" count="200" type="stmt"/>
            <line num="485" count="200" type="stmt"/>
            <line num="486" count="200" type="stmt"/>
            <line num="488" count="200" type="stmt"/>
            <line complexity="2" visibility="private" signature="testFunction(RandomVariable[]) : RandomVariable" num="493" count="404" type="method"/>
            <line num="495" count="404" type="stmt"/>
            <line num="496" count="404" type="stmt"/>
            <line falsecount="404" truecount="19796" num="496" type="cond"/>
            <line num="497" count="19796" type="stmt"/>
            <line num="500" count="404" type="stmt"/>
            <line num="502" count="404" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableTypePriorityTest.java" name="RandomVariableDifferentiableTypePriorityTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="6" loc="138" coveredmethods="6" methods="6" elements="50" classes="1" ncloc="84" statements="44" conditionals="0" coveredstatements="44"/>
            <class name="RandomVariableDifferentiableTypePriorityTest">
               <metrics coveredelements="50" complexity="6" methods="6" testruns="16" statements="44" coveredconditionals="0" coveredmethods="6" elements="50" testfailures="0" testduration="0.021000000000000005" conditionals="0" coveredstatements="44" testpasses="16"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableTypePriorityTest(RandomVariableFactory,AbstractRandomVariableDifferentiableFactory)" num="40" count="16" type="method"/>
            <line num="41" count="16" type="stmt"/>
            <line num="42" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityAdd() : void" num="45" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityMult() : void" num="70" count="4" type="method"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityCap() : void" num="93" count="4" type="method"/>
            <line num="96" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line num="110" count="4" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityFloor() : void" num="116" count="4" type="method"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="128" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.rootfinder">
         <metrics coveredelements="46" complexity="7" loc="97" methods="3" classes="1" statements="39" coveredconditionals="4" coveredmethods="3" elements="46" ncloc="55" files="1" conditionals="4" coveredstatements="39"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/rootfinder/RootFindersTest.java" name="RootFindersTest.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="7" loc="97" coveredmethods="3" methods="3" elements="46" classes="1" ncloc="55" statements="39" conditionals="4" coveredstatements="39"/>
            <class name="RootFindersTest">
               <metrics coveredelements="46" complexity="7" methods="3" testruns="1" statements="39" coveredconditionals="4" coveredmethods="3" elements="46" testfailures="0" testduration="0.029" conditionals="4" coveredstatements="39" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testRootFinders() : void" num="21" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRootFinder(RootFinder) : void" num="53" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line falsecount="3" truecount="82" num="57" type="cond"/>
            <line num="58" count="82" type="stmt"/>
            <line num="61" count="82" type="stmt"/>
            <line num="63" count="82" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line num="72" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRootFinderWithDerivative(RootFinderWithDerivative) : void" num="75" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="80" type="cond"/>
            <line num="81" count="20" type="stmt"/>
            <line num="83" count="20" type="stmt"/>
            <line num="84" count="20" type="stmt"/>
            <line num="86" count="20" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod">
         <metrics coveredelements="106" complexity="17" loc="402" methods="11" classes="4" statements="83" coveredconditionals="12" coveredmethods="11" elements="106" ncloc="235" files="4" conditionals="12" coveredstatements="83"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/fouriermethod/BlackScholesCallOptionTest.java" name="BlackScholesCallOptionTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="2" loc="76" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="41" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="BlackScholesCallOptionTest">
               <metrics coveredelements="20" complexity="2" methods="2" testruns="2" statements="18" coveredconditionals="0" coveredmethods="2" elements="20" testfailures="0" testduration="0.21999999999999997" conditionals="0" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="35" testsuccess="true" count="1" testduration="0.173" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDigitalOption() : void" num="56" testsuccess="true" count="1" testduration="0.047" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/fouriermethod/HestonModelCallOptionTest.java" name="HestonModelCallOptionTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="3" loc="90" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="HestonModelCallOptionTest">
               <metrics coveredelements="16" complexity="3" methods="3" testruns="2" statements="13" coveredconditionals="0" coveredmethods="3" elements="16" testfailures="0" testduration="0.413" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="40" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModelCallOptionTest(FourierTransformProduct)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="69" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/fouriermethod/MertonJumpDiffusionCallOptionTest.java" name="MertonJumpDiffusionCallOptionTest.java">
            <metrics coveredelements="35" coveredconditionals="6" complexity="6" loc="122" coveredmethods="3" methods="3" elements="35" classes="1" ncloc="72" statements="26" conditionals="6" coveredstatements="26"/>
            <class name="MertonJumpDiffusionCallOptionTest">
               <metrics coveredelements="35" complexity="6" methods="3" testruns="3" statements="26" coveredconditionals="6" coveredmethods="3" elements="35" testfailures="0" testduration="16.962" conditionals="6" coveredstatements="26" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="testMartingaleProperty() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="58" type="cond"/>
            <line num="59" count="10" type="stmt"/>
            <line num="60" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMartingalePropertyMonteCarlo() : void" num="64" testsuccess="true" count="1" testduration="8.369" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="75" type="cond"/>
            <line num="76" count="10" type="stmt"/>
            <line num="77" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="81" testsuccess="true" count="1" testduration="8.593" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="103" type="cond"/>
            <line num="108" count="20" type="stmt"/>
            <line num="111" count="20" type="stmt"/>
            <line num="113" count="20" type="stmt"/>
            <line num="114" count="20" type="stmt"/>
            <line num="115" count="20" type="stmt"/>
            <line num="116" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/fouriermethod/VarianceGammaCallOptionTest.java" name="VarianceGammaCallOptionTest.java">
            <metrics coveredelements="35" coveredconditionals="6" complexity="6" loc="114" coveredmethods="3" methods="3" elements="35" classes="1" ncloc="69" statements="26" conditionals="6" coveredstatements="26"/>
            <class name="VarianceGammaCallOptionTest">
               <metrics coveredelements="35" complexity="6" methods="3" testruns="3" statements="26" coveredconditionals="6" coveredmethods="3" elements="35" testfailures="0" testduration="6.886" conditionals="6" coveredstatements="26" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="testMartingaleProperty() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="56" type="cond"/>
            <line num="57" count="10" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMartingalePropertyMonteCarlo() : void" num="62" testsuccess="true" count="1" testduration="3.33" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="72" type="cond"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="77" testsuccess="true" count="1" testduration="3.555" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="97" type="cond"/>
            <line num="102" count="20" type="stmt"/>
            <line num="105" count="20" type="stmt"/>
            <line num="107" count="20" type="stmt"/>
            <line num="108" count="20" type="stmt"/>
            <line num="109" count="20" type="stmt"/>
            <line num="110" count="20" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.products">
         <metrics coveredelements="25" complexity="4" loc="106" methods="4" classes="1" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" ncloc="61" files="1" conditionals="0" coveredstatements="21"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/products/DepositTest.java" name="DepositTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="4" loc="106" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="61" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="DepositTest">
               <metrics coveredelements="25" complexity="4" methods="4" testruns="3" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="21" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DepositTest()" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
            <line num="31" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRateValueConsistency() : void" num="47" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDepositValue() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluationTime() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.annuitymapping">
         <metrics coveredelements="116" complexity="25" loc="363" methods="9" classes="2" statements="104" coveredconditionals="6" coveredmethods="9" elements="119" ncloc="279" files="2" conditionals="6" coveredstatements="101"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMappingTest.java" name="AnnuityMappingTest.java">
            <metrics coveredelements="80" coveredconditionals="6" complexity="15" loc="213" coveredmethods="7" methods="7" elements="81" classes="1" ncloc="163" statements="68" conditionals="6" coveredstatements="67"/>
            <class name="AnnuityMappingTest">
               <metrics coveredelements="80" complexity="15" methods="7" testruns="4" statements="68" coveredconditionals="6" coveredmethods="7" elements="81" testfailures="0" testduration="0.017" conditionals="6" coveredstatements="67" testpasses="4"/>
            </class>
            <line complexity="6" visibility="public" signature="create() : void" num="71" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a_testMappings() : void" num="142" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="b_testSeq() : void" num="159" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="163" type="cond"/>
            <line num="164" count="50" type="stmt"/>
            <line num="165" count="50" type="stmt"/>
            <line num="166" count="50" type="stmt"/>
            <line num="168" count="50" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="c_testFirstDerivative() : void" num="173" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="176" type="cond"/>
            <line num="177" count="50" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="d_testSecondDerivative() : void" num="185" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="188" type="cond"/>
            <line num="189" count="50" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="manageOutput() : void" num="195" count="1" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createVolatilityCube(String,LocalDate,double) : VolatilityCube" num="201" count="1" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/annuitymapping/NormalizingFunctionTest.java" name="NormalizingFunctionTest.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="10" loc="150" coveredmethods="2" methods="2" elements="38" classes="1" ncloc="116" statements="36" conditionals="0" coveredstatements="34"/>
            <class name="NormalizingFunctionTest">
               <metrics coveredelements="36" complexity="10" methods="2" testruns="1" statements="36" coveredconditionals="0" coveredmethods="2" elements="38" testfailures="0" testduration="0.097" conditionals="0" coveredstatements="34" testpasses="1"/>
            </class>
            <line complexity="9" visibility="public" signature="setup() : void" num="63" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExpectation() : void" num="138" testsuccess="true" count="1" testduration="0.097" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.products">
         <metrics coveredelements="349" complexity="79" loc="862" methods="22" classes="3" statements="301" coveredconditionals="37" coveredmethods="22" elements="365" ncloc="678" files="3" conditionals="42" coveredstatements="290"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/products/AnnuityDummyTest.java" name="AnnuityDummyTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="17" loc="187" coveredmethods="5" methods="5" elements="59" classes="1" ncloc="147" statements="54" conditionals="0" coveredstatements="52"/>
            <class name="AnnuityDummyTest">
               <metrics coveredelements="57" complexity="17" methods="5" testruns="3" statements="54" coveredconditionals="0" coveredmethods="5" elements="59" testfailures="0" testduration="1.141" conditionals="0" coveredstatements="52" testpasses="3"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="62" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimplified() : void" num="127" testsuccess="true" count="1" testduration="0.693" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasic() : void" num="141" testsuccess="true" count="1" testduration="0.287" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMulti() : void" num="155" testsuccess="true" count="1" testduration="0.161" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="170" count="3" type="method"/>
            <line num="171" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/products/CashSettledSwaptionTest.java" name="CashSettledSwaptionTest.java">
            <metrics coveredelements="180" coveredconditionals="27" complexity="39" loc="404" coveredmethods="11" methods="11" elements="192" classes="1" ncloc="320" statements="149" conditionals="32" coveredstatements="142"/>
            <class name="CashSettledSwaptionTest">
               <metrics coveredelements="180" complexity="39" methods="11" testruns="3" statements="149" coveredconditionals="27" coveredmethods="11" elements="192" testfailures="0" testduration="7.5" conditionals="32" coveredstatements="142" testpasses="3"/>
            </class>
            <line complexity="15" visibility="public" signature="setup() : void" num="104" count="1" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line falsecount="1" truecount="204" num="107" type="cond"/>
            <line num="108" count="204" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="172" type="cond"/>
            <line num="173" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="initiate() : void" num="178" count="3" type="method"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_testSimplifiedLinear() : void" num="189" testsuccess="true" count="1" testduration="1.866" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="202" type="cond"/>
            <line num="203" count="100" type="stmt"/>
            <line num="204" count="100" type="stmt"/>
            <line num="206" count="100" type="stmt"/>
            <line num="207" count="100" type="stmt"/>
            <line num="209" count="100" type="stmt"/>
            <line num="212" count="100" type="stmt"/>
            <line num="213" count="100" type="stmt"/>
            <line num="214" count="100" type="stmt"/>
            <line num="215" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="b_testBasicPiterbarg() : void" num="220" testsuccess="true" count="1" testduration="2.888" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="233" type="cond"/>
            <line num="234" count="100" type="stmt"/>
            <line num="235" count="100" type="stmt"/>
            <line num="237" count="100" type="stmt"/>
            <line num="238" count="100" type="stmt"/>
            <line num="240" count="100" type="stmt"/>
            <line num="243" count="100" type="stmt"/>
            <line num="244" count="100" type="stmt"/>
            <line num="245" count="100" type="stmt"/>
            <line num="246" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="c_testMultiPiterbarg() : void" num="251" testsuccess="true" count="1" testduration="2.746" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="264" type="cond"/>
            <line num="265" count="100" type="stmt"/>
            <line num="266" count="100" type="stmt"/>
            <line num="268" count="100" type="stmt"/>
            <line num="269" count="100" type="stmt"/>
            <line num="271" count="100" type="stmt"/>
            <line num="274" count="100" type="stmt"/>
            <line num="275" count="100" type="stmt"/>
            <line num="276" count="100" type="stmt"/>
            <line num="277" count="100" type="stmt"/>
            <line complexity="8" visibility="public" signature="gatherOutput() : void" num="282" count="3" type="method"/>
            <line num="286" count="3" type="stmt"/>
            <line num="287" count="3" type="stmt"/>
            <line num="288" count="3" type="stmt"/>
            <line falsecount="3" truecount="300" num="288" type="cond"/>
            <line num="289" count="300" type="stmt"/>
            <line num="293" count="3" type="stmt"/>
            <line num="294" count="3" type="stmt"/>
            <line num="295" count="3" type="stmt"/>
            <line num="298" count="3" type="stmt"/>
            <line num="299" count="3" type="stmt"/>
            <line num="300" count="3" type="stmt"/>
            <line falsecount="3" truecount="300" num="300" type="cond"/>
            <line num="301" count="300" type="stmt"/>
            <line num="303" count="300" type="stmt"/>
            <line num="304" count="300" type="stmt"/>
            <line num="305" count="300" type="stmt"/>
            <line num="307" count="300" type="stmt"/>
            <line num="310" count="300" type="stmt"/>
            <line num="312" count="300" type="stmt"/>
            <line num="316" count="3" type="stmt"/>
            <line falsecount="3" truecount="612" num="316" type="cond"/>
            <line num="317" count="612" type="stmt"/>
            <line num="320" count="3" type="stmt"/>
            <line num="321" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="3" type="stmt"/>
            <line num="326" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="3" type="stmt"/>
            <line num="331" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="335" count="3" type="stmt"/>
            <line num="336" count="300" type="stmt"/>
            <line falsecount="300" truecount="0" num="336" type="cond"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="printResults() : void" num="342" count="1" type="method"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line falsecount="1" truecount="204" num="345" type="cond"/>
            <line num="346" count="204" type="stmt"/>
            <line falsecount="203" truecount="1" num="346" type="cond"/>
            <line num="347" count="1" type="stmt"/>
            <line num="349" count="204" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="358" count="3" type="method"/>
            <line num="359" count="3" type="stmt"/>
            <line num="370" count="3" type="stmt"/>
            <line num="371" count="3" type="stmt"/>
            <line num="373" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="valueReceiverPSS(double,VolatilityCubeModel,double,double,Schedule,String) : double" num="376" count="300" type="method"/>
            <line num="378" count="300" type="stmt"/>
            <line complexity="1" visibility="private" signature="valuePayerPSS(double,VolatilityCubeModel,double,double,Schedule,String) : double" num="381" count="600" type="method"/>
            <line num="382" count="600" type="stmt"/>
            <line num="383" count="600" type="stmt"/>
            <line num="384" count="600" type="stmt"/>
            <line num="385" count="600" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="389" count="3" type="method"/>
            <line num="391" count="3" type="stmt"/>
            <line num="392" count="3" type="stmt"/>
            <line num="393" count="3" type="stmt"/>
            <line falsecount="3" truecount="60" num="393" type="cond"/>
            <line num="394" count="60" type="stmt"/>
            <line num="396" count="3" type="stmt"/>
            <line num="398" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/products/ConstantMaturitySwapTest.java" name="ConstantMaturitySwapTest.java">
            <metrics coveredelements="112" coveredconditionals="10" complexity="23" loc="271" coveredmethods="6" methods="6" elements="114" classes="1" ncloc="211" statements="98" conditionals="10" coveredstatements="96"/>
            <class name="ConstantMaturitySwapTest">
               <metrics coveredelements="112" complexity="23" methods="6" testruns="3" statements="98" coveredconditionals="10" coveredmethods="6" elements="114" testfailures="0" testduration="7.340000000000001" conditionals="10" coveredstatements="96" testpasses="3"/>
            </class>
            <line complexity="14" visibility="public" signature="setup() : void" num="77" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="146" type="cond"/>
            <line num="147" count="50" type="stmt"/>
            <line num="148" count="50" type="stmt"/>
            <line num="149" count="50" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSimplifiedLinear() : void" num="153" testsuccess="true" count="1" testduration="1.73" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="173" type="cond"/>
            <line num="174" count="50" type="stmt"/>
            <line num="175" count="50" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBasicPiterbarg() : void" num="181" testsuccess="true" count="1" testduration="2.886" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="201" type="cond"/>
            <line num="202" count="50" type="stmt"/>
            <line num="203" count="50" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiPiterbarg() : void" num="209" testsuccess="true" count="1" testduration="2.724" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="229" type="cond"/>
            <line num="230" count="50" type="stmt"/>
            <line num="231" count="50" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="gatherOutput() : void" num="237" count="3" type="method"/>
            <line num="241" count="3" type="stmt"/>
            <line num="242" count="3" type="stmt"/>
            <line num="243" count="3" type="stmt"/>
            <line num="245" count="3" type="stmt"/>
            <line num="246" count="3" type="stmt"/>
            <line num="247" count="3" type="stmt"/>
            <line falsecount="3" truecount="150" num="247" type="cond"/>
            <line num="248" count="150" type="stmt"/>
            <line num="250" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="254" count="3" type="method"/>
            <line num="255" count="3" type="stmt"/>
            <line num="266" count="3" type="stmt"/>
            <line num="267" count="3" type="stmt"/>
            <line num="269" count="3" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration">
         <metrics coveredelements="118" complexity="4" loc="362" methods="4" classes="2" statements="114" coveredconditionals="0" coveredmethods="4" elements="118" ncloc="234" files="2" conditionals="0" coveredstatements="114"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/fouriermethod/calibration/HestonDaxCalibrationTest.java" name="HestonDaxCalibrationTest.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="2" loc="185" coveredmethods="2" methods="2" elements="62" classes="1" ncloc="120" statements="60" conditionals="0" coveredstatements="60"/>
            <class name="HestonDaxCalibrationTest">
               <metrics coveredelements="62" complexity="2" methods="2" testruns="1" statements="60" coveredconditionals="0" coveredmethods="2" elements="62" testfailures="0" testduration="2.197" conditionals="0" coveredstatements="60" testpasses="1"/>
            </class>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="53" testsuccess="true" count="1" testduration="2.197" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="21" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/fouriermethod/calibration/VarianceGammaDaxCalibrationTest.java" name="VarianceGammaDaxCalibrationTest.java">
            <metrics coveredelements="56" coveredconditionals="0" complexity="2" loc="177" coveredmethods="2" methods="2" elements="56" classes="1" ncloc="114" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="VarianceGammaDaxCalibrationTest">
               <metrics coveredelements="56" complexity="2" methods="2" testruns="1" statements="54" coveredconditionals="0" coveredmethods="2" elements="56" testfailures="0" testduration="1.727" conditionals="0" coveredstatements="54" testpasses="1"/>
            </class>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="53" testsuccess="true" count="1" testduration="1.727" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="21" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time">
         <metrics coveredelements="251" complexity="45" loc="635" methods="36" classes="4" statements="197" coveredconditionals="18" coveredmethods="36" elements="251" ncloc="424" files="4" conditionals="18" coveredstatements="197"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/time/DayCountConventionTest.java" name="DayCountConventionTest.java">
            <metrics coveredelements="95" coveredconditionals="6" complexity="11" loc="214" coveredmethods="8" methods="8" elements="95" classes="1" ncloc="143" statements="81" conditionals="6" coveredstatements="81"/>
            <class name="DayCountConventionTest">
               <metrics coveredelements="95" complexity="11" methods="8" testruns="8" statements="81" coveredconditionals="6" coveredmethods="8" elements="95" testfailures="0" testduration="0.020000000000000004" conditionals="6" coveredstatements="81" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_ACT_ISDA() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConventionAdditivity_ACT_ACT_ISDA() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_30E_360() : void" num="78" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_365() : void" num="95" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_360() : void" num="108" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_ACT_YEARFRAC() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDayCountConventionAdditivity_ACT_ACT_ICMA() : void" num="137" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line falsecount="1" truecount="120" num="141" type="cond"/>
            <line num="142" count="120" type="stmt"/>
            <line num="143" count="120" type="stmt"/>
            <line num="144" count="120" type="stmt"/>
            <line num="146" count="120" type="stmt"/>
            <line num="147" count="120" type="stmt"/>
            <line num="148" count="120" type="stmt"/>
            <line num="150" count="120" type="stmt"/>
            <line num="151" count="120" type="stmt"/>
            <line num="152" count="120" type="stmt"/>
            <line num="154" count="120" type="stmt"/>
            <line num="155" count="120" type="stmt"/>
            <line num="156" count="120" type="stmt"/>
            <line num="157" count="120" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDayCountConventionConsistency_ACT_ACT_ICMA_versus_ACT_ACT_ISDA() : void" num="168" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line falsecount="1" truecount="120" num="174" type="cond"/>
            <line num="175" count="120" type="stmt"/>
            <line num="176" count="120" type="stmt"/>
            <line num="177" count="120" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="207" type="cond"/>
            <line num="208" count="9" type="stmt"/>
            <line num="209" count="9" type="stmt"/>
            <line num="211" count="9" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/time/FloatingpointDateTest.java" name="FloatingpointDateTest.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="7" loc="68" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="41" statements="19" conditionals="8" coveredstatements="19"/>
            <class name="FloatingpointDateTest">
               <metrics coveredelements="30" complexity="7" methods="3" testruns="3" statements="19" coveredconditionals="8" coveredmethods="3" elements="30" testfailures="0" testduration="1.4449999999999998" conditionals="8" coveredstatements="19" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="22" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="25" type="cond"/>
            <line num="26" count="1000" type="stmt"/>
            <line num="28" count="1000" type="stmt"/>
            <line num="29" count="1000" type="stmt"/>
            <line num="31" count="1000" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalDateLocalDateTimeConsistency() : void" num="38" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="41" type="cond"/>
            <line num="42" count="1000" type="stmt"/>
            <line num="44" count="1000" type="stmt"/>
            <line num="45" count="1000" type="stmt"/>
            <line num="47" count="1000" type="stmt"/>
            <line complexity="3" visibility="public" signature="testLocalDateTime() : void" num="54" testsuccess="true" count="1" testduration="1.43" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line falsecount="1" truecount="500" num="57" type="cond"/>
            <line num="58" count="500" type="stmt"/>
            <line falsecount="500" truecount="6171500" num="58" type="cond"/>
            <line num="59" count="6171500" type="stmt"/>
            <line num="61" count="6171500" type="stmt"/>
            <line num="62" count="6171500" type="stmt"/>
            <line num="64" count="6171500" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/time/ScheduleGeneratorTest.java" name="ScheduleGeneratorTest.java">
            <metrics coveredelements="30" coveredconditionals="4" complexity="5" loc="121" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="88" statements="23" conditionals="4" coveredstatements="23"/>
            <class name="ScheduleGeneratorTest">
               <metrics coveredelements="30" complexity="5" methods="3" testruns="3" statements="23" coveredconditionals="4" coveredmethods="3" elements="30" testfailures="0" testduration="0.033" conditionals="4" coveredstatements="23" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testScheduleGeneratorMetaData() : void" num="26" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeriodStartPeriodEnd() : void" num="67" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="40" type="stmt"/>
            <line num="87" count="40" type="stmt"/>
            <line falsecount="1" truecount="39" num="87" type="cond"/>
            <line num="88" count="39" type="stmt"/>
            <line num="90" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeriodLength() : void" num="94" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="113" type="cond"/>
            <line num="114" count="40" type="stmt"/>
            <line num="115" count="40" type="stmt"/>
            <line num="116" count="40" type="stmt"/>
            <line num="117" count="40" type="stmt"/>
            <line num="118" count="40" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/time/TimeDiscretizationTest.java" name="TimeDiscretizationTest.java">
            <metrics coveredelements="96" coveredconditionals="0" complexity="22" loc="232" coveredmethods="22" methods="22" elements="96" classes="1" ncloc="152" statements="74" conditionals="0" coveredstatements="74"/>
            <class name="TimeDiscretizationTest">
               <metrics coveredelements="96" complexity="22" methods="22" testruns="20" statements="74" coveredconditionals="0" coveredmethods="22" elements="96" testfailures="0" testduration="0.033" conditionals="0" coveredstatements="74" testpasses="20"/>
            </class>
            <line complexity="1" visibility="private" signature="getHalfTickMore(double) : double" num="20" count="10" type="method"/>
            <line num="21" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="20" type="method"/>
            <line num="26" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithUnboxedArrayAtDefaultTickSize() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtDefaultTickSize() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtBigTickSize() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtSmallTickSize() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtDefaultTickSize() : void" num="73" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtBigTickSize() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtSmallTickSize() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtDefaultTickSize() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtBigTickSize() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtSmallTickSize() : void" num="128" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithNumberOfSteps() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithNumberOfStepsSmallerThanTickSize() : void" num="146" testsuccess="true" count="1" testduration="0.023" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithIntervalShortStubAtEnd() : void" num="153" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithIntervalShortStubAtFront() : void" num="160" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithNoDuplicates() : void" num="167" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithSubTickDuplicates() : void" num="178" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithDifferentTickSizes() : void" num="189" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithNoDuplicates() : void" num="200" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithSubTickDuplicates() : void" num="211" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithDifferentTickSizes() : void" num="222" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.stochastic">
         <metrics coveredelements="104" complexity="20" loc="181" methods="20" classes="1" statements="84" coveredconditionals="0" coveredmethods="20" elements="104" ncloc="149" files="1" conditionals="0" coveredstatements="84"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/stochastic/ScalarTest.java" name="ScalarTest.java">
            <metrics coveredelements="104" coveredconditionals="0" complexity="20" loc="181" coveredmethods="20" methods="20" elements="104" classes="1" ncloc="149" statements="84" conditionals="0" coveredstatements="84"/>
            <class name="ScalarTest">
               <metrics coveredelements="104" complexity="20" methods="20" testruns="20" statements="84" coveredconditionals="0" coveredmethods="20" elements="104" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="84" testpasses="20"/>
            </class>
            <line complexity="1" visibility="public" signature="testAbs() : void" num="8" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line num="11" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAccrue() : void" num="15" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddProduct() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddRatio() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOf() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCap() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChoose() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDiscount() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDiv() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloor() : void" num="111" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetAverage() : void" num="121" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvert() : void" num="127" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsNaN() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMult() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqrt() : void" num="149" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSquared() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSub() : void" num="164" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubRatio() : void" num="173" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor.xmlparser">
         <metrics coveredelements="30" complexity="16" loc="256" methods="9" classes="2" statements="87" coveredconditionals="0" coveredmethods="6" elements="100" ncloc="197" files="2" conditionals="4" coveredstatements="24"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/descriptor/xmlparser/FIPXMLParserTest.java" name="FIPXMLParserTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="96" coveredmethods="3" methods="4" elements="40" classes="1" ncloc="71" statements="34" conditionals="2" coveredstatements="10"/>
            <class name="FIPXMLParserTest">
               <metrics coveredelements="13" complexity="7" methods="4" testruns="1" statements="34" coveredconditionals="0" coveredmethods="3" elements="40" testfailures="0" testduration="0.043" conditionals="2" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="26" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FIPXMLParserTest(File)" num="57" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGetSwapProductDescriptor() : void" num="62" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/descriptor/xmlparser/FPMLParserTest.java" name="FPMLParserTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="9" loc="160" coveredmethods="3" methods="5" elements="60" classes="1" ncloc="126" statements="53" conditionals="2" coveredstatements="14"/>
            <class name="FPMLParserTest">
               <metrics coveredelements="17" complexity="9" methods="5" testruns="1" statements="53" coveredconditionals="0" coveredmethods="3" elements="60" testfailures="0" testduration="0.071" conditionals="2" coveredstatements="14" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="44" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPMLParserTest(File)" num="82" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGetSwapProductDescriptor() : void" num="87" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve(String,LocalDate) : ForwardCurveInterpolation" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves.locallinearregression">
         <metrics coveredelements="19" complexity="8" loc="86" methods="3" classes="1" statements="33" coveredconditionals="3" coveredmethods="3" elements="42" ncloc="58" files="1" conditionals="6" coveredstatements="13"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/locallinearregression/CurveEstimationTest.java" name="CurveEstimationTest.java">
            <metrics coveredelements="19" coveredconditionals="3" complexity="8" loc="86" coveredmethods="3" methods="3" elements="42" classes="1" ncloc="58" statements="33" conditionals="6" coveredstatements="13"/>
            <class name="CurveEstimationTest">
               <metrics coveredelements="19" complexity="8" methods="3" testruns="2" statements="33" coveredconditionals="3" coveredmethods="3" elements="42" testfailures="0" testduration="0.02" conditionals="6" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 21()" num="21" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLinearInterpolation() : void" num="41" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="48" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRegressionMatrix() : void" num="65" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="70" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward">
         <metrics coveredelements="407" complexity="77" loc="973" methods="45" classes="12" statements="317" coveredconditionals="54" coveredmethods="44" elements="418" ncloc="671" files="2" conditionals="56" coveredstatements="309"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADPerformanceTest.java" name="RandomVariableDifferentiableAADPerformanceTest.java">
            <metrics coveredelements="273" coveredconditionals="54" complexity="64" loc="660" coveredmethods="31" methods="32" elements="284" classes="11" ncloc="486" statements="196" conditionals="56" coveredstatements="188"/>
            <class name="RandomVariableDifferentiableAADPerformanceTest">
               <metrics coveredelements="106" complexity="20" methods="5" testruns="18" statements="81" coveredconditionals="26" coveredmethods="4" elements="114" testfailures="0" testduration="495.806" conditionals="28" coveredstatements="76" testpasses="18"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionBigSum">
               <metrics coveredelements="12" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionGeometricSum">
               <metrics coveredelements="18" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionSumOfProducts">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionSumOfProductsWithAddAndMult">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionAccrue">
               <metrics coveredelements="14" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionAccrueWithAddAndMult">
               <metrics coveredelements="14" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloEuropeanOption">
               <metrics coveredelements="20" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="21" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloAsianOption">
               <metrics coveredelements="20" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="21" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloBermudanOption">
               <metrics coveredelements="29" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="30" statements="25" conditionals="2" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="77" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line falsecount="4" truecount="30000" num="81" type="cond"/>
            <line num="82" count="30000" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="87" count="2" type="method"/>
            <line num="89" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="94" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="101" count="4" type="method"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="105" type="cond"/>
            <line num="106" count="4000" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="111" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="115" type="cond"/>
            <line num="116" count="2000" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="121" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="128" count="202" type="method"/>
            <line num="130" count="202" type="stmt"/>
            <line num="131" count="202" type="stmt"/>
            <line falsecount="202" truecount="1010" num="131" type="cond"/>
            <line num="132" count="1010" type="stmt"/>
            <line falsecount="1010" truecount="101000" num="132" type="cond"/>
            <line num="133" count="101000" type="stmt"/>
            <line num="136" count="202" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="139" count="2" type="method"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="142" type="cond"/>
            <line num="144" count="10" type="stmt"/>
            <line num="145" count="10" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="151" count="2" type="method"/>
            <line num="152" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="157" count="22" type="method"/>
            <line num="159" count="22" type="stmt"/>
            <line num="160" count="22" type="stmt"/>
            <line falsecount="22" truecount="220" num="160" type="cond"/>
            <line num="161" count="220" type="stmt"/>
            <line falsecount="220" truecount="2200" num="161" type="cond"/>
            <line num="162" count="2200" type="stmt"/>
            <line num="165" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="168" count="2" type="method"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="171" type="cond"/>
            <line num="173" count="20" type="stmt"/>
            <line num="174" count="20" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="180" count="2" type="method"/>
            <line num="181" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="186" count="202" type="method"/>
            <line num="188" count="202" type="stmt"/>
            <line num="189" count="202" type="stmt"/>
            <line falsecount="202" truecount="202" num="189" type="cond"/>
            <line num="190" count="202" type="stmt"/>
            <line falsecount="202" truecount="20200" num="190" type="cond"/>
            <line num="191" count="20200" type="stmt"/>
            <line num="194" count="202" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="197" count="2" type="method"/>
            <line num="199" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="202" count="2" type="method"/>
            <line num="203" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="209" count="202" type="method"/>
            <line num="211" count="202" type="stmt"/>
            <line num="212" count="202" type="stmt"/>
            <line falsecount="202" truecount="202" num="212" type="cond"/>
            <line num="213" count="202" type="stmt"/>
            <line falsecount="202" truecount="20200" num="213" type="cond"/>
            <line num="214" count="20200" type="stmt"/>
            <line num="217" count="202" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="220" count="2" type="method"/>
            <line num="222" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="225" count="2" type="method"/>
            <line num="226" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="252" count="8" type="method"/>
            <line num="254" count="8" type="stmt"/>
            <line num="257" count="8" type="stmt"/>
            <line num="258" count="8" type="stmt"/>
            <line num="259" count="8" type="stmt"/>
            <line num="262" count="8" type="stmt"/>
            <line num="265" count="8" type="stmt"/>
            <line num="268" count="8" type="stmt"/>
            <line num="271" count="8" type="stmt"/>
            <line num="276" count="8" type="stmt"/>
            <line num="277" count="8" type="stmt"/>
            <line num="278" count="8" type="stmt"/>
            <line num="279" count="8" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="285" count="8" type="stmt"/>
            <line num="286" count="8" type="stmt"/>
            <line num="288" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="291" count="2" type="method"/>
            <line num="293" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="296" count="2" type="method"/>
            <line num="297" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="323" count="8" type="method"/>
            <line num="325" count="8" type="stmt"/>
            <line num="328" count="8" type="stmt"/>
            <line num="329" count="8" type="stmt"/>
            <line num="330" count="8" type="stmt"/>
            <line num="333" count="8" type="stmt"/>
            <line num="336" count="8" type="stmt"/>
            <line num="339" count="8" type="stmt"/>
            <line num="342" count="8" type="stmt"/>
            <line num="347" count="8" type="stmt"/>
            <line num="348" count="8" type="stmt"/>
            <line num="349" count="8" type="stmt"/>
            <line num="350" count="8" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="8" type="stmt"/>
            <line num="357" count="8" type="stmt"/>
            <line num="359" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="362" count="2" type="method"/>
            <line num="364" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="367" count="2" type="method"/>
            <line num="368" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="389" count="8" type="method"/>
            <line num="391" count="8" type="stmt"/>
            <line num="394" count="8" type="stmt"/>
            <line num="395" count="8" type="stmt"/>
            <line num="396" count="8" type="stmt"/>
            <line num="399" count="8" type="stmt"/>
            <line num="402" count="8" type="stmt"/>
            <line num="405" count="8" type="stmt"/>
            <line num="408" count="8" type="stmt"/>
            <line num="413" count="8" type="stmt"/>
            <line num="414" count="8" type="stmt"/>
            <line num="415" count="8" type="stmt"/>
            <line num="416" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="416" type="cond"/>
            <line num="417" count="400" type="stmt"/>
            <line num="418" count="400" type="stmt"/>
            <line num="419" count="400" type="stmt"/>
            <line num="421" count="8" type="stmt"/>
            <line num="422" count="8" type="stmt"/>
            <line num="423" count="8" type="stmt"/>
            <line num="424" count="8" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="429" count="8" type="stmt"/>
            <line num="430" count="8" type="stmt"/>
            <line num="431" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="434" count="2" type="method"/>
            <line num="436" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="439" count="2" type="method"/>
            <line num="440" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="510" count="2" type="method"/>
            <line num="512" count="2" type="stmt"/>
            <line num="513" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="513" type="cond"/>
            <line num="514" count="18" type="stmt"/>
            <line falsecount="18" truecount="36" num="514" type="cond"/>
            <line num="515" count="36" type="stmt"/>
            <line num="516" count="36" type="stmt"/>
            <line num="523" count="36" type="stmt"/>
            <line num="524" count="36" type="stmt"/>
            <line num="525" count="36" type="stmt"/>
            <line num="528" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPerformanceTest(String,Object[],RandomVariableFactory)" num="535" count="18" type="method"/>
            <line num="536" count="18" type="stmt"/>
            <line num="537" count="18" type="stmt"/>
            <line complexity="14" visibility="public" signature="test() : void" num="540" count="18" type="method"/>
            <line num="543" count="18" type="stmt"/>
            <line num="544" count="18" type="stmt"/>
            <line num="545" count="18" type="stmt"/>
            <line num="546" count="18" type="stmt"/>
            <line num="547" count="18" type="stmt"/>
            <line num="552" count="18" type="stmt"/>
            <line num="553" count="18" type="stmt"/>
            <line num="554" count="18" type="stmt"/>
            <line falsecount="18" truecount="120006" num="554" type="cond"/>
            <line num="555" count="120006" type="stmt"/>
            <line num="557" count="18" type="stmt"/>
            <line num="558" count="18" type="stmt"/>
            <line falsecount="18" truecount="80010" num="558" type="cond"/>
            <line num="559" count="80010" type="stmt"/>
            <line num="562" count="18" type="stmt"/>
            <line num="563" count="18" type="stmt"/>
            <line num="564" count="18" type="stmt"/>
            <line falsecount="18" truecount="642" num="564" type="cond"/>
            <line num="565" count="642" type="stmt"/>
            <line falsecount="624" truecount="18" num="565" type="cond"/>
            <line num="566" count="18" type="stmt"/>
            <line num="569" count="624" type="stmt"/>
            <line num="572" count="18" type="stmt"/>
            <line falsecount="18" truecount="626" num="572" type="cond"/>
            <line num="573" count="626" type="stmt"/>
            <line falsecount="220" truecount="406" num="573" type="cond"/>
            <line num="574" count="406" type="stmt"/>
            <line num="577" count="220" type="stmt"/>
            <line num="581" count="18" type="stmt"/>
            <line num="582" count="18" type="stmt"/>
            <line num="583" count="18" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="592" count="18" type="stmt"/>
            <line num="593" count="18" type="stmt"/>
            <line num="595" count="18" type="stmt"/>
            <line num="597" count="18" type="stmt"/>
            <line num="603" count="18" type="stmt"/>
            <line num="605" count="18" type="stmt"/>
            <line num="606" count="18" type="stmt"/>
            <line falsecount="9" truecount="9" num="606" type="cond"/>
            <line num="607" count="9" type="stmt"/>
            <line num="608" count="9" type="stmt"/>
            <line num="609" count="9" type="stmt"/>
            <line falsecount="9" truecount="321" num="609" type="cond"/>
            <line num="610" count="321" type="stmt"/>
            <line num="614" count="9" type="stmt"/>
            <line num="615" count="9" type="stmt"/>
            <line num="616" count="9" type="stmt"/>
            <line num="617" count="9" type="stmt"/>
            <line num="618" count="9" type="stmt"/>
            <line falsecount="9" truecount="321" num="618" type="cond"/>
            <line num="619" count="321" type="stmt"/>
            <line num="620" count="321" type="stmt"/>
            <line num="621" count="321" type="stmt"/>
            <line num="622" count="321" type="stmt"/>
            <line num="623" count="321" type="stmt"/>
            <line num="627" count="18" type="stmt"/>
            <line num="628" count="18" type="stmt"/>
            <line num="630" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="630" type="cond"/>
            <line num="631" count="0" type="stmt"/>
            <line num="633" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="633" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="18" type="stmt"/>
            <line num="639" count="18" type="stmt"/>
            <line num="640" count="18" type="stmt"/>
            <line num="641" count="18" type="stmt"/>
            <line num="642" count="18" type="stmt"/>
            <line num="643" count="18" type="stmt"/>
            <line num="644" count="18" type="stmt"/>
            <line num="646" count="18" type="stmt"/>
            <line num="648" count="18" type="stmt"/>
            <line falsecount="10" truecount="8" num="648" type="cond"/>
            <line num="649" count="8" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAllocatedMemory() : long" num="653" count="84" type="method"/>
            <line num="654" count="84" type="stmt"/>
            <line num="655" count="84" type="stmt"/>
            <line num="656" count="84" type="stmt"/>
            <line num="657" count="84" type="stmt"/>
            <line num="658" count="84" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADTest.java" name="RandomVariableDifferentiableAADTest.java">
            <metrics coveredelements="134" coveredconditionals="0" complexity="13" loc="313" coveredmethods="13" methods="13" elements="134" classes="1" ncloc="185" statements="121" conditionals="0" coveredstatements="121"/>
            <class name="RandomVariableDifferentiableAADTest">
               <metrics coveredelements="134" complexity="13" methods="13" testruns="13" statements="121" coveredconditionals="0" coveredmethods="13" elements="134" testfailures="0" testduration="0.035" conditionals="0" coveredstatements="121" testpasses="13"/>
            </class>
            <line complexity="1" visibility="public" signature="testSecondOrderDerivative() : void" num="21" testsuccess="true" count="1" testduration="0.028" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorAdd1() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorAdd2() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorSub1() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorSub2() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorMult1() : void" num="146" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorMult2() : void" num="164" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorDiv1() : void" num="187" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorDiv2() : void" num="205" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorExp() : void" num="228" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorLog() : void" num="246" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExpectation() : void" num="264" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariance() : void" num="289" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.randomnumbers">
         <metrics coveredelements="37" complexity="7" loc="68" methods="4" classes="1" statements="27" coveredconditionals="6" coveredmethods="4" elements="37" ncloc="48" files="1" conditionals="6" coveredstatements="27"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/randomnumbers/AcceptanceRejectionRandomNumberGeneratorTest.java" name="AcceptanceRejectionRandomNumberGeneratorTest.java">
            <metrics coveredelements="37" coveredconditionals="6" complexity="7" loc="68" coveredmethods="4" methods="4" elements="37" classes="1" ncloc="48" statements="27" conditionals="6" coveredstatements="27"/>
            <class name="AcceptanceRejectionRandomNumberGeneratorTest">
               <metrics coveredelements="37" complexity="7" methods="4" testruns="1" statements="27" coveredconditionals="6" coveredmethods="4" elements="37" testfailures="0" testduration="1.889" conditionals="6" coveredstatements="27" testpasses="1"/>
            </class>
            <line complexity="4" visibility="public" signature="test() : void" num="20" testsuccess="true" count="1" testduration="1.889" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="24" count="1315530" type="method"/>
            <line num="25" count="1315530" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="28" count="1315530" type="method"/>
            <line num="29" count="1315530" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="32" count="1315530" type="method"/>
            <line num="33" count="1315530" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000000" num="45" type="cond"/>
            <line num="46" count="1000000" type="stmt"/>
            <line num="48" count="1000000" type="stmt"/>
            <line falsecount="500161" truecount="499839" num="48" type="cond"/>
            <line num="50" count="1000000" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="101" num="58" type="cond"/>
            <line num="59" count="101" type="stmt"/>
            <line num="60" count="101" type="stmt"/>
            <line num="61" count="101" type="stmt"/>
            <line num="63" count="101" type="stmt"/>
            <line num="65" count="101" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves">
         <metrics coveredelements="445" complexity="42" loc="1151" methods="26" classes="8" statements="407" coveredconditionals="22" coveredmethods="24" elements="455" ncloc="693" files="8" conditionals="22" coveredstatements="399"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/CalibrationMultiCurveTest.java" name="CalibrationMultiCurveTest.java">
            <metrics coveredelements="166" coveredconditionals="0" complexity="12" loc="308" coveredmethods="10" methods="10" elements="167" classes="1" ncloc="221" statements="157" conditionals="0" coveredstatements="156"/>
            <class name="CalibrationMultiCurveTest">
               <metrics coveredelements="166" complexity="12" methods="10" testruns="1" statements="157" coveredconditionals="0" coveredmethods="10" elements="167" testfailures="0" testduration="5.255" conditionals="0" coveredstatements="156" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testMultiCurveCalibration() : void" num="38" testsuccess="true" count="1" testduration="5.255" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(String) : String" num="51" count="48" type="method"/>
            <line num="53" count="48" type="stmt"/>
            <line num="54" count="32" type="stmt"/>
            <line num="55" count="32" type="stmt"/>
            <line num="56" count="16" type="stmt"/>
            <line num="57" count="16" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="64" count="16" type="method"/>
            <line num="66" count="16" type="stmt"/>
            <line num="67" count="16" type="stmt"/>
            <line num="68" count="16" type="stmt"/>
            <line num="69" count="16" type="stmt"/>
            <line num="70" count="16" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="75" count="20" type="method"/>
            <line num="77" count="20" type="stmt"/>
            <line num="78" count="20" type="stmt"/>
            <line num="79" count="20" type="stmt"/>
            <line num="80" count="20" type="stmt"/>
            <line num="81" count="20" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="86" count="15" type="method"/>
            <line num="88" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="89" count="15" type="method"/>
            <line num="91" count="15" type="stmt"/>
            <line num="92" count="15" type="stmt"/>
            <line num="93" count="15" type="stmt"/>
            <line num="94" count="15" type="stmt"/>
            <line num="95" count="15" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="102" count="16" type="method"/>
            <line num="104" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="105" count="16" type="method"/>
            <line num="107" count="16" type="stmt"/>
            <line num="109" count="16" type="stmt"/>
            <line num="110" count="16" type="stmt"/>
            <line num="111" count="16" type="stmt"/>
            <line num="112" count="16" type="stmt"/>
            <line num="113" count="16" type="stmt"/>
            <line num="114" count="16" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="121" count="16" type="method"/>
            <line num="123" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="124" count="16" type="method"/>
            <line num="126" count="16" type="stmt"/>
            <line num="127" count="16" type="stmt"/>
            <line num="129" count="16" type="stmt"/>
            <line num="130" count="16" type="stmt"/>
            <line num="132" count="16" type="stmt"/>
            <line num="133" count="16" type="stmt"/>
            <line num="134" count="16" type="stmt"/>
            <line num="136" count="16" type="stmt"/>
            <line num="137" count="16" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="83" type="stmt"/>
            <line num="286" count="83" type="stmt"/>
            <line num="287" count="83" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/CalibrationTest.java" name="CalibrationTest.java">
            <metrics coveredelements="75" coveredconditionals="4" complexity="7" loc="249" coveredmethods="4" methods="5" elements="79" classes="1" ncloc="141" statements="70" conditionals="4" coveredstatements="67"/>
            <class name="CalibrationTest">
               <metrics coveredelements="75" complexity="7" methods="5" testruns="12" statements="70" coveredconditionals="4" coveredmethods="4" elements="79" testfailures="0" testduration="0.5890000000000001" conditionals="4" coveredstatements="67" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationTest(InterpolationMethod)" num="45" count="12" type="method"/>
            <line num="47" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="56" count="2" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardCurveFromDiscountCurve() : void" num="83" count="6" type="method"/>
            <line num="90" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
            <line num="104" count="6" type="stmt"/>
            <line num="106" count="6" type="stmt"/>
            <line num="107" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="111" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="119" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurvesAndCalibration() : void" num="122" count="6" type="method"/>
            <line num="131" count="6" type="stmt"/>
            <line num="134" count="6" type="stmt"/>
            <line num="144" count="6" type="stmt"/>
            <line num="151" count="6" type="stmt"/>
            <line num="153" count="6" type="stmt"/>
            <line num="154" count="6" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line num="168" count="6" type="stmt"/>
            <line num="169" count="6" type="stmt"/>
            <line num="170" count="6" type="stmt"/>
            <line num="178" count="6" type="stmt"/>
            <line num="179" count="6" type="stmt"/>
            <line num="180" count="6" type="stmt"/>
            <line num="181" count="6" type="stmt"/>
            <line falsecount="6" truecount="24" num="181" type="cond"/>
            <line num="182" count="24" type="stmt"/>
            <line num="183" count="24" type="stmt"/>
            <line num="184" count="24" type="stmt"/>
            <line num="186" count="24" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line num="189" count="6" type="stmt"/>
            <line num="191" count="6" type="stmt"/>
            <line num="201" count="6" type="stmt"/>
            <line num="204" count="6" type="stmt"/>
            <line num="206" count="6" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="213" count="6" type="stmt"/>
            <line num="214" count="6" type="stmt"/>
            <line num="215" count="6" type="stmt"/>
            <line num="216" count="6" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line num="220" count="6" type="stmt"/>
            <line num="223" count="6" type="stmt"/>
            <line num="224" count="6" type="stmt"/>
            <line num="225" count="6" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="227" count="6" type="stmt"/>
            <line num="235" count="6" type="stmt"/>
            <line num="236" count="6" type="stmt"/>
            <line num="237" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="237" type="cond"/>
            <line num="238" count="30" type="stmt"/>
            <line num="239" count="30" type="stmt"/>
            <line num="240" count="30" type="stmt"/>
            <line num="242" count="30" type="stmt"/>
            <line num="244" count="6" type="stmt"/>
            <line num="245" count="6" type="stmt"/>
            <line num="247" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/CurveTest.java" name="CurveTest.java">
            <metrics coveredelements="37" coveredconditionals="6" complexity="7" loc="130" coveredmethods="2" methods="3" elements="40" classes="1" ncloc="62" statements="31" conditionals="6" coveredstatements="29"/>
            <class name="CurveTest">
               <metrics coveredelements="37" complexity="7" methods="3" testruns="1" statements="31" coveredconditionals="6" coveredmethods="2" elements="40" testfailures="0" testduration="0.046" conditionals="6" coveredstatements="29" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurveFitting() : void" num="45" testsuccess="true" count="1" testduration="0.046" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="90" count="25" type="method"/>
            <line num="93" count="25" type="stmt"/>
            <line num="94" count="25" type="stmt"/>
            <line num="95" count="25" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="25" type="stmt"/>
            <line falsecount="25" truecount="175" num="100" type="cond"/>
            <line num="101" count="175" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line falsecount="1" truecount="71" num="112" type="cond"/>
            <line num="113" count="71" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line falsecount="1" truecount="7" num="118" type="cond"/>
            <line num="119" count="7" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/DiscountCurveNelsonSiegelSvenssonTest.java" name="DiscountCurveNelsonSiegelSvenssonTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="23" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="15" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="DiscountCurveNelsonSiegelSvenssonTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="11" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/DiscountCurveSerializationTest.java" name="DiscountCurveSerializationTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="4" loc="80" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="41" statements="20" conditionals="2" coveredstatements="18"/>
            <class name="DiscountCurveSerializationTest">
               <metrics coveredelements="21" complexity="4" methods="1" testruns="1" statements="20" coveredconditionals="2" coveredmethods="1" elements="23" testfailures="0" testduration="0.057" conditionals="2" coveredstatements="18" testpasses="1"/>
            </class>
            <line complexity="4" visibility="public" signature="test() : void" num="29" testsuccess="true" count="1" testduration="0.057" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line falsecount="1" truecount="101" num="75" type="cond"/>
            <line num="76" count="101" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/ForwardCurveNelsonSiegelSvenssonTest.java" name="ForwardCurveNelsonSiegelSvenssonTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="1" loc="49" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="29" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ForwardCurveNelsonSiegelSvenssonTest">
               <metrics coveredelements="14" complexity="1" methods="1" testruns="1" statements="13" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="13" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/NelsonSiegelSvenssonBondCalibrationTest.java" name="NelsonSiegelSvenssonBondCalibrationTest.java">
            <metrics coveredelements="59" coveredconditionals="8" complexity="7" loc="155" coveredmethods="3" methods="3" elements="59" classes="1" ncloc="90" statements="48" conditionals="8" coveredstatements="48"/>
            <class name="NelsonSiegelSvenssonBondCalibrationTest">
               <metrics coveredelements="59" complexity="7" methods="3" testruns="1" statements="48" coveredconditionals="8" coveredmethods="3" elements="59" testfailures="0" testduration="0.221" conditionals="8" coveredstatements="48" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="testBondNSSCurveCalibration() : void" num="43" testsuccess="true" count="1" testduration="0.221" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="53" type="cond"/>
            <line num="54" count="11" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="67" type="cond"/>
            <line num="68" count="11" type="stmt"/>
            <line num="69" count="11" type="stmt"/>
            <line num="71" count="11" type="stmt"/>
            <line complexity="3" visibility="private" signature="calibrateNSSCurve(Map&lt;String, Object&gt;) : double[]" num="85" count="1" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="103" type="cond"/>
            <line num="104" count="11" type="stmt"/>
            <line num="106" count="11" type="stmt"/>
            <line num="107" count="11" type="stmt"/>
            <line num="108" count="11" type="stmt"/>
            <line num="110" count="11" type="stmt"/>
            <line num="112" count="11" type="stmt"/>
            <line num="113" count="11" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="131" type="cond"/>
            <line num="132" count="11" type="stmt"/>
            <line num="133" count="11" type="stmt"/>
            <line num="134" count="11" type="stmt"/>
            <line num="135" count="11" type="stmt"/>
            <line num="137" count="11" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getYieldToMaturity(double,double,double,double) : double" num="152" count="11" type="method"/>
            <line num="153" count="11" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/curves/NelsonSiegelSvenssonCalibrationTest.java" name="NelsonSiegelSvenssonCalibrationTest.java">
            <metrics coveredelements="67" coveredconditionals="2" complexity="3" loc="157" coveredmethods="2" methods="2" elements="67" classes="1" ncloc="94" statements="63" conditionals="2" coveredstatements="63"/>
            <class name="NelsonSiegelSvenssonCalibrationTest">
               <metrics coveredelements="67" complexity="3" methods="2" testruns="1" statements="63" coveredconditionals="2" coveredmethods="2" elements="67" testfailures="0" testduration="0.567" conditionals="2" coveredstatements="63" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="calibrateNSSCurve(Map&lt;String, Object&gt;) : double[]" num="37" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line falsecount="1" truecount="21" num="80" type="cond"/>
            <line num="82" count="21" type="stmt"/>
            <line num="83" count="21" type="stmt"/>
            <line num="85" count="21" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="21" type="stmt"/>
            <line num="114" count="21" type="stmt"/>
            <line num="115" count="21" type="stmt"/>
            <line num="116" count="21" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCalibration() : void" num="131" testsuccess="true" count="1" testduration="0.567" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.components">
         <metrics coveredelements="108" complexity="8" loc="329" methods="4" classes="2" statements="96" coveredconditionals="8" coveredmethods="4" elements="108" ncloc="205" files="2" conditionals="8" coveredstatements="96"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/components/ExposureTest.java" name="ExposureTest.java">
            <metrics coveredelements="85" coveredconditionals="8" complexity="7" loc="271" coveredmethods="3" methods="3" elements="85" classes="1" ncloc="169" statements="74" conditionals="8" coveredstatements="74"/>
            <class name="ExposureTest">
               <metrics coveredelements="85" complexity="7" methods="3" testruns="2" statements="74" coveredconditionals="8" coveredmethods="3" elements="85" testfailures="0" testduration="420.73699999999997" conditionals="8" coveredstatements="74" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testExpectedPositiveExposure() : void" num="59" testsuccess="true" count="1" testduration="211.422" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="121" type="stmt"/>
            <line falsecount="120" truecount="1" num="102" type="cond"/>
            <line num="103" count="1" type="stmt"/>
            <line num="109" count="120" type="stmt"/>
            <line num="110" count="120" type="stmt"/>
            <line num="111" count="120" type="stmt"/>
            <line num="113" count="120" type="stmt"/>
            <line num="114" count="120" type="stmt"/>
            <line num="115" count="120" type="stmt"/>
            <line num="117" count="120" type="stmt"/>
            <line num="119" count="120" type="stmt"/>
            <line num="120" count="120" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAgainstSwaption() : void" num="125" testsuccess="true" count="1" testduration="209.315" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="150" count="121" type="stmt"/>
            <line num="151" count="121" type="stmt"/>
            <line num="152" count="121" type="stmt"/>
            <line num="154" count="121" type="stmt"/>
            <line num="155" count="121" type="stmt"/>
            <line num="156" count="121" type="stmt"/>
            <line num="161" count="121" type="stmt"/>
            <line num="162" count="121" type="stmt"/>
            <line num="163" count="121" type="stmt"/>
            <line num="165" count="121" type="stmt"/>
            <line num="167" count="121" type="stmt"/>
            <line num="168" count="121" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="172" count="2" type="method"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line falsecount="2" truecount="240" num="209" type="cond"/>
            <line num="210" count="240" type="stmt"/>
            <line falsecount="240" truecount="19200" num="210" type="cond"/>
            <line num="212" count="19200" type="stmt"/>
            <line num="213" count="19200" type="stmt"/>
            <line num="214" count="19200" type="stmt"/>
            <line num="216" count="19200" type="stmt"/>
            <line num="217" count="19200" type="stmt"/>
            <line falsecount="11880" truecount="7320" num="217" type="cond"/>
            <line num="218" count="7320" type="stmt"/>
            <line num="220" count="11880" type="stmt"/>
            <line num="224" count="19200" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="251" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/components/FundingCapacityTest.java" name="FundingCapacityTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="1" loc="58" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="36" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="FundingCapacityTest">
               <metrics coveredelements="23" complexity="1" methods="1" testruns="1" statements="22" coveredconditionals="0" coveredmethods="1" elements="23" testfailures="0" testduration="0.022" conditionals="0" coveredstatements="22" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="20" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products">
         <metrics coveredelements="21" complexity="3" loc="64" methods="1" classes="1" statements="16" coveredconditionals="4" coveredmethods="1" elements="21" ncloc="38" files="1" conditionals="4" coveredstatements="16"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/fouriermethod/products/TestCarrMadan.java" name="TestCarrMadan.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="3" loc="64" coveredmethods="1" methods="1" elements="21" classes="1" ncloc="38" statements="16" conditionals="4" coveredstatements="16"/>
            <class name="TestCarrMadan">
               <metrics coveredelements="21" complexity="3" methods="1" testruns="1" statements="16" coveredconditionals="4" coveredmethods="1" elements="21" testfailures="0" testduration="0.088" conditionals="4" coveredstatements="16" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.088" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="36" type="cond"/>
            <line num="37" count="20" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="54" type="cond"/>
            <line num="55" count="20" type="stmt"/>
            <line num="56" count="20" type="stmt"/>
            <line num="57" count="20" type="stmt"/>
            <line num="58" count="20" type="stmt"/>
            <line num="59" count="20" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.productfactory">
         <metrics coveredelements="51" complexity="4" loc="259" methods="4" classes="1" statements="47" coveredconditionals="0" coveredmethods="4" elements="51" ncloc="101" files="1" conditionals="0" coveredstatements="47"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/productfactory/ModelWithProductFactoryTest.java" name="ModelWithProductFactoryTest.java">
            <metrics coveredelements="51" coveredconditionals="0" complexity="4" loc="259" coveredmethods="4" methods="4" elements="51" classes="1" ncloc="101" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="ModelWithProductFactoryTest">
               <metrics coveredelements="51" complexity="4" methods="4" testruns="2" statements="47" coveredconditionals="0" coveredmethods="4" elements="51" testfailures="0" testduration="16.122999999999998" conditionals="0" coveredstatements="47" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="bsTest() : void" num="58" testsuccess="true" count="1" testduration="6.27" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hTest() : void" num="159" testsuccess="true" count="1" testduration="9.853" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="234" count="4" type="method"/>
            <line num="235" count="4" type="stmt"/>
            <line num="236" count="4" type="stmt"/>
            <line num="237" count="4" type="stmt"/>
            <line num="238" count="4" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
            <line num="240" count="4" type="stmt"/>
            <line num="241" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="254" count="2" type="method"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.cds">
         <metrics coveredelements="184" complexity="13" loc="324" methods="1" classes="1" statements="165" coveredconditionals="21" coveredmethods="1" elements="190" ncloc="227" files="1" conditionals="24" coveredstatements="162"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/cds/CDSTest.java" name="CDSTest.java">
            <metrics coveredelements="184" coveredconditionals="21" complexity="13" loc="324" coveredmethods="1" methods="1" elements="190" classes="1" ncloc="227" statements="165" conditionals="24" coveredstatements="162"/>
            <class name="CDSTest">
               <metrics coveredelements="184" complexity="13" methods="1" testruns="1" statements="165" coveredconditionals="21" coveredmethods="1" elements="190" testfailures="0" testduration="0.209" conditionals="24" coveredstatements="162" testpasses="1"/>
            </class>
            <line complexity="13" visibility="public" signature="testCDS() : void" num="33" testsuccess="true" count="1" testduration="0.209" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="174" type="cond"/>
            <line num="175" count="5" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="189" type="cond"/>
            <line num="190" count="5" type="stmt"/>
            <line num="191" count="5" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="205" type="cond"/>
            <line num="206" count="5" type="stmt"/>
            <line num="207" count="5" type="stmt"/>
            <line num="209" count="5" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="212" type="cond"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="225" type="cond"/>
            <line num="226" count="5" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="240" type="cond"/>
            <line num="241" count="5" type="stmt"/>
            <line num="242" count="5" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="256" type="cond"/>
            <line num="257" count="5" type="stmt"/>
            <line num="258" count="5" type="stmt"/>
            <line num="260" count="5" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="263" type="cond"/>
            <line num="264" count="1" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="276" type="cond"/>
            <line num="277" count="5" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="291" type="cond"/>
            <line num="292" count="5" type="stmt"/>
            <line num="293" count="5" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="307" type="cond"/>
            <line num="308" count="5" type="stmt"/>
            <line num="309" count="5" type="stmt"/>
            <line num="311" count="5" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="314" type="cond"/>
            <line num="315" count="1" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.data">
         <metrics coveredelements="187" complexity="52" loc="397" methods="2" classes="1" statements="231" coveredconditionals="4" coveredmethods="2" elements="237" ncloc="358" files="1" conditionals="4" coveredstatements="181"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/data/DataTablesTest.java" name="DataTablesTest.java">
            <metrics coveredelements="187" coveredconditionals="4" complexity="52" loc="397" coveredmethods="2" methods="2" elements="237" classes="1" ncloc="358" statements="231" conditionals="4" coveredstatements="181"/>
            <class name="DataTablesTest">
               <metrics coveredelements="187" complexity="52" methods="2" testruns="1" statements="231" coveredconditionals="4" coveredmethods="2" elements="237" testfailures="0" testduration="0.212" conditionals="4" coveredstatements="181" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="setupTableValues() : void" num="36" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="43" type="cond"/>
            <line num="44" count="10" type="stmt"/>
            <line falsecount="10" truecount="160" num="44" type="cond"/>
            <line num="45" count="160" type="stmt"/>
            <line num="46" count="160" type="stmt"/>
            <line num="47" count="160" type="stmt"/>
            <line complexity="49" visibility="public" signature="testTables() : void" num="52" testsuccess="true" count="1" testduration="0.212" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.interpolation">
         <metrics coveredelements="23" complexity="5" loc="45" methods="1" classes="1" statements="14" coveredconditionals="8" coveredmethods="1" elements="23" ncloc="26" files="1" conditionals="8" coveredstatements="14"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/interpolation/BiLinearInterpolationTest.java" name="BiLinearInterpolationTest.java">
            <metrics coveredelements="23" coveredconditionals="8" complexity="5" loc="45" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="26" statements="14" conditionals="8" coveredstatements="14"/>
            <class name="BiLinearInterpolationTest">
               <metrics coveredelements="23" complexity="5" methods="1" testruns="1" statements="14" coveredconditionals="8" coveredmethods="1" elements="23" testfailures="0" testduration="0.108" conditionals="8" coveredstatements="14" testpasses="1"/>
            </class>
            <line complexity="5" visibility="public" signature="test() : void" num="16" testsuccess="true" count="1" testduration="0.108" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="25" type="cond"/>
            <line num="26" count="3" type="stmt"/>
            <line falsecount="3" truecount="9" num="26" type="cond"/>
            <line num="27" count="9" type="stmt"/>
            <line num="28" count="9" type="stmt"/>
            <line num="29" count="9" type="stmt"/>
            <line num="30" count="9" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line falsecount="1" truecount="51" num="37" type="cond"/>
            <line num="38" count="51" type="stmt"/>
            <line falsecount="51" truecount="4131" num="38" type="cond"/>
            <line num="39" count="4131" type="stmt"/>
            <line num="40" count="4131" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.calibration">
         <metrics coveredelements="341" complexity="145" loc="1180" methods="24" classes="4" statements="531" coveredconditionals="11" coveredmethods="18" elements="631" ncloc="950" files="4" conditionals="76" coveredstatements="312"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/calibration/SABRCubeCalibrationTest.java" name="SABRCubeCalibrationTest.java">
            <metrics coveredelements="71" coveredconditionals="1" complexity="50" loc="343" coveredmethods="4" methods="6" elements="200" classes="1" ncloc="288" statements="162" conditionals="32" coveredstatements="66"/>
            <class name="SABRCubeCalibrationTest">
               <metrics coveredelements="71" complexity="50" methods="6" testruns="1" statements="162" coveredconditionals="1" coveredmethods="4" elements="200" testfailures="0" testduration="375.999" conditionals="32" coveredstatements="66" testpasses="1"/>
            </class>
            <line complexity="13" visibility="public" signature="SABRCubeCalibrationTest()" num="85" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSABRCubeCalibration() : void" num="125" testsuccess="true" count="1" testduration="375.999" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="5" type="stmt"/>
            <line num="157" count="25" type="stmt"/>
            <line num="158" count="125" type="stmt"/>
            <line num="159" count="125" type="stmt"/>
            <line num="161" count="125" type="stmt"/>
            <line num="162" count="125" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="5" type="stmt"/>
            <line num="170" count="25" type="stmt"/>
            <line num="171" count="124" type="stmt"/>
            <line num="172" count="124" type="stmt"/>
            <line num="174" count="124" type="stmt"/>
            <line num="175" count="124" type="stmt"/>
            <line complexity="14" visibility="public" signature="main(String[]) : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="241" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="319" count="125" type="method"/>
            <line num="321" count="125" type="stmt"/>
            <line num="322" count="125" type="stmt"/>
            <line num="323" count="125" type="stmt"/>
            <line num="324" count="125" type="stmt"/>
            <line num="326" count="125" type="stmt"/>
            <line num="328" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="331" count="124" type="method"/>
            <line num="333" count="124" type="stmt"/>
            <line num="334" count="124" type="stmt"/>
            <line num="335" count="124" type="stmt"/>
            <line num="336" count="124" type="stmt"/>
            <line num="338" count="124" type="stmt"/>
            <line num="340" count="124" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/calibration/SABRCubeParallelCalibrationTest.java" name="SABRCubeParallelCalibrationTest.java">
            <metrics coveredelements="67" coveredconditionals="0" complexity="36" loc="279" coveredmethods="4" methods="6" elements="145" classes="1" ncloc="214" statements="123" conditionals="16" coveredstatements="63"/>
            <class name="SABRCubeParallelCalibrationTest">
               <metrics coveredelements="67" complexity="36" methods="6" testruns="1" statements="123" coveredconditionals="0" coveredmethods="4" elements="145" testfailures="0" testduration="22.094" conditionals="16" coveredstatements="63" testpasses="1"/>
            </class>
            <line complexity="13" visibility="public" signature="SABRCubeParallelCalibrationTest()" num="67" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCalibration() : void" num="106" testsuccess="true" count="1" testduration="22.094" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="5" type="stmt"/>
            <line num="146" count="25" type="stmt"/>
            <line num="147" count="125" type="stmt"/>
            <line num="148" count="125" type="stmt"/>
            <line num="150" count="125" type="stmt"/>
            <line num="151" count="125" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="5" type="stmt"/>
            <line num="159" count="25" type="stmt"/>
            <line num="160" count="124" type="stmt"/>
            <line num="161" count="124" type="stmt"/>
            <line num="163" count="124" type="stmt"/>
            <line num="164" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="255" count="125" type="method"/>
            <line num="257" count="125" type="stmt"/>
            <line num="258" count="125" type="stmt"/>
            <line num="259" count="125" type="stmt"/>
            <line num="260" count="125" type="stmt"/>
            <line num="262" count="125" type="stmt"/>
            <line num="264" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="267" count="124" type="method"/>
            <line num="269" count="124" type="stmt"/>
            <line num="270" count="124" type="stmt"/>
            <line num="271" count="124" type="stmt"/>
            <line num="272" count="124" type="stmt"/>
            <line num="274" count="124" type="stmt"/>
            <line num="276" count="124" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/calibration/SABRShiftedSmileCalibrationTest.java" name="SABRShiftedSmileCalibrationTest.java">
            <metrics coveredelements="138" coveredconditionals="10" complexity="25" loc="301" coveredmethods="6" methods="6" elements="143" classes="1" ncloc="238" statements="125" conditionals="12" coveredstatements="122"/>
            <class name="SABRShiftedSmileCalibrationTest">
               <metrics coveredelements="138" complexity="25" methods="6" testruns="2" statements="125" coveredconditionals="10" coveredmethods="6" elements="143" testfailures="0" testduration="3.928" conditionals="12" coveredstatements="122" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="78" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCalibration() : void" num="119" testsuccess="true" count="1" testduration="3.844" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="5" type="stmt"/>
            <line num="150" count="25" type="stmt"/>
            <line num="151" count="125" type="stmt"/>
            <line num="152" count="125" type="stmt"/>
            <line num="154" count="125" type="stmt"/>
            <line num="155" count="125" type="stmt"/>
            <line num="156" count="125" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="5" type="stmt"/>
            <line num="164" count="25" type="stmt"/>
            <line num="165" count="124" type="stmt"/>
            <line num="166" count="124" type="stmt"/>
            <line num="168" count="124" type="stmt"/>
            <line num="169" count="124" type="stmt"/>
            <line num="170" count="124" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line falsecount="1" truecount="125" num="176" type="cond"/>
            <line num="177" count="125" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line falsecount="1" truecount="124" num="179" type="cond"/>
            <line num="180" count="124" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSingleSmile() : void" num="184" testsuccess="true" count="1" testduration="0.084" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="203" type="cond"/>
            <line num="204" count="9" type="stmt"/>
            <line num="205" count="9" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="221" count="363" type="method"/>
            <line num="225" count="363" type="stmt"/>
            <line num="226" count="363" type="stmt"/>
            <line num="227" count="363" type="stmt"/>
            <line num="229" count="363" type="stmt"/>
            <line falsecount="363" truecount="3264" num="229" type="cond"/>
            <line num="230" count="3266" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="255" type="cond"/>
            <line num="256" count="9" type="stmt"/>
            <line num="257" count="9" type="stmt"/>
            <line num="266" count="9" type="stmt"/>
            <line num="267" count="9" type="stmt"/>
            <line num="268" count="9" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="273" type="cond"/>
            <line num="274" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="278" count="125" type="method"/>
            <line num="280" count="125" type="stmt"/>
            <line num="281" count="125" type="stmt"/>
            <line num="282" count="125" type="stmt"/>
            <line num="283" count="125" type="stmt"/>
            <line num="285" count="125" type="stmt"/>
            <line num="287" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="290" count="124" type="method"/>
            <line num="292" count="124" type="stmt"/>
            <line num="293" count="124" type="stmt"/>
            <line num="294" count="124" type="stmt"/>
            <line num="295" count="124" type="stmt"/>
            <line num="297" count="124" type="stmt"/>
            <line num="299" count="124" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/calibration/StaticCubeCalibrationTest.java" name="StaticCubeCalibrationTest.java">
            <metrics coveredelements="65" coveredconditionals="0" complexity="34" loc="257" coveredmethods="4" methods="6" elements="143" classes="1" ncloc="210" statements="121" conditionals="16" coveredstatements="61"/>
            <class name="StaticCubeCalibrationTest">
               <metrics coveredelements="65" complexity="34" methods="6" testruns="1" statements="121" coveredconditionals="0" coveredmethods="4" elements="143" testfailures="0" testduration="6.269" conditionals="16" coveredstatements="61" testpasses="1"/>
            </class>
            <line complexity="11" visibility="public" signature="StaticCubeCalibrationTest()" num="62" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStaticCubeCalibration() : void" num="100" testsuccess="true" count="1" testduration="6.269" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="5" type="stmt"/>
            <line num="125" count="25" type="stmt"/>
            <line num="126" count="125" type="stmt"/>
            <line num="127" count="125" type="stmt"/>
            <line num="129" count="125" type="stmt"/>
            <line num="130" count="125" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="5" type="stmt"/>
            <line num="138" count="25" type="stmt"/>
            <line num="139" count="124" type="stmt"/>
            <line num="140" count="124" type="stmt"/>
            <line num="142" count="124" type="stmt"/>
            <line num="143" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="233" count="125" type="method"/>
            <line num="235" count="125" type="stmt"/>
            <line num="236" count="125" type="stmt"/>
            <line num="237" count="125" type="stmt"/>
            <line num="238" count="125" type="stmt"/>
            <line num="240" count="125" type="stmt"/>
            <line num="242" count="125" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="245" count="124" type="method"/>
            <line num="247" count="124" type="stmt"/>
            <line num="248" count="124" type="stmt"/>
            <line num="249" count="124" type="stmt"/>
            <line num="250" count="124" type="stmt"/>
            <line num="252" count="124" type="stmt"/>
            <line num="254" count="124" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.businessdaycalendar">
         <metrics coveredelements="84" complexity="5" loc="174" methods="5" classes="1" statements="79" coveredconditionals="0" coveredmethods="5" elements="84" ncloc="107" files="1" conditionals="0" coveredstatements="79"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarTest.java" name="BusinessdayCalendarTest.java">
            <metrics coveredelements="84" coveredconditionals="0" complexity="5" loc="174" coveredmethods="5" methods="5" elements="84" classes="1" ncloc="107" statements="79" conditionals="0" coveredstatements="79"/>
            <class name="BusinessdayCalendarTest">
               <metrics coveredelements="84" complexity="5" methods="5" testruns="5" statements="79" coveredconditionals="0" coveredmethods="5" elements="84" testfailures="0" testduration="0.11199999999999999" conditionals="0" coveredstatements="79" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testCreateDateFromDateAndOffsetCode() : void" num="19" testsuccess="true" count="1" testduration="0.042" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="5" type="stmt"/>
            <line num="28" count="5" type="stmt"/>
            <line num="29" count="5" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="12" type="stmt"/>
            <line num="35" count="12" type="stmt"/>
            <line num="36" count="12" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="12" type="stmt"/>
            <line num="42" count="12" type="stmt"/>
            <line num="43" count="12" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="12" type="stmt"/>
            <line num="50" count="12" type="stmt"/>
            <line num="51" count="12" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="12" type="stmt"/>
            <line num="57" count="12" type="stmt"/>
            <line num="58" count="12" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line num="65" count="12" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line num="73" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCombinedCalendar() : void" num="80" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTargetCalendar() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNycCalendar() : void" num="144" testsuccess="true" count="1" testduration="0.051" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLondonCalendar() : void" num="161" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.bond">
         <metrics coveredelements="0" complexity="15" loc="264" methods="7" classes="2" statements="73" coveredconditionals="0" coveredmethods="0" elements="94" ncloc="177" files="2" conditionals="14" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/bond/AccruedInterestTest.java" name="AccruedInterestTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="83" coveredmethods="0" methods="3" elements="31" classes="1" ncloc="66" statements="22" conditionals="6" coveredstatements="0"/>
            <class name="AccruedInterestTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="31" statements="22" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="private" signature="getPeriodIndex(LocalDate) : int" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAccruedInterest(LocalDate) : double" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/bond/BondValuationTest.java" name="BondValuationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="181" coveredmethods="0" methods="4" elements="63" classes="1" ncloc="111" statements="51" conditionals="8" coveredstatements="0"/>
            <class name="BondValuationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="63" statements="51" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BondValuationTest(InterpolationMethod)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testImplementation() : void" num="83" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="177" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate">
         <metrics coveredelements="139" complexity="17" loc="382" methods="9" classes="2" statements="130" coveredconditionals="6" coveredmethods="9" elements="147" ncloc="237" files="2" conditionals="8" coveredstatements="124"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/hybridassetinterestrate/CrossCurrencyLIBORMarketModelFromModelsTest.java" name="CrossCurrencyLIBORMarketModelFromModelsTest.java">
            <metrics coveredelements="118" coveredconditionals="4" complexity="15" loc="329" coveredmethods="8" methods="8" elements="126" classes="1" ncloc="199" statements="112" conditionals="6" coveredstatements="106"/>
            <class name="CrossCurrencyLIBORMarketModelFromModelsTest">
               <metrics coveredelements="118" complexity="15" methods="8" testruns="4" statements="112" coveredconditionals="4" coveredmethods="8" elements="126" testfailures="0" testduration="764.134" conditionals="6" coveredstatements="106" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testProperties() : void" num="45" testsuccess="true" count="1" testduration="124.853" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignBond() : void" num="68" testsuccess="true" count="1" testduration="219.868" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignFRA() : void" num="94" testsuccess="true" count="1" testduration="211.032" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignCaplet() : void" num="117" testsuccess="true" count="1" testduration="208.381" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="8" visibility="private" signature="getModel(String[]) : CrossCurrencyLIBORMarketModelFromModels" num="156" count="7" type="method"/>
            <line num="164" count="7" type="stmt"/>
            <line num="165" count="7" type="stmt"/>
            <line num="167" count="7" type="stmt"/>
            <line num="172" count="7" type="stmt"/>
            <line num="173" count="7" type="stmt"/>
            <line num="174" count="7" type="stmt"/>
            <line num="175" count="7" type="stmt"/>
            <line num="177" count="7" type="stmt"/>
            <line num="178" count="7" type="stmt"/>
            <line num="183" count="7" type="stmt"/>
            <line num="189" count="7" type="stmt"/>
            <line num="190" count="7" type="stmt"/>
            <line num="192" count="7" type="stmt"/>
            <line falsecount="3" truecount="4" num="192" type="cond"/>
            <line num="193" count="4" type="stmt"/>
            <line num="194" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="197" count="4" type="stmt"/>
            <line num="198" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="207" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="219" type="cond"/>
            <line num="220" count="3" type="stmt"/>
            <line num="222" count="3" type="stmt"/>
            <line num="223" count="3" type="stmt"/>
            <line num="225" count="3" type="stmt"/>
            <line num="227" count="3" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFxMartingaleModel(double,IndependentIncrements) : MonteCarloProcessFromProcessModel" num="237" count="7" type="method"/>
            <line num="238" count="7" type="stmt"/>
            <line num="239" count="7" type="stmt"/>
            <line num="241" count="7" type="stmt"/>
            <line num="244" count="7" type="stmt"/>
            <line num="246" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="getInterestRateModel(double,IndependentIncrements,MonteCarloProcess,Map&lt;Integer, Integer&gt;) : LIBORMonteCarloSimulationFromLIBORModel" num="249" count="11" type="method"/>
            <line num="250" count="11" type="stmt"/>
            <line num="252" count="11" type="stmt"/>
            <line num="253" count="11" type="stmt"/>
            <line num="254" count="11" type="stmt"/>
            <line num="258" count="11" type="stmt"/>
            <line num="259" count="11" type="stmt"/>
            <line num="260" count="11" type="stmt"/>
            <line num="263" count="11" type="stmt"/>
            <line num="273" count="11" type="stmt"/>
            <line num="274" count="11" type="stmt"/>
            <line num="279" count="11" type="stmt"/>
            <line num="287" count="11" type="stmt"/>
            <line num="294" count="11" type="stmt"/>
            <line num="297" count="11" type="stmt"/>
            <line num="300" count="11" type="stmt"/>
            <line num="303" count="11" type="stmt"/>
            <line num="308" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="316" count="440" type="method"/>
            <line num="318" count="440" type="stmt"/>
            <line num="319" count="440" type="stmt"/>
            <line num="323" count="11" type="stmt"/>
            <line num="325" count="11" type="stmt"/>
            <line num="327" count="11" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulationFromModelsTest.java" name="HybridAssetLIBORModelMonteCarloSimulationFromModelsTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="2" loc="53" coveredmethods="1" methods="1" elements="21" classes="1" ncloc="38" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulationFromModelsTest">
               <metrics coveredelements="21" complexity="2" methods="1" testruns="1" statements="18" coveredconditionals="2" coveredmethods="1" elements="21" testfailures="0" testduration="20.211" conditionals="2" coveredstatements="18" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="20" testsuccess="true" count="1" testduration="20.211" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line falsecount="1" truecount="901" num="44" type="cond"/>
            <line num="45" count="901" type="stmt"/>
            <line num="47" count="901" type="stmt"/>
            <line num="48" count="901" type="stmt"/>
            <line num="50" count="901" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.integration">
         <metrics coveredelements="122" complexity="23" loc="334" methods="20" classes="4" statements="105" coveredconditionals="0" coveredmethods="20" elements="125" ncloc="222" files="4" conditionals="0" coveredstatements="102"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/integration/MonteCarloIntegratorTest.java" name="MonteCarloIntegratorTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="7" loc="97" coveredmethods="7" methods="7" elements="33" classes="1" ncloc="63" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="MonteCarloIntegratorTest">
               <metrics coveredelements="33" complexity="7" methods="7" testruns="2" statements="26" coveredconditionals="0" coveredmethods="7" elements="33" testfailures="0" testduration="0.31" conditionals="0" coveredstatements="26" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCos() : void" num="34" testsuccess="true" count="1" testduration="0.197" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="38" count="2000000" type="method"/>
            <line num="40" count="2000000" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="44" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCubic() : void" num="67" testsuccess="true" count="1" testduration="0.113" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="71" count="2000000" type="method"/>
            <line num="73" count="2000000" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="77" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/integration/PiecewiseContantDoubleUnaryOperatorTest.java" name="PiecewiseContantDoubleUnaryOperatorTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="8" loc="108" coveredmethods="5" methods="5" elements="53" classes="1" ncloc="84" statements="48" conditionals="0" coveredstatements="45"/>
            <class name="PiecewiseContantDoubleUnaryOperatorTest">
               <metrics coveredelements="50" complexity="8" methods="5" testruns="5" statements="48" coveredconditionals="0" coveredmethods="5" elements="53" testfailures="0" testduration="0.015000000000000001" conditionals="0" coveredstatements="45" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testValuation() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegral() : void" num="26" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegralOfSquares() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegralErrorCorrection() : void" num="61" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testExceptions() : void" num="72" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/integration/SimpsonRealIntegratorTest.java" name="SimpsonRealIntegratorTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="7" loc="86" coveredmethods="7" methods="7" elements="29" classes="1" ncloc="55" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="SimpsonRealIntegratorTest">
               <metrics coveredelements="29" complexity="7" methods="7" testruns="2" statements="22" coveredconditionals="0" coveredmethods="7" elements="29" testfailures="0" testduration="0.013999999999999999" conditionals="0" coveredstatements="22" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCos() : void" num="33" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="37" count="99" type="method"/>
            <line num="39" count="99" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="43" count="2" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCubic() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="64" count="99" type="method"/>
            <line num="66" count="99" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="70" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/integration/TrapezoidalRealIntegratorTest.java" name="TrapezoidalRealIntegratorTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="20" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TrapezoidalRealIntegratorTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.029" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="22" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward.alternative">
         <metrics coveredelements="0" complexity="2" loc="43" methods="1" classes="1" statements="15" coveredconditionals="0" coveredmethods="0" elements="18" ncloc="22" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariableTest.java" name="RandomVariableUniqueVariableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="43" coveredmethods="0" methods="1" elements="18" classes="1" ncloc="22" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="18" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling">
         <metrics coveredelements="72" complexity="6" loc="230" methods="3" classes="1" statements="63" coveredconditionals="6" coveredmethods="3" elements="72" ncloc="140" files="1" conditionals="6" coveredstatements="63"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/LIBORMarketModelHierarchyTest.java" name="LIBORMarketModelHierarchyTest.java">
            <metrics coveredelements="72" coveredconditionals="6" complexity="6" loc="230" coveredmethods="3" methods="3" elements="72" classes="1" ncloc="140" statements="63" conditionals="6" coveredstatements="63"/>
            <class name="LIBORMarketModelHierarchyTest">
               <metrics coveredelements="72" complexity="6" methods="3" testruns="1" statements="63" coveredconditionals="6" coveredmethods="3" elements="72" testfailures="0" testduration="52.71" conditionals="6" coveredstatements="63" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testModelHierarchy() : void" num="62" testsuccess="true" count="1" testduration="52.71" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="112" count="1" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="144" count="1" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line falsecount="1" truecount="80" num="168" type="cond"/>
            <line num="169" count="80" type="stmt"/>
            <line falsecount="80" truecount="6400" num="169" type="cond"/>
            <line num="171" count="6400" type="stmt"/>
            <line num="172" count="6400" type="stmt"/>
            <line num="173" count="6400" type="stmt"/>
            <line num="175" count="6400" type="stmt"/>
            <line num="176" count="6400" type="stmt"/>
            <line falsecount="3160" truecount="3240" num="176" type="cond"/>
            <line num="177" count="3240" type="stmt"/>
            <line num="179" count="3160" type="stmt"/>
            <line num="183" count="6400" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.volatilities">
         <metrics coveredelements="320" complexity="61" loc="719" methods="19" classes="2" statements="313" coveredconditionals="12" coveredmethods="19" elements="352" ncloc="561" files="2" conditionals="20" coveredstatements="289"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeSharedParametersTest.java" name="SABRVolatilityCubeSharedParametersTest.java">
            <metrics coveredelements="96" coveredconditionals="1" complexity="24" loc="253" coveredmethods="7" methods="7" elements="106" classes="1" ncloc="198" statements="97" conditionals="2" coveredstatements="88"/>
            <class name="SABRVolatilityCubeSharedParametersTest">
               <metrics coveredelements="96" complexity="24" methods="7" testruns="2" statements="97" coveredconditionals="1" coveredmethods="7" elements="106" testfailures="0" testduration="0.19" conditionals="2" coveredstatements="88" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="80" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearList() : void" num="123" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_cubeATM() : void" num="128" testsuccess="true" count="1" testduration="0.116" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="5" type="stmt"/>
            <line num="139" count="25" type="stmt"/>
            <line num="140" count="25" type="stmt"/>
            <line num="142" count="25" type="stmt"/>
            <line num="143" count="25" type="stmt"/>
            <line num="144" count="25" type="stmt"/>
            <line num="146" count="25" type="stmt"/>
            <line num="147" count="25" type="stmt"/>
            <line num="149" count="25" type="stmt"/>
            <line num="150" count="25" type="stmt"/>
            <line num="151" count="25" type="stmt"/>
            <line num="152" count="25" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="b_strikeSlices() : void" num="169" testsuccess="true" count="1" testduration="0.074" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="9" type="stmt"/>
            <line num="175" count="9" type="stmt"/>
            <line num="176" count="9" type="stmt"/>
            <line num="178" count="9" type="stmt"/>
            <line num="179" count="9" type="stmt"/>
            <line num="180" count="9" type="stmt"/>
            <line num="182" count="9" type="stmt"/>
            <line num="184" count="9" type="stmt"/>
            <line num="185" count="45" type="stmt"/>
            <line num="187" count="224" type="stmt"/>
            <line num="188" count="224" type="stmt"/>
            <line num="190" count="224" type="stmt"/>
            <line num="191" count="224" type="stmt"/>
            <line num="192" count="224" type="stmt"/>
            <line num="194" count="224" type="stmt"/>
            <line num="195" count="224" type="stmt"/>
            <line num="196" count="224" type="stmt"/>
            <line num="197" count="224" type="stmt"/>
            <line num="199" count="224" type="stmt"/>
            <line num="200" count="224" type="stmt"/>
            <line num="201" count="224" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="224" type="stmt"/>
            <line num="209" count="224" type="stmt"/>
            <line num="210" count="224" type="stmt"/>
            <line num="211" count="224" type="stmt"/>
            <line num="212" count="224" type="stmt"/>
            <line num="215" count="224" type="stmt"/>
            <line falsecount="0" truecount="224" num="215" type="cond"/>
            <line num="216" count="224" type="stmt"/>
            <line num="221" count="9" type="stmt"/>
            <line num="222" count="9" type="stmt"/>
            <line num="223" count="9" type="stmt"/>
            <line num="224" count="9" type="stmt"/>
            <line num="226" count="9" type="stmt"/>
            <line num="227" count="9" type="stmt"/>
            <line num="228" count="9" type="stmt"/>
            <line num="229" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkDifferences() : void" num="234" count="2" type="method"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="224" type="stmt"/>
            <line complexity="1" visibility="public" signature="print() : void" num="241" count="1" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeVolatilityCube() : VolatilityCube" num="248" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeTest.java" name="SABRVolatilityCubeTest.java">
            <metrics coveredelements="224" coveredconditionals="11" complexity="37" loc="466" coveredmethods="12" methods="12" elements="246" classes="1" ncloc="363" statements="216" conditionals="18" coveredstatements="201"/>
            <class name="SABRVolatilityCubeTest">
               <metrics coveredelements="224" complexity="37" methods="12" testruns="4" statements="216" coveredconditionals="11" coveredmethods="12" elements="246" testfailures="0" testduration="0.5469999999999999" conditionals="18" coveredstatements="201" testpasses="4"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="86" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="128" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_cubeATM() : void" num="136" testsuccess="true" count="1" testduration="0.117" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="5" type="stmt"/>
            <line num="149" count="25" type="stmt"/>
            <line num="150" count="25" type="stmt"/>
            <line num="152" count="25" type="stmt"/>
            <line num="153" count="25" type="stmt"/>
            <line num="154" count="25" type="stmt"/>
            <line num="156" count="25" type="stmt"/>
            <line num="157" count="25" type="stmt"/>
            <line num="159" count="25" type="stmt"/>
            <line num="160" count="25" type="stmt"/>
            <line num="161" count="25" type="stmt"/>
            <line num="162" count="25" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="b_strikeSlices() : void" num="179" testsuccess="true" count="1" testduration="0.072" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="9" type="stmt"/>
            <line num="187" count="9" type="stmt"/>
            <line num="188" count="9" type="stmt"/>
            <line num="190" count="9" type="stmt"/>
            <line num="191" count="9" type="stmt"/>
            <line num="192" count="9" type="stmt"/>
            <line num="194" count="9" type="stmt"/>
            <line num="196" count="9" type="stmt"/>
            <line num="197" count="45" type="stmt"/>
            <line num="199" count="224" type="stmt"/>
            <line num="200" count="224" type="stmt"/>
            <line num="202" count="224" type="stmt"/>
            <line num="203" count="224" type="stmt"/>
            <line num="204" count="224" type="stmt"/>
            <line num="206" count="224" type="stmt"/>
            <line num="207" count="224" type="stmt"/>
            <line num="208" count="224" type="stmt"/>
            <line num="209" count="224" type="stmt"/>
            <line num="211" count="224" type="stmt"/>
            <line num="212" count="224" type="stmt"/>
            <line num="213" count="224" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="224" type="stmt"/>
            <line num="221" count="224" type="stmt"/>
            <line num="222" count="224" type="stmt"/>
            <line num="223" count="224" type="stmt"/>
            <line num="224" count="224" type="stmt"/>
            <line num="227" count="224" type="stmt"/>
            <line falsecount="0" truecount="224" num="227" type="cond"/>
            <line num="228" count="224" type="stmt"/>
            <line num="233" count="9" type="stmt"/>
            <line num="234" count="9" type="stmt"/>
            <line num="235" count="9" type="stmt"/>
            <line num="236" count="9" type="stmt"/>
            <line num="238" count="9" type="stmt"/>
            <line num="239" count="9" type="stmt"/>
            <line num="240" count="9" type="stmt"/>
            <line num="241" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="c_testAccessPerformance() : void" num="246" testsuccess="true" count="1" testduration="0.311" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="261" type="cond"/>
            <line num="262" count="1000" type="stmt"/>
            <line num="263" count="1000" type="stmt"/>
            <line num="264" count="1000" type="stmt"/>
            <line num="265" count="1000" type="stmt"/>
            <line num="266" count="1000" type="stmt"/>
            <line num="268" count="1000" type="stmt"/>
            <line num="269" count="1000" type="stmt"/>
            <line num="271" count="1000" type="stmt"/>
            <line num="272" count="1000" type="stmt"/>
            <line num="274" count="1000" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1000" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="d_testAccessPerformanceOnNodes() : void" num="289" testsuccess="true" count="1" testduration="0.047" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="300" type="cond"/>
            <line num="301" count="1000" type="stmt"/>
            <line num="302" count="1000" type="stmt"/>
            <line num="303" count="1000" type="stmt"/>
            <line num="304" count="1000" type="stmt"/>
            <line num="305" count="1000" type="stmt"/>
            <line num="307" count="1000" type="stmt"/>
            <line num="308" count="1000" type="stmt"/>
            <line num="310" count="1000" type="stmt"/>
            <line num="311" count="1000" type="stmt"/>
            <line num="313" count="1000" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1000" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="328" count="4" type="method"/>
            <line num="330" count="4" type="stmt"/>
            <line num="331" count="224" type="stmt"/>
            <line num="333" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="randomInt(int,int) : int" num="336" count="6000" type="method"/>
            <line num="337" count="6000" type="stmt"/>
            <line num="338" count="6000" type="stmt"/>
            <line num="339" count="6000" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeVolatilityCube() : VolatilityCube" num="342" count="4" type="method"/>
            <line num="344" count="4" type="stmt"/>
            <line num="345" count="4" type="stmt"/>
            <line num="346" count="4" type="stmt"/>
            <line num="347" count="4" type="stmt"/>
            <line num="349" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : DataTable" num="353" count="4" type="method"/>
            <line num="355" count="4" type="stmt"/>
            <line num="356" count="4" type="stmt"/>
            <line num="357" count="4" type="stmt"/>
            <line num="359" count="4" type="stmt"/>
            <line num="360" count="20" type="stmt"/>
            <line num="361" count="100" type="stmt"/>
            <line num="362" count="100" type="stmt"/>
            <line num="364" count="100" type="stmt"/>
            <line num="365" count="100" type="stmt"/>
            <line num="367" count="100" type="stmt"/>
            <line num="368" count="100" type="stmt"/>
            <line num="369" count="100" type="stmt"/>
            <line num="371" count="100" type="stmt"/>
            <line num="375" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="375" type="cond"/>
            <line num="376" count="4" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="makeBaseVolTable(DataTable,DataTable,DataTable) : DataTable" num="384" count="4" type="method"/>
            <line num="386" count="4" type="stmt"/>
            <line num="387" count="4" type="stmt"/>
            <line num="388" count="4" type="stmt"/>
            <line num="390" count="4" type="stmt"/>
            <line num="391" count="20" type="stmt"/>
            <line num="392" count="100" type="stmt"/>
            <line num="393" count="100" type="stmt"/>
            <line num="395" count="100" type="stmt"/>
            <line num="399" count="4" type="stmt"/>
            <line num="400" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="400" type="cond"/>
            <line num="401" count="4" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="409" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="414" count="4" type="stmt"/>
            <line num="415" count="4" type="stmt"/>
            <line num="416" count="20" type="stmt"/>
            <line num="418" count="100" type="stmt"/>
            <line num="419" count="100" type="stmt"/>
            <line num="421" count="100" type="stmt"/>
            <line num="422" count="100" type="stmt"/>
            <line num="423" count="100" type="stmt"/>
            <line num="425" count="100" type="stmt"/>
            <line num="426" count="100" type="stmt"/>
            <line num="428" count="100" type="stmt"/>
            <line num="429" count="100" type="stmt"/>
            <line num="430" count="100" type="stmt"/>
            <line num="435" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="435" type="cond"/>
            <line num="436" count="4" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeDummyTable(String,double) : DataTable" num="444" count="8" type="method"/>
            <line num="446" count="8" type="stmt"/>
            <line num="447" count="8" type="stmt"/>
            <line num="448" count="8" type="stmt"/>
            <line num="450" count="8" type="stmt"/>
            <line num="451" count="40" type="stmt"/>
            <line num="452" count="200" type="stmt"/>
            <line num="453" count="200" type="stmt"/>
            <line num="454" count="200" type="stmt"/>
            <line num="458" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="458" type="cond"/>
            <line num="459" count="8" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.optimizer">
         <metrics coveredelements="257" complexity="72" loc="759" methods="35" classes="6" statements="295" coveredconditionals="30" coveredmethods="27" elements="400" ncloc="520" files="6" conditionals="70" coveredstatements="200"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/optimizer/LevenbergMarquardtTest.java" name="LevenbergMarquardtTest.java">
            <metrics coveredelements="149" coveredconditionals="20" complexity="23" loc="299" coveredmethods="13" methods="13" elements="149" classes="1" ncloc="202" statements="116" conditionals="20" coveredstatements="116"/>
            <class name="LevenbergMarquardtTest">
               <metrics coveredelements="149" complexity="23" methods="13" testruns="6" statements="116" coveredconditionals="20" coveredmethods="13" elements="149" testfailures="0" testduration="0.098" conditionals="20" coveredstatements="116" testpasses="6"/>
            </class>
            <line complexity="3" visibility="public" signature="testSmallLinearSystem() : void" num="22" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="27" count="32" type="method"/>
            <line num="29" count="32" type="stmt"/>
            <line num="30" count="32" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="44" type="cond"/>
            <line num="45" count="2" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="62" type="cond"/>
            <line num="63" count="2" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedOptimizer() : void" num="73" testsuccess="true" count="1" testduration="0.058" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="84" count="161" type="method"/>
            <line num="86" count="161" type="stmt"/>
            <line num="87" count="161" type="stmt"/>
            <line num="88" count="161" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="96" type="cond"/>
            <line num="97" count="3" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="102" type="cond"/>
            <line num="103" count="3" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRosenbrockFunction() : void" num="112" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="123" count="29" type="method"/>
            <line num="125" count="29" type="stmt"/>
            <line num="126" count="29" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="134" type="cond"/>
            <line num="135" count="2" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="140" type="cond"/>
            <line num="141" count="2" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRosenbrockFunctionWithList() : void" num="151" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="170" count="29" type="method"/>
            <line num="172" count="29" type="stmt"/>
            <line num="173" count="29" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="181" type="cond"/>
            <line num="182" count="2" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="187" type="cond"/>
            <line num="188" count="2" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunction() : void" num="206" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="225" count="439" type="method"/>
            <line num="227" count="439" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="238" type="cond"/>
            <line num="239" count="2" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="257" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="259" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="271" count="195" type="method"/>
            <line num="273" count="195" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(double[],double[][]) : void" num="276" count="91" type="method"/>
            <line num="278" count="91" type="stmt"/>
            <line num="279" count="91" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="289" type="cond"/>
            <line num="290" count="2" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/optimizer/OptimizerFactoryTest.java" name="OptimizerFactoryTest.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="5" loc="63" coveredmethods="4" methods="4" elements="22" classes="1" ncloc="40" statements="16" conditionals="2" coveredstatements="16"/>
            <class name="OptimizerFactoryTest">
               <metrics coveredelements="22" complexity="5" methods="4" testruns="2" statements="16" coveredconditionals="2" coveredmethods="4" elements="22" testfailures="0" testduration="0.136" conditionals="2" coveredstatements="16" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testRosenbrockFunctionWithCMAES() : void" num="18" testsuccess="true" count="1" testduration="0.124" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRosenbrockFunctionWithLevenbergMarquard() : void" num="25" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testOptimizerWithRosenbrockFunction(OptimizerFactory) : void" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="34" count="911" type="method"/>
            <line num="36" count="911" type="stmt"/>
            <line num="37" count="911" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="53" type="cond"/>
            <line num="54" count="4" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/optimizer/StochasticLevenbergMarquardtTest.java" name="StochasticLevenbergMarquardtTest.java">
            <metrics coveredelements="43" coveredconditionals="4" complexity="7" loc="100" coveredmethods="5" methods="5" elements="43" classes="1" ncloc="63" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="StochasticLevenbergMarquardtTest">
               <metrics coveredelements="43" complexity="7" methods="5" testruns="2" statements="34" coveredconditionals="4" coveredmethods="5" elements="43" testfailures="0" testduration="0.28099999999999997" conditionals="4" coveredstatements="34" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="20" testsuccess="true" count="1" testduration="0.179" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="39" count="254" type="method"/>
            <line num="41" count="254" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="51" type="cond"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="57" testsuccess="true" count="1" testduration="0.102" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="77" count="254" type="method"/>
            <line num="79" count="254" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="82" count="253" type="method"/>
            <line num="84" count="253" type="stmt"/>
            <line num="85" count="253" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="95" type="cond"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/optimizer/StochasticLevenbergMarquardtTestInverse.java" name="StochasticLevenbergMarquardtTestInverse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="101" coveredmethods="0" methods="4" elements="73" classes="1" ncloc="77" statements="49" conditionals="20" coveredstatements="0"/>
            <class name="StochasticLevenbergMarquardtTestInverse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="73" statements="49" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInverse() : void" num="17" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInverseMatrix(RandomVariable[][]) : RandomVariable[][]" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="multiply(RandomVariable[][],RandomVariable[][]) : RandomVariable[][]" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtTest.java" name="StochasticPathwiseLevenbergMarquardtTest.java">
            <metrics coveredelements="43" coveredconditionals="4" complexity="7" loc="96" coveredmethods="5" methods="5" elements="43" classes="1" ncloc="62" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="StochasticPathwiseLevenbergMarquardtTest">
               <metrics coveredelements="43" complexity="7" methods="5" testruns="2" statements="34" coveredconditionals="4" coveredmethods="5" elements="43" testfailures="0" testduration="0.14400000000000002" conditionals="4" coveredstatements="34" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="16" testsuccess="true" count="1" testduration="0.033" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="35" count="427" type="method"/>
            <line num="37" count="427" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="47" type="cond"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="53" testsuccess="true" count="1" testduration="0.111" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="73" count="254" type="method"/>
            <line num="75" count="254" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="78" count="253" type="method"/>
            <line num="80" count="253" type="stmt"/>
            <line num="81" count="253" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="91" type="cond"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtTestInverse.java" name="StochasticPathwiseLevenbergMarquardtTestInverse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="100" coveredmethods="0" methods="4" elements="70" classes="1" ncloc="76" statements="46" conditionals="20" coveredstatements="0"/>
            <class name="StochasticPathwiseLevenbergMarquardtTestInverse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="70" statements="46" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInverse() : void" num="17" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInverseMatrix(RandomVariable[][]) : RandomVariable[][]" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="multiply(RandomVariable[][],RandomVariable[][]) : RandomVariable[][]" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.daycount">
         <metrics coveredelements="24" complexity="6" loc="252" methods="3" classes="2" statements="15" coveredconditionals="6" coveredmethods="3" elements="24" ncloc="207" files="2" conditionals="6" coveredstatements="15"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/time/daycount/DayCountConvention_30E_360Test.java" name="DayCountConvention_30E_360Test.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="2" loc="108" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="87" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="DayCountConvention_30E_360Test">
               <metrics coveredelements="8" complexity="2" methods="1" testruns="1" statements="5" coveredconditionals="2" coveredmethods="1" elements="8" testfailures="0" testduration="0.01" conditionals="2" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="96" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line falsecount="1" truecount="22" num="99" type="cond"/>
            <line num="100" count="22" type="stmt"/>
            <line num="102" count="22" type="stmt"/>
            <line num="104" count="22" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/time/daycount/DayCountConvention_30E_360_ISDATest.java" name="DayCountConvention_30E_360_ISDATest.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="4" loc="144" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="120" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="DayCountConvention_30E_360_ISDATest">
               <metrics coveredelements="16" complexity="4" methods="2" testruns="2" statements="10" coveredconditionals="4" coveredmethods="2" elements="16" testfailures="0" testduration="0.008" conditionals="4" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testAssumingEndDateIsNotATerminationDate() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line falsecount="1" truecount="22" num="124" type="cond"/>
            <line num="125" count="22" type="stmt"/>
            <line num="127" count="22" type="stmt"/>
            <line num="129" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssumingEndDateIsATerminationDate() : void" num="133" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line falsecount="1" truecount="22" num="136" type="cond"/>
            <line num="137" count="22" type="stmt"/>
            <line num="139" count="22" type="stmt"/>
            <line num="141" count="22" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.information">
         <metrics coveredelements="8" complexity="2" loc="23" methods="2" classes="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" ncloc="17" files="1" conditionals="0" coveredstatements="6"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/information/LibraryTest.java" name="LibraryTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="23" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="LibraryTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testBuildString() : void" num="8" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionString() : void" num="16" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products">
         <metrics coveredelements="557" complexity="60" loc="1609" methods="28" classes="5" statements="514" coveredconditionals="56" coveredmethods="25" elements="604" ncloc="917" files="5" conditionals="62" coveredstatements="476"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/InterestRateProductTest.java" name="InterestRateProductTest.java">
            <metrics coveredelements="140" coveredconditionals="16" complexity="20" loc="443" coveredmethods="5" methods="8" elements="187" classes="1" ncloc="257" statements="157" conditionals="22" coveredstatements="119"/>
            <class name="InterestRateProductTest">
               <metrics coveredelements="140" complexity="20" methods="8" testruns="3" statements="157" coveredconditionals="16" coveredmethods="5" elements="187" testfailures="0" testduration="85.16900000000001" conditionals="22" coveredstatements="119" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InterestRateProductTest()" num="80" count="3" type="method"/>
            <line num="81" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(LocalDateTime,int,int,double) : LIBORModelMonteCarloSimulationModel" num="87" count="3" type="method"/>
            <line num="93" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line num="95" count="3" type="stmt"/>
            <line num="98" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="131" count="3" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line num="147" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="153" count="3" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line num="163" count="3" type="stmt"/>
            <line num="165" count="3" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBond() : void" num="170" testsuccess="true" count="1" testduration="26.308" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line falsecount="1" truecount="41" num="179" type="cond"/>
            <line num="180" count="41" type="stmt"/>
            <line num="181" count="41" type="stmt"/>
            <line num="184" count="41" type="stmt"/>
            <line num="187" count="41" type="stmt"/>
            <line num="188" count="41" type="stmt"/>
            <line num="191" count="41" type="stmt"/>
            <line num="193" count="41" type="stmt"/>
            <line num="194" count="41" type="stmt"/>
            <line falsecount="41" truecount="820" num="194" type="cond"/>
            <line num="195" count="820" type="stmt"/>
            <line num="198" count="41" type="stmt"/>
            <line num="201" count="41" type="stmt"/>
            <line num="202" count="41" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="208" testsuccess="true" count="1" testduration="31.681" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="216" type="cond"/>
            <line num="218" count="30" type="stmt"/>
            <line num="219" count="30" type="stmt"/>
            <line num="221" count="30" type="stmt"/>
            <line num="225" count="30" type="stmt"/>
            <line num="226" count="30" type="stmt"/>
            <line num="227" count="30" type="stmt"/>
            <line num="228" count="30" type="stmt"/>
            <line num="230" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="230" type="cond"/>
            <line num="231" count="150" type="stmt"/>
            <line num="232" count="150" type="stmt"/>
            <line num="233" count="150" type="stmt"/>
            <line num="235" count="30" type="stmt"/>
            <line num="238" count="30" type="stmt"/>
            <line num="241" count="30" type="stmt"/>
            <line num="242" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="242" type="cond"/>
            <line num="243" count="150" type="stmt"/>
            <line num="246" count="30" type="stmt"/>
            <line num="247" count="30" type="stmt"/>
            <line num="248" count="30" type="stmt"/>
            <line num="251" count="30" type="stmt"/>
            <line num="252" count="30" type="stmt"/>
            <line num="255" count="30" type="stmt"/>
            <line num="256" count="30" type="stmt"/>
            <line num="259" count="30" type="stmt"/>
            <line num="260" count="30" type="stmt"/>
            <line num="263" count="30" type="stmt"/>
            <line num="264" count="30" type="stmt"/>
            <line num="267" count="30" type="stmt"/>
            <line num="268" count="30" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwap() : void" num="273" testsuccess="true" count="1" testduration="27.18" type="method"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="288" type="cond"/>
            <line num="290" count="30" type="stmt"/>
            <line num="291" count="30" type="stmt"/>
            <line num="293" count="30" type="stmt"/>
            <line num="297" count="30" type="stmt"/>
            <line num="298" count="30" type="stmt"/>
            <line num="299" count="30" type="stmt"/>
            <line num="300" count="30" type="stmt"/>
            <line num="302" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="302" type="cond"/>
            <line num="303" count="150" type="stmt"/>
            <line num="304" count="150" type="stmt"/>
            <line num="305" count="150" type="stmt"/>
            <line num="307" count="30" type="stmt"/>
            <line num="310" count="30" type="stmt"/>
            <line num="313" count="30" type="stmt"/>
            <line num="314" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="314" type="cond"/>
            <line num="315" count="150" type="stmt"/>
            <line num="318" count="30" type="stmt"/>
            <line num="319" count="30" type="stmt"/>
            <line num="320" count="30" type="stmt"/>
            <line num="321" count="30" type="stmt"/>
            <line num="323" count="30" type="stmt"/>
            <line num="324" count="30" type="stmt"/>
            <line num="325" count="30" type="stmt"/>
            <line num="326" count="30" type="stmt"/>
            <line num="329" count="30" type="stmt"/>
            <line num="330" count="30" type="stmt"/>
            <line num="331" count="30" type="stmt"/>
            <line num="332" count="30" type="stmt"/>
            <line num="333" count="30" type="stmt"/>
            <line num="336" count="30" type="stmt"/>
            <line num="337" count="30" type="stmt"/>
            <line num="338" count="30" type="stmt"/>
            <line num="339" count="30" type="stmt"/>
            <line num="340" count="30" type="stmt"/>
            <line num="343" count="30" type="stmt"/>
            <line num="344" count="30" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="flexiCapTest(LIBORModelMonteCarloSimulationModel) : void" num="383" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/SimpleCappedFlooredFloatingRateBondTest.java" name="SimpleCappedFlooredFloatingRateBondTest.java">
            <metrics coveredelements="63" coveredconditionals="10" complexity="9" loc="210" coveredmethods="4" methods="4" elements="63" classes="1" ncloc="127" statements="49" conditionals="10" coveredstatements="49"/>
            <class name="SimpleCappedFlooredFloatingRateBondTest">
               <metrics coveredelements="63" complexity="9" methods="4" testruns="2" statements="49" coveredconditionals="10" coveredmethods="4" elements="63" testfailures="0" testduration="130.534" conditionals="10" coveredstatements="49" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="50" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleCappedFlooredFloatingRateBondTest(Measure)" num="62" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="67" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="92" type="cond"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="95" type="cond"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,Measure) : LIBORModelMonteCarloSimulationModel" num="100" count="2" type="method"/>
            <line num="102" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line falsecount="2" truecount="160" num="146" type="cond"/>
            <line num="147" count="160" type="stmt"/>
            <line falsecount="160" truecount="12800" num="147" type="cond"/>
            <line num="149" count="12800" type="stmt"/>
            <line num="150" count="12800" type="stmt"/>
            <line num="151" count="12800" type="stmt"/>
            <line num="153" count="12800" type="stmt"/>
            <line num="154" count="12800" type="stmt"/>
            <line falsecount="6320" truecount="6480" num="154" type="cond"/>
            <line num="155" count="6480" type="stmt"/>
            <line num="157" count="6320" type="stmt"/>
            <line num="161" count="12800" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/SwapLegTest.java" name="SwapLegTest.java">
            <metrics coveredelements="182" coveredconditionals="6" complexity="10" loc="481" coveredmethods="7" methods="7" elements="182" classes="1" ncloc="260" statements="169" conditionals="6" coveredstatements="169"/>
            <class name="SwapLegTest">
               <metrics coveredelements="182" complexity="10" methods="7" testruns="5" statements="169" coveredconditionals="6" coveredmethods="7" elements="182" testfailures="0" testduration="228.72199999999998" conditionals="6" coveredstatements="169" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testFloatLeg() : void" num="62" testsuccess="true" count="1" testduration="44.322" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFixLeg() : void" num="120" testsuccess="true" count="1" testduration="43.534" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCMSFloatLeg() : void" num="173" testsuccess="true" count="1" testduration="48.827" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCMSSpreadLeg() : void" num="237" testsuccess="true" count="1" testduration="48.367" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLIBORInArrearsFloatLeg() : void" num="301" testsuccess="true" count="1" testduration="43.672" type="method"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="361" count="5" type="method"/>
            <line num="363" count="5" type="stmt"/>
            <line num="367" count="5" type="stmt"/>
            <line num="384" count="5" type="stmt"/>
            <line num="390" count="5" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="393" count="5" type="method"/>
            <line num="396" count="5" type="stmt"/>
            <line num="401" count="5" type="stmt"/>
            <line num="402" count="5" type="stmt"/>
            <line num="403" count="5" type="stmt"/>
            <line num="408" count="5" type="stmt"/>
            <line num="409" count="5" type="stmt"/>
            <line num="411" count="5" type="stmt"/>
            <line num="416" count="5" type="stmt"/>
            <line num="417" count="5" type="stmt"/>
            <line falsecount="5" truecount="400" num="417" type="cond"/>
            <line num="418" count="400" type="stmt"/>
            <line falsecount="400" truecount="32000" num="418" type="cond"/>
            <line num="420" count="32000" type="stmt"/>
            <line num="421" count="32000" type="stmt"/>
            <line num="422" count="32000" type="stmt"/>
            <line num="424" count="32000" type="stmt"/>
            <line num="425" count="32000" type="stmt"/>
            <line falsecount="15800" truecount="16200" num="425" type="cond"/>
            <line num="426" count="16200" type="stmt"/>
            <line num="428" count="15800" type="stmt"/>
            <line num="432" count="32000" type="stmt"/>
            <line num="435" count="5" type="stmt"/>
            <line num="440" count="5" type="stmt"/>
            <line num="448" count="5" type="stmt"/>
            <line num="456" count="5" type="stmt"/>
            <line num="459" count="5" type="stmt"/>
            <line num="462" count="5" type="stmt"/>
            <line num="465" count="5" type="stmt"/>
            <line num="470" count="5" type="stmt"/>
            <line num="473" count="5" type="stmt"/>
            <line num="479" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximationTest.java" name="SwaptionAnalyticApproximationTest.java">
            <metrics coveredelements="96" coveredconditionals="12" complexity="12" loc="263" coveredmethods="6" methods="6" elements="96" classes="1" ncloc="154" statements="78" conditionals="12" coveredstatements="78"/>
            <class name="SwaptionAnalyticApproximationTest">
               <metrics coveredelements="96" complexity="12" methods="6" testruns="2" statements="78" coveredconditionals="12" coveredmethods="6" elements="96" testfailures="0" testduration="52.791" conditionals="12" coveredstatements="78" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleCurveModel() : void" num="49" testsuccess="true" count="1" testduration="25.906" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiCurveModel() : void" num="58" testsuccess="true" count="1" testduration="26.885" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testModel(LIBORModelMonteCarloSimulationModel,boolean) : void" num="67" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="76" type="cond"/>
            <line num="78" count="60" type="stmt"/>
            <line num="79" count="60" type="stmt"/>
            <line num="81" count="60" type="stmt"/>
            <line num="85" count="60" type="stmt"/>
            <line num="86" count="60" type="stmt"/>
            <line num="87" count="60" type="stmt"/>
            <line num="88" count="60" type="stmt"/>
            <line num="90" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="90" type="cond"/>
            <line num="91" count="300" type="stmt"/>
            <line num="92" count="300" type="stmt"/>
            <line num="93" count="300" type="stmt"/>
            <line num="95" count="60" type="stmt"/>
            <line num="98" count="60" type="stmt"/>
            <line num="101" count="60" type="stmt"/>
            <line num="102" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="102" type="cond"/>
            <line num="103" count="300" type="stmt"/>
            <line num="107" count="60" type="stmt"/>
            <line num="108" count="60" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="112" count="60" type="stmt"/>
            <line num="113" count="60" type="stmt"/>
            <line num="114" count="60" type="stmt"/>
            <line num="117" count="60" type="stmt"/>
            <line num="118" count="60" type="stmt"/>
            <line num="119" count="60" type="stmt"/>
            <line num="122" count="60" type="stmt"/>
            <line num="123" count="60" type="stmt"/>
            <line num="125" count="60" type="stmt"/>
            <line num="126" count="60" type="stmt"/>
            <line num="128" count="60" type="stmt"/>
            <line num="129" count="60" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSingleCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="141" count="1" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="157" count="1" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="177" count="2" type="method"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line falsecount="2" truecount="80" num="199" type="cond"/>
            <line num="200" count="80" type="stmt"/>
            <line falsecount="80" truecount="3200" num="200" type="cond"/>
            <line num="202" count="3200" type="stmt"/>
            <line num="203" count="3200" type="stmt"/>
            <line num="204" count="3200" type="stmt"/>
            <line num="206" count="3200" type="stmt"/>
            <line num="207" count="3200" type="stmt"/>
            <line falsecount="1560" truecount="1640" num="207" type="cond"/>
            <line num="208" count="1640" type="stmt"/>
            <line num="210" count="1560" type="stmt"/>
            <line num="214" count="3200" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/SwaptionNormalTest.java" name="SwaptionNormalTest.java">
            <metrics coveredelements="76" coveredconditionals="12" complexity="9" loc="212" coveredmethods="3" methods="3" elements="76" classes="1" ncloc="119" statements="61" conditionals="12" coveredstatements="61"/>
            <class name="SwaptionNormalTest">
               <metrics coveredelements="76" complexity="9" methods="3" testruns="1" statements="61" coveredconditionals="12" coveredmethods="3" elements="76" testfailures="0" testduration="53.504" conditionals="12" coveredstatements="61" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionNormalTest()" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="54" testsuccess="true" count="1" testduration="53.504" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line falsecount="1" truecount="30" num="63" type="cond"/>
            <line num="64" count="30" type="stmt"/>
            <line num="65" count="30" type="stmt"/>
            <line num="67" count="30" type="stmt"/>
            <line num="71" count="30" type="stmt"/>
            <line num="72" count="30" type="stmt"/>
            <line num="73" count="30" type="stmt"/>
            <line num="74" count="30" type="stmt"/>
            <line num="77" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="77" type="cond"/>
            <line num="78" count="150" type="stmt"/>
            <line num="79" count="150" type="stmt"/>
            <line num="80" count="150" type="stmt"/>
            <line num="82" count="30" type="stmt"/>
            <line num="85" count="30" type="stmt"/>
            <line num="88" count="30" type="stmt"/>
            <line num="89" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="89" type="cond"/>
            <line num="90" count="150" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line num="96" count="30" type="stmt"/>
            <line num="97" count="30" type="stmt"/>
            <line num="102" count="30" type="stmt"/>
            <line num="104" count="30" type="stmt"/>
            <line num="108" count="30" type="stmt"/>
            <line num="109" count="30" type="stmt"/>
            <line num="111" count="30" type="stmt"/>
            <line num="112" count="30" type="stmt"/>
            <line num="115" count="30" type="stmt"/>
            <line num="116" count="30" type="stmt"/>
            <line num="118" count="30" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="122" count="1" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="151" type="cond"/>
            <line num="152" count="40" type="stmt"/>
            <line falsecount="40" truecount="1600" num="152" type="cond"/>
            <line num="154" count="1600" type="stmt"/>
            <line num="155" count="1600" type="stmt"/>
            <line num="156" count="1600" type="stmt"/>
            <line num="158" count="1600" type="stmt"/>
            <line num="159" count="1600" type="stmt"/>
            <line falsecount="780" truecount="820" num="159" type="cond"/>
            <line num="160" count="820" type="stmt"/>
            <line num="163" count="780" type="stmt"/>
            <line num="168" count="1600" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.indices">
         <metrics coveredelements="335" complexity="34" loc="841" methods="20" classes="3" statements="299" coveredconditionals="20" coveredmethods="20" elements="339" ncloc="570" files="2" conditionals="20" coveredstatements="295"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndexMultiCurveTest.java" name="LIBORIndexMultiCurveTest.java">
            <metrics coveredelements="225" coveredconditionals="8" complexity="20" loc="511" coveredmethods="14" methods="14" elements="227" classes="1" ncloc="346" statements="205" conditionals="8" coveredstatements="203"/>
            <class name="LIBORIndexMultiCurveTest">
               <metrics coveredelements="225" complexity="20" methods="14" testruns="6" statements="205" coveredconditionals="8" coveredmethods="14" elements="227" testfailures="0" testduration="685.279" conditionals="8" coveredstatements="203" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="83" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndexMultiCurveTest(Integer,String)" num="111" count="6" type="method"/>
            <line num="112" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFRAMonteCarloVersusAnalytic() : void" num="118" count="6" type="method"/>
            <line num="121" count="6" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="124" count="6" type="stmt"/>
            <line falsecount="6" truecount="60" num="124" type="cond"/>
            <line num="125" count="60" type="stmt"/>
            <line num="126" count="60" type="stmt"/>
            <line num="128" count="60" type="stmt"/>
            <line num="129" count="60" type="stmt"/>
            <line num="131" count="60" type="stmt"/>
            <line num="133" count="60" type="stmt"/>
            <line num="134" count="60" type="stmt"/>
            <line num="135" count="60" type="stmt"/>
            <line num="137" count="60" type="stmt"/>
            <line num="138" count="60" type="stmt"/>
            <line num="139" count="60" type="stmt"/>
            <line num="141" count="60" type="stmt"/>
            <line num="142" count="60" type="stmt"/>
            <line num="143" count="60" type="stmt"/>
            <line num="145" count="60" type="stmt"/>
            <line num="147" count="60" type="stmt"/>
            <line num="149" count="60" type="stmt"/>
            <line num="151" count="60" type="stmt"/>
            <line num="157" count="60" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createCurves() : AnalyticModel" num="163" count="6" type="method"/>
            <line num="169" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(String) : String" num="175" count="288" type="method"/>
            <line num="177" count="288" type="stmt"/>
            <line num="178" count="192" type="stmt"/>
            <line num="179" count="192" type="stmt"/>
            <line num="180" count="96" type="stmt"/>
            <line num="181" count="96" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="189" count="96" type="method"/>
            <line num="191" count="96" type="stmt"/>
            <line num="192" count="96" type="stmt"/>
            <line num="193" count="96" type="stmt"/>
            <line num="194" count="96" type="stmt"/>
            <line num="195" count="96" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="200" count="120" type="method"/>
            <line num="202" count="120" type="stmt"/>
            <line num="203" count="120" type="stmt"/>
            <line num="204" count="120" type="stmt"/>
            <line num="205" count="120" type="stmt"/>
            <line num="206" count="120" type="stmt"/>
            <line num="210" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="211" count="90" type="method"/>
            <line num="213" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="214" count="90" type="method"/>
            <line num="216" count="90" type="stmt"/>
            <line num="217" count="90" type="stmt"/>
            <line num="218" count="90" type="stmt"/>
            <line num="219" count="90" type="stmt"/>
            <line num="220" count="90" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="227" count="96" type="method"/>
            <line num="229" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="230" count="96" type="method"/>
            <line num="232" count="96" type="stmt"/>
            <line num="234" count="96" type="stmt"/>
            <line num="235" count="96" type="stmt"/>
            <line num="236" count="96" type="stmt"/>
            <line num="237" count="96" type="stmt"/>
            <line num="238" count="96" type="stmt"/>
            <line num="239" count="96" type="stmt"/>
            <line num="245" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="246" count="96" type="method"/>
            <line num="248" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="249" count="96" type="method"/>
            <line num="251" count="96" type="stmt"/>
            <line num="252" count="96" type="stmt"/>
            <line num="254" count="96" type="stmt"/>
            <line num="255" count="96" type="stmt"/>
            <line num="257" count="96" type="stmt"/>
            <line num="258" count="96" type="stmt"/>
            <line num="259" count="96" type="stmt"/>
            <line num="261" count="96" type="stmt"/>
            <line num="262" count="96" type="stmt"/>
            <line num="271" count="6" type="stmt"/>
            <line num="272" count="6" type="stmt"/>
            <line num="273" count="6" type="stmt"/>
            <line num="275" count="6" type="stmt"/>
            <line num="276" count="6" type="stmt"/>
            <line num="277" count="6" type="stmt"/>
            <line num="278" count="6" type="stmt"/>
            <line num="280" count="6" type="stmt"/>
            <line num="282" count="6" type="stmt"/>
            <line num="287" count="6" type="stmt"/>
            <line num="288" count="6" type="stmt"/>
            <line num="289" count="6" type="stmt"/>
            <line num="290" count="6" type="stmt"/>
            <line num="291" count="6" type="stmt"/>
            <line num="292" count="6" type="stmt"/>
            <line num="293" count="6" type="stmt"/>
            <line num="294" count="6" type="stmt"/>
            <line num="295" count="6" type="stmt"/>
            <line num="296" count="6" type="stmt"/>
            <line num="297" count="6" type="stmt"/>
            <line num="298" count="6" type="stmt"/>
            <line num="299" count="6" type="stmt"/>
            <line num="300" count="6" type="stmt"/>
            <line num="301" count="6" type="stmt"/>
            <line num="302" count="6" type="stmt"/>
            <line num="307" count="6" type="stmt"/>
            <line num="308" count="6" type="stmt"/>
            <line num="309" count="6" type="stmt"/>
            <line num="310" count="6" type="stmt"/>
            <line num="311" count="6" type="stmt"/>
            <line num="312" count="6" type="stmt"/>
            <line num="313" count="6" type="stmt"/>
            <line num="314" count="6" type="stmt"/>
            <line num="315" count="6" type="stmt"/>
            <line num="316" count="6" type="stmt"/>
            <line num="317" count="6" type="stmt"/>
            <line num="318" count="6" type="stmt"/>
            <line num="319" count="6" type="stmt"/>
            <line num="320" count="6" type="stmt"/>
            <line num="321" count="6" type="stmt"/>
            <line num="322" count="6" type="stmt"/>
            <line num="323" count="6" type="stmt"/>
            <line num="324" count="6" type="stmt"/>
            <line num="325" count="6" type="stmt"/>
            <line num="326" count="6" type="stmt"/>
            <line num="331" count="6" type="stmt"/>
            <line num="332" count="6" type="stmt"/>
            <line num="333" count="6" type="stmt"/>
            <line num="334" count="6" type="stmt"/>
            <line num="335" count="6" type="stmt"/>
            <line num="336" count="6" type="stmt"/>
            <line num="337" count="6" type="stmt"/>
            <line num="338" count="6" type="stmt"/>
            <line num="343" count="6" type="stmt"/>
            <line num="344" count="6" type="stmt"/>
            <line num="345" count="6" type="stmt"/>
            <line num="346" count="6" type="stmt"/>
            <line num="347" count="6" type="stmt"/>
            <line num="348" count="6" type="stmt"/>
            <line num="349" count="6" type="stmt"/>
            <line num="350" count="6" type="stmt"/>
            <line num="351" count="6" type="stmt"/>
            <line num="352" count="6" type="stmt"/>
            <line num="353" count="6" type="stmt"/>
            <line num="354" count="6" type="stmt"/>
            <line num="355" count="6" type="stmt"/>
            <line num="356" count="6" type="stmt"/>
            <line num="357" count="6" type="stmt"/>
            <line num="358" count="6" type="stmt"/>
            <line num="364" count="6" type="stmt"/>
            <line num="365" count="6" type="stmt"/>
            <line num="366" count="6" type="stmt"/>
            <line num="367" count="6" type="stmt"/>
            <line num="368" count="6" type="stmt"/>
            <line num="369" count="6" type="stmt"/>
            <line num="370" count="6" type="stmt"/>
            <line num="376" count="6" type="stmt"/>
            <line num="377" count="6" type="stmt"/>
            <line num="378" count="6" type="stmt"/>
            <line num="379" count="6" type="stmt"/>
            <line num="380" count="6" type="stmt"/>
            <line num="381" count="6" type="stmt"/>
            <line num="382" count="6" type="stmt"/>
            <line num="383" count="6" type="stmt"/>
            <line num="384" count="6" type="stmt"/>
            <line num="385" count="6" type="stmt"/>
            <line num="386" count="6" type="stmt"/>
            <line num="387" count="6" type="stmt"/>
            <line num="388" count="6" type="stmt"/>
            <line num="389" count="6" type="stmt"/>
            <line num="390" count="6" type="stmt"/>
            <line num="391" count="6" type="stmt"/>
            <line num="396" count="6" type="stmt"/>
            <line num="401" count="6" type="stmt"/>
            <line num="403" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(String,Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="406" count="6" type="method"/>
            <line num="414" count="6" type="stmt"/>
            <line num="415" count="6" type="stmt"/>
            <line num="416" count="6" type="stmt"/>
            <line num="418" count="6" type="stmt"/>
            <line num="420" count="6" type="stmt"/>
            <line num="425" count="6" type="stmt"/>
            <line num="427" count="6" type="stmt"/>
            <line num="428" count="6" type="stmt"/>
            <line num="430" count="6" type="stmt"/>
            <line num="431" count="6" type="stmt"/>
            <line num="433" count="6" type="stmt"/>
            <line num="434" count="6" type="stmt"/>
            <line num="439" count="6" type="stmt"/>
            <line num="440" count="6" type="stmt"/>
            <line num="442" count="6" type="stmt"/>
            <line num="447" count="6" type="stmt"/>
            <line num="448" count="6" type="stmt"/>
            <line falsecount="6" truecount="240" num="448" type="cond"/>
            <line num="449" count="240" type="stmt"/>
            <line falsecount="240" truecount="9600" num="449" type="cond"/>
            <line num="451" count="9600" type="stmt"/>
            <line num="452" count="9600" type="stmt"/>
            <line num="453" count="9600" type="stmt"/>
            <line num="455" count="9600" type="stmt"/>
            <line num="456" count="9600" type="stmt"/>
            <line falsecount="4680" truecount="4920" num="456" type="cond"/>
            <line num="457" count="4920" type="stmt"/>
            <line num="459" count="4680" type="stmt"/>
            <line num="463" count="9600" type="stmt"/>
            <line num="466" count="6" type="stmt"/>
            <line num="471" count="6" type="stmt"/>
            <line num="479" count="6" type="stmt"/>
            <line num="487" count="6" type="stmt"/>
            <line num="490" count="6" type="stmt"/>
            <line num="493" count="6" type="stmt"/>
            <line num="496" count="6" type="stmt"/>
            <line num="501" count="6" type="stmt"/>
            <line num="503" count="6" type="stmt"/>
            <line num="509" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndexTest.java" name="LIBORIndexTest.java">
            <metrics coveredelements="110" coveredconditionals="12" complexity="14" loc="330" coveredmethods="6" methods="6" elements="112" classes="2" ncloc="224" statements="94" conditionals="12" coveredstatements="92"/>
            <class name="LIBORIndexTest">
               <metrics coveredelements="110" complexity="14" methods="6" testruns="60" statements="94" coveredconditionals="12" coveredmethods="6" elements="112" testfailures="0" testduration="3275.099" conditionals="12" coveredstatements="92" testpasses="60"/>
            </class>
            <class name="LIBORIndexTest.CurveSetup">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="73" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndexTest(Integer,CurveSetup)" num="109" count="60" type="method"/>
            <line num="112" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSinglePeriods() : void" num="115" count="20" type="method"/>
            <line num="118" count="20" type="stmt"/>
            <line num="119" count="20" type="stmt"/>
            <line num="121" count="20" type="stmt"/>
            <line falsecount="20" truecount="200" num="121" type="cond"/>
            <line num="122" count="200" type="stmt"/>
            <line num="123" count="200" type="stmt"/>
            <line num="124" count="200" type="stmt"/>
            <line num="126" count="200" type="stmt"/>
            <line num="127" count="200" type="stmt"/>
            <line num="128" count="200" type="stmt"/>
            <line num="130" count="200" type="stmt"/>
            <line num="132" count="200" type="stmt"/>
            <line num="136" count="200" type="stmt"/>
            <line num="138" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiPeriodFloater() : void" num="141" count="20" type="method"/>
            <line num="144" count="20" type="stmt"/>
            <line num="145" count="20" type="stmt"/>
            <line num="146" count="20" type="stmt"/>
            <line falsecount="20" truecount="200" num="146" type="cond"/>
            <line num="147" count="200" type="stmt"/>
            <line num="148" count="200" type="stmt"/>
            <line num="149" count="200" type="stmt"/>
            <line num="151" count="200" type="stmt"/>
            <line num="152" count="200" type="stmt"/>
            <line num="153" count="200" type="stmt"/>
            <line num="155" count="20" type="stmt"/>
            <line num="156" count="20" type="stmt"/>
            <line num="158" count="20" type="stmt"/>
            <line num="160" count="20" type="stmt"/>
            <line num="161" count="20" type="stmt"/>
            <line num="165" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnalignedPeriods() : void" num="168" count="20" type="method"/>
            <line num="171" count="20" type="stmt"/>
            <line num="172" count="20" type="stmt"/>
            <line num="174" count="20" type="stmt"/>
            <line num="176" count="20" type="stmt"/>
            <line falsecount="20" truecount="20" num="176" type="cond"/>
            <line num="177" count="20" type="stmt"/>
            <line num="178" count="20" type="stmt"/>
            <line num="179" count="20" type="stmt"/>
            <line num="182" count="20" type="stmt"/>
            <line num="183" count="20" type="stmt"/>
            <line num="185" count="20" type="stmt"/>
            <line num="186" count="20" type="stmt"/>
            <line num="187" count="20" type="stmt"/>
            <line num="189" count="20" type="stmt"/>
            <line num="190" count="20" type="stmt"/>
            <line num="192" count="20" type="stmt"/>
            <line num="194" count="20" type="stmt"/>
            <line num="198" count="20" type="stmt"/>
            <line complexity="6" visibility="public" signature="createLIBORMarketModel(CurveSetup,Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="201" count="60" type="method"/>
            <line num="209" count="60" type="stmt"/>
            <line num="210" count="60" type="stmt"/>
            <line num="211" count="60" type="stmt"/>
            <line num="213" count="60" type="stmt"/>
            <line num="215" count="60" type="stmt"/>
            <line num="220" count="60" type="stmt"/>
            <line num="221" count="60" type="stmt"/>
            <line num="222" count="60" type="stmt"/>
            <line num="223" count="30" type="stmt"/>
            <line num="225" count="30" type="stmt"/>
            <line num="227" count="30" type="stmt"/>
            <line num="228" count="30" type="stmt"/>
            <line num="229" count="30" type="stmt"/>
            <line num="230" count="30" type="stmt"/>
            <line num="232" count="30" type="stmt"/>
            <line num="233" count="30" type="stmt"/>
            <line num="235" count="30" type="stmt"/>
            <line num="238" count="30" type="stmt"/>
            <line num="246" count="30" type="stmt"/>
            <line num="247" count="30" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="253" count="60" type="stmt"/>
            <line num="257" count="60" type="stmt"/>
            <line num="258" count="60" type="stmt"/>
            <line num="260" count="60" type="stmt"/>
            <line num="265" count="60" type="stmt"/>
            <line num="266" count="60" type="stmt"/>
            <line falsecount="60" truecount="2400" num="266" type="cond"/>
            <line num="267" count="2400" type="stmt"/>
            <line falsecount="2400" truecount="96000" num="267" type="cond"/>
            <line num="269" count="96000" type="stmt"/>
            <line num="270" count="96000" type="stmt"/>
            <line num="271" count="96000" type="stmt"/>
            <line num="273" count="96000" type="stmt"/>
            <line num="274" count="96000" type="stmt"/>
            <line falsecount="46800" truecount="49200" num="274" type="cond"/>
            <line num="275" count="49200" type="stmt"/>
            <line num="277" count="46800" type="stmt"/>
            <line num="281" count="96000" type="stmt"/>
            <line num="284" count="60" type="stmt"/>
            <line num="289" count="60" type="stmt"/>
            <line num="297" count="60" type="stmt"/>
            <line num="305" count="60" type="stmt"/>
            <line num="308" count="60" type="stmt"/>
            <line num="311" count="60" type="stmt"/>
            <line num="314" count="60" type="stmt"/>
            <line num="319" count="60" type="stmt"/>
            <line num="322" count="60" type="stmt"/>
            <line num="328" count="60" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor">
         <metrics coveredelements="211" complexity="18" loc="879" methods="15" classes="5" statements="190" coveredconditionals="6" coveredmethods="15" elements="211" ncloc="456" files="5" conditionals="6" coveredstatements="190"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/descriptor/AssetBlackScholesModelDescriptorTest.java" name="AssetBlackScholesModelDescriptorTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="3" loc="179" coveredmethods="3" methods="3" elements="41" classes="1" ncloc="81" statements="38" conditionals="0" coveredstatements="38"/>
            <class name="AssetBlackScholesModelDescriptorTest">
               <metrics coveredelements="41" complexity="3" methods="3" testruns="1" statements="38" coveredconditionals="0" coveredmethods="3" elements="41" testfailures="0" testduration="6.405" conditionals="0" coveredstatements="38" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="60" testsuccess="true" count="1" testduration="6.405" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="153" count="2" type="method"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="173" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/descriptor/HestonModelDescriptorTest.java" name="HestonModelDescriptorTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="3" loc="150" coveredmethods="3" methods="3" elements="29" classes="1" ncloc="72" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="HestonModelDescriptorTest">
               <metrics coveredelements="29" complexity="3" methods="3" testruns="1" statements="26" coveredconditionals="0" coveredmethods="3" elements="29" testfailures="0" testduration="10.538" conditionals="0" coveredstatements="26" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="64" testsuccess="true" count="1" testduration="10.538" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="124" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="144" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/descriptor/InterestRateSwapLegDescriptorTest.java" name="InterestRateSwapLegDescriptorTest.java">
            <metrics coveredelements="91" coveredconditionals="6" complexity="8" loc="302" coveredmethods="5" methods="5" elements="91" classes="1" ncloc="167" statements="80" conditionals="6" coveredstatements="80"/>
            <class name="InterestRateSwapLegDescriptorTest">
               <metrics coveredelements="91" complexity="8" methods="5" testruns="2" statements="80" coveredconditionals="6" coveredmethods="5" elements="91" testfailures="0" testduration="81.765" conditionals="6" coveredstatements="80" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testFloatLeg() : void" num="52" testsuccess="true" count="1" testduration="41.769" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFixLeg() : void" num="124" testsuccess="true" count="1" testduration="39.996" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurve() : DiscountCurveInterpolation" num="186" count="4" type="method"/>
            <line num="187" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurve() : ForwardCurveInterpolation" num="194" count="4" type="method"/>
            <line num="195" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="213" count="2" type="method"/>
            <line num="216" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line falsecount="2" truecount="160" num="237" type="cond"/>
            <line num="238" count="160" type="stmt"/>
            <line falsecount="160" truecount="12800" num="238" type="cond"/>
            <line num="240" count="12800" type="stmt"/>
            <line num="241" count="12800" type="stmt"/>
            <line num="242" count="12800" type="stmt"/>
            <line num="244" count="12800" type="stmt"/>
            <line num="245" count="12800" type="stmt"/>
            <line falsecount="6320" truecount="6480" num="245" type="cond"/>
            <line num="246" count="6480" type="stmt"/>
            <line num="248" count="6320" type="stmt"/>
            <line num="252" count="12800" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="299" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/descriptor/MertonModelDescriptorTest.java" name="MertonModelDescriptorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="125" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="69" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="MertonModelDescriptorTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="1" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="82.19" conditionals="0" coveredstatements="23" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="58" testsuccess="true" count="1" testduration="82.19" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="116" count="2" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/modelling/descriptor/VarianceGammaModelDescriptorTest.java" name="VarianceGammaModelDescriptorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="123" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="67" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="VarianceGammaModelDescriptorTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="1" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="40.11" conditionals="0" coveredstatements="23" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="52" testsuccess="true" count="1" testduration="40.11" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="114" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation">
         <metrics coveredelements="858" complexity="129" loc="3325" methods="73" classes="14" statements="1053" coveredconditionals="35" coveredmethods="57" elements="1184" ncloc="1919" files="14" conditionals="58" coveredstatements="766"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/BachelierModelMonteCarloValuationTest.java" name="BachelierModelMonteCarloValuationTest.java">
            <metrics coveredelements="129" coveredconditionals="9" complexity="33" loc="564" coveredmethods="11" methods="16" elements="225" classes="1" ncloc="325" statements="193" conditionals="16" coveredstatements="109"/>
            <class name="BachelierModelMonteCarloValuationTest">
               <metrics coveredelements="129" complexity="33" methods="16" testruns="20" statements="193" coveredconditionals="9" coveredmethods="11" elements="225" testfailures="0" testduration="28.748999999999995" conditionals="16" coveredstatements="109" testpasses="20"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="52" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BachelierModelMonteCarloValuationTest(RandomVariableFactory)" num="129" count="20" type="method"/>
            <line num="130" count="20" type="stmt"/>
            <line num="131" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="162" count="20" type="method"/>
            <line num="167" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="167" type="cond"/>
            <line num="169" count="20" type="stmt"/>
            <line num="172" count="20" type="stmt"/>
            <line num="175" count="20" type="stmt"/>
            <line num="177" count="20" type="stmt"/>
            <line num="180" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="186" count="4" type="method"/>
            <line num="192" count="4" type="stmt"/>
            <line num="195" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="197" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="212" type="cond"/>
            <line num="215" count="40" type="stmt"/>
            <line num="217" count="40" type="stmt"/>
            <line num="220" count="40" type="stmt"/>
            <line num="223" count="40" type="stmt"/>
            <line num="228" count="40" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="238" count="4" type="method"/>
            <line num="243" count="4" type="stmt"/>
            <line num="245" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="249" count="44" type="stmt"/>
            <line num="251" count="44" type="stmt"/>
            <line num="252" count="44" type="stmt"/>
            <line num="253" count="44" type="stmt"/>
            <line num="255" count="44" type="stmt"/>
            <line num="256" count="44" type="stmt"/>
            <line num="257" count="44" type="stmt"/>
            <line num="259" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="265" count="4" type="method"/>
            <line num="270" count="4" type="stmt"/>
            <line num="272" count="4" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line num="275" count="4" type="stmt"/>
            <line num="276" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="276" type="cond"/>
            <line num="277" count="400" type="stmt"/>
            <line num="280" count="4" type="stmt"/>
            <line num="281" count="4" type="stmt"/>
            <line num="283" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="300" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="360" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="403" count="4" type="method"/>
            <line num="409" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="414" count="4" type="stmt"/>
            <line num="416" count="4" type="stmt"/>
            <line num="417" count="4" type="stmt"/>
            <line num="418" count="4" type="stmt"/>
            <line num="421" count="4" type="stmt"/>
            <line num="422" count="4" type="stmt"/>
            <line num="424" count="4" type="stmt"/>
            <line num="425" count="4" type="stmt"/>
            <line num="426" count="4" type="stmt"/>
            <line num="428" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="428" type="cond"/>
            <line num="431" count="72" type="stmt"/>
            <line num="434" count="72" type="stmt"/>
            <line num="436" count="72" type="stmt"/>
            <line num="437" count="72" type="stmt"/>
            <line num="439" count="72" type="stmt"/>
            <line num="441" count="72" type="stmt"/>
            <line num="442" count="72" type="stmt"/>
            <line num="443" count="72" type="stmt"/>
            <line num="446" count="72" type="stmt"/>
            <line num="449" count="72" type="stmt"/>
            <line num="456" count="72" type="stmt"/>
            <line num="459" count="72" type="stmt"/>
            <line num="466" count="72" type="stmt"/>
            <line num="468" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="474" count="4" type="method"/>
            <line num="480" count="4" type="stmt"/>
            <line num="483" count="4" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="485" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line num="495" count="4" type="stmt"/>
            <line num="496" count="4" type="stmt"/>
            <line num="497" count="4" type="stmt"/>
            <line num="498" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="498" type="cond"/>
            <line num="501" count="72" type="stmt"/>
            <line num="504" count="72" type="stmt"/>
            <line num="506" count="72" type="stmt"/>
            <line num="507" count="72" type="stmt"/>
            <line num="509" count="72" type="stmt"/>
            <line num="511" count="72" type="stmt"/>
            <line num="512" count="72" type="stmt"/>
            <line num="513" count="72" type="stmt"/>
            <line num="516" count="72" type="stmt"/>
            <line num="518" count="72" type="stmt"/>
            <line num="519" count="72" type="stmt"/>
            <line num="521" count="72" type="stmt"/>
            <line num="529" count="72" type="stmt"/>
            <line num="532" count="72" type="stmt"/>
            <line num="539" count="72" type="stmt"/>
            <line num="541" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="547" count="12" type="method"/>
            <line num="548" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="554" count="12" type="method"/>
            <line num="555" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="561" count="12" type="method"/>
            <line num="562" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/BlackScholesMonteCarloValuationTest.java" name="BlackScholesMonteCarloValuationTest.java">
            <metrics coveredelements="135" coveredconditionals="9" complexity="30" loc="542" coveredmethods="9" methods="13" elements="209" classes="1" ncloc="306" statements="180" conditionals="16" coveredstatements="117"/>
            <class name="BlackScholesMonteCarloValuationTest">
               <metrics coveredelements="135" complexity="30" methods="13" testruns="24" statements="180" coveredconditionals="9" coveredmethods="9" elements="209" testfailures="0" testduration="22.142" conditionals="16" coveredstatements="117" testpasses="24"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="53" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesMonteCarloValuationTest(RandomVariableFactory)" num="130" count="24" type="method"/>
            <line num="131" count="24" type="stmt"/>
            <line num="132" count="24" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="163" count="24" type="method"/>
            <line num="168" count="24" type="stmt"/>
            <line falsecount="0" truecount="24" num="168" type="cond"/>
            <line num="170" count="24" type="stmt"/>
            <line num="173" count="24" type="stmt"/>
            <line num="176" count="24" type="stmt"/>
            <line num="178" count="24" type="stmt"/>
            <line num="181" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="187" count="4" type="method"/>
            <line num="193" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="197" count="4" type="stmt"/>
            <line num="198" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="202" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="213" type="cond"/>
            <line num="216" count="72" type="stmt"/>
            <line num="218" count="72" type="stmt"/>
            <line num="221" count="72" type="stmt"/>
            <line num="224" count="72" type="stmt"/>
            <line num="229" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="238" count="4" type="method"/>
            <line num="243" count="4" type="stmt"/>
            <line num="245" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="249" count="44" type="stmt"/>
            <line num="251" count="44" type="stmt"/>
            <line num="252" count="44" type="stmt"/>
            <line num="253" count="44" type="stmt"/>
            <line num="255" count="44" type="stmt"/>
            <line num="256" count="44" type="stmt"/>
            <line num="257" count="44" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="264" count="4" type="method"/>
            <line num="269" count="4" type="stmt"/>
            <line num="271" count="4" type="stmt"/>
            <line num="273" count="4" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line num="275" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="275" type="cond"/>
            <line num="276" count="400" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="292" count="4" type="method"/>
            <line num="297" count="4" type="stmt"/>
            <line num="302" count="4" type="stmt"/>
            <line num="303" count="4" type="stmt"/>
            <line num="308" count="4" type="stmt"/>
            <line num="309" count="4" type="stmt"/>
            <line num="314" count="4" type="stmt"/>
            <line num="316" count="4" type="stmt"/>
            <line num="317" count="4" type="stmt"/>
            <line num="322" count="4" type="stmt"/>
            <line num="323" count="4" type="stmt"/>
            <line num="324" count="4" type="stmt"/>
            <line num="327" count="4" type="stmt"/>
            <line num="328" count="4" type="stmt"/>
            <line num="331" count="4" type="stmt"/>
            <line num="332" count="4" type="stmt"/>
            <line num="337" count="4" type="stmt"/>
            <line num="338" count="4" type="stmt"/>
            <line num="339" count="4" type="stmt"/>
            <line num="341" count="4" type="stmt"/>
            <line num="342" count="4" type="stmt"/>
            <line num="343" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="351" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="394" count="4" type="method"/>
            <line num="400" count="4" type="stmt"/>
            <line num="403" count="4" type="stmt"/>
            <line num="404" count="4" type="stmt"/>
            <line num="405" count="4" type="stmt"/>
            <line num="410" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="416" count="4" type="stmt"/>
            <line num="417" count="4" type="stmt"/>
            <line num="419" count="4" type="stmt"/>
            <line num="420" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="420" type="cond"/>
            <line num="423" count="72" type="stmt"/>
            <line num="426" count="72" type="stmt"/>
            <line num="428" count="72" type="stmt"/>
            <line num="429" count="72" type="stmt"/>
            <line num="430" count="72" type="stmt"/>
            <line num="432" count="72" type="stmt"/>
            <line num="433" count="72" type="stmt"/>
            <line num="434" count="72" type="stmt"/>
            <line num="437" count="72" type="stmt"/>
            <line num="440" count="72" type="stmt"/>
            <line num="447" count="72" type="stmt"/>
            <line num="450" count="72" type="stmt"/>
            <line num="451" count="72" type="stmt"/>
            <line num="454" count="72" type="stmt"/>
            <line num="455" count="72" type="stmt"/>
            <line num="458" count="72" type="stmt"/>
            <line num="468" count="72" type="stmt"/>
            <line num="470" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="476" count="4" type="method"/>
            <line num="482" count="4" type="stmt"/>
            <line num="485" count="4" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="494" count="4" type="stmt"/>
            <line num="495" count="4" type="stmt"/>
            <line num="498" count="4" type="stmt"/>
            <line num="499" count="4" type="stmt"/>
            <line num="501" count="4" type="stmt"/>
            <line num="502" count="4" type="stmt"/>
            <line falsecount="4" truecount="72" num="502" type="cond"/>
            <line num="505" count="72" type="stmt"/>
            <line num="508" count="72" type="stmt"/>
            <line num="510" count="72" type="stmt"/>
            <line num="511" count="72" type="stmt"/>
            <line num="513" count="72" type="stmt"/>
            <line num="515" count="72" type="stmt"/>
            <line num="516" count="72" type="stmt"/>
            <line num="517" count="72" type="stmt"/>
            <line num="520" count="72" type="stmt"/>
            <line num="523" count="72" type="stmt"/>
            <line num="530" count="72" type="stmt"/>
            <line num="533" count="72" type="stmt"/>
            <line num="538" count="72" type="stmt"/>
            <line num="540" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/DisplacedLognomalModelTest.java" name="DisplacedLognomalModelTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="4" loc="159" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="93" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="DisplacedLognomalModelTest">
               <metrics coveredelements="33" complexity="4" methods="4" testruns="3" statements="29" coveredconditionals="0" coveredmethods="4" elements="33" testfailures="0" testduration="4.526" conditionals="0" coveredstatements="29" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="68" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModelTest(double)" num="81" count="3" type="method"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductImplementation() : void" num="86" count="3" type="method"/>
            <line num="89" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line num="98" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="141" count="3" type="stmt"/>
            <line num="142" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line num="149" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMonteCarloSimulationFromModel(ProcessModel,BrownianMotion) : AssetModelMonteCarloSimulationModel" num="152" count="12" type="method"/>
            <line num="154" count="12" type="stmt"/>
            <line num="157" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/HestonModelTest.java" name="HestonModelTest.java">
            <metrics coveredelements="38" coveredconditionals="4" complexity="6" loc="160" coveredmethods="4" methods="4" elements="38" classes="1" ncloc="99" statements="30" conditionals="4" coveredstatements="30"/>
            <class name="HestonModelTest">
               <metrics coveredelements="38" complexity="6" methods="4" testruns="2" statements="30" coveredconditionals="4" coveredmethods="4" elements="38" testfailures="0" testduration="23.741" conditionals="4" coveredstatements="30" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="50" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModelTest(double)" num="85" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="90" count="2" type="method"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="117" type="cond"/>
            <line num="122" count="14" type="stmt"/>
            <line num="125" count="14" type="stmt"/>
            <line num="126" count="14" type="stmt"/>
            <line num="127" count="14" type="stmt"/>
            <line num="130" count="14" type="stmt"/>
            <line num="131" count="14" type="stmt"/>
            <line num="136" count="14" type="stmt"/>
            <line num="137" count="14" type="stmt"/>
            <line num="138" count="14" type="stmt"/>
            <line num="140" count="14" type="stmt"/>
            <line num="143" count="14" type="stmt"/>
            <line falsecount="7" truecount="7" num="143" type="cond"/>
            <line num="144" count="7" type="stmt"/>
            <line num="147" count="7" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMonteCarloSimulationFromModel(ProcessModel,BrownianMotion) : AssetModelMonteCarloSimulationModel" num="153" count="4" type="method"/>
            <line num="155" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/InhomogenousBachelierModelMonteCarloValuationTest.java" name="InhomogenousBachelierModelMonteCarloValuationTest.java">
            <metrics coveredelements="127" coveredconditionals="9" complexity="32" loc="543" coveredmethods="10" methods="15" elements="225" classes="1" ncloc="306" statements="194" conditionals="16" coveredstatements="108"/>
            <class name="InhomogenousBachelierModelMonteCarloValuationTest">
               <metrics coveredelements="127" complexity="32" methods="15" testruns="5" statements="194" coveredconditionals="9" coveredmethods="10" elements="225" testfailures="0" testduration="8.219999999999999" conditionals="16" coveredstatements="108" testpasses="5"/>
            </class>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModelMonteCarloValuationTest()" num="109" count="5" type="method"/>
            <line num="110" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="141" count="5" type="method"/>
            <line num="146" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="146" type="cond"/>
            <line num="148" count="5" type="stmt"/>
            <line num="151" count="5" type="stmt"/>
            <line num="154" count="5" type="stmt"/>
            <line num="156" count="5" type="stmt"/>
            <line num="159" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="165" testsuccess="true" count="1" testduration="0.391" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="191" type="cond"/>
            <line num="194" count="10" type="stmt"/>
            <line num="196" count="10" type="stmt"/>
            <line num="199" count="10" type="stmt"/>
            <line num="202" count="10" type="stmt"/>
            <line num="207" count="10" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="217" testsuccess="true" count="1" testduration="0.419" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="11" type="stmt"/>
            <line num="229" count="11" type="stmt"/>
            <line num="231" count="11" type="stmt"/>
            <line num="232" count="11" type="stmt"/>
            <line num="233" count="11" type="stmt"/>
            <line num="235" count="11" type="stmt"/>
            <line num="236" count="11" type="stmt"/>
            <line num="237" count="11" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="245" testsuccess="true" count="1" testduration="0.625" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="256" type="cond"/>
            <line num="257" count="100" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="280" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="348" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="383" testsuccess="true" count="1" testduration="3.171" type="method"/>
            <line num="389" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line falsecount="1" truecount="18" num="407" type="cond"/>
            <line num="410" count="18" type="stmt"/>
            <line num="413" count="18" type="stmt"/>
            <line num="415" count="18" type="stmt"/>
            <line num="416" count="18" type="stmt"/>
            <line num="418" count="18" type="stmt"/>
            <line num="420" count="18" type="stmt"/>
            <line num="421" count="18" type="stmt"/>
            <line num="422" count="18" type="stmt"/>
            <line num="425" count="18" type="stmt"/>
            <line num="428" count="18" type="stmt"/>
            <line num="435" count="18" type="stmt"/>
            <line num="438" count="18" type="stmt"/>
            <line num="445" count="18" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="453" testsuccess="true" count="1" testduration="3.614" type="method"/>
            <line num="459" count="1" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line num="466" count="1" type="stmt"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="476" count="1" type="stmt"/>
            <line num="477" count="1" type="stmt"/>
            <line falsecount="1" truecount="18" num="477" type="cond"/>
            <line num="480" count="18" type="stmt"/>
            <line num="483" count="18" type="stmt"/>
            <line num="485" count="18" type="stmt"/>
            <line num="486" count="18" type="stmt"/>
            <line num="488" count="18" type="stmt"/>
            <line num="490" count="18" type="stmt"/>
            <line num="491" count="18" type="stmt"/>
            <line num="492" count="18" type="stmt"/>
            <line num="495" count="18" type="stmt"/>
            <line num="497" count="18" type="stmt"/>
            <line num="498" count="18" type="stmt"/>
            <line num="500" count="18" type="stmt"/>
            <line num="508" count="18" type="stmt"/>
            <line num="511" count="18" type="stmt"/>
            <line num="518" count="18" type="stmt"/>
            <line num="520" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="526" count="3" type="method"/>
            <line num="527" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="533" count="3" type="method"/>
            <line num="534" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="540" count="3" type="method"/>
            <line num="541" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MertonModelTest.java" name="MertonModelTest.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="2" loc="134" coveredmethods="1" methods="1" elements="36" classes="1" ncloc="79" statements="33" conditionals="2" coveredstatements="33"/>
            <class name="MertonModelTest">
               <metrics coveredelements="36" complexity="2" methods="1" testruns="1" statements="33" coveredconditionals="2" coveredmethods="1" elements="36" testfailures="0" testduration="20.285" conditionals="2" coveredstatements="33" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="58" testsuccess="true" count="1" testduration="20.285" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="111" type="cond"/>
            <line num="112" count="20" type="stmt"/>
            <line num="113" count="20" type="stmt"/>
            <line num="114" count="20" type="stmt"/>
            <line num="115" count="20" type="stmt"/>
            <line num="116" count="20" type="stmt"/>
            <line num="118" count="20" type="stmt"/>
            <line num="119" count="20" type="stmt"/>
            <line num="120" count="20" type="stmt"/>
            <line num="122" count="20" type="stmt"/>
            <line num="123" count="20" type="stmt"/>
            <line num="124" count="20" type="stmt"/>
            <line num="126" count="20" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelAsianOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelAsianOptionSensitivitiesTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="3" loc="158" coveredmethods="3" methods="3" elements="57" classes="1" ncloc="96" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="MonteCarloBlackScholesModelAsianOptionSensitivitiesTest">
               <metrics coveredelements="57" complexity="3" methods="3" testruns="1" statements="54" coveredconditionals="0" coveredmethods="3" elements="57" testfailures="0" testduration="0.545" conditionals="0" coveredstatements="54" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="55" testsuccess="true" count="1" testduration="0.545" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsageReset() : void" num="144" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsagePeak() : long" num="150" count="1" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="8" type="stmt"/>
            <line num="154" count="8" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs.java" name="MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="151" coveredmethods="0" methods="2" elements="58" classes="1" ncloc="90" statements="54" conditionals="2" coveredstatements="0"/>
            <class name="MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="58" statements="54" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="53" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="testProductAADSensitivities() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="1" loc="126" coveredmethods="1" methods="1" elements="40" classes="1" ncloc="71" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest">
               <metrics coveredelements="40" complexity="1" methods="1" testruns="1" statements="39" coveredconditionals="0" coveredmethods="1" elements="40" testfailures="0" testduration="1.157" conditionals="0" coveredstatements="39" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="51" testsuccess="true" count="1" testduration="1.157" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest.java">
            <metrics coveredelements="83" coveredconditionals="0" complexity="2" loc="205" coveredmethods="2" methods="2" elements="83" classes="1" ncloc="118" statements="81" conditionals="0" coveredstatements="81"/>
            <class name="MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest">
               <metrics coveredelements="83" complexity="2" methods="2" testruns="2" statements="81" coveredconditionals="0" coveredmethods="2" elements="83" testfailures="0" testduration="24.893" conditionals="0" coveredstatements="81" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="53" testsuccess="true" count="1" testduration="12.585" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSensitivities() : void" num="145" testsuccess="true" count="1" testduration="12.308" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="3" loc="159" coveredmethods="3" methods="3" elements="57" classes="1" ncloc="97" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest">
               <metrics coveredelements="57" complexity="3" methods="3" testruns="1" statements="54" coveredconditionals="0" coveredmethods="3" elements="57" testfailures="0" testduration="0.57" conditionals="0" coveredstatements="54" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="56" testsuccess="true" count="1" testduration="0.57" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsageReset() : void" num="145" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsagePeak() : long" num="151" count="1" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="8" type="stmt"/>
            <line num="155" count="8" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelSensitivitiesTest.java" name="MonteCarloBlackScholesModelSensitivitiesTest.java">
            <metrics coveredelements="83" coveredconditionals="0" complexity="6" loc="219" coveredmethods="6" methods="6" elements="83" classes="1" ncloc="135" statements="77" conditionals="0" coveredstatements="77"/>
            <class name="MonteCarloBlackScholesModelSensitivitiesTest">
               <metrics coveredelements="83" complexity="6" methods="6" testruns="3" statements="77" coveredconditionals="0" coveredmethods="6" elements="83" testfailures="0" testduration="8.379000000000001" conditionals="0" coveredstatements="77" testpasses="3"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 49()" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="59" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModelSensitivitiesTest(MonteCarloProduct)" num="85" count="3" type="method"/>
            <line num="86" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="89" count="3" type="method"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="95" count="3" type="stmt"/>
            <line num="96" count="3" type="stmt"/>
            <line num="97" count="3" type="stmt"/>
            <line num="98" count="3" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line num="104" count="3" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSensitivitiesViaFiniteDifferences() : Map&lt;String, Double&gt;" num="122" count="3" type="method"/>
            <line num="123" count="3" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="131" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="158" count="3" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="163" count="3" type="stmt"/>
            <line num="164" count="3" type="stmt"/>
            <line num="166" count="3" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line num="168" count="3" type="stmt"/>
            <line num="170" count="3" type="stmt"/>
            <line num="171" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSensitivitiesViaAAD() : Map&lt;String, Double&gt;" num="179" count="3" type="method"/>
            <line num="180" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line num="188" count="3" type="stmt"/>
            <line num="191" count="3" type="stmt"/>
            <line num="194" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line num="199" count="3" type="stmt"/>
            <line num="204" count="3" type="stmt"/>
            <line num="206" count="3" type="stmt"/>
            <line num="207" count="3" type="stmt"/>
            <line num="208" count="3" type="stmt"/>
            <line num="209" count="3" type="stmt"/>
            <line num="211" count="3" type="stmt"/>
            <line num="212" count="3" type="stmt"/>
            <line num="213" count="3" type="stmt"/>
            <line num="214" count="3" type="stmt"/>
            <line num="215" count="3" type="stmt"/>
            <line num="217" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelTest.java" name="MonteCarloBlackScholesModelTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="121" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="57" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="MonteCarloBlackScholesModelTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="2" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="0.363" conditionals="0" coveredstatements="23" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testDirectValuation() : void" num="49" testsuccess="true" count="1" testduration="0.226" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductImplementation() : void" num="78" testsuccess="true" count="1" testduration="0.137" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/VarianceGammaModelTest.java" name="VarianceGammaModelTest.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="2" loc="84" coveredmethods="1" methods="1" elements="15" classes="1" ncloc="47" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="VarianceGammaModelTest">
               <metrics coveredelements="15" complexity="2" methods="1" testruns="1" statements="12" coveredconditionals="2" coveredmethods="1" elements="15" testfailures="0" testduration="3.269" conditionals="2" coveredstatements="12" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="42" testsuccess="true" count="1" testduration="3.269" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line falsecount="1" truecount="7" num="61" type="cond"/>
            <line num="65" count="7" type="stmt"/>
            <line num="68" count="7" type="stmt"/>
            <line num="73" count="7" type="stmt"/>
            <line num="74" count="7" type="stmt"/>
            <line num="77" count="7" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatilities">
         <metrics coveredelements="174" complexity="16" loc="446" methods="11" classes="3" statements="156" coveredconditionals="10" coveredmethods="10" elements="177" ncloc="289" files="3" conditionals="10" coveredstatements="154"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricCalibrationTest.java" name="CapletVolatilitiesParametricCalibrationTest.java">
            <metrics coveredelements="84" coveredconditionals="8" complexity="8" loc="252" coveredmethods="3" methods="4" elements="87" classes="1" ncloc="161" statements="75" conditionals="8" coveredstatements="73"/>
            <class name="CapletVolatilitiesParametricCalibrationTest">
               <metrics coveredelements="84" complexity="8" methods="4" testruns="2" statements="75" coveredconditionals="8" coveredmethods="3" elements="87" testfailures="0" testduration="448.679" conditionals="8" coveredstatements="73" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="61" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricCalibrationTest(QuotingConvention)" num="71" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testVolatilityCalibration() : void" num="93" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line falsecount="2" truecount="26" num="158" type="cond"/>
            <line num="159" count="26" type="stmt"/>
            <line num="160" count="26" type="stmt"/>
            <line num="161" count="26" type="stmt"/>
            <line num="162" count="26" type="stmt"/>
            <line num="172" count="26" type="stmt"/>
            <line num="173" count="26" type="stmt"/>
            <line num="176" count="26" type="stmt"/>
            <line num="178" count="26" type="stmt"/>
            <line num="179" count="26" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line falsecount="2" truecount="26" num="187" type="cond"/>
            <line num="188" count="26" type="stmt"/>
            <line num="189" count="26" type="stmt"/>
            <line num="190" count="26" type="stmt"/>
            <line num="191" count="26" type="stmt"/>
            <line num="200" count="26" type="stmt"/>
            <line num="201" count="26" type="stmt"/>
            <line num="202" count="26" type="stmt"/>
            <line num="204" count="26" type="stmt"/>
            <line num="205" count="26" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line falsecount="2" truecount="26" num="216" type="cond"/>
            <line num="217" count="26" type="stmt"/>
            <line num="218" count="26" type="stmt"/>
            <line num="220" count="26" type="stmt"/>
            <line num="221" count="26" type="stmt"/>
            <line num="223" count="26" type="stmt"/>
            <line num="224" count="26" type="stmt"/>
            <line num="225" count="26" type="stmt"/>
            <line num="226" count="26" type="stmt"/>
            <line num="227" count="26" type="stmt"/>
            <line num="228" count="26" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="239" type="cond"/>
            <line num="241" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricTest.java" name="CapletVolatilitiesParametricTest.java">
            <metrics coveredelements="62" coveredconditionals="2" complexity="7" loc="129" coveredmethods="6" methods="6" elements="62" classes="1" ncloc="86" statements="54" conditionals="2" coveredstatements="54"/>
            <class name="CapletVolatilitiesParametricTest">
               <metrics coveredelements="62" complexity="7" methods="6" testruns="5" statements="54" coveredconditionals="2" coveredmethods="6" elements="62" testfailures="0" testduration="0.236" conditionals="2" coveredstatements="54" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testFlatVolatilityUsingD() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatVolatilityUsingA() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDecayVolatility() : void" num="57" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegratedFourParameterExponentialVolatilityParamSet1() : void" num="70" testsuccess="true" count="1" testduration="0.181" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegratedFourParameterExponentialVolatilityParamSetCZero() : void" num="80" testsuccess="true" count="1" testduration="0.05" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="testIntegratedFourParameterExponentialVolatility(double,double,double,double) : void" num="90" count="2" type="method"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="101" type="cond"/>
            <line num="103" count="2000" type="stmt"/>
            <line num="104" count="2000" type="stmt"/>
            <line num="105" count="2000" type="stmt"/>
            <line num="106" count="2000" type="stmt"/>
            <line num="108" count="2000" type="stmt"/>
            <line num="109" count="2000" type="stmt"/>
            <line num="110" count="2000" type="stmt"/>
            <line num="111" count="2000" type="stmt"/>
            <line num="113" count="2000" type="stmt"/>
            <line num="114" count="2000" type="stmt"/>
            <line num="115" count="2000" type="stmt"/>
            <line num="116" count="2000" type="stmt"/>
            <line num="118" count="2000" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesTest.java" name="CapletVolatilitiesTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="1" loc="65" coveredmethods="1" methods="1" elements="28" classes="1" ncloc="42" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="CapletVolatilitiesTest">
               <metrics coveredelements="28" complexity="1" methods="1" testruns="1" statements="27" coveredconditionals="0" coveredmethods="1" elements="28" testfailures="0" testduration="0.15" conditionals="0" coveredstatements="27" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testConversions() : void" num="25" testsuccess="true" count="1" testduration="0.15" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="72" type="stmt"/>
            <line num="52" count="72" type="stmt"/>
            <line num="53" count="72" type="stmt"/>
            <line num="54" count="72" type="stmt"/>
            <line num="55" count="72" type="stmt"/>
            <line num="56" count="72" type="stmt"/>
            <line num="57" count="72" type="stmt"/>
            <line num="59" count="72" type="stmt"/>
            <line num="60" count="72" type="stmt"/>
            <line num="61" count="72" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.products">
         <metrics coveredelements="181" complexity="27" loc="501" methods="12" classes="4" statements="179" coveredconditionals="10" coveredmethods="11" elements="219" ncloc="335" files="4" conditionals="28" coveredstatements="160"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesDeltaHedgedPortfolioTest.java" name="BlackScholesDeltaHedgedPortfolioTest.java">
            <metrics coveredelements="30" coveredconditionals="3" complexity="8" loc="106" coveredmethods="3" methods="3" elements="43" classes="1" ncloc="69" statements="30" conditionals="10" coveredstatements="24"/>
            <class name="BlackScholesDeltaHedgedPortfolioTest">
               <metrics coveredelements="30" complexity="8" methods="3" testruns="1" statements="30" coveredconditionals="3" coveredmethods="3" elements="43" testfailures="0" testduration="4.263" conditionals="10" coveredstatements="24" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesDeltaHedgedPortfolioTest()" num="39" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="46" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="testHedgePerformance() : void" num="62" testsuccess="true" count="1" testduration="4.263" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="99" type="cond"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/DeltaHedgedPortfolioWithAADTest.java" name="DeltaHedgedPortfolioWithAADTest.java">
            <metrics coveredelements="88" coveredconditionals="7" complexity="15" loc="242" coveredmethods="5" methods="5" elements="111" classes="1" ncloc="161" statements="88" conditionals="18" coveredstatements="76"/>
            <class name="DeltaHedgedPortfolioWithAADTest">
               <metrics coveredelements="88" complexity="15" methods="5" testruns="2" statements="88" coveredconditionals="7" coveredmethods="5" elements="111" testfailures="0" testduration="124.838" conditionals="18" coveredstatements="76" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="70" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAADTest(AssetModelMonteCarloSimulationModel,AssetMonteCarloProduct)" num="98" count="2" type="method"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBlackScholesModel() : AssetModelMonteCarloSimulationModel" num="105" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHestonModel() : AssetModelMonteCarloSimulationModel" num="135" count="2" type="method"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line complexity="11" visibility="public" signature="testHedgePerformance() : void" num="169" count="2" type="method"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="217" type="cond"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="221" type="cond"/>
            <line num="223" count="4" type="stmt"/>
            <line num="224" count="4" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="229" type="cond"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaPathwiseTest.java" name="EuropeanOptionVegaPathwiseTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="3" loc="80" coveredmethods="2" methods="3" elements="25" classes="1" ncloc="49" statements="22" conditionals="0" coveredstatements="21"/>
            <class name="EuropeanOptionVegaPathwiseTest">
               <metrics coveredelements="23" complexity="3" methods="3" testruns="1" statements="22" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="3.764" conditionals="0" coveredstatements="21" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="24" testsuccess="true" count="1" testduration="3.764" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getModel(double,double,double) : AssetModelMonteCarloSimulationModel" num="65" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/ForwardAgreementWithFundingRequirementTest.java" name="ForwardAgreementWithFundingRequirementTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="1" loc="73" coveredmethods="1" methods="1" elements="40" classes="1" ncloc="56" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="ForwardAgreementWithFundingRequirementTest">
               <metrics coveredelements="40" complexity="1" methods="1" testruns="1" statements="39" coveredconditionals="0" coveredmethods="1" elements="40" testfailures="0" testduration="1.558" conditionals="0" coveredstatements="39" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="19" testsuccess="true" count="1" testduration="1.558" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference">
         <metrics coveredelements="90" complexity="8" loc="183" methods="4" classes="2" statements="78" coveredconditionals="8" coveredmethods="4" elements="90" ncloc="156" files="2" conditionals="8" coveredstatements="78"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/finitedifference/BlackScholesThetaTest.java" name="BlackScholesThetaTest.java">
            <metrics coveredelements="44" coveredconditionals="4" complexity="4" loc="91" coveredmethods="2" methods="2" elements="44" classes="1" ncloc="76" statements="38" conditionals="4" coveredstatements="38"/>
            <class name="BlackScholesThetaTest">
               <metrics coveredelements="44" complexity="4" methods="2" testruns="2" statements="38" coveredconditionals="4" coveredmethods="2" elements="44" testfailures="0" testduration="0.357" conditionals="4" coveredstatements="38" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testEuropeanCallOption() : void" num="17" testsuccess="true" count="1" testduration="0.25" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line falsecount="1" truecount="119" num="45" type="cond"/>
            <line num="46" count="119" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanPutOption() : void" num="55" testsuccess="true" count="1" testduration="0.107" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line falsecount="1" truecount="119" num="82" type="cond"/>
            <line num="83" count="119" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/finitedifference/ConstantElasticityOfVarianceThetaTest.java" name="ConstantElasticityOfVarianceThetaTest.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="4" loc="92" coveredmethods="2" methods="2" elements="46" classes="1" ncloc="80" statements="40" conditionals="4" coveredstatements="40"/>
            <class name="ConstantElasticityOfVarianceThetaTest">
               <metrics coveredelements="46" complexity="4" methods="2" testruns="2" statements="40" coveredconditionals="4" coveredmethods="2" elements="46" testfailures="0" testduration="1.3519999999999999" conditionals="4" coveredstatements="40" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testEuropeanCallOption() : void" num="17" testsuccess="true" count="1" testduration="0.762" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line falsecount="1" truecount="159" num="47" type="cond"/>
            <line num="48" count="159" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanPutOption() : void" num="55" testsuccess="true" count="1" testduration="0.59" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="159" num="85" type="cond"/>
            <line num="86" count="159" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo">
         <metrics coveredelements="261" complexity="35" loc="683" methods="23" classes="4" statements="220" coveredconditionals="20" coveredmethods="23" elements="263" ncloc="432" files="4" conditionals="20" coveredstatements="218"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/BrownianMotionTest.java" name="BrownianMotionTest.java">
            <metrics coveredelements="128" coveredconditionals="12" complexity="16" loc="296" coveredmethods="8" methods="8" elements="130" classes="1" ncloc="205" statements="110" conditionals="12" coveredstatements="108"/>
            <class name="BrownianMotionTest">
               <metrics coveredelements="128" complexity="16" methods="8" testruns="20" statements="110" coveredconditionals="12" coveredmethods="8" elements="130" testfailures="0" testduration="405.54100000000005" conditionals="12" coveredstatements="108" testpasses="20"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="45" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionTest(RandomVariableFactory)" num="56" count="20" type="method"/>
            <line num="57" count="20" type="stmt"/>
            <line num="58" count="20" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDensity() : void" num="65" count="4" type="method"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line falsecount="4" truecount="36" num="74" type="cond"/>
            <line num="75" count="36" type="stmt"/>
            <line num="76" count="36" type="stmt"/>
            <line num="78" count="36" type="stmt"/>
            <line num="79" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="80" count="3636" type="method"/>
            <line num="81" count="3636" type="stmt"/>
            <line num="84" count="36" type="stmt"/>
            <line falsecount="36" truecount="3636" num="84" type="cond"/>
            <line num="85" count="3636" type="stmt"/>
            <line num="86" count="3636" type="stmt"/>
            <line num="88" count="3636" type="stmt"/>
            <line num="89" count="3636" type="stmt"/>
            <line num="91" count="3636" type="stmt"/>
            <line num="93" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="testScalarValuedBrownianMotionTerminalDistribution() : void" num="97" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line falsecount="4" truecount="24" num="109" type="cond"/>
            <line num="112" count="24" type="stmt"/>
            <line num="120" count="24" type="stmt"/>
            <line num="122" count="24" type="stmt"/>
            <line num="124" count="24" type="stmt"/>
            <line num="125" count="24" type="stmt"/>
            <line num="127" count="24" type="stmt"/>
            <line num="129" count="24" type="stmt"/>
            <line num="130" count="24" type="stmt"/>
            <line num="132" count="24" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="testScalarValuedBrownianMotionWithJarqueBeraTest() : void" num="138" count="4" type="method"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line num="149" count="4" type="stmt"/>
            <line num="152" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line num="162" count="4" type="stmt"/>
            <line falsecount="4" truecount="960" num="162" type="cond"/>
            <line num="163" count="960" type="stmt"/>
            <line num="164" count="960" type="stmt"/>
            <line num="166" count="960" type="stmt"/>
            <line num="167" count="960" type="stmt"/>
            <line falsecount="872" truecount="88" num="167" type="cond"/>
            <line num="168" count="88" type="stmt"/>
            <line num="169" count="88" type="stmt"/>
            <line num="172" count="872" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBrownianIncrementSquaredDrift() : void" num="183" count="4" type="method"/>
            <line num="186" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line num="189" count="4" type="stmt"/>
            <line num="190" count="4" type="stmt"/>
            <line num="193" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line falsecount="4" truecount="16000" num="209" type="cond"/>
            <line num="210" count="16000" type="stmt"/>
            <line num="211" count="16000" type="stmt"/>
            <line num="214" count="16000" type="stmt"/>
            <line num="215" count="16000" type="stmt"/>
            <line num="218" count="16000" type="stmt"/>
            <line num="219" count="16000" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="223" count="4" type="stmt"/>
            <line num="224" count="4" type="stmt"/>
            <line num="225" count="4" type="stmt"/>
            <line num="226" count="4" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="235" count="4" type="stmt"/>
            <line num="237" count="4" type="stmt"/>
            <line num="240" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSerialization() : void" num="243" count="4" type="method"/>
            <line num="246" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="249" count="4" type="stmt"/>
            <line num="250" count="4" type="stmt"/>
            <line num="253" count="4" type="stmt"/>
            <line num="256" count="4" type="stmt"/>
            <line num="264" count="4" type="stmt"/>
            <line num="269" count="4" type="stmt"/>
            <line num="270" count="4" type="stmt"/>
            <line num="271" count="4" type="stmt"/>
            <line num="272" count="4" type="stmt"/>
            <line num="273" count="4" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="282" count="4" type="stmt"/>
            <line num="283" count="4" type="stmt"/>
            <line num="284" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="4" type="stmt"/>
            <line num="292" count="4" type="stmt"/>
            <line num="293" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/GammaProcessTest.java" name="GammaProcessTest.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="2" loc="71" coveredmethods="1" methods="1" elements="20" classes="1" ncloc="47" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="GammaProcessTest">
               <metrics coveredelements="20" complexity="2" methods="1" testruns="1" statements="17" coveredconditionals="2" coveredmethods="1" elements="20" testfailures="0" testduration="5.979" conditionals="2" coveredstatements="17" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testScaling() : void" num="27" testsuccess="true" count="1" testduration="5.979" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000" num="65" type="cond"/>
            <line num="66" count="10000" type="stmt"/>
            <line num="67" count="10000" type="stmt"/>
            <line num="68" count="10000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/RandomVariableTest.java" name="RandomVariableTest.java">
            <metrics coveredelements="77" coveredconditionals="2" complexity="12" loc="229" coveredmethods="11" methods="11" elements="77" classes="1" ncloc="130" statements="64" conditionals="2" coveredstatements="64"/>
            <class name="RandomVariableTest">
               <metrics coveredelements="77" complexity="12" methods="11" testruns="45" statements="64" coveredconditionals="2" coveredmethods="11" elements="77" testfailures="0" testduration="32.465999999999994" conditionals="2" coveredstatements="64" testpasses="45"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="33" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableTest(RandomVariableFactory)" num="45" count="45" type="method"/>
            <line num="46" count="45" type="stmt"/>
            <line num="47" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableDeterministc() : void" num="51" count="5" type="method"/>
            <line num="55" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line num="59" count="5" type="stmt"/>
            <line num="60" count="5" type="stmt"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line num="68" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStochastic() : void" num="71" count="5" type="method"/>
            <line num="75" count="5" type="stmt"/>
            <line num="79" count="5" type="stmt"/>
            <line num="80" count="5" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line num="86" count="5" type="stmt"/>
            <line num="89" count="5" type="stmt"/>
            <line num="90" count="5" type="stmt"/>
            <line num="93" count="5" type="stmt"/>
            <line num="96" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSqrtPow() : void" num="99" count="5" type="method"/>
            <line num="103" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line num="110" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSquaredPow() : void" num="113" count="5" type="method"/>
            <line num="117" count="5" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line num="124" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStandardDeviation() : void" num="127" count="5" type="method"/>
            <line num="131" count="5" type="stmt"/>
            <line num="134" count="5" type="stmt"/>
            <line num="135" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetQuantile() : void" num="142" count="5" type="method"/>
            <line num="145" count="5" type="stmt"/>
            <line num="146" count="5" type="stmt"/>
            <line num="148" count="5" type="stmt"/>
            <line num="149" count="5" type="stmt"/>
            <line num="150" count="5" type="stmt"/>
            <line falsecount="5" truecount="50000000" num="150" type="cond"/>
            <line num="151" count="50000000" type="stmt"/>
            <line num="152" count="50000000" type="stmt"/>
            <line num="155" count="5" type="stmt"/>
            <line num="157" count="5" type="stmt"/>
            <line num="158" count="5" type="stmt"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line num="163" count="5" type="stmt"/>
            <line num="164" count="5" type="stmt"/>
            <line num="166" count="5" type="stmt"/>
            <line num="167" count="5" type="stmt"/>
            <line num="169" count="5" type="stmt"/>
            <line num="170" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="173" count="5" type="method"/>
            <line num="177" count="5" type="stmt"/>
            <line num="180" count="5" type="stmt"/>
            <line num="183" count="5" type="stmt"/>
            <line num="186" count="5" type="stmt"/>
            <line num="189" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCap() : void" num="192" count="5" type="method"/>
            <line num="196" count="5" type="stmt"/>
            <line num="199" count="5" type="stmt"/>
            <line num="202" count="5" type="stmt"/>
            <line num="205" count="5" type="stmt"/>
            <line num="208" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloor() : void" num="211" count="5" type="method"/>
            <line num="215" count="5" type="stmt"/>
            <line num="218" count="5" type="stmt"/>
            <line num="221" count="5" type="stmt"/>
            <line num="224" count="5" type="stmt"/>
            <line num="227" count="5" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/VarianceGammaTest.java" name="VarianceGammaTest.java">
            <metrics coveredelements="36" coveredconditionals="4" complexity="5" loc="87" coveredmethods="3" methods="3" elements="36" classes="1" ncloc="50" statements="29" conditionals="4" coveredstatements="29"/>
            <class name="VarianceGammaTest">
               <metrics coveredelements="36" complexity="5" methods="3" testruns="1" statements="29" coveredconditionals="4" coveredmethods="3" elements="36" testfailures="0" testduration="2.208" conditionals="4" coveredstatements="29" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testCharacteristicFunction() : void" num="21" testsuccess="true" count="1" testduration="2.208" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line falsecount="1" truecount="99" num="46" type="cond"/>
            <line num="47" count="99" type="stmt"/>
            <line num="49" count="99" type="stmt"/>
            <line num="50" count="99" type="stmt"/>
            <line num="52" count="99" type="stmt"/>
            <line num="54" count="99" type="stmt"/>
            <line complexity="2" visibility="public" signature="characteristicFunctionByMonteCarlo(Complex,RandomVariable) : Complex" num="60" count="99" type="method"/>
            <line num="62" count="99" type="stmt"/>
            <line num="64" count="99" type="stmt"/>
            <line num="66" count="99" type="stmt"/>
            <line falsecount="99" truecount="990000" num="66" type="cond"/>
            <line num="67" count="990000" type="stmt"/>
            <line num="70" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunction(double,Complex,VarianceGammaProcess) : Complex" num="76" count="99" type="method"/>
            <line num="78" count="99" type="stmt"/>
            <line num="79" count="99" type="stmt"/>
            <line num="80" count="99" type="stmt"/>
            <line num="82" count="99" type="stmt"/>
            <line num="83" count="99" type="stmt"/>
            <line num="85" count="99" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.functions">
         <metrics coveredelements="564" complexity="85" loc="1041" methods="33" classes="6" statements="447" coveredconditionals="89" coveredmethods="33" elements="572" ncloc="738" files="6" conditionals="92" coveredstatements="442"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/functions/AnalyticFormulasTest.java" name="AnalyticFormulasTest.java">
            <metrics coveredelements="232" coveredconditionals="29" complexity="33" loc="371" coveredmethods="11" methods="11" elements="240" classes="1" ncloc="273" statements="197" conditionals="32" coveredstatements="192"/>
            <class name="AnalyticFormulasTest">
               <metrics coveredelements="232" complexity="33" methods="11" testruns="10" statements="197" coveredconditionals="29" coveredmethods="11" elements="240" testfailures="0" testduration="4.961" conditionals="32" coveredstatements="192" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testBlackModelDigitalCapletDelta() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="testBachelierOptionImpliedVolatility() : void" num="50" testsuccess="true" count="1" testduration="0.992" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="19" num="54" type="cond"/>
            <line num="55" count="19" type="stmt"/>
            <line falsecount="19" truecount="722" num="55" type="cond"/>
            <line num="56" count="722" type="stmt"/>
            <line falsecount="722" truecount="18050" num="56" type="cond"/>
            <line num="58" count="18050" type="stmt"/>
            <line num="60" count="18050" type="stmt"/>
            <line num="61" count="18050" type="stmt"/>
            <line num="62" count="18050" type="stmt"/>
            <line num="63" count="18050" type="stmt"/>
            <line num="65" count="18050" type="stmt"/>
            <line num="66" count="18050" type="stmt"/>
            <line num="68" count="18050" type="stmt"/>
            <line falsecount="18050" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="18050" type="stmt"/>
            <line complexity="5" visibility="public" signature="testBachelierOptionDelta() : void" num="77" testsuccess="true" count="1" testduration="0.034" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line falsecount="1" truecount="19" num="81" type="cond"/>
            <line num="82" count="19" type="stmt"/>
            <line falsecount="19" truecount="722" num="82" type="cond"/>
            <line num="83" count="722" type="stmt"/>
            <line falsecount="722" truecount="18050" num="83" type="cond"/>
            <line num="85" count="18050" type="stmt"/>
            <line num="87" count="18050" type="stmt"/>
            <line num="88" count="18050" type="stmt"/>
            <line num="89" count="18050" type="stmt"/>
            <line num="90" count="18050" type="stmt"/>
            <line num="92" count="18050" type="stmt"/>
            <line num="94" count="18050" type="stmt"/>
            <line num="95" count="18050" type="stmt"/>
            <line num="96" count="18050" type="stmt"/>
            <line num="97" count="18050" type="stmt"/>
            <line num="99" count="18050" type="stmt"/>
            <line falsecount="18050" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="18050" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSABRCalibration() : void" num="108" testsuccess="true" count="1" testduration="3.903" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line falsecount="1" truecount="500" num="132" type="cond"/>
            <line num="133" count="500" type="stmt"/>
            <line num="134" count="500" type="stmt"/>
            <line num="135" count="500" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="138" count="494801" type="method"/>
            <line num="140" count="494796" type="stmt"/>
            <line falsecount="494693" truecount="3441631" num="140" type="cond"/>
            <line num="141" count="3441264" type="stmt"/>
            <line num="142" count="3441027" type="stmt"/>
            <line num="146" count="500" type="stmt"/>
            <line num="148" count="500" type="stmt"/>
            <line num="150" count="500" type="stmt"/>
            <line num="152" count="500" type="stmt"/>
            <line falsecount="500" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSABRSkewApproximation() : void" num="158" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="161" type="cond"/>
            <line num="162" count="3" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line num="198" count="3" type="stmt"/>
            <line num="199" count="3" type="stmt"/>
            <line num="200" count="3" type="stmt"/>
            <line num="202" count="3" type="stmt"/>
            <line num="203" count="3" type="stmt"/>
            <line num="205" count="3" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSABRCurvatureApproximation() : void" num="209" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="213" type="cond"/>
            <line num="214" count="3" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="248" count="3" type="stmt"/>
            <line num="253" count="3" type="stmt"/>
            <line num="254" count="3" type="stmt"/>
            <line num="255" count="3" type="stmt"/>
            <line num="256" count="3" type="stmt"/>
            <line num="257" count="3" type="stmt"/>
            <line num="259" count="3" type="stmt"/>
            <line num="260" count="3" type="stmt"/>
            <line num="262" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBlackScholesPutCallParityATM() : void" num="266" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBlackScholesNegativeForward() : void" num="280" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testBachelierRiskNeutralProbabilities() : void" num="304" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line falsecount="1" truecount="24" num="323" type="cond"/>
            <line num="325" count="24" type="stmt"/>
            <line num="326" count="24" type="stmt"/>
            <line num="328" count="24" type="stmt"/>
            <line num="329" count="24" type="stmt"/>
            <line num="330" count="24" type="stmt"/>
            <line num="332" count="24" type="stmt"/>
            <line num="333" count="24" type="stmt"/>
            <line num="334" count="24" type="stmt"/>
            <line num="336" count="24" type="stmt"/>
            <line num="343" count="24" type="stmt"/>
            <line falsecount="22" truecount="2" num="343" type="cond"/>
            <line num="344" count="2" type="stmt"/>
            <line num="346" count="24" type="stmt"/>
            <line falsecount="5" truecount="19" num="346" type="cond"/>
            <line num="347" count="19" type="stmt"/>
            <line num="348" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVolatilityConversionLognormalToNormal() : void" num="354" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/functions/BachelierModelTest.java" name="BachelierModelTest.java">
            <metrics coveredelements="128" coveredconditionals="24" complexity="20" loc="283" coveredmethods="8" methods="8" elements="128" classes="1" ncloc="187" statements="96" conditionals="24" coveredstatements="96"/>
            <class name="BachelierModelTest">
               <metrics coveredelements="128" complexity="20" methods="8" testruns="8" statements="96" coveredconditionals="24" coveredmethods="8" elements="128" testfailures="0" testduration="0.17400000000000002" conditionals="24" coveredstatements="96" testpasses="8"/>
            </class>
            <line complexity="2" visibility="public" signature="testDelta() : void" num="38" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="49" type="cond"/>
            <line num="51" count="9" type="stmt"/>
            <line num="54" count="9" type="stmt"/>
            <line num="61" count="9" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line num="69" count="9" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testVega() : void" num="74" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="85" type="cond"/>
            <line num="87" count="9" type="stmt"/>
            <line num="90" count="9" type="stmt"/>
            <line num="97" count="9" type="stmt"/>
            <line num="100" count="9" type="stmt"/>
            <line num="105" count="9" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogenousDelta() : void" num="110" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="121" type="cond"/>
            <line num="123" count="9" type="stmt"/>
            <line num="126" count="9" type="stmt"/>
            <line num="133" count="9" type="stmt"/>
            <line num="136" count="9" type="stmt"/>
            <line num="141" count="9" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogenousVega() : void" num="146" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="157" type="cond"/>
            <line num="159" count="9" type="stmt"/>
            <line num="162" count="9" type="stmt"/>
            <line num="169" count="9" type="stmt"/>
            <line num="172" count="9" type="stmt"/>
            <line num="177" count="9" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHomogeneousRandomVariableImplementations() : void" num="182" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="190" type="cond"/>
            <line num="192" count="9" type="stmt"/>
            <line num="193" count="9" type="stmt"/>
            <line num="194" count="9" type="stmt"/>
            <line num="196" count="9" type="stmt"/>
            <line num="197" count="9" type="stmt"/>
            <line num="198" count="9" type="stmt"/>
            <line num="200" count="9" type="stmt"/>
            <line num="201" count="9" type="stmt"/>
            <line num="202" count="9" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogeneousRandomVariableImplementations() : void" num="207" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="215" type="cond"/>
            <line num="217" count="9" type="stmt"/>
            <line num="218" count="9" type="stmt"/>
            <line num="219" count="9" type="stmt"/>
            <line num="221" count="9" type="stmt"/>
            <line num="222" count="9" type="stmt"/>
            <line num="223" count="9" type="stmt"/>
            <line num="225" count="9" type="stmt"/>
            <line num="226" count="9" type="stmt"/>
            <line num="227" count="9" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="testImpliedVolatility() : void" num="232" testsuccess="true" count="1" testduration="0.023" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="238" type="cond"/>
            <line num="239" count="5" type="stmt"/>
            <line falsecount="5" truecount="25" num="239" type="cond"/>
            <line num="240" count="25" type="stmt"/>
            <line falsecount="25" truecount="275" num="240" type="cond"/>
            <line num="242" count="275" type="stmt"/>
            <line num="243" count="275" type="stmt"/>
            <line num="245" count="275" type="stmt"/>
            <line num="246" count="275" type="stmt"/>
            <line num="248" count="275" type="stmt"/>
            <line num="252" count="275" type="stmt"/>
            <line complexity="4" visibility="public" signature="testInhomogeneousImpliedVolatility() : void" num="258" testsuccess="true" count="1" testduration="0.129" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="264" type="cond"/>
            <line num="265" count="5" type="stmt"/>
            <line falsecount="5" truecount="25" num="265" type="cond"/>
            <line num="266" count="25" type="stmt"/>
            <line falsecount="25" truecount="275" num="266" type="cond"/>
            <line num="268" count="275" type="stmt"/>
            <line num="269" count="275" type="stmt"/>
            <line num="271" count="275" type="stmt"/>
            <line num="272" count="275" type="stmt"/>
            <line num="274" count="275" type="stmt"/>
            <line num="278" count="275" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/functions/BarrierOptionsTest.java" name="BarrierOptionsTest.java">
            <metrics coveredelements="136" coveredconditionals="32" complexity="24" loc="210" coveredmethods="8" methods="8" elements="136" classes="1" ncloc="166" statements="96" conditionals="32" coveredstatements="96"/>
            <class name="BarrierOptionsTest">
               <metrics coveredelements="136" complexity="24" methods="8" testruns="8" statements="96" coveredconditionals="32" coveredmethods="8" elements="136" testfailures="0" testduration="0.031000000000000007" conditionals="32" coveredstatements="96" testpasses="8"/>
            </class>
            <line complexity="3" visibility="public" signature="testDownAndInPut() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="38" type="cond"/>
            <line num="39" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="39" type="cond"/>
            <line num="40" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndInCall() : void" num="49" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="61" type="cond"/>
            <line num="62" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="62" type="cond"/>
            <line num="63" count="6" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndInPut() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="85" type="cond"/>
            <line num="86" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="86" type="cond"/>
            <line num="87" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndInCall() : void" num="96" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="108" type="cond"/>
            <line num="109" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="109" type="cond"/>
            <line num="110" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndOutPut() : void" num="119" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="131" type="cond"/>
            <line num="132" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="132" type="cond"/>
            <line num="133" count="6" type="stmt"/>
            <line num="136" count="6" type="stmt"/>
            <line num="137" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndOutCall() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="154" type="cond"/>
            <line num="155" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="155" type="cond"/>
            <line num="156" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndOutPut() : void" num="165" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="177" type="cond"/>
            <line num="178" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="178" type="cond"/>
            <line num="179" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndOutCall() : void" num="188" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="200" type="cond"/>
            <line num="201" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="201" type="cond"/>
            <line num="202" count="3" type="stmt"/>
            <line num="205" count="3" type="stmt"/>
            <line num="206" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/functions/JarqueBeraTestTest.java" name="JarqueBeraTestTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="JarqueBeraTestTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.095" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="24" testsuccess="true" count="1" testduration="0.095" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/functions/LinearAlgebraTest.java" name="LinearAlgebraTest.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="3" loc="87" coveredmethods="3" methods="3" elements="39" classes="1" ncloc="66" statements="36" conditionals="0" coveredstatements="36"/>
            <class name="LinearAlgebraTest">
               <metrics coveredelements="39" complexity="3" methods="3" testruns="3" statements="36" coveredconditionals="0" coveredmethods="3" elements="39" testfailures="0" testduration="0.04" conditionals="0" coveredstatements="36" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse3() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse2() : void" num="47" testsuccess="true" count="1" testduration="0.039" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/functions/NormalDistributionTest.java" name="NormalDistributionTest.java">
            <metrics coveredelements="25" coveredconditionals="4" complexity="4" loc="57" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="32" statements="19" conditionals="4" coveredstatements="19"/>
            <class name="NormalDistributionTest">
               <metrics coveredelements="25" complexity="4" methods="2" testruns="2" statements="19" coveredconditionals="4" coveredmethods="2" elements="25" testfailures="0" testduration="0.15000000000000002" conditionals="4" coveredstatements="19" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testCumulativeDistribution() : void" num="19" testsuccess="true" count="1" testduration="0.101" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line falsecount="1" truecount="801" num="24" type="cond"/>
            <line num="25" count="801" type="stmt"/>
            <line num="26" count="801" type="stmt"/>
            <line num="28" count="801" type="stmt"/>
            <line num="29" count="801" type="stmt"/>
            <line num="31" count="801" type="stmt"/>
            <line num="32" count="801" type="stmt"/>
            <line num="34" count="801" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInverseCumulativeDistribution() : void" num="38" testsuccess="true" count="1" testduration="0.049" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="43" type="cond"/>
            <line num="44" count="1000" type="stmt"/>
            <line num="45" count="1000" type="stmt"/>
            <line num="47" count="1000" type="stmt"/>
            <line num="48" count="1000" type="stmt"/>
            <line num="49" count="1000" type="stmt"/>
            <line num="51" count="1000" type="stmt"/>
            <line num="52" count="1000" type="stmt"/>
            <line num="54" count="1000" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.convexityadjustment">
         <metrics coveredelements="48" complexity="2" loc="164" methods="2" classes="1" statements="46" coveredconditionals="0" coveredmethods="2" elements="48" ncloc="98" files="1" conditionals="0" coveredstatements="46"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/convexityadjustment/CMSOptionTest.java" name="CMSOptionTest.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="2" loc="164" coveredmethods="2" methods="2" elements="48" classes="1" ncloc="98" statements="46" conditionals="0" coveredstatements="46"/>
            <class name="CMSOptionTest">
               <metrics coveredelements="48" complexity="2" methods="2" testruns="1" statements="46" coveredconditionals="0" coveredmethods="2" elements="48" testfailures="0" testduration="5.263" conditionals="0" coveredstatements="46" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCMSOption() : void" num="57" testsuccess="true" count="1" testduration="5.263" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORModelMonteCarloSimulation(ForwardCurve) : LIBORMonteCarloSimulationFromLIBORModel" num="136" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.modelplugins">
         <metrics coveredelements="34" complexity="2" loc="97" methods="1" classes="1" statements="31" coveredconditionals="2" coveredmethods="1" elements="34" ncloc="47" files="1" conditionals="2" coveredstatements="31"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/montecarlo/interestrate/modelplugins/LIBORVolatilityModelFourParameterExponentialFormIntegratedTest.java" name="LIBORVolatilityModelFourParameterExponentialFormIntegratedTest.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="2" loc="97" coveredmethods="1" methods="1" elements="34" classes="1" ncloc="47" statements="31" conditionals="2" coveredstatements="31"/>
            <class name="LIBORVolatilityModelFourParameterExponentialFormIntegratedTest">
               <metrics coveredelements="34" complexity="2" methods="1" testruns="1" statements="31" coveredconditionals="2" coveredmethods="1" elements="34" testfailures="0" testduration="0.884" conditionals="2" coveredstatements="31" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="31" testsuccess="true" count="1" testduration="0.884" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="55" type="cond"/>
            <line num="56" count="1000" type="stmt"/>
            <line num="57" count="1000" type="stmt"/>
            <line num="58" count="1000" type="stmt"/>
            <line num="59" count="1000" type="stmt"/>
            <line num="61" count="1000" type="stmt"/>
            <line num="62" count="1000" type="stmt"/>
            <line num="63" count="1000" type="stmt"/>
            <line num="65" count="1000" type="stmt"/>
            <line num="66" count="1000" type="stmt"/>
            <line num="68" count="1000" type="stmt"/>
            <line num="73" count="1000" type="stmt"/>
            <line num="74" count="1000" type="stmt"/>
            <line num="75" count="1000" type="stmt"/>
            <line num="76" count="1000" type="stmt"/>
            <line num="77" count="1000" type="stmt"/>
            <line num="78" count="1000" type="stmt"/>
            <line num="79" count="1000" type="stmt"/>
            <line num="80" count="1000" type="stmt"/>
            <line num="85" count="1000" type="stmt"/>
            <line num="92" count="1000" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.analytic.model.curves.test">
         <metrics coveredelements="199" complexity="17" loc="588" methods="10" classes="2" statements="181" coveredconditionals="13" coveredmethods="9" elements="205" ncloc="348" files="2" conditionals="14" coveredstatements="177"/>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/analytic/model/curves/test/CalibrationTest.java" name="CalibrationTest.java">
            <metrics coveredelements="75" coveredconditionals="4" complexity="7" loc="255" coveredmethods="4" methods="5" elements="79" classes="1" ncloc="144" statements="70" conditionals="4" coveredstatements="67"/>
            <class name="CalibrationTest">
               <metrics coveredelements="75" complexity="7" methods="5" testruns="6" statements="70" coveredconditionals="4" coveredmethods="4" elements="79" testfailures="0" testduration="0.51" conditionals="4" coveredstatements="67" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationTest(InterpolationMethod)" num="51" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardCurveFromDiscountCurve() : void" num="89" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line num="103" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurvesAndCalibration() : void" num="128" count="3" type="method"/>
            <line num="137" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line num="162" count="3" type="stmt"/>
            <line num="165" count="3" type="stmt"/>
            <line num="168" count="3" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line num="176" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line num="186" count="3" type="stmt"/>
            <line num="187" count="3" type="stmt"/>
            <line falsecount="3" truecount="12" num="187" type="cond"/>
            <line num="188" count="12" type="stmt"/>
            <line num="189" count="12" type="stmt"/>
            <line num="190" count="12" type="stmt"/>
            <line num="192" count="12" type="stmt"/>
            <line num="194" count="3" type="stmt"/>
            <line num="195" count="3" type="stmt"/>
            <line num="197" count="3" type="stmt"/>
            <line num="207" count="3" type="stmt"/>
            <line num="210" count="3" type="stmt"/>
            <line num="212" count="3" type="stmt"/>
            <line num="215" count="3" type="stmt"/>
            <line num="218" count="3" type="stmt"/>
            <line num="219" count="3" type="stmt"/>
            <line num="220" count="3" type="stmt"/>
            <line num="221" count="3" type="stmt"/>
            <line num="222" count="3" type="stmt"/>
            <line num="225" count="3" type="stmt"/>
            <line num="226" count="3" type="stmt"/>
            <line num="229" count="3" type="stmt"/>
            <line num="230" count="3" type="stmt"/>
            <line num="231" count="3" type="stmt"/>
            <line num="232" count="3" type="stmt"/>
            <line num="233" count="3" type="stmt"/>
            <line num="241" count="3" type="stmt"/>
            <line num="242" count="3" type="stmt"/>
            <line num="243" count="3" type="stmt"/>
            <line falsecount="3" truecount="15" num="243" type="cond"/>
            <line num="244" count="15" type="stmt"/>
            <line num="245" count="15" type="stmt"/>
            <line num="246" count="15" type="stmt"/>
            <line num="248" count="15" type="stmt"/>
            <line num="250" count="3" type="stmt"/>
            <line num="251" count="3" type="stmt"/>
            <line num="253" count="3" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/src/test/java8/net/finmath/analytic/model/curves/test/TestCurvesFromLIBORModel.java" name="TestCurvesFromLIBORModel.java">
            <metrics coveredelements="124" coveredconditionals="9" complexity="10" loc="333" coveredmethods="5" methods="5" elements="126" classes="1" ncloc="204" statements="111" conditionals="10" coveredstatements="110"/>
            <class name="TestCurvesFromLIBORModel">
               <metrics coveredelements="124" complexity="10" methods="5" testruns="1" statements="111" coveredconditionals="9" coveredmethods="5" elements="126" testfailures="0" testduration="6.215" conditionals="10" coveredstatements="110" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="testStochasticCurves() : void" num="55" testsuccess="true" count="1" testduration="6.215" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line falsecount="1" truecount="60" num="86" type="cond"/>
            <line num="87" count="60" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctions(RandomVariable[]) : ArrayList&lt;RandomVariable&gt;" num="110" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line falsecount="1" truecount="60" num="114" type="cond"/>
            <line num="115" count="60" type="stmt"/>
            <line falsecount="60" truecount="120" num="115" type="cond"/>
            <line num="116" count="120" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="123" count="1" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line falsecount="1" truecount="240" num="167" type="cond"/>
            <line num="168" count="240" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSwap(int,int,RandomVariableFactory) : TermStructureMonteCarloProduct" num="212" count="1" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSwapAnalytic(int,int) : AbstractAnalyticProduct" num="276" count="1" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>