<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1665459167858" clover="4.4.1">
   <project name="finmath lib 6.0.5" timestamp="1665457860686">
      <metrics coveredelements="15843" complexity="10192" loc="104147" methods="5446" classes="718" statements="25013" packages="84" coveredconditionals="2814" coveredmethods="2232" elements="37875" ncloc="56712" files="595" conditionals="7416" coveredstatements="10797"/>
      <package name="net.finmath.montecarlo.interestrate">
         <metrics coveredelements="68" complexity="103" loc="1150" methods="92" classes="10" statements="145" coveredconditionals="2" coveredmethods="27" elements="253" ncloc="544" files="10" conditionals="16" coveredstatements="39"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/CalibrationProduct.java" name="CalibrationProduct.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="12" loc="107" coveredmethods="8" methods="11" elements="31" classes="1" ncloc="56" statements="18" conditionals="2" coveredstatements="13"/>
            <class name="CalibrationProduct">
               <metrics coveredelements="21" coveredconditionals="0" complexity="12" coveredmethods="8" methods="11" elements="31" statements="18" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,RandomVariable,double,int)" num="35" count="6042" type="method"/>
            <line num="36" count="6042" type="stmt"/>
            <line num="37" count="6042" type="stmt"/>
            <line num="38" count="6042" type="stmt"/>
            <line num="39" count="6042" type="stmt"/>
            <line num="40" count="6042" type="stmt"/>
            <line num="41" count="6042" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,RandomVariable,double)" num="44" count="6042" type="method"/>
            <line num="45" count="6042" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(String,AbstractLIBORMonteCarloProduct,double,double)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(AbstractLIBORMonteCarloProduct,RandomVariable,double)" num="52" count="6042" type="method"/>
            <line num="53" count="6042" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationProduct(AbstractLIBORMonteCarloProduct,double,double)" num="56" count="4488" type="method"/>
            <line num="57" count="4488" type="stmt"/>
            <line complexity="2" visibility="public" signature="getName() : String" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProduct() : AbstractLIBORMonteCarloProduct" num="76" count="744612" type="method"/>
            <line num="77" count="744591" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTargetValue() : RandomVariable" num="83" count="695285" type="method"/>
            <line num="84" count="695325" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeight() : double" num="90" count="690742" type="method"/>
            <line num="91" count="690874" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPriority() : Integer" num="97" count="462488" type="method"/>
            <line num="98" count="462492" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMarketModel.java" name="LIBORMarketModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORMarketModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORModel.java" name="LIBORModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="74" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORModelMonteCarloSimulationModel.java" name="LIBORModelMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="66" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORModelMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMonteCarloSimulationFromLIBORModel.java" name="LIBORMonteCarloSimulationFromLIBORModel.java">
            <metrics coveredelements="47" coveredconditionals="2" complexity="31" loc="206" coveredmethods="19" methods="27" elements="77" classes="1" ncloc="144" statements="44" conditionals="6" coveredstatements="26"/>
            <class name="LIBORMonteCarloSimulationFromLIBORModel">
               <metrics coveredelements="47" coveredconditionals="2" complexity="31" coveredmethods="19" methods="27" elements="77" statements="44" conditionals="6" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromLIBORModel(MonteCarloProcess)" num="32" count="150" type="method"/>
            <line num="33" count="150" type="stmt"/>
            <line num="35" count="150" type="stmt"/>
            <line num="36" count="150" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromLIBORModel(LIBORModel,MonteCarloProcess)" num="45" count="6382" type="method"/>
            <line num="47" count="6386" type="stmt"/>
            <line num="48" count="6382" type="stmt"/>
            <line num="49" count="6379" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="52" count="6164" type="method"/>
            <line num="54" count="6164" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="57" count="1189666" type="method"/>
            <line num="59" count="1189770" type="stmt"/>
            <line num="60" count="1189746" type="stmt"/>
            <line falsecount="1187947" truecount="1896" num="60" type="cond"/>
            <line num="61" count="1896" type="stmt"/>
            <line num="63" count="1189911" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="66" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="71" count="600" type="method"/>
            <line num="73" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="76" count="43533" type="method"/>
            <line num="78" count="43559" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="86" count="121176" type="method"/>
            <line num="88" count="121205" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="91" count="1198390" type="method"/>
            <line num="93" count="1198390" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="96" count="932704" type="method"/>
            <line num="98" count="932657" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="106" count="2800" type="method"/>
            <line num="108" count="2800" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="122" count="10776109" type="method"/>
            <line num="125" count="10777066" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="128" count="9930" type="method"/>
            <line num="130" count="9930" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="133" count="1138" type="method"/>
            <line num="135" count="1138" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="138" count="1748" type="method"/>
            <line num="140" count="1748" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="147" count="3274" type="method"/>
            <line num="149" count="3274" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="152" count="1264094" type="method"/>
            <line num="154" count="1264325" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : LIBORModel" num="157" count="55763817" type="method"/>
            <line num="159" count="55772701" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModelMonteCarloSimulationModel" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : LIBORModelMonteCarloSimulationModel" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="202" count="10" type="method"/>
            <line num="204" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/LIBORMonteCarloSimulationFromTermStructureModel.java" name="LIBORMonteCarloSimulationFromTermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="195" coveredmethods="0" methods="26" elements="68" classes="1" ncloc="131" statements="38" conditionals="4" coveredstatements="0"/>
            <class name="LIBORMonteCarloSimulationFromTermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="26" elements="68" statements="38" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromTermStructureModel(TermStructureModel,MonteCarloProcess)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMonteCarloSimulationFromTermStructureModel(MonteCarloProcess)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModelMonteCarloSimulationModel" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : TermStructureMonteCarloSimulationModel" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/ShortRateModel.java" name="ShortRateModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureModel.java" name="TermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="109" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="23" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLIBOR(MonteCarloProcess,double,double,double) : RandomVariable" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureMonteCarloSimulationFromTermStructureModel.java" name="TermStructureMonteCarloSimulationFromTermStructureModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="165" coveredmethods="0" methods="20" elements="56" classes="1" ncloc="107" statements="32" conditionals="4" coveredstatements="0"/>
            <class name="TermStructureMonteCarloSimulationFromTermStructureModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="20" elements="56" statements="32" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructureMonteCarloSimulationFromTermStructureModel(TermStructureModel,MonteCarloProcess)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TermStructureMonteCarloSimulationFromTermStructureModel(MonteCarloProcess)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : TermStructureMonteCarloSimulationModel" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(String,Object) : TermStructureMonteCarloSimulationModel" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/TermStructureMonteCarloSimulationModel.java" name="TermStructureMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="142" coveredmethods="0" methods="6" elements="17" classes="1" ncloc="40" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getForwardRate(LocalDateTime,LocalDateTime,LocalDateTime) : RandomVariable" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNumeraire(LocalDateTime) : RandomVariable" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLIBOR(LocalDateTime,LocalDateTime,LocalDateTime) : RandomVariable" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLIBOR(double,double,double) : RandomVariable" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNumberOfFactors() : int" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getBrownianMotion() : BrownianMotion" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation">
         <metrics coveredelements="13" complexity="10" loc="273" methods="10" classes="4" statements="11" coveredconditionals="0" coveredmethods="6" elements="21" ncloc="76" files="4" conditionals="0" coveredstatements="7"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/AbstractRandomVariableDifferentiableFactory.java" name="AbstractRandomVariableDifferentiableFactory.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="70" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="AbstractRandomVariableDifferentiableFactory">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRandomVariableDifferentiableFactory(RandomVariableFactory)" num="35" count="2162" type="method"/>
            <line num="36" count="2162" type="stmt"/>
            <line num="37" count="2162" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractRandomVariableDifferentiableFactory()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariableDifferentiable" num="44" count="750485" type="method"/>
            <line num="46" count="750483" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariableNonDifferentiable(double,double) : RandomVariable" num="55" count="750909" type="method"/>
            <line num="57" count="750914" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariableNonDifferentiable(double,double[]) : RandomVariable" num="60" count="35176" type="method"/>
            <line num="62" count="35176" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="65" count="56" type="method"/>
            <line num="67" count="56" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/IndependentModelParameterProvider.java" name="IndependentModelParameterProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IndependentModelParameterProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiable.java" name="RandomVariableDifferentiable.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="106" coveredmethods="1" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="RandomVariableDifferentiable">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="getGradient() : Map&lt;Long, RandomVariable&gt;" num="64" count="3314" type="method"/>
            <line num="65" count="3314" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTangents() : Map&lt;Long, RandomVariable&gt;" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getCloneIndependent() : RandomVariableDifferentiable" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableFactory.java" name="RandomVariableDifferentiableFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="66" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.rootfinder">
         <metrics coveredelements="152" complexity="61" loc="828" methods="35" classes="11" statements="148" coveredconditionals="23" coveredmethods="26" elements="219" ncloc="365" files="10" conditionals="36" coveredstatements="103"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/AbstractRootFinder.java" name="AbstractRootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="18" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="AbstractRootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setValueAndDerivative(double,double) : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/BisectionSearch.java" name="BisectionSearch.java">
            <metrics coveredelements="38" coveredconditionals="7" complexity="11" loc="140" coveredmethods="7" methods="7" elements="40" classes="1" ncloc="62" statements="25" conditionals="8" coveredstatements="24"/>
            <class name="BisectionSearch">
               <metrics coveredelements="38" coveredconditionals="7" complexity="11" coveredmethods="7" methods="7" elements="40" statements="25" conditionals="8" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="BisectionSearch(double,double)" num="37" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="49" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="58" count="86" type="method"/>
            <line num="60" count="86" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValue(double) : void" num="66" count="86" type="method"/>
            <line num="68" count="86" type="stmt"/>
            <line falsecount="82" truecount="4" num="68" type="cond"/>
            <line num="72" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="74" type="cond"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="88" count="82" type="stmt"/>
            <line falsecount="42" truecount="40" num="88" type="cond"/>
            <line num="92" count="40" type="stmt"/>
            <line num="93" count="40" type="stmt"/>
            <line num="98" count="42" type="stmt"/>
            <line num="99" count="42" type="stmt"/>
            <line num="103" count="82" type="stmt"/>
            <line num="106" count="82" type="stmt"/>
            <line falsecount="82" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="82" type="stmt"/>
            <line num="114" count="86" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="120" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="128" count="90" type="method"/>
            <line num="130" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="136" count="86" type="method"/>
            <line num="138" count="86" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/NewtonsMethod.java" name="NewtonsMethod.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="8" loc="95" coveredmethods="7" methods="7" elements="21" classes="1" ncloc="42" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="NewtonsMethod">
               <metrics coveredelements="21" coveredconditionals="2" complexity="8" coveredmethods="7" methods="7" elements="21" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="NewtonsMethod(double)" num="28" count="14100" type="method"/>
            <line num="29" count="14098" type="stmt"/>
            <line num="30" count="14099" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="36" count="14103" type="method"/>
            <line num="38" count="14103" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="44" count="4468613" type="method"/>
            <line num="46" count="4469758" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValueAndDerivative(double,double) : void" num="57" count="4485117" type="method"/>
            <line num="60" count="4487344" type="stmt"/>
            <line falsecount="4418552" truecount="71348" num="60" type="cond"/>
            <line num="62" count="71346" type="stmt"/>
            <line num="63" count="71348" type="stmt"/>
            <line num="67" count="4492483" type="stmt"/>
            <line num="69" count="4495171" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="75" count="4478439" type="method"/>
            <line num="77" count="4481040" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="83" count="4496183" type="method"/>
            <line num="85" count="4499094" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="91" count="4484007" type="method"/>
            <line num="93" count="4486577" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/RiddersMethod.java" name="RiddersMethod.java">
            <metrics coveredelements="73" coveredconditionals="12" complexity="25" loc="208" coveredmethods="8" methods="9" elements="101" classes="1" ncloc="122" statements="70" conditionals="22" coveredstatements="53"/>
            <class name="RiddersMethod">
               <metrics coveredelements="73" coveredconditionals="12" complexity="25" coveredmethods="8" methods="9" elements="101" statements="70" conditionals="22" coveredstatements="53"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RiddersMethod(double,double)" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="67" count="4" type="method"/>
            <line num="69" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="75" count="48" type="method"/>
            <line num="77" count="48" type="stmt"/>
            <line complexity="12" visibility="public" signature="setValue(double) : void" num="83" count="48" type="method"/>
            <line num="85" count="48" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="22" type="stmt"/>
            <line num="109" count="22" type="stmt"/>
            <line num="111" count="22" type="stmt"/>
            <line num="112" count="22" type="stmt"/>
            <line falsecount="22" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="22" type="stmt"/>
            <line falsecount="22" truecount="0" num="119" type="cond"/>
            <line num="120" count="22" type="stmt"/>
            <line num="121" count="22" type="stmt"/>
            <line num="122" count="22" type="stmt"/>
            <line num="124" count="22" type="stmt"/>
            <line falsecount="20" truecount="2" num="124" type="cond"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="131" count="22" type="stmt"/>
            <line falsecount="2" truecount="20" num="131" type="cond"/>
            <line num="133" count="20" type="stmt"/>
            <line num="134" count="20" type="stmt"/>
            <line num="136" count="20" type="stmt"/>
            <line num="137" count="20" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="139" type="cond"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="22" type="stmt"/>
            <line num="160" count="22" type="stmt"/>
            <line num="161" count="22" type="stmt"/>
            <line num="166" count="22" type="stmt"/>
            <line num="169" count="48" type="stmt"/>
            <line falsecount="2" truecount="46" num="169" type="cond"/>
            <line num="171" count="46" type="stmt"/>
            <line num="174" count="46" type="stmt"/>
            <line num="177" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="183" count="2" type="method"/>
            <line num="185" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="191" count="52" type="method"/>
            <line num="193" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="199" count="48" type="method"/>
            <line num="201" count="48" type="stmt"/>
            <line complexity="4" visibility="private" signature="sign(double,double) : double" num="204" count="24" type="method"/>
            <line num="206" count="24" type="stmt"/>
            <line falsecount="0" truecount="24" num="206" type="cond"/>
            <line falsecount="22" truecount="2" num="206" type="cond"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/RootFinder.java" name="RootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/RootFinderWithDerivative.java" name="RootFinderWithDerivative.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RootFinderWithDerivative">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/SecantMethod.java" name="SecantMethod.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="5" loc="88" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="34" statements="14" conditionals="2" coveredstatements="14"/>
            <class name="SecantMethod">
               <metrics coveredelements="20" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="SecantMethod(double,double)" num="33" count="4" type="method"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="38" count="50" type="method"/>
            <line num="41" count="50" type="stmt"/>
            <line num="42" count="50" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValue(double) : void" num="50" count="30" type="method"/>
            <line num="53" count="30" type="stmt"/>
            <line num="54" count="30" type="stmt"/>
            <line falsecount="28" truecount="2" num="54" type="cond"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="28" type="stmt"/>
            <line num="64" count="30" type="stmt"/>
            <line num="65" count="30" type="stmt"/>
            <line num="67" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValueAndDerivative(double,double) : void" num="79" count="20" type="method"/>
            <line num="82" count="20" type="stmt"/>
            <line num="83" count="20" type="stmt"/>
            <line num="85" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/StochasticNewtonMethod.java" name="StochasticNewtonMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="92" coveredmethods="0" methods="7" elements="35" classes="2" ncloc="60" statements="26" conditionals="2" coveredstatements="0"/>
            <class name="StochasticNewtonMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="35" statements="26" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="StochasticNewtonMethod.MethodForAccuracy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticNewtonMethod(RandomVariable,MethodForAccuracy)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : RandomVariable" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValueAndDerivative(RandomVariable,RandomVariable) : void" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : RandomVariable" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/StochasticRootFinder.java" name="StochasticRootFinder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticRootFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/rootfinder/StochasticRootFinderUsingDerivative.java" name="StochasticRootFinderUsingDerivative.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticRootFinderUsingDerivative">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.fouriermethod">
         <metrics coveredelements="0" complexity="0" loc="25" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="6" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/CharacteristicFunction.java" name="CharacteristicFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CharacteristicFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.finitedifference.solvers">
         <metrics coveredelements="112" complexity="16" loc="174" methods="4" classes="1" statements="88" coveredconditionals="22" coveredmethods="4" elements="116" ncloc="134" files="1" conditionals="24" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/solvers/FDMThetaMethod.java" name="FDMThetaMethod.java">
            <metrics coveredelements="112" coveredconditionals="22" complexity="16" loc="174" coveredmethods="4" methods="4" elements="116" classes="1" ncloc="134" statements="88" conditionals="24" coveredstatements="86"/>
            <class name="FDMThetaMethod">
               <metrics coveredelements="112" coveredconditionals="22" complexity="16" coveredmethods="4" methods="4" elements="116" statements="88" conditionals="24" coveredstatements="86"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMThetaMethod(FiniteDifference1DModel,FiniteDifference1DBoundary,double,double,double)" num="31" count="10" type="method"/>
            <line num="32" count="10" type="stmt"/>
            <line num="33" count="10" type="stmt"/>
            <line num="34" count="10" type="stmt"/>
            <line num="35" count="10" type="stmt"/>
            <line num="36" count="10" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,double,DoubleUnaryOperator) : double[][]" num="39" count="10" type="method"/>
            <line num="40" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="48" count="10" type="stmt"/>
            <line num="50" count="10" type="stmt"/>
            <line num="52" count="10" type="stmt"/>
            <line num="53" count="10" type="stmt"/>
            <line num="56" count="10" type="stmt"/>
            <line num="57" count="10" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line falsecount="10" truecount="1350" num="58" type="cond"/>
            <line num="59" count="1350" type="stmt"/>
            <line num="63" count="10" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line falsecount="10" truecount="540" num="65" type="cond"/>
            <line num="66" count="540" type="stmt"/>
            <line num="70" count="10" type="stmt"/>
            <line num="71" count="10" type="stmt"/>
            <line num="72" count="10" type="stmt"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line falsecount="10" truecount="1350" num="75" type="cond"/>
            <line num="76" count="1350" type="stmt"/>
            <line falsecount="1350" truecount="186090" num="76" type="cond"/>
            <line num="77" count="186090" type="stmt"/>
            <line falsecount="184740" truecount="1350" num="77" type="cond"/>
            <line num="78" count="1350" type="stmt"/>
            <line num="79" count="1350" type="stmt"/>
            <line num="80" count="1350" type="stmt"/>
            <line num="81" count="184740" type="stmt"/>
            <line falsecount="183400" truecount="1340" num="81" type="cond"/>
            <line num="82" count="1340" type="stmt"/>
            <line num="83" count="1340" type="stmt"/>
            <line num="84" count="183400" type="stmt"/>
            <line falsecount="182060" truecount="1340" num="84" type="cond"/>
            <line num="85" count="1340" type="stmt"/>
            <line num="86" count="1340" type="stmt"/>
            <line num="88" count="182060" type="stmt"/>
            <line num="89" count="182060" type="stmt"/>
            <line num="90" count="182060" type="stmt"/>
            <line num="91" count="182060" type="stmt"/>
            <line num="95" count="10" type="stmt"/>
            <line num="96" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line num="98" count="10" type="stmt"/>
            <line num="99" count="10" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
            <line num="103" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line num="105" count="10" type="stmt"/>
            <line num="106" count="10" type="stmt"/>
            <line falsecount="10" truecount="1350" num="106" type="cond"/>
            <line num="107" count="1350" type="stmt"/>
            <line num="108" count="1350" type="stmt"/>
            <line num="109" count="1350" type="stmt"/>
            <line num="113" count="10" type="stmt"/>
            <line falsecount="10" truecount="530" num="113" type="cond"/>
            <line num="114" count="530" type="stmt"/>
            <line num="115" count="530" type="stmt"/>
            <line num="116" count="530" type="stmt"/>
            <line falsecount="530" truecount="75870" num="116" type="cond"/>
            <line num="117" count="75870" type="stmt"/>
            <line num="119" count="75870" type="stmt"/>
            <line num="122" count="530" type="stmt"/>
            <line num="123" count="530" type="stmt"/>
            <line num="124" count="530" type="stmt"/>
            <line num="125" count="530" type="stmt"/>
            <line num="126" count="530" type="stmt"/>
            <line num="127" count="530" type="stmt"/>
            <line num="129" count="530" type="stmt"/>
            <line num="130" count="530" type="stmt"/>
            <line num="131" count="530" type="stmt"/>
            <line num="133" count="530" type="stmt"/>
            <line num="135" count="530" type="stmt"/>
            <line num="137" count="530" type="stmt"/>
            <line num="140" count="530" type="stmt"/>
            <line num="141" count="530" type="stmt"/>
            <line num="143" count="530" type="stmt"/>
            <line num="145" count="530" type="stmt"/>
            <line num="147" count="530" type="stmt"/>
            <line num="149" count="530" type="stmt"/>
            <line num="150" count="530" type="stmt"/>
            <line num="151" count="530" type="stmt"/>
            <line num="153" count="10" type="stmt"/>
            <line num="154" count="10" type="stmt"/>
            <line num="155" count="10" type="stmt"/>
            <line num="156" count="10" type="stmt"/>
            <line num="157" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="timeReversedLowerBoundary(double,double) : double" num="164" count="1060" type="method"/>
            <line num="165" count="1060" type="stmt"/>
            <line complexity="1" visibility="private" signature="timeReversedUpperBoundary(double,double) : double" num="168" count="1590" type="method"/>
            <line num="169" count="1590" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate.products">
         <metrics coveredelements="83" complexity="35" loc="507" methods="23" classes="5" statements="104" coveredconditionals="8" coveredmethods="12" elements="145" ncloc="242" files="5" conditionals="18" coveredstatements="63"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/Bond.java" name="Bond.java">
            <metrics coveredelements="21" coveredconditionals="1" complexity="8" loc="108" coveredmethods="3" methods="6" elements="29" classes="1" ncloc="50" statements="21" conditionals="2" coveredstatements="17"/>
            <class name="Bond">
               <metrics coveredelements="21" coveredconditionals="1" complexity="8" coveredmethods="3" methods="6" elements="29" statements="21" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(LocalDateTime,String,double)" num="33" count="6" type="method"/>
            <line num="34" count="6" type="stmt"/>
            <line num="35" count="6" type="stmt"/>
            <line num="36" count="6" type="stmt"/>
            <line num="37" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(String,double)" num="44" count="6" type="method"/>
            <line num="45" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="58" count="6" type="method"/>
            <line num="61" count="6" type="stmt"/>
            <line num="62" count="6" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="70" count="6" type="stmt"/>
            <line num="71" count="6" type="stmt"/>
            <line num="74" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaturity(double) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/BondWithForeignNumeraire.java" name="BondWithForeignNumeraire.java">
            <metrics coveredelements="20" coveredconditionals="1" complexity="6" loc="91" coveredmethods="3" methods="4" elements="24" classes="1" ncloc="41" statements="18" conditionals="2" coveredstatements="16"/>
            <class name="BondWithForeignNumeraire">
               <metrics coveredelements="20" coveredconditionals="1" complexity="6" coveredmethods="3" methods="4" elements="24" statements="18" conditionals="2" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="BondWithForeignNumeraire(LocalDateTime,String,double)" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BondWithForeignNumeraire(String,double)" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="57" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/ForwardRateAgreementGeneralized.java" name="ForwardRateAgreementGeneralized.java">
            <metrics coveredelements="38" coveredconditionals="6" complexity="9" loc="121" coveredmethods="4" methods="4" elements="42" classes="1" ncloc="64" statements="30" conditionals="8" coveredstatements="28"/>
            <class name="ForwardRateAgreementGeneralized">
               <metrics coveredelements="38" coveredconditionals="6" complexity="9" coveredmethods="4" methods="4" elements="42" statements="30" conditionals="8" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(LocalDateTime,String,double,double,double,RandomVariable,RandomVariable,RandomVariable)" num="38" count="6" type="method"/>
            <line num="40" count="6" type="stmt"/>
            <line num="41" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="47" count="6" type="stmt"/>
            <line num="48" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(LocalDateTime,String,double,double,double)" num="60" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreementGeneralized(String,double,double,double)" num="64" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,HybridAssetMonteCarloSimulation) : RandomVariable" num="78" count="10" type="method"/>
            <line num="81" count="10" type="stmt"/>
            <line num="82" count="10" type="stmt"/>
            <line num="83" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="90" count="10" type="stmt"/>
            <line num="91" count="10" type="stmt"/>
            <line num="94" count="10" type="stmt"/>
            <line num="97" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="97" type="cond"/>
            <line num="98" count="4" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="100" type="cond"/>
            <line num="101" count="4" type="stmt"/>
            <line num="103" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="10" type="stmt"/>
            <line num="111" count="10" type="stmt"/>
            <line num="114" count="10" type="stmt"/>
            <line num="115" count="10" type="stmt"/>
            <line num="116" count="10" type="stmt"/>
            <line num="119" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/HybridAssetMonteCarloProduct.java" name="HybridAssetMonteCarloProduct.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="5" loc="82" coveredmethods="2" methods="5" elements="10" classes="1" ncloc="29" statements="5" conditionals="0" coveredstatements="2"/>
            <class name="HybridAssetMonteCarloProduct">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="HybridAssetMonteCarloProduct()" num="29" count="14" type="method"/>
            <line num="30" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueForModifiedData(double,MonteCarloSimulationModel,Map&lt;String, Object&gt;) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,HybridAssetMonteCarloSimulation) : Map&lt;String, Object&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="66" count="18" type="method"/>
            <line num="68" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorDrift(LIBORModelMonteCarloSimulationModel,LIBORModelMonteCarloSimulationModel) : FactorTransform" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/products/WorstOfExpressCertificate.java" name="WorstOfExpressCertificate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="105" coveredmethods="0" methods="4" elements="40" classes="1" ncloc="58" statements="30" conditionals="6" coveredstatements="0"/>
            <class name="WorstOfExpressCertificate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="40" statements="30" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WorstOfExpressCertificate(double,double[],double[],double[],double[],double)" num="29" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,HybridAssetLIBORModelMonteCarloSimulation) : double" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getWorstPerformance(HybridAssetLIBORModelMonteCarloSimulation,double,double[]) : RandomVariable" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="103" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.products">
         <metrics coveredelements="0" complexity="13" loc="133" methods="6" classes="1" statements="30" coveredconditionals="0" coveredmethods="0" elements="44" ncloc="76" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/products/PortfolioMonteCarloProduct.java" name="PortfolioMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="6" elements="44" classes="1" ncloc="76" statements="30" conditionals="8" coveredstatements="0"/>
            <class name="PortfolioMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="6" elements="44" statements="30" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[],double[],Optional&lt;Integer&gt;)" num="45" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[],double[])" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PortfolioMonteCarloProduct(MonteCarloProduct[])" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="weightsOfOne(int) : double[]" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.products">
         <metrics coveredelements="352" complexity="172" loc="1702" methods="81" classes="13" statements="398" coveredconditionals="74" coveredmethods="34" elements="627" ncloc="847" files="13" conditionals="148" coveredstatements="244"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/AbstractAnalyticProduct.java" name="AbstractAnalyticProduct.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="31" coveredmethods="1" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="AbstractAnalyticProduct">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel) : double" num="28" count="42017716" type="method"/>
            <line num="29" count="42039145" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/AnalyticProduct.java" name="AnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Cap.java" name="Cap.java">
            <metrics coveredelements="105" coveredconditionals="22" complexity="36" loc="314" coveredmethods="6" methods="11" elements="146" classes="1" ncloc="172" statements="97" conditionals="38" coveredstatements="77"/>
            <class name="Cap">
               <metrics coveredelements="105" coveredconditionals="22" complexity="36" coveredmethods="6" methods="11" elements="146" statements="97" conditionals="38" coveredstatements="77"/>
            </class>
            <line complexity="1" visibility="public" signature="Cap(Schedule,String,double,boolean,String,String,QuotingConvention)" num="71" count="260" type="method"/>
            <line num="72" count="260" type="stmt"/>
            <line num="73" count="260" type="stmt"/>
            <line num="74" count="260" type="stmt"/>
            <line num="75" count="260" type="stmt"/>
            <line num="76" count="260" type="stmt"/>
            <line num="77" count="260" type="stmt"/>
            <line num="78" count="260" type="stmt"/>
            <line num="79" count="260" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cap(Schedule,String,double,boolean,String,String)" num="95" count="156" type="method"/>
            <line num="96" count="156" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AnalyticModel) : double" num="99" count="69154" type="method"/>
            <line num="101" count="69152" type="stmt"/>
            <line falsecount="68999" truecount="156" num="101" type="cond"/>
            <line num="102" count="156" type="stmt"/>
            <line num="104" count="69001" type="stmt"/>
            <line complexity="14" visibility="public" signature="getValueAsPrice(double,AnalyticModel) : double" num="115" count="6522286" type="method"/>
            <line num="116" count="6522648" type="stmt"/>
            <line num="117" count="6521027" type="stmt"/>
            <line num="119" count="6519325" type="stmt"/>
            <line num="120" count="6519614" type="stmt"/>
            <line falsecount="6519775" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="130" count="6520017" type="stmt"/>
            <line num="131" count="6520309" type="stmt"/>
            <line falsecount="6522431" truecount="103469628" num="131" type="cond"/>
            <line num="132" count="103521008" type="stmt"/>
            <line num="133" count="103288335" type="stmt"/>
            <line num="134" count="103122551" type="stmt"/>
            <line num="141" count="102993262" type="stmt"/>
            <line falsecount="103027438" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="103050255" type="stmt"/>
            <line num="146" count="103070547" type="stmt"/>
            <line falsecount="0" truecount="103095601" num="146" type="cond"/>
            <line num="147" count="103129229" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="103711054" type="stmt"/>
            <line falsecount="0" truecount="103809942" num="159" type="cond"/>
            <line num="160" count="103744629" type="stmt"/>
            <line num="162" count="103818896" type="stmt"/>
            <line num="163" count="103834624" type="stmt"/>
            <line falsecount="6162" truecount="103843302" num="163" type="cond"/>
            <line num="164" count="103863322" type="stmt"/>
            <line num="167" count="103798660" type="stmt"/>
            <line num="168" count="103599117" type="stmt"/>
            <line falsecount="103620035" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="103638905" type="stmt"/>
            <line falsecount="64328973" truecount="39140706" num="171" type="cond"/>
            <line num="172" count="39147235" type="stmt"/>
            <line num="173" count="39143659" type="stmt"/>
            <line num="177" count="64339594" type="stmt"/>
            <line num="178" count="64349986" type="stmt"/>
            <line num="182" count="6522651" type="stmt"/>
            <line complexity="6" visibility="public" signature="getATMForward(AnalyticModel,boolean) : double" num="198" count="104946292" type="method"/>
            <line num="199" count="104992659" type="stmt"/>
            <line falsecount="21105253" truecount="83994546" num="199" type="cond"/>
            <line num="200" count="83998584" type="stmt"/>
            <line num="203" count="21107402" type="stmt"/>
            <line num="204" count="21107817" type="stmt"/>
            <line falsecount="21107912" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="21109915" type="stmt"/>
            <line num="215" count="21012932" type="stmt"/>
            <line num="217" count="21005245" type="stmt"/>
            <line num="218" count="21078371" type="stmt"/>
            <line num="219" count="21119744" type="stmt"/>
            <line num="221" count="21106148" type="stmt"/>
            <line complexity="7" visibility="public" signature="getImpliedVolatility(double,AnalyticModel,VolatilitySurface.QuotingConvention) : double" num="232" count="69003" type="method"/>
            <line num="233" count="68993" type="stmt"/>
            <line num="234" count="68980" type="stmt"/>
            <line num="235" count="68997" type="stmt"/>
            <line falsecount="68986" truecount="1082455" num="235" type="cond"/>
            <line num="236" count="1082469" type="stmt"/>
            <line num="237" count="1082358" type="stmt"/>
            <line num="239" count="1082248" type="stmt"/>
            <line falsecount="1082261" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="243" count="1082306" type="stmt"/>
            <line num="244" count="1082349" type="stmt"/>
            <line falsecount="0" truecount="1082374" num="244" type="cond"/>
            <line num="245" count="1082347" type="stmt"/>
            <line num="248" count="1082610" type="stmt"/>
            <line num="249" count="1082491" type="stmt"/>
            <line num="250" count="1082480" type="stmt"/>
            <line num="251" count="1082468" type="stmt"/>
            <line num="254" count="68971" type="stmt"/>
            <line num="256" count="69003" type="stmt"/>
            <line num="257" count="69003" type="stmt"/>
            <line num="258" count="69004" type="stmt"/>
            <line num="259" count="69000" type="stmt"/>
            <line falsecount="69001" truecount="6451577" num="259" type="cond"/>
            <line num="260" count="6451967" type="stmt"/>
            <line num="261" count="6451370" type="stmt"/>
            <line num="262" count="6451558" type="stmt"/>
            <line num="263" count="6452224" type="stmt"/>
            <line num="264" count="6453286" type="stmt"/>
            <line num="265" count="6454509" type="stmt"/>
            <line num="266" count="6456735" type="stmt"/>
            <line num="267" count="6453024" type="stmt"/>
            <line num="268" count="6456254" type="stmt"/>
            <line num="269" count="6457030" type="stmt"/>
            <line num="271" count="69000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="279" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="18" coveredconditionals="5" complexity="6" loc="60" coveredmethods="2" methods="2" elements="23" classes="1" ncloc="29" statements="13" conditionals="8" coveredstatements="11"/>
            <class name="Cashflow">
               <metrics coveredelements="18" coveredconditionals="5" complexity="6" coveredmethods="2" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean,String)" num="35" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : double" num="44" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="55" type="cond"/>
            <line num="56" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="56" type="cond"/>
            <line num="58" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Deposit.java" name="Deposit.java">
            <metrics coveredelements="39" coveredconditionals="9" complexity="16" loc="132" coveredmethods="3" methods="9" elements="63" classes="1" ncloc="78" statements="40" conditionals="14" coveredstatements="27"/>
            <class name="Deposit">
               <metrics coveredelements="39" coveredconditionals="9" complexity="16" coveredmethods="3" methods="9" elements="63" statements="40" conditionals="14" coveredstatements="27"/>
            </class>
            <line complexity="2" visibility="public" signature="Deposit(Schedule,double,String)" num="38" count="266" type="method"/>
            <line num="39" count="266" type="stmt"/>
            <line num="40" count="266" type="stmt"/>
            <line num="41" count="266" type="stmt"/>
            <line num="42" count="266" type="stmt"/>
            <line num="45" count="266" type="stmt"/>
            <line falsecount="266" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : double" num="50" count="169717" type="method"/>
            <line num="52" count="169717" type="stmt"/>
            <line falsecount="169712" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="169705" type="stmt"/>
            <line num="57" count="169248" type="stmt"/>
            <line falsecount="169262" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="169245" type="stmt"/>
            <line num="63" count="168491" type="stmt"/>
            <line falsecount="168496" truecount="2" num="63" type="cond"/>
            <line num="64" count="2" type="stmt"/>
            <line num="67" count="168500" type="stmt"/>
            <line num="68" count="168414" type="stmt"/>
            <line num="69" count="168288" type="stmt"/>
            <line num="70" count="169258" type="stmt"/>
            <line num="72" count="168820" type="stmt"/>
            <line falsecount="168832" truecount="2" num="72" type="cond"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="168377" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : double" num="86" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRate() : double" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEndTime() : double" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingTime() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Forward.java" name="Forward.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="80" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="40" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="Forward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="32" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Forward(double,double,String,double,String)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/ForwardRateAgreement.java" name="ForwardRateAgreement.java">
            <metrics coveredelements="32" coveredconditionals="7" complexity="15" loc="116" coveredmethods="3" methods="4" elements="55" classes="1" ncloc="61" statements="33" conditionals="18" coveredstatements="22"/>
            <class name="ForwardRateAgreement">
               <metrics coveredelements="32" coveredconditionals="7" complexity="15" coveredmethods="3" methods="4" elements="55" statements="33" conditionals="18" coveredstatements="22"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String,boolean)" num="40" count="240" type="method"/>
            <line num="41" count="240" type="stmt"/>
            <line num="42" count="240" type="stmt"/>
            <line num="43" count="240" type="stmt"/>
            <line num="44" count="240" type="stmt"/>
            <line num="45" count="240" type="stmt"/>
            <line num="46" count="240" type="stmt"/>
            <line num="49" count="240" type="stmt"/>
            <line falsecount="240" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String)" num="62" count="240" type="method"/>
            <line num="63" count="240" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,AnalyticModel) : double" num="66" count="159197" type="method"/>
            <line num="68" count="159197" type="stmt"/>
            <line falsecount="159195" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="159193" type="stmt"/>
            <line num="73" count="159106" type="stmt"/>
            <line falsecount="159108" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="159110" type="stmt"/>
            <line num="78" count="159021" type="stmt"/>
            <line falsecount="159022" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="159025" type="stmt"/>
            <line num="83" count="159023" type="stmt"/>
            <line num="84" count="158861" type="stmt"/>
            <line num="86" count="158841" type="stmt"/>
            <line num="87" count="158847" type="stmt"/>
            <line falsecount="0" truecount="158837" num="87" type="cond"/>
            <line num="88" count="158849" type="stmt"/>
            <line num="92" count="158753" type="stmt"/>
            <line falsecount="0" truecount="158764" num="92" type="cond"/>
            <line num="93" count="158766" type="stmt"/>
            <line falsecount="0" truecount="158773" num="93" type="cond"/>
            <line num="94" count="158874" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : double" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/MarketForwardRateAgreement.java" name="MarketForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="91" coveredmethods="0" methods="2" elements="33" classes="1" ncloc="41" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="MarketForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="33" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketForwardRateAgreement(double,double,String,double,String)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : double" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Performance.java" name="Performance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="55" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="23" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Performance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Performance(AbstractAnalyticProduct,AbstractAnalyticProduct)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="141" coveredmethods="0" methods="8" elements="30" classes="1" ncloc="54" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="30" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(Portfolio,List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(AnalyticProduct,double)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;)" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : List&lt;AnalyticProduct&gt;" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : List&lt;Double&gt;" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/Swap.java" name="Swap.java">
            <metrics coveredelements="48" coveredconditionals="7" complexity="19" loc="210" coveredmethods="8" methods="13" elements="65" classes="1" ncloc="112" statements="42" conditionals="10" coveredstatements="33"/>
            <class name="Swap">
               <metrics coveredelements="48" coveredconditionals="7" complexity="19" coveredmethods="8" methods="13" elements="65" statements="42" conditionals="10" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(AnalyticProduct,AnalyticProduct)" num="48" count="832" type="method"/>
            <line num="49" count="832" type="stmt"/>
            <line num="50" count="832" type="stmt"/>
            <line num="51" count="832" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String,boolean)" num="67" count="402" type="method"/>
            <line num="75" count="402" type="stmt"/>
            <line num="76" count="402" type="stmt"/>
            <line num="77" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String)" num="92" count="402" type="method"/>
            <line num="98" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,double,String,Schedule,String,String)" num="111" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="121" count="576358" type="method"/>
            <line num="124" count="576351" type="stmt"/>
            <line num="125" count="573684" type="stmt"/>
            <line num="127" count="573673" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurve) : double" num="130" count="6" type="method"/>
            <line num="131" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurve,DiscountCurve) : double" num="134" count="9204" type="method"/>
            <line num="135" count="9204" type="stmt"/>
            <line num="136" count="9204" type="stmt"/>
            <line falsecount="0" truecount="9204" num="136" type="cond"/>
            <line num="137" count="9204" type="stmt"/>
            <line num="139" count="9204" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurve) : double" num="142" count="6" type="method"/>
            <line num="143" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurve,AnalyticModel) : double" num="146" count="846428" type="method"/>
            <line num="147" count="846455" type="stmt"/>
            <line falsecount="840888" truecount="5519" num="147" type="cond"/>
            <line num="148" count="846313" type="stmt"/>
            <line falsecount="835241" truecount="11103" num="148" type="cond"/>
            <line num="149" count="11108" type="stmt"/>
            <line num="150" count="11109" type="stmt"/>
            <line num="153" count="846376" type="stmt"/>
            <line num="154" count="846253" type="stmt"/>
            <line num="156" count="846527" type="stmt"/>
            <line num="157" count="846552" type="stmt"/>
            <line falsecount="846517" truecount="16777268" num="157" type="cond"/>
            <line num="158" count="16781248" type="stmt"/>
            <line num="159" count="16763518" type="stmt"/>
            <line num="160" count="16747742" type="stmt"/>
            <line num="162" count="16733284" type="stmt"/>
            <line num="163" count="16786921" type="stmt"/>
            <line num="165" count="16785823" type="stmt"/>
            <line num="168" count="846536" type="stmt"/>
            <line num="170" count="846540" type="stmt"/>
            <line num="173" count="846573" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : AnalyticProduct" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : AnalyticProduct" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescriptor() : InterestRateSwapProductDescriptor" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/SwapAnnuity.java" name="SwapAnnuity.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="10" loc="137" coveredmethods="5" methods="8" elements="34" classes="1" ncloc="57" statements="22" conditionals="4" coveredstatements="15"/>
            <class name="SwapAnnuity">
               <metrics coveredelements="23" coveredconditionals="3" complexity="10" coveredmethods="5" methods="8" elements="34" statements="22" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapAnnuity(Schedule,String)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,DiscountCurve) : double" num="57" count="570667" type="method"/>
            <line num="58" count="570579" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,ForwardCurve) : double" num="70" count="5526" type="method"/>
            <line num="71" count="5527" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,DiscountCurve) : double" num="83" count="570499" type="method"/>
            <line num="84" count="570531" type="stmt"/>
            <line num="85" count="570591" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,ForwardCurve) : double" num="99" count="5528" type="method"/>
            <line num="100" count="5527" type="stmt"/>
            <line num="101" count="5529" type="stmt"/>
            <line num="102" count="5529" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSwapAnnuity(double,Schedule,DiscountCurve,AnalyticModel) : double" num="117" count="1849991" type="method"/>
            <line num="118" count="1850083" type="stmt"/>
            <line num="119" count="1850184" type="stmt"/>
            <line falsecount="1850039" truecount="28575796" num="119" type="cond"/>
            <line num="120" count="28588210" type="stmt"/>
            <line num="121" count="28550460" type="stmt"/>
            <line falsecount="28565722" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="28574147" type="stmt"/>
            <line num="126" count="28531970" type="stmt"/>
            <line num="127" count="28582293" type="stmt"/>
            <line num="129" count="1850112" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="85" coveredconditionals="21" complexity="39" loc="306" coveredmethods="6" methods="17" elements="131" classes="1" ncloc="160" statements="78" conditionals="36" coveredstatements="58"/>
            <class name="SwapLeg">
               <metrics coveredelements="85" coveredconditionals="21" complexity="39" coveredmethods="6" methods="17" elements="131" statements="78" conditionals="36" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapLeg(LocalDateTime,Schedule,String,double[],double[],String,boolean)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double[],double[],String,boolean)" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double[],double[],String,boolean)" num="100" count="4" type="method"/>
            <line num="101" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double,String,String,boolean)" num="115" count="42102046" type="method"/>
            <line num="116" count="42093682" type="stmt"/>
            <line num="117" count="42108321" type="stmt"/>
            <line num="118" count="42117695" type="stmt"/>
            <line num="119" count="42122404" type="stmt"/>
            <line num="120" count="42127443" type="stmt"/>
            <line num="121" count="42131189" type="stmt"/>
            <line falsecount="42137984" truecount="0" num="121" type="cond"/>
            <line num="122" count="42145703" type="stmt"/>
            <line num="124" count="42147452" type="stmt"/>
            <line num="125" count="42064170" type="stmt"/>
            <line num="126" count="42138395" type="stmt"/>
            <line num="127" count="42155830" type="stmt"/>
            <line num="128" count="42067292" type="stmt"/>
            <line num="129" count="42098933" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,String,boolean)" num="142" count="42004436" type="method"/>
            <line num="143" count="41985744" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,boolean)" num="155" count="41938591" type="method"/>
            <line num="156" count="41922303" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Optional&lt;LocalDateTime&gt;,Schedule,String,double,String)" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String)" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="20" visibility="public" signature="getValue(double,AnalyticModel) : double" num="184" count="43180587" type="method"/>
            <line num="186" count="43186778" type="stmt"/>
            <line falsecount="43190373" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="43193733" type="stmt"/>
            <line num="191" count="43004877" type="stmt"/>
            <line falsecount="43030842" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="43044544" type="stmt"/>
            <line num="198" count="43060663" type="stmt"/>
            <line num="199" count="42952244" type="stmt"/>
            <line num="200" count="42831340" type="stmt"/>
            <line falsecount="10681" truecount="42845293" num="200" type="cond"/>
            <line num="201" count="42856931" type="stmt"/>
            <line num="204" count="42852693" type="stmt"/>
            <line num="205" count="42894945" type="stmt"/>
            <line falsecount="0" truecount="42940243" num="205" type="cond"/>
            <line num="206" count="42972770" type="stmt"/>
            <line num="207" count="42873203" type="stmt"/>
            <line falsecount="42929998" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="212" count="42964159" type="stmt"/>
            <line num="213" count="42812199" type="stmt"/>
            <line falsecount="42844115" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="42868103" type="stmt"/>
            <line falsecount="42884754" truecount="0" num="217" type="cond"/>
            <line num="219" count="42939741" type="stmt"/>
            <line num="220" count="42977563" type="stmt"/>
            <line falsecount="43144509" truecount="742767278" num="220" type="cond"/>
            <line num="221" count="750482332" type="stmt"/>
            <line num="222" count="728300012" type="stmt"/>
            <line num="223" count="712169251" type="stmt"/>
            <line num="224" count="698101590" type="stmt"/>
            <line num="225" count="684942141" type="stmt"/>
            <line num="227" count="669071759" type="stmt"/>
            <line num="228" count="676114648" type="stmt"/>
            <line falsecount="362455670" truecount="370865092" num="228" type="cond"/>
            <line num="229" count="374522338" type="stmt"/>
            <line num="236" count="732257983" type="stmt"/>
            <line falsecount="0" truecount="738402452" num="236" type="cond"/>
            <line num="237" count="741604978" type="stmt"/>
            <line falsecount="747949266" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="751231425" type="stmt"/>
            <line falsecount="0" truecount="753147673" num="241" type="cond"/>
            <line num="242" count="759537081" type="stmt"/>
            <line num="245" count="768423000" type="stmt"/>
            <line falsecount="737506199" truecount="31887173" num="245" type="cond"/>
            <line num="246" count="32103429" type="stmt"/>
            <line falsecount="0" truecount="32228133" num="246" type="cond"/>
            <line num="247" count="30208078" type="stmt"/>
            <line falsecount="10618" truecount="31446948" num="247" type="cond"/>
            <line num="251" count="43156437" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreads() : double[]" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSpread() : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="287" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwapLegProductDescriptor" num="302" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.annuitymapping">
         <metrics coveredelements="267" complexity="63" loc="894" methods="34" classes="9" statements="220" coveredconditionals="41" coveredmethods="28" elements="300" ncloc="470" files="8" conditionals="46" coveredstatements="198"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMapping.java" name="AnnuityMapping.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="55" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnnuityMapping">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnuityMapping.AnnuityMappingType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMappingFactory.java" name="AnnuityMappingFactory.java">
            <metrics coveredelements="35" coveredconditionals="3" complexity="11" loc="155" coveredmethods="3" methods="5" elements="46" classes="1" ncloc="74" statements="37" conditionals="4" coveredstatements="29"/>
            <class name="AnnuityMappingFactory">
               <metrics coveredelements="35" coveredconditionals="3" complexity="11" coveredmethods="3" methods="5" elements="46" statements="37" conditionals="4" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="buildAnnuityMapping(double,Schedule,Schedule,String,String,String,AnnuityMappingType,VolatilityCubeModel) : AnnuityMapping" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildAnnuityMapping(double,Schedule,Schedule,String,String,String,AnnuityMappingType,VolatilityCubeModel,double,double,int) : AnnuityMapping" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityMappingFactory(Schedule,Schedule,String,String,String)" num="87" count="312" type="method"/>
            <line num="89" count="312" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityMappingFactory(Schedule,Schedule,String,String,String,double,double,double,int)" num="105" count="41489" type="method"/>
            <line num="108" count="41494" type="stmt"/>
            <line num="109" count="41489" type="stmt"/>
            <line num="110" count="41486" type="stmt"/>
            <line num="111" count="41490" type="stmt"/>
            <line num="112" count="41489" type="stmt"/>
            <line num="113" count="41493" type="stmt"/>
            <line num="114" count="41494" type="stmt"/>
            <line num="115" count="41493" type="stmt"/>
            <line num="116" count="41492" type="stmt"/>
            <line num="117" count="41490" type="stmt"/>
            <line complexity="7" visibility="public" signature="build(AnnuityMappingType,VolatilityCubeModel) : AnnuityMapping" num="128" count="41487" type="method"/>
            <line num="130" count="41486" type="stmt"/>
            <line num="131" count="41482" type="stmt"/>
            <line num="132" count="41483" type="stmt"/>
            <line falsecount="41173" truecount="312" num="132" type="cond"/>
            <line num="133" count="312" type="stmt"/>
            <line falsecount="312" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="312" type="stmt"/>
            <line num="139" count="312" type="stmt"/>
            <line num="142" count="41491" type="stmt"/>
            <line num="143" count="41486" type="stmt"/>
            <line num="144" count="40882" type="stmt"/>
            <line num="144" count="40878" type="stmt"/>
            <line num="145" count="40885" type="stmt"/>
            <line num="146" count="304" type="stmt"/>
            <line num="146" count="304" type="stmt"/>
            <line num="147" count="304" type="stmt"/>
            <line num="148" count="304" type="stmt"/>
            <line num="148" count="304" type="stmt"/>
            <line num="148" count="304" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="41491" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/BasicPiterbargAnnuityMapping.java" name="BasicPiterbargAnnuityMapping.java">
            <metrics coveredelements="164" coveredconditionals="34" complexity="27" loc="344" coveredmethods="10" methods="10" elements="164" classes="1" ncloc="205" statements="120" conditionals="34" coveredstatements="120"/>
            <class name="BasicPiterbargAnnuityMapping">
               <metrics coveredelements="164" coveredconditionals="34" complexity="27" coveredmethods="10" methods="10" elements="164" statements="120" conditionals="34" coveredstatements="120"/>
            </class>
            <line complexity="1" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,VolatilityCubeModel,String,String)" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String)" num="65" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="BasicPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String,double,double,int)" num="83" count="41171" type="method"/>
            <line num="85" count="41174" type="stmt"/>
            <line num="86" count="41171" type="stmt"/>
            <line num="88" count="41180" type="stmt"/>
            <line num="89" count="41174" type="stmt"/>
            <line num="90" count="41175" type="stmt"/>
            <line num="91" count="41183" type="stmt"/>
            <line falsecount="41159" truecount="426119" num="91" type="cond"/>
            <line num="92" count="426123" type="stmt"/>
            <line num="93" count="426094" type="stmt"/>
            <line num="95" count="41164" type="stmt"/>
            <line num="97" count="41166" type="stmt"/>
            <line num="98" count="41186" type="stmt"/>
            <line num="100" count="41171" type="stmt"/>
            <line num="101" count="41192" type="stmt"/>
            <line num="104" count="41176" type="stmt"/>
            <line falsecount="41179" truecount="2" num="104" type="cond"/>
            <line num="105" count="2" type="stmt"/>
            <line num="109" count="41185" type="stmt"/>
            <line num="112" count="41193" type="stmt"/>
            <line num="113" count="41195" type="stmt"/>
            <line num="114" count="41197" type="stmt"/>
            <line num="116" count="41191" type="stmt"/>
            <line num="117" count="41192" type="stmt"/>
            <line num="118" count="41194" type="stmt"/>
            <line num="120" count="41193" type="stmt"/>
            <line falsecount="41193" truecount="426756" num="120" type="cond"/>
            <line num="122" count="426759" type="stmt"/>
            <line num="123" count="426710" type="stmt"/>
            <line num="125" count="426714" type="stmt"/>
            <line falsecount="426767" truecount="3389525" num="125" type="cond"/>
            <line num="126" count="3389476" type="stmt"/>
            <line num="127" count="3389493" type="stmt"/>
            <line num="129" count="426766" type="stmt"/>
            <line num="131" count="41192" type="stmt"/>
            <line num="132" count="41193" type="stmt"/>
            <line num="135" count="41192" type="stmt"/>
            <line num="137" count="41188" type="stmt"/>
            <line falsecount="212" truecount="40976" num="137" type="cond"/>
            <line num="138" count="40977" type="stmt"/>
            <line num="140" count="41189" type="stmt"/>
            <line num="144" count="41187" type="stmt"/>
            <line num="146" count="41193" type="stmt"/>
            <line num="148" count="41189" type="stmt"/>
            <line falsecount="212" truecount="40976" num="148" type="cond"/>
            <line num="149" count="40977" type="stmt"/>
            <line num="152" count="41184" type="stmt"/>
            <line complexity="1" visibility="private" signature="BasicPiterbargAnnuityMapping(int,double[],double[],double[],double[],double[],double[],NormalizingFunction)" num="167" count="41188" type="method"/>
            <line num="169" count="41190" type="stmt"/>
            <line num="170" count="41189" type="stmt"/>
            <line num="171" count="41189" type="stmt"/>
            <line num="172" count="41192" type="stmt"/>
            <line num="173" count="41192" type="stmt"/>
            <line num="174" count="41192" type="stmt"/>
            <line num="175" count="41192" type="stmt"/>
            <line num="176" count="41191" type="stmt"/>
            <line num="177" count="41192" type="stmt"/>
            <line num="178" count="41192" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double) : double" num="181" count="6340487" type="method"/>
            <line num="184" count="6342778" type="stmt"/>
            <line num="185" count="6344567" type="stmt"/>
            <line num="186" count="6346542" type="stmt"/>
            <line num="188" count="6348280" type="stmt"/>
            <line num="189" count="6350132" type="stmt"/>
            <line falsecount="6376279" truecount="72680297" num="189" type="cond"/>
            <line num="190" count="72713226" type="stmt"/>
            <line num="193" count="6377245" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFirstDerivative(double) : double" num="196" count="8211597" type="method"/>
            <line num="199" count="8212869" type="stmt"/>
            <line num="200" count="8214246" type="stmt"/>
            <line num="201" count="8215960" type="stmt"/>
            <line num="203" count="8217643" type="stmt"/>
            <line num="204" count="8218780" type="stmt"/>
            <line num="205" count="8220523" type="stmt"/>
            <line falsecount="8249079" truecount="111354263" num="205" type="cond"/>
            <line num="206" count="111388416" type="stmt"/>
            <line num="207" count="111404187" type="stmt"/>
            <line num="211" count="8249988" type="stmt"/>
            <line num="214" count="8250551" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSecondDerivative(double) : double" num="217" count="11032838" type="method"/>
            <line num="220" count="11035525" type="stmt"/>
            <line num="221" count="11036854" type="stmt"/>
            <line num="222" count="11037875" type="stmt"/>
            <line num="224" count="11038784" type="stmt"/>
            <line num="225" count="11039862" type="stmt"/>
            <line num="226" count="11040966" type="stmt"/>
            <line num="227" count="11042407" type="stmt"/>
            <line falsecount="11060325" truecount="142017965" num="227" type="cond"/>
            <line num="228" count="142052066" type="stmt"/>
            <line num="229" count="142000787" type="stmt"/>
            <line num="231" count="142015950" type="stmt"/>
            <line num="235" count="11060957" type="stmt"/>
            <line num="238" count="11061199" type="stmt"/>
            <line num="243" count="11060445" type="stmt"/>
            <line complexity="6" visibility="private" signature="findExponentialDriverMeans(double[],double,double,VolatilityCube,VolatilityCubeModel) : double[]" num="257" count="41186" type="method"/>
            <line num="260" count="41178" type="stmt"/>
            <line num="261" count="41179" type="stmt"/>
            <line num="262" count="41187" type="stmt"/>
            <line falsecount="41189" truecount="426674" num="262" type="cond"/>
            <line num="263" count="426700" type="stmt"/>
            <line num="267" count="41192" type="stmt"/>
            <line num="268" count="41191" type="stmt"/>
            <line num="270" count="41189" type="stmt"/>
            <line num="273" count="41189" type="stmt"/>
            <line num="274" count="41193" type="stmt"/>
            <line num="275" count="41189" type="stmt"/>
            <line falsecount="41186" truecount="426747" num="275" type="cond"/>
            <line num="276" count="426751" type="stmt"/>
            <line num="277" count="426738" type="stmt"/>
            <line num="280" count="41187" type="stmt"/>
            <line falsecount="41192" truecount="385561" num="280" type="cond"/>
            <line num="286" count="385557" type="stmt"/>
            <line num="287" count="385551" type="stmt"/>
            <line falsecount="385531" truecount="2962514" num="287" type="cond"/>
            <line num="288" count="2962478" type="stmt"/>
            <line num="289" count="2962451" type="stmt"/>
            <line num="291" count="385538" type="stmt"/>
            <line falsecount="385552" truecount="2962550" num="291" type="cond"/>
            <line num="292" count="2962573" type="stmt"/>
            <line num="297" count="385550" type="stmt"/>
            <line num="298" count="385558" type="stmt"/>
            <line num="299" count="385550" type="stmt"/>
            <line num="300" count="385562" type="stmt"/>
            <line num="302" count="41197" type="stmt"/>
            <line complexity="3" visibility="private" signature="getAnnuities(Schedule,String,AnalyticModel) : double[]" num="313" count="41177" type="method"/>
            <line num="314" count="41174" type="stmt"/>
            <line num="315" count="41176" type="stmt"/>
            <line falsecount="41191" truecount="426474" num="315" type="cond"/>
            <line num="316" count="426485" type="stmt"/>
            <line num="317" count="426519" type="stmt"/>
            <line falsecount="426441" truecount="3385025" num="317" type="cond"/>
            <line num="318" count="3385278" type="stmt"/>
            <line num="320" count="426487" type="stmt"/>
            <line num="321" count="426366" type="stmt"/>
            <line num="323" count="41190" type="stmt"/>
            <line complexity="2" visibility="private" signature="getForwardSwapRates(Schedule,String,AnalyticModel) : double[]" num="334" count="41190" type="method"/>
            <line num="335" count="41191" type="stmt"/>
            <line num="336" count="41189" type="stmt"/>
            <line num="337" count="41186" type="stmt"/>
            <line falsecount="41178" truecount="426311" num="337" type="cond"/>
            <line num="338" count="426322" type="stmt"/>
            <line num="339" count="426321" type="stmt"/>
            <line num="341" count="41173" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/ConstantNormalizer.java" name="ConstantNormalizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="27" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ConstantNormalizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/ExponentialNormalizer.java" name="ExponentialNormalizer.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="76" coveredmethods="5" methods="5" elements="19" classes="1" ncloc="39" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ExponentialNormalizer">
               <metrics coveredelements="19" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="19" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialNormalizer(Schedule,Schedule,String,String,String,VolatilityCubeModel)" num="36" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentialNormalizer(double,double)" num="52" count="82377" type="method"/>
            <line num="53" count="82376" type="stmt"/>
            <line num="54" count="82378" type="stmt"/>
            <line num="55" count="82375" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="58" count="31611726" type="method"/>
            <line num="60" count="31618480" type="stmt"/>
            <line num="61" count="31620292" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="64" count="8250205" type="method"/>
            <line num="66" count="8251097" type="stmt"/>
            <line num="67" count="8251306" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="70" count="16964329" type="method"/>
            <line num="72" count="16970075" type="stmt"/>
            <line num="73" count="16971559" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/MultiPiterbargAnnuityMapping.java" name="MultiPiterbargAnnuityMapping.java">
            <metrics coveredelements="26" coveredconditionals="1" complexity="9" loc="113" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="64" statements="20" conditionals="2" coveredstatements="19"/>
            <class name="MultiPiterbargAnnuityMapping">
               <metrics coveredelements="26" coveredconditionals="1" complexity="9" coveredmethods="6" methods="6" elements="28" statements="20" conditionals="2" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="MultiPiterbargAnnuityMapping(Schedule,Schedule,VolatilityCubeModel,String,String,String)" num="38" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiPiterbargAnnuityMapping(Schedule,Schedule,double,VolatilityCubeModel,String,String,String,double,double,int)" num="66" count="40874" type="method"/>
            <line num="69" count="40881" type="stmt"/>
            <line num="72" count="40874" type="stmt"/>
            <line num="73" count="40875" type="stmt"/>
            <line num="74" count="40874" type="stmt"/>
            <line num="75" count="40865" type="stmt"/>
            <line num="77" count="40874" type="stmt"/>
            <line num="79" count="40879" type="stmt"/>
            <line num="80" count="40868" type="stmt"/>
            <line num="82" count="40866" type="stmt"/>
            <line num="84" count="40885" type="stmt"/>
            <line num="85" count="40887" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="88" count="5895900" type="method"/>
            <line num="90" count="5898156" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="93" count="6808747" type="method"/>
            <line num="95" count="6809907" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="98" count="3924266" type="method"/>
            <line num="100" count="3924559" type="stmt"/>
            <line complexity="4" visibility="private" signature="getOffsetCode(String) : String" num="104" count="40886" type="method"/>
            <line num="105" count="40884" type="stmt"/>
            <line num="106" count="40880" type="stmt"/>
            <line num="107" count="40881" type="stmt"/>
            <line falsecount="40871" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="40870" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/NormalizingFunction.java" name="NormalizingFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NormalizingFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/annuitymapping/SimplifiedLinearAnnuityMapping.java" name="SimplifiedLinearAnnuityMapping.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="8" loc="88" coveredmethods="4" methods="5" elements="37" classes="1" ncloc="56" statements="26" conditionals="6" coveredstatements="16"/>
            <class name="SimplifiedLinearAnnuityMapping">
               <metrics coveredelements="23" coveredconditionals="3" complexity="8" coveredmethods="4" methods="5" elements="37" statements="26" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="2" visibility="public" signature="SimplifiedLinearAnnuityMapping(Schedule,double,double,double)" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="SimplifiedLinearAnnuityMapping(Schedule,Schedule,AnalyticModel,String)" num="48" count="306" type="method"/>
            <line num="49" count="306" type="stmt"/>
            <line num="51" count="306" type="stmt"/>
            <line num="52" count="306" type="stmt"/>
            <line falsecount="306" truecount="6120" num="52" type="cond"/>
            <line num="53" count="6120" type="stmt"/>
            <line num="55" count="306" type="stmt"/>
            <line num="57" count="306" type="stmt"/>
            <line falsecount="306" truecount="0" num="58" type="cond"/>
            <line num="61" count="306" type="stmt"/>
            <line num="63" count="306" type="stmt"/>
            <line num="65" count="306" type="stmt"/>
            <line num="66" count="306" type="stmt"/>
            <line num="68" count="306" type="stmt"/>
            <line num="69" count="306" type="stmt"/>
            <line num="70" count="306" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="73" count="400198" type="method"/>
            <line num="75" count="400198" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDerivative(double) : double" num="78" count="1401088" type="method"/>
            <line num="80" count="1401088" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecondDerivative(double) : double" num="83" count="1203488" type="method"/>
            <line num="85" count="1203488" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.products">
         <metrics coveredelements="265" complexity="74" loc="930" methods="52" classes="8" statements="194" coveredconditionals="35" coveredmethods="49" elements="290" ncloc="473" files="8" conditionals="44" coveredstatements="181"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AbstractAnalyticVolatilityCubeProduct.java" name="AbstractAnalyticVolatilityCubeProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="41" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="21" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractAnalyticVolatilityCubeProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : double" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel) : double" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AbstractSingleSwapRateProduct.java" name="AbstractSingleSwapRateProduct.java">
            <metrics coveredelements="65" coveredconditionals="7" complexity="19" loc="270" coveredmethods="14" methods="14" elements="70" classes="1" ncloc="112" statements="46" conditionals="10" coveredstatements="44"/>
            <class name="AbstractSingleSwapRateProduct">
               <metrics coveredelements="65" coveredconditionals="7" complexity="19" coveredmethods="14" methods="14" elements="70" statements="46" conditionals="10" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractSingleSwapRateProduct(Schedule,Schedule,String,String,String)" num="54" count="128465" type="method"/>
            <line num="56" count="128473" type="stmt"/>
            <line num="57" count="128465" type="stmt"/>
            <line num="58" count="128465" type="stmt"/>
            <line num="59" count="128475" type="stmt"/>
            <line num="60" count="128476" type="stmt"/>
            <line num="61" count="128476" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIntegrationParameters(double,double,int) : void" num="71" count="125642" type="method"/>
            <line num="72" count="125642" type="stmt"/>
            <line num="73" count="125641" type="stmt"/>
            <line num="74" count="125637" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationLowerBound() : double" num="80" count="1992" type="method"/>
            <line num="81" count="1992" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationUpperBound() : double" num="87" count="1992" type="method"/>
            <line num="88" count="1992" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationNumberOfEvaluationPoints() : int" num="94" count="1992" type="method"/>
            <line num="95" count="1992" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,VolatilityCubeModel) : double" num="99" count="84670" type="method"/>
            <line num="101" count="84666" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,AnnuityMapping,VolatilityCubeModel) : double" num="117" count="128750" type="method"/>
            <line num="119" count="128750" type="stmt"/>
            <line falsecount="128728" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="128736" type="stmt"/>
            <line num="125" count="128738" type="stmt"/>
            <line num="127" count="128740" type="stmt"/>
            <line falsecount="46386" truecount="82361" num="127" type="cond"/>
            <line num="128" count="82364" type="stmt"/>
            <line num="130" count="46386" type="stmt"/>
            <line num="132" count="128755" type="stmt"/>
            <line num="135" count="128773" type="stmt"/>
            <line falsecount="44084" truecount="84693" num="135" type="cond"/>
            <line num="137" count="128778" type="stmt"/>
            <line num="138" count="128777" type="stmt"/>
            <line num="141" count="128774" type="stmt"/>
            <line falsecount="128767" truecount="0" num="141" type="cond"/>
            <line num="145" count="128747" type="stmt"/>
            <line num="146" count="128745" type="stmt"/>
            <line num="148" count="128736" type="stmt"/>
            <line num="149" count="128773" type="stmt"/>
            <line num="151" count="128772" type="stmt"/>
            <line num="152" count="128764" type="stmt"/>
            <line num="154" count="128780" type="stmt"/>
            <line num="156" count="128781" type="stmt"/>
            <line falsecount="128762" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="128767" type="stmt"/>
            <line complexity="1" visibility="protected" signature="valuePut(double,VolatilityCubeModel,double) : double" num="215" count="10907972" type="method"/>
            <line num="216" count="10911921" type="stmt"/>
            <line complexity="1" visibility="protected" signature="valueCall(double,VolatilityCubeModel,double) : double" num="227" count="21770798" type="method"/>
            <line num="228" count="21781524" type="stmt"/>
            <line num="229" count="21720682" type="stmt"/>
            <line num="230" count="21600103" type="stmt"/>
            <line num="231" count="21694505" type="stmt"/>
            <line num="232" count="21750139" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixSchedule() : Schedule" num="238" count="580068335" type="method"/>
            <line num="239" count="580383375" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatSchedule() : Schedule" num="245" count="131051" type="method"/>
            <line num="246" count="131052" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="252" count="167045" type="method"/>
            <line num="253" count="167047" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="259" count="177422" type="method"/>
            <line num="260" count="177442" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubeName() : String" num="266" count="21865444" type="method"/>
            <line num="267" count="21872729" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AnalyticVolatilityCubeProduct.java" name="AnalyticVolatilityCubeProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticVolatilityCubeProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/AnnuityDummyProduct.java" name="AnnuityDummyProduct.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="7" loc="85" coveredmethods="6" methods="6" elements="21" classes="1" ncloc="45" statements="13" conditionals="2" coveredstatements="13"/>
            <class name="AnnuityDummyProduct">
               <metrics coveredelements="21" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="21" statements="13" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="AnnuityDummyProduct(Schedule,Schedule,String,String,String,AnnuityMappingType)" num="32" count="6" type="method"/>
            <line num="34" count="6" type="stmt"/>
            <line num="35" count="6" type="stmt"/>
            <line num="36" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnnuityDummyProduct(Schedule,Schedule,String,String,String,AnnuityMapping)" num="49" count="41188" type="method"/>
            <line num="51" count="41188" type="stmt"/>
            <line num="52" count="41190" type="stmt"/>
            <line num="53" count="41190" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="56" count="41203" type="method"/>
            <line num="59" count="41203" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="62" count="5921830" type="method"/>
            <line num="65" count="5923137" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="68" count="41201" type="method"/>
            <line num="71" count="41202" type="stmt"/>
            <line complexity="2" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="74" count="41202" type="method"/>
            <line num="77" count="41203" type="stmt"/>
            <line falsecount="6" truecount="41198" num="77" type="cond"/>
            <line num="78" count="41195" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/CashSettledPayerSwaption.java" name="CashSettledPayerSwaption.java">
            <metrics coveredelements="75" coveredconditionals="13" complexity="17" loc="182" coveredmethods="9" methods="9" elements="82" classes="1" ncloc="106" statements="57" conditionals="16" coveredstatements="53"/>
            <class name="CashSettledPayerSwaption">
               <metrics coveredelements="75" coveredconditionals="13" complexity="17" coveredmethods="9" methods="9" elements="82" statements="57" conditionals="16" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="CashSettledPayerSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType)" num="32" count="1350" type="method"/>
            <line num="34" count="1350" type="stmt"/>
            <line num="35" count="1350" type="stmt"/>
            <line num="36" count="1350" type="stmt"/>
            <line complexity="1" visibility="public" signature="CashSettledPayerSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType,double,double,int)" num="53" count="21747" type="method"/>
            <line num="56" count="21747" type="stmt"/>
            <line num="57" count="21748" type="stmt"/>
            <line num="58" count="21748" type="stmt"/>
            <line num="60" count="21749" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="63" count="23098" type="method"/>
            <line num="65" count="23098" type="stmt"/>
            <line num="66" count="23096" type="stmt"/>
            <line num="67" count="23096" type="stmt"/>
            <line complexity="2" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="71" count="3467966" type="method"/>
            <line num="74" count="3468826" type="stmt"/>
            <line falsecount="1660400" truecount="1812852" num="74" type="cond"/>
            <line num="75" count="1812979" type="stmt"/>
            <line num="78" count="1660493" type="stmt"/>
            <line num="79" count="1656289" type="stmt"/>
            <line num="80" count="1656427" type="stmt"/>
            <line num="81" count="1656239" type="stmt"/>
            <line num="83" count="1656386" type="stmt"/>
            <line num="85" count="1657274" type="stmt"/>
            <line complexity="2" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="89" count="23099" type="method"/>
            <line num="91" count="23099" type="stmt"/>
            <line num="92" count="23096" type="stmt"/>
            <line falsecount="4804" truecount="18292" num="92" type="cond"/>
            <line num="93" count="18293" type="stmt"/>
            <line num="95" count="4805" type="stmt"/>
            <line num="97" count="23097" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="100" count="1000" type="method"/>
            <line num="103" count="1000" type="stmt"/>
            <line num="105" count="1000" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="114" count="8286739" type="method"/>
            <line num="116" count="8293077" type="stmt"/>
            <line num="117" count="8273030" type="stmt"/>
            <line num="118" count="8279983" type="stmt"/>
            <line falsecount="8240685" truecount="97647948" num="118" type="cond"/>
            <line num="119" count="97738573" type="stmt"/>
            <line num="121" count="8248720" type="stmt"/>
            <line num="123" count="8234780" type="stmt"/>
            <line falsecount="8238612" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="8242480" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionFirstDerivative(double) : double" num="136" count="4977200" type="method"/>
            <line num="138" count="4979498" type="stmt"/>
            <line num="139" count="4971405" type="stmt"/>
            <line num="140" count="4973071" type="stmt"/>
            <line falsecount="4930686" truecount="58516171" num="140" type="cond"/>
            <line num="141" count="58526846" type="stmt"/>
            <line num="143" count="4932830" type="stmt"/>
            <line num="145" count="4925062" type="stmt"/>
            <line falsecount="4926870" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="4929284" type="stmt"/>
            <line num="149" count="4934908" type="stmt"/>
            <line num="150" count="4937611" type="stmt"/>
            <line num="151" count="4946199" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionSecondDerivative(double) : double" num="161" count="1661678" type="method"/>
            <line num="163" count="1662004" type="stmt"/>
            <line num="164" count="1660894" type="stmt"/>
            <line num="165" count="1661122" type="stmt"/>
            <line falsecount="1657051" truecount="19795174" num="165" type="cond"/>
            <line num="166" count="19796042" type="stmt"/>
            <line num="168" count="1657300" type="stmt"/>
            <line num="170" count="1657466" type="stmt"/>
            <line num="171" count="1657613" type="stmt"/>
            <line falsecount="1657925" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="1658193" type="stmt"/>
            <line num="176" count="1658708" type="stmt"/>
            <line num="177" count="1658862" type="stmt"/>
            <line num="179" count="1656525" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/CashSettledReceiverSwaption.java" name="CashSettledReceiverSwaption.java">
            <metrics coveredelements="75" coveredconditionals="13" complexity="17" loc="182" coveredmethods="9" methods="9" elements="82" classes="1" ncloc="106" statements="57" conditionals="16" coveredstatements="53"/>
            <class name="CashSettledReceiverSwaption">
               <metrics coveredelements="75" coveredconditionals="13" complexity="17" coveredmethods="9" methods="9" elements="82" statements="57" conditionals="16" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="CashSettledReceiverSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType)" num="32" count="1344" type="method"/>
            <line num="34" count="1344" type="stmt"/>
            <line num="35" count="1344" type="stmt"/>
            <line num="36" count="1344" type="stmt"/>
            <line complexity="1" visibility="public" signature="CashSettledReceiverSwaption(Schedule,Schedule,double,String,String,String,AnnuityMappingType,double,double,int)" num="53" count="21640" type="method"/>
            <line num="56" count="21639" type="stmt"/>
            <line num="57" count="21640" type="stmt"/>
            <line num="58" count="21641" type="stmt"/>
            <line num="60" count="21640" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="63" count="22985" type="method"/>
            <line num="65" count="22984" type="stmt"/>
            <line num="66" count="22984" type="stmt"/>
            <line num="67" count="22981" type="stmt"/>
            <line complexity="2" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="71" count="3453196" type="method"/>
            <line num="74" count="3453908" type="stmt"/>
            <line falsecount="1659233" truecount="1798727" num="74" type="cond"/>
            <line num="75" count="1798837" type="stmt"/>
            <line num="78" count="1659287" type="stmt"/>
            <line num="79" count="1655431" type="stmt"/>
            <line num="80" count="1656111" type="stmt"/>
            <line num="81" count="1655682" type="stmt"/>
            <line num="83" count="1655843" type="stmt"/>
            <line num="85" count="1656685" type="stmt"/>
            <line complexity="2" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="89" count="22980" type="method"/>
            <line num="91" count="22980" type="stmt"/>
            <line num="92" count="22980" type="stmt"/>
            <line falsecount="22688" truecount="294" num="92" type="cond"/>
            <line num="93" count="294" type="stmt"/>
            <line num="95" count="22690" type="stmt"/>
            <line num="97" count="22985" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="100" count="992" type="method"/>
            <line num="103" count="992" type="stmt"/>
            <line num="105" count="992" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="114" count="8282907" type="method"/>
            <line num="116" count="8288850" type="stmt"/>
            <line num="117" count="8269675" type="stmt"/>
            <line num="118" count="8276444" type="stmt"/>
            <line falsecount="8233839" truecount="97782120" num="118" type="cond"/>
            <line num="119" count="97881498" type="stmt"/>
            <line num="121" count="8242082" type="stmt"/>
            <line num="123" count="8229601" type="stmt"/>
            <line falsecount="8235095" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="8238797" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionFirstDerivative(double) : double" num="136" count="4972835" type="method"/>
            <line num="138" count="4974834" type="stmt"/>
            <line num="139" count="4967418" type="stmt"/>
            <line num="140" count="4968935" type="stmt"/>
            <line falsecount="4928975" truecount="58652354" num="140" type="cond"/>
            <line num="141" count="58662904" type="stmt"/>
            <line num="143" count="4930896" type="stmt"/>
            <line num="145" count="4923582" type="stmt"/>
            <line falsecount="4925150" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="4927175" type="stmt"/>
            <line num="149" count="4933376" type="stmt"/>
            <line num="150" count="4935956" type="stmt"/>
            <line num="151" count="4945938" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunctionSecondDerivative(double) : double" num="161" count="1660244" type="method"/>
            <line num="163" count="1660483" type="stmt"/>
            <line num="164" count="1659577" type="stmt"/>
            <line num="165" count="1659731" type="stmt"/>
            <line falsecount="1655955" truecount="19843163" num="165" type="cond"/>
            <line num="166" count="19843922" type="stmt"/>
            <line num="168" count="1656229" type="stmt"/>
            <line num="170" count="1656337" type="stmt"/>
            <line num="171" count="1656465" type="stmt"/>
            <line falsecount="1656737" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="1656959" type="stmt"/>
            <line num="176" count="1657484" type="stmt"/>
            <line num="177" count="1657635" type="stmt"/>
            <line num="179" count="1655979" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/ConstantMaturitySwap.java" name="ConstantMaturitySwap.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="6" loc="88" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="45" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="ConstantMaturitySwap">
               <metrics coveredelements="18" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwap(Schedule,Schedule,String,String,String,AnnuityMappingType)" num="30" count="6" type="method"/>
            <line num="32" count="6" type="stmt"/>
            <line num="33" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="36" count="306" type="method"/>
            <line num="38" count="306" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="41" count="3005388" type="method"/>
            <line num="43" count="3005388" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="46" count="306" type="method"/>
            <line num="48" count="306" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="51" count="306" type="method"/>
            <line num="54" count="306" type="stmt"/>
            <line num="55" count="306" type="stmt"/>
            <line complexity="1" visibility="public" signature="analyticApproximation(double,double,double,double,double,double) : double" num="70" count="6" type="method"/>
            <line num="79" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/products/NormalizingDummyProduct.java" name="NormalizingDummyProduct.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="5" loc="58" coveredmethods="5" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="NormalizingDummyProduct">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NormalizingDummyProduct(Schedule,Schedule,String,String,String,NormalizingFunction)" num="29" count="41196" type="method"/>
            <line num="31" count="41195" type="stmt"/>
            <line num="32" count="41193" type="stmt"/>
            <line complexity="1" visibility="protected" signature="payoffFunction(double,AnnuityMapping,VolatilityCubeModel) : double" num="35" count="41201" type="method"/>
            <line num="38" count="41198" type="stmt"/>
            <line complexity="1" visibility="protected" signature="hedgeWeight(double,AnnuityMapping,VolatilityCubeModel) : double" num="41" count="5916273" type="method"/>
            <line num="44" count="5917936" type="stmt"/>
            <line complexity="1" visibility="protected" signature="singularAddon(double,AnnuityMapping,VolatilityCubeModel) : double" num="47" count="41197" type="method"/>
            <line num="50" count="41195" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildAnnuityMapping(VolatilityCubeModel) : AnnuityMapping" num="53" count="41199" type="method"/>
            <line num="55" count="41199" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet.tenorconversion">
         <metrics coveredelements="0" complexity="53" loc="411" methods="13" classes="3" statements="154" coveredconditionals="0" coveredmethods="0" elements="241" ncloc="317" files="3" conditionals="74" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/CorrelationProvider.java" name="CorrelationProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CorrelationProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/CorrelationProviderTenorBasis.java" name="CorrelationProviderTenorBasis.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="217" coveredmethods="0" methods="11" elements="123" classes="1" ncloc="170" statements="78" conditionals="34" coveredstatements="0"/>
            <class name="CorrelationProviderTenorBasis">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="11" elements="123" statements="78" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CorrelationProviderTenorBasis(CapVolMarketData,CapVolMarketData)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get6MCorrelation(double,double,AnalyticModel) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="16" visibility="public" signature="get3MCorrelation(double,double,AnalyticModel) : double" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="get1MCorrelation(double,double,AnalyticModel) : double" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getiCap3MCapletVolMatrix() : double[][]" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getiCap6MCapletVolMatrix() : double[][]" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationMatrix3M() : double[][]" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationMatrix6M() : double[][]" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getICap3MCapletVolBootrapper() : CapletVolBootstrapping" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getICap6MCapletVolBootrapper() : CapletVolBootstrapping" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCorrelation(int,double,double,AnalyticModel,String) : double" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/tenorconversion/TenorConverter.java" name="TenorConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="183" coveredmethods="0" methods="2" elements="118" classes="1" ncloc="141" statements="76" conditionals="40" coveredstatements="0"/>
            <class name="TenorConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="2" elements="118" statements="76" conditionals="40" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="TenorConverter(CorrelationProvider,int,int,double[],double[],double[][],CapTenorStructure,AnalyticModel,String,String,String)" num="50" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="21" visibility="public" signature="convertTenor() : double[][]" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.modelfactory">
         <metrics coveredelements="169" complexity="66" loc="823" methods="53" classes="19" statements="142" coveredconditionals="19" coveredmethods="38" elements="221" ncloc="523" files="6" conditionals="26" coveredstatements="112"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/AnalyticModelFactory.java" name="AnalyticModelFactory.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="59" coveredmethods="3" methods="4" elements="8" classes="2" ncloc="32" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="AnalyticModelFactory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AnalyticModelFactory.DescribedAnalyticModel">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(AnalyticModelDescriptor) : DescribedModel&lt;AnalyticModelDescriptor&gt;" num="25" count="4" type="method"/>
            <line num="27" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DescribedAnalyticModel(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="41" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : AnalyticModelDescriptor" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="50" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/AssetModelFourierMethodFactory.java" name="AssetModelFourierMethodFactory.java">
            <metrics coveredelements="46" coveredconditionals="7" complexity="18" loc="220" coveredmethods="10" methods="14" elements="57" classes="5" ncloc="143" statements="35" conditionals="8" coveredstatements="29"/>
            <class name="AssetModelFourierMethodFactory">
               <metrics coveredelements="22" coveredconditionals="7" complexity="6" coveredmethods="2" methods="2" elements="25" statements="15" conditionals="8" coveredstatements="13"/>
            </class>
            <class name="AssetModelFourierMethodFactory.BlackScholesModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.HestonModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.MertonModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelFourierMethodFactory.VarianceGammaModelFourier">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AssetModelFourierMethodFactory()" num="30" count="12" type="method"/>
            <line num="31" count="12" type="stmt"/>
            <line complexity="5" visibility="public" signature="getModelFromDescriptor(AssetModelDescriptor) : DescribedModel&lt;? extends AssetModelDescriptor&gt;" num="34" count="12" type="method"/>
            <line num="37" count="12" type="stmt"/>
            <line falsecount="8" truecount="4" num="37" type="cond"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="41" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="41" type="cond"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="45" type="cond"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="BlackScholesModelFourier(BlackScholesModelDescriptor)" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="97" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="HestonModelFourier(HestonModelDescriptor)" num="121" count="4" type="method"/>
            <line num="122" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="141" count="4" type="method"/>
            <line num="144" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="MertonModelFourier(MertonModelDescriptor)" num="159" count="2" type="method"/>
            <line num="160" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : MertonModelDescriptor" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="177" count="2" type="method"/>
            <line num="180" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="VarianceGammaModelFourier(VarianceGammaModelDescriptor)" num="196" count="2" type="method"/>
            <line num="197" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : VarianceGammaModelDescriptor" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="213" count="2" type="method"/>
            <line num="216" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/AssetModelMonteCarloFactory.java" name="AssetModelMonteCarloFactory.java">
            <metrics coveredelements="56" coveredconditionals="8" complexity="21" loc="251" coveredmethods="11" methods="16" elements="74" classes="5" ncloc="150" statements="48" conditionals="10" coveredstatements="37"/>
            <class name="AssetModelMonteCarloFactory">
               <metrics coveredelements="32" coveredconditionals="8" complexity="9" coveredmethods="3" methods="4" elements="42" statements="28" conditionals="10" coveredstatements="21"/>
            </class>
            <class name="AssetModelMonteCarloFactory.BlackScholesModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.HestonModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.MertonModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AssetModelMonteCarloFactory.VarianceGammaModelMonteCarlo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements,Scheme)" num="42" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssetModelMonteCarloFactory(IndependentIncrements)" num="69" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getModelFromDescriptor(AssetModelDescriptor) : DescribedModel&lt;? extends AssetModelDescriptor&gt;" num="76" count="8" type="method"/>
            <line num="79" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="79" type="cond"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="83" type="cond"/>
            <line num="84" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="90" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="94" type="cond"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="BlackScholesModelMonteCarlo(BlackScholesModelDescriptor,RandomVariableFactory,IndependentIncrements)" num="126" count="2" type="method"/>
            <line num="128" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="144" count="2" type="method"/>
            <line num="146" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="HestonModelMonteCarlo(HestonModelDescriptor,Scheme,RandomVariableFactory,IndependentIncrements)" num="171" count="2" type="method"/>
            <line num="173" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="184" count="2" type="method"/>
            <line num="186" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="MertonModelMonteCarlo(MertonModelDescriptor,RandomVariableFactory,IndependentIncrements)" num="202" count="2" type="method"/>
            <line num="204" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : MertonModelDescriptor" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="215" count="2" type="method"/>
            <line num="217" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="VarianceGammaModelMonteCarlo(VarianceGammaModelDescriptor,IndependentIncrements)" num="233" count="2" type="method"/>
            <line num="234" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : VarianceGammaModelDescriptor" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="245" count="2" type="method"/>
            <line num="248" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/BlackScholesModelMonteCarloFactory.java" name="BlackScholesModelMonteCarloFactory.java">
            <metrics coveredelements="13" coveredconditionals="1" complexity="6" loc="86" coveredmethods="4" methods="5" elements="18" classes="2" ncloc="55" statements="11" conditionals="2" coveredstatements="8"/>
            <class name="BlackScholesModelMonteCarloFactory">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="BlackScholesModelMonteCarloFactory.BlackScholesMonteCarloModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelMonteCarloFactory(RandomVariableFactory,IndependentIncrements)" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(BlackScholesModelDescriptor) : DescribedModel&lt;BlackScholesModelDescriptor&gt;" num="40" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="BlackScholesMonteCarloModel(ProcessModel,MonteCarloProcess)" num="62" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="71" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="73" type="cond"/>
            <line num="74" count="2" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/BlackScholesModelMonteCarloFiniteDifference1D.java" name="BlackScholesModelMonteCarloFiniteDifference1D.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="11" loc="123" coveredmethods="6" methods="9" elements="45" classes="3" ncloc="87" statements="32" conditionals="4" coveredstatements="26"/>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D">
               <metrics coveredelements="12" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D.BlackScholesFDModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="BlackScholesModelMonteCarloFiniteDifference1D.BlackScholesFDModel.FDCallOptionProduct">
               <metrics coveredelements="16" coveredconditionals="1" complexity="5" coveredmethods="2" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelMonteCarloFiniteDifference1D(double)" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(BlackScholesModelDescriptor) : DescribedModel&lt;BlackScholesModelDescriptor&gt;" num="38" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="BlackScholesFDModel()" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : BlackScholesModelDescriptor" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="64" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="66" type="cond"/>
            <line complexity="1" visibility="package" signature="FDCallOptionProduct()" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="83" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetProductDescriptor" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/modelfactory/HestonModelMonteCarloFactory.java" name="HestonModelMonteCarloFactory.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="6" loc="84" coveredmethods="4" methods="5" elements="19" classes="2" ncloc="56" statements="12" conditionals="2" coveredstatements="9"/>
            <class name="HestonModelMonteCarloFactory">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="HestonModelMonteCarloFactory.HestonMonteCarloModel">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModelMonteCarloFactory(Scheme,RandomVariableFactory,IndependentIncrements)" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelFromDescriptor(HestonModelDescriptor) : DescribedModel&lt;HestonModelDescriptor&gt;" num="45" count="2" type="method"/>
            <line complexity="1" visibility="package" signature="HestonMonteCarloModel(ProcessModel,MonteCarloProcess)" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : HestonModelDescriptor" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends ProductDescriptor&gt;" num="64" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration">
         <metrics coveredelements="136" complexity="41" loc="547" methods="26" classes="11" statements="132" coveredconditionals="18" coveredmethods="17" elements="182" ncloc="286" files="10" conditionals="24" coveredstatements="101"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/BoundConstraint.java" name="BoundConstraint.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="6" loc="50" coveredmethods="4" methods="4" elements="15" classes="1" ncloc="27" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="BoundConstraint">
               <metrics coveredelements="15" coveredconditionals="2" complexity="6" coveredmethods="4" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BoundConstraint(double,double)" num="13" count="16" type="method"/>
            <line num="14" count="16" type="stmt"/>
            <line num="15" count="16" type="stmt"/>
            <line num="16" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double" num="23" count="4042" type="method"/>
            <line num="25" count="4040" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double" num="32" count="4037" type="method"/>
            <line num="34" count="4038" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(double) : double" num="37" count="2006" type="method"/>
            <line num="40" count="2006" type="stmt"/>
            <line falsecount="1740" truecount="263" num="40" type="cond"/>
            <line num="41" count="263" type="stmt"/>
            <line num="43" count="263" type="stmt"/>
            <line num="46" count="1741" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/CalibratedModel.java" name="CalibratedModel.java">
            <metrics coveredelements="113" coveredconditionals="16" complexity="24" loc="306" coveredmethods="10" methods="11" elements="139" classes="2" ncloc="184" statements="106" conditionals="22" coveredstatements="87"/>
            <class name="CalibratedModel">
               <metrics coveredelements="98" coveredconditionals="16" complexity="18" coveredmethods="5" methods="5" elements="122" statements="95" conditionals="22" coveredstatements="77"/>
            </class>
            <class name="CalibratedModel.OptimizationResult">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratedModel(OptionSurfaceData,CalibratableProcess,OptimizerFactory,EuropeanOptionSmile,double[],double[])" num="64" count="4" type="method"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibration() : OptimizationResult" num="84" count="4" type="method"/>
            <line num="86" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="87" count="498" type="method"/>
            <line num="91" count="498" type="stmt"/>
            <line num="92" count="498" type="stmt"/>
            <line num="94" count="498" type="stmt"/>
            <line num="95" count="498" type="stmt"/>
            <line num="97" count="497" type="stmt"/>
            <line num="99" count="498" type="stmt"/>
            <line num="101" count="498" type="stmt"/>
            <line falsecount="498" truecount="996" num="101" type="cond"/>
            <line num="103" count="996" type="stmt"/>
            <line num="105" count="995" type="stmt"/>
            <line num="107" count="995" type="stmt"/>
            <line num="108" count="995" type="stmt"/>
            <line num="110" count="996" type="stmt"/>
            <line falsecount="996" truecount="9960" num="110" type="cond"/>
            <line num="112" count="9959" type="stmt"/>
            <line falsecount="0" truecount="9960" num="112" type="cond"/>
            <line num="114" count="9960" type="stmt"/>
            <line num="115" count="9959" type="stmt"/>
            <line num="116" count="9959" type="stmt"/>
            <line num="117" count="9959" type="stmt"/>
            <line num="118" count="9956" type="stmt"/>
            <line num="119" count="9959" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="498" type="stmt"/>
            <line num="141" count="9959" type="stmt"/>
            <line falsecount="498" truecount="9959" num="141" type="cond"/>
            <line num="145" count="4" type="stmt"/>
            <line num="154" count="4" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="formatTargetValuesForOptimizer() : double[]" num="167" count="4" type="method"/>
            <line num="169" count="4" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="174" type="cond"/>
            <line num="175" count="8" type="stmt"/>
            <line num="176" count="8" type="stmt"/>
            <line num="178" count="8" type="stmt"/>
            <line num="180" count="8" type="stmt"/>
            <line falsecount="8" truecount="80" num="180" type="cond"/>
            <line num="181" count="80" type="stmt"/>
            <line num="185" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line complexity="6" visibility="private" signature="outputCalibrationResult(double[]) : ArrayList&lt;String&gt;" num="194" count="4" type="method"/>
            <line num="196" count="4" type="stmt"/>
            <line num="199" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="202" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line num="214" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="214" type="cond"/>
            <line num="215" count="8" type="stmt"/>
            <line num="216" count="8" type="stmt"/>
            <line num="217" count="8" type="stmt"/>
            <line num="219" count="8" type="stmt"/>
            <line num="221" count="8" type="stmt"/>
            <line num="222" count="8" type="stmt"/>
            <line num="224" count="8" type="stmt"/>
            <line falsecount="8" truecount="80" num="224" type="cond"/>
            <line num="225" count="80" type="stmt"/>
            <line num="226" count="80" type="stmt"/>
            <line num="228" count="80" type="stmt"/>
            <line falsecount="0" truecount="80" num="228" type="cond"/>
            <line num="230" count="80" type="stmt"/>
            <line num="231" count="80" type="stmt"/>
            <line num="232" count="80" type="stmt"/>
            <line num="233" count="80" type="stmt"/>
            <line num="234" count="80" type="stmt"/>
            <line num="235" count="80" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="80" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="258" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizationResult(CalibratableProcess,double[],int,double,ArrayList&lt;String&gt;)" num="274" count="4" type="method"/>
            <line num="276" count="4" type="stmt"/>
            <line num="277" count="4" type="stmt"/>
            <line num="278" count="4" type="stmt"/>
            <line num="279" count="4" type="stmt"/>
            <line num="280" count="4" type="stmt"/>
            <line num="281" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : CalibratableProcess" num="284" count="4" type="method"/>
            <line num="285" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="292" count="4" type="method"/>
            <line num="293" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="296" count="8" type="method"/>
            <line num="297" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibrationOutput() : ArrayList&lt;String&gt;" num="300" count="4" type="method"/>
            <line num="301" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/Constraint.java" name="Constraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Constraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/NegativityConstraint.java" name="NegativityConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="20" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="NegativityConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NegativityConstraint()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ParameterInformation.java" name="ParameterInformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterInformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/PositivityConstraint.java" name="PositivityConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="19" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="PositivityConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PositivityConstraint()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ScalarConstraint.java" name="ScalarConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScalarConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ScalarParameterInformation.java" name="ScalarParameterInformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScalarParameterInformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/ScalarParameterInformationImplementation.java" name="ScalarParameterInformationImplementation.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="55" coveredmethods="3" methods="5" elements="16" classes="1" ncloc="28" statements="11" conditionals="0" coveredstatements="5"/>
            <class name="ScalarParameterInformationImplementation">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(boolean,ScalarConstraint)" num="19" count="16" type="method"/>
            <line num="20" count="16" type="stmt"/>
            <line num="21" count="16" type="stmt"/>
            <line num="22" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(boolean)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScalarParameterInformationImplementation(ScalarConstraint)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIsParameterToCalibrate() : boolean" num="46" count="2004" type="method"/>
            <line num="48" count="2004" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraint() : ScalarConstraint" num="51" count="10085" type="method"/>
            <line num="53" count="10086" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/Unconstrained.java" name="Unconstrained.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="20" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Unconstrained">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Unconstrained()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time">
         <metrics coveredelements="380" complexity="211" loc="2433" methods="123" classes="17" statements="419" coveredconditionals="53" coveredmethods="87" elements="668" ncloc="1210" files="12" conditionals="126" coveredstatements="240"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/FloatingpointDate.java" name="FloatingpointDate.java">
            <metrics coveredelements="16" coveredconditionals="3" complexity="7" loc="117" coveredmethods="4" methods="5" elements="19" classes="1" ncloc="32" statements="10" conditionals="4" coveredstatements="9"/>
            <class name="FloatingpointDate">
               <metrics coveredelements="16" coveredconditionals="3" complexity="7" coveredmethods="4" methods="5" elements="19" statements="10" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="FloatingpointDate()" num="53" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getDateFromFloatingPointDate(LocalDateTime,double) : LocalDateTime" num="67" count="12347557" type="method"/>
            <line num="68" count="12347557" type="stmt"/>
            <line falsecount="12347557" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="12347559" type="stmt"/>
            <line num="73" count="12347559" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingPointDateFromDate(LocalDateTime,LocalDateTime) : double" num="83" count="12357553" type="method"/>
            <line num="84" count="12357610" type="stmt"/>
            <line num="85" count="12357638" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDateFromFloatingPointDate(LocalDate,double) : LocalDate" num="100" count="16623" type="method"/>
            <line num="101" count="16625" type="stmt"/>
            <line falsecount="16335" truecount="288" num="101" type="cond"/>
            <line num="102" count="288" type="stmt"/>
            <line num="104" count="16339" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingPointDateFromDate(LocalDate,LocalDate) : double" num="114" count="1249397047" type="method"/>
            <line num="115" count="1272138981" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/Period.java" name="Period.java">
            <metrics coveredelements="39" coveredconditionals="10" complexity="26" loc="121" coveredmethods="7" methods="9" elements="86" classes="1" ncloc="87" statements="43" conditionals="34" coveredstatements="22"/>
            <class name="Period">
               <metrics coveredelements="39" coveredconditionals="10" complexity="26" coveredmethods="7" methods="9" elements="86" statements="43" conditionals="34" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="Period(LocalDate,LocalDate,LocalDate,LocalDate)" num="36" count="380048427" type="method"/>
            <line num="38" count="373095786" type="stmt"/>
            <line num="39" count="381656425" type="stmt"/>
            <line num="40" count="382299710" type="stmt"/>
            <line num="41" count="383111097" type="stmt"/>
            <line num="42" count="383801391" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing() : LocalDate" num="45" count="356227713" type="method"/>
            <line num="46" count="362743309" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment() : LocalDate" num="49" count="350476491" type="method"/>
            <line num="50" count="356956441" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : LocalDate" num="53" count="614147574" type="method"/>
            <line num="54" count="631129672" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : LocalDate" num="57" count="611504899" type="method"/>
            <line num="58" count="624788885" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(Period) : int" num="61" count="108" type="method"/>
            <line num="63" count="108" type="stmt"/>
            <line complexity="5" visibility="public" signature="hashCode() : int" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="equals(Object) : boolean" num="77" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/RegularSchedule.java" name="RegularSchedule.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="14" loc="99" coveredmethods="8" methods="14" elements="29" classes="1" ncloc="64" statements="15" conditionals="0" coveredstatements="8"/>
            <class name="RegularSchedule">
               <metrics coveredelements="16" coveredconditionals="0" complexity="14" coveredmethods="8" methods="14" elements="29" statements="15" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="RegularSchedule(TimeDiscretization)" num="30" count="1738281" type="method"/>
            <line num="31" count="1738376" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="34" count="10692" type="method"/>
            <line num="36" count="10694" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : ArrayList&lt;Period&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountconvention() : DayCountConvention" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="49" count="35478980" type="method"/>
            <line num="51" count="35527315" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriod(int) : Period" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing(int) : double" num="59" count="11974502" type="method"/>
            <line num="61" count="11977145" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment(int) : double" num="64" count="33694257" type="method"/>
            <line num="66" count="33711835" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart(int) : double" num="69" count="89244" type="method"/>
            <line num="71" count="89354" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd(int) : double" num="74" count="88912" type="method"/>
            <line num="76" count="89010" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength(int) : double" num="79" count="33646103" type="method"/>
            <line num="81" count="33665156" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Period&gt;" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(double) : int" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(LocalDate) : int" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/Schedule.java" name="Schedule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="127" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Schedule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/ScheduleFromPeriods.java" name="ScheduleFromPeriods.java">
            <metrics coveredelements="51" coveredconditionals="5" complexity="23" loc="159" coveredmethods="14" methods="16" elements="69" classes="1" ncloc="114" statements="41" conditionals="12" coveredstatements="32"/>
            <class name="ScheduleFromPeriods">
               <metrics coveredelements="51" coveredconditionals="5" complexity="23" coveredmethods="14" methods="16" elements="69" statements="41" conditionals="12" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleFromPeriods(LocalDate,DayCountConvention,Period)" num="45" count="426404" type="method"/>
            <line num="46" count="426382" type="stmt"/>
            <line complexity="3" visibility="public" signature="ScheduleFromPeriods(LocalDate,List&lt;Period&gt;,DayCountConvention)" num="49" count="20675615" type="method"/>
            <line num="50" count="20669534" type="stmt"/>
            <line num="51" count="20677269" type="stmt"/>
            <line falsecount="20678245" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="20683844" type="stmt"/>
            <line num="56" count="20686696" type="stmt"/>
            <line num="57" count="20686925" type="stmt"/>
            <line num="60" count="20687674" type="stmt"/>
            <line num="61" count="20685680" type="stmt"/>
            <line num="62" count="20686536" type="stmt"/>
            <line num="63" count="20687535" type="stmt"/>
            <line num="64" count="20691351" type="stmt"/>
            <line num="65" count="20690926" type="stmt"/>
            <line falsecount="20487099" truecount="343207724" num="65" type="cond"/>
            <line num="66" count="353712239" type="stmt"/>
            <line num="67" count="344999899" type="stmt"/>
            <line num="68" count="340565517" type="stmt"/>
            <line num="69" count="340351520" type="stmt"/>
            <line num="70" count="339977850" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="74" count="43460813" type="method"/>
            <line num="76" count="43475994" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="79" count="8" type="method"/>
            <line num="81" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountconvention() : DayCountConvention" num="84" count="429582" type="method"/>
            <line num="86" count="429625" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="89" count="1220323391" type="method"/>
            <line num="91" count="1229255178" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriod(int) : Period" num="94" count="3388618" type="method"/>
            <line num="96" count="3388750" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixing(int) : double" num="99" count="891148072" type="method"/>
            <line num="101" count="895025490" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPayment(int) : double" num="104" count="837229520" type="method"/>
            <line num="106" count="839920704" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart(int) : double" num="109" count="729974416" type="method"/>
            <line num="111" count="732750843" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd(int) : double" num="114" count="714745869" type="method"/>
            <line num="116" count="716819651" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength(int) : double" num="119" count="1123620035" type="method"/>
            <line num="121" count="1126524017" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Period&gt;" num="124" count="2" type="method"/>
            <line num="126" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getPeriodIndex(double) : int" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodIndex(LocalDate) : int" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="148" count="6" type="method"/>
            <line num="150" count="6" type="stmt"/>
            <line num="151" count="6" type="stmt"/>
            <line falsecount="6" truecount="84" num="151" type="cond"/>
            <line num="152" count="84" type="stmt"/>
            <line num="157" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/ScheduleGenerator.java" name="ScheduleGenerator.java">
            <metrics coveredelements="126" coveredconditionals="28" complexity="56" loc="838" coveredmethods="8" methods="14" elements="214" classes="4" ncloc="477" statements="154" conditionals="46" coveredstatements="90"/>
            <class name="ScheduleGenerator">
               <metrics coveredelements="98" coveredconditionals="15" complexity="43" coveredmethods="7" methods="13" elements="164" statements="129" conditionals="22" coveredstatements="76"/>
            </class>
            <class name="ScheduleGenerator.Frequency">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ScheduleGenerator.DaycountConvention">
               <metrics coveredelements="28" coveredconditionals="13" complexity="13" coveredmethods="1" methods="1" elements="50" statements="25" conditionals="24" coveredstatements="14"/>
            </class>
            <class name="ScheduleGenerator.ShortPeriodConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="13" visibility="public" signature="getEnum(String) : DaycountConvention" num="90" count="2526" type="method"/>
            <line num="91" count="2526" type="stmt"/>
            <line falsecount="2526" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="2526" type="stmt"/>
            <line falsecount="2526" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="2526" type="stmt"/>
            <line falsecount="2526" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="2526" type="stmt"/>
            <line falsecount="2526" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="2526" type="stmt"/>
            <line falsecount="2022" truecount="504" num="103" type="cond"/>
            <line num="104" count="504" type="stmt"/>
            <line num="106" count="2022" type="stmt"/>
            <line falsecount="2004" truecount="18" num="106" type="cond"/>
            <line num="107" count="18" type="stmt"/>
            <line num="109" count="2004" type="stmt"/>
            <line falsecount="2004" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="2004" type="stmt"/>
            <line falsecount="2004" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="2004" type="stmt"/>
            <line falsecount="26" truecount="1978" num="115" type="cond"/>
            <line num="116" count="1978" type="stmt"/>
            <line num="118" count="26" type="stmt"/>
            <line falsecount="0" truecount="26" num="118" type="cond"/>
            <line num="119" count="26" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleGenerator()" num="144" count="0" type="method"/>
            <line complexity="29" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean) : Schedule" num="172" count="20084778" type="method"/>
            <line num="189" count="20095227" type="stmt"/>
            <line num="191" count="20103522" type="stmt"/>
            <line num="192" count="20109005" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="750" type="stmt"/>
            <line num="197" count="750" type="stmt"/>
            <line num="198" count="750" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="20112643" type="stmt"/>
            <line num="203" count="20118166" type="stmt"/>
            <line num="204" count="20045536" type="stmt"/>
            <line num="205" count="30" type="stmt"/>
            <line num="206" count="30" type="stmt"/>
            <line num="207" count="30" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="20055598" type="stmt"/>
            <line num="216" count="20060124" type="stmt"/>
            <line num="217" count="20064056" type="stmt"/>
            <line num="218" count="20069306" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="500" type="stmt"/>
            <line num="229" count="500" type="stmt"/>
            <line num="230" count="500" type="stmt"/>
            <line num="231" count="20004584" type="stmt"/>
            <line num="232" count="20016314" type="stmt"/>
            <line num="233" count="20023028" type="stmt"/>
            <line num="234" count="61498" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="61505" type="stmt"/>
            <line num="237" count="61493" type="stmt"/>
            <line num="238" count="7608" type="stmt"/>
            <line num="239" count="7608" type="stmt"/>
            <line num="240" count="7608" type="stmt"/>
            <line num="244" count="20097166" type="stmt"/>
            <line falsecount="20109374" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="20118448" type="stmt"/>
            <line falsecount="3110" truecount="20122567" num="247" type="cond"/>
            <line num="251" count="20131899" type="stmt"/>
            <line num="252" count="20139998" type="stmt"/>
            <line num="253" count="20146741" type="stmt"/>
            <line num="255" count="20154086" type="stmt"/>
            <line num="256" count="20172076" type="stmt"/>
            <line falsecount="20211075" truecount="382257593" num="256" type="cond"/>
            <line num="257" count="387283966" type="stmt"/>
            <line num="260" count="389515931" type="stmt"/>
            <line falsecount="390299994" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="269" count="392282217" type="stmt"/>
            <line num="274" count="401446205" type="stmt"/>
            <line falsecount="402459097" truecount="17220" num="274" type="cond"/>
            <line num="275" count="17220" type="stmt"/>
            <line num="276" count="17220" type="stmt"/>
            <line num="280" count="403531165" type="stmt"/>
            <line num="283" count="372699966" type="stmt"/>
            <line falsecount="378464649" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="288" count="381116862" type="stmt"/>
            <line num="292" count="373088125" type="stmt"/>
            <line num="296" count="368998421" type="stmt"/>
            <line num="298" count="366825234" type="stmt"/>
            <line num="299" count="376645348" type="stmt"/>
            <line num="305" count="3110" type="stmt"/>
            <line num="306" count="3110" type="stmt"/>
            <line num="307" count="3110" type="stmt"/>
            <line num="309" count="3110" type="stmt"/>
            <line num="310" count="3110" type="stmt"/>
            <line falsecount="3110" truecount="67420" num="310" type="cond"/>
            <line num="311" count="67420" type="stmt"/>
            <line num="314" count="67420" type="stmt"/>
            <line falsecount="67420" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="323" count="67420" type="stmt"/>
            <line num="329" count="67420" type="stmt"/>
            <line falsecount="66858" truecount="562" num="329" type="cond"/>
            <line num="330" count="562" type="stmt"/>
            <line num="331" count="562" type="stmt"/>
            <line num="335" count="67420" type="stmt"/>
            <line num="338" count="67420" type="stmt"/>
            <line falsecount="67420" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="343" count="67420" type="stmt"/>
            <line num="347" count="67420" type="stmt"/>
            <line num="351" count="67420" type="stmt"/>
            <line num="353" count="67420" type="stmt"/>
            <line num="354" count="67420" type="stmt"/>
            <line num="358" count="20227203" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int) : Schedule" num="385" count="2644" type="method"/>
            <line num="398" count="2644" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,LocalDate,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="424" count="2524" type="method"/>
            <line num="437" count="2524" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(Date,Date,Date,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="474" count="4" type="method"/>
            <line num="487" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="520" count="2498" type="method"/>
            <line num="535" count="2498" type="stmt"/>
            <line num="536" count="2498" type="stmt"/>
            <line num="537" count="2498" type="stmt"/>
            <line num="539" count="2498" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int,boolean) : Schedule" num="561" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,int,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="613" count="2498" type="method"/>
            <line num="628" count="2498" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="648" count="2" type="method"/>
            <line num="662" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="createScheduleFromConventions(LocalDate,String,String,String,String,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="681" count="0" type="method"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,String,double,String,String,String,BusinessdayCalendar,int,int) : Schedule" num="745" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createScheduleFromConventions(LocalDate,LocalDate,String,double,String,String) : Schedule" num="789" count="0" type="method"/>
            <line num="799" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDateFromDateAndOffset(LocalDate,double) : LocalDate" num="823" count="0" type="method"/>
            <line num="826" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/ScheduleMetaData.java" name="ScheduleMetaData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="46" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ScheduleMetaData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleMetaData(Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="36" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/SchedulePrototype.java" name="SchedulePrototype.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="23" loc="237" coveredmethods="12" methods="15" elements="82" classes="2" ncloc="111" statements="61" conditionals="6" coveredstatements="27"/>
            <class name="SchedulePrototype">
               <metrics coveredelements="39" coveredconditionals="0" complexity="23" coveredmethods="12" methods="15" elements="82" statements="61" conditionals="6" coveredstatements="27"/>
            </class>
            <class name="SchedulePrototype.OffsetUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="getOffsetCodeFromSchedule(Schedule) : String" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getOffsetCodeFromCurveName(String) : String" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SchedulePrototype(Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="104" count="26" type="method"/>
            <line num="108" count="26" type="stmt"/>
            <line num="109" count="26" type="stmt"/>
            <line num="110" count="26" type="stmt"/>
            <line num="111" count="26" type="stmt"/>
            <line num="112" count="26" type="stmt"/>
            <line num="113" count="26" type="stmt"/>
            <line num="114" count="26" type="stmt"/>
            <line num="115" count="26" type="stmt"/>
            <line num="116" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateScheduleDescriptor(LocalDate,LocalDate) : ScheduleDescriptor" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateSchedule(LocalDate,LocalDate,LocalDate) : Schedule" num="139" count="20178294" type="method"/>
            <line num="140" count="20191583" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateSchedule(LocalDate,int,int) : Schedule" num="152" count="8376" type="method"/>
            <line num="153" count="8376" type="stmt"/>
            <line complexity="5" visibility="public" signature="generateSchedule(LocalDate,int,int,OffsetUnit) : Schedule" num="165" count="8375" type="method"/>
            <line num="167" count="8375" type="stmt"/>
            <line num="168" count="8376" type="stmt"/>
            <line num="170" count="8376" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="8376" type="stmt"/>
            <line num="172" count="8376" type="stmt"/>
            <line num="172" count="8375" type="stmt"/>
            <line num="172" count="8376" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="8376" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFrequency() : Frequency" num="184" count="20199662" type="method"/>
            <line num="185" count="20210122" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DaycountConvention" num="191" count="20148882" type="method"/>
            <line num="192" count="20155924" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShortPeriodConvention() : ShortPeriodConvention" num="198" count="20126239" type="method"/>
            <line num="199" count="20130208" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDateRollConvention() : DateRollConvention" num="205" count="20114889" type="method"/>
            <line num="206" count="20120263" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBusinessdayCalendar() : BusinessdayCalendar" num="212" count="20107778" type="method"/>
            <line num="213" count="20112788" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingOffsetDays() : int" num="219" count="20099696" type="method"/>
            <line num="220" count="20102566" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetDays() : int" num="226" count="20092415" type="method"/>
            <line num="227" count="20095663" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseEndOfMonth() : boolean" num="233" count="20087326" type="method"/>
            <line num="234" count="20090188" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/Tenor.java" name="Tenor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Tenor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/TenorFromArray.java" name="TenorFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="10" elements="35" classes="1" ncloc="53" statements="19" conditionals="6" coveredstatements="0"/>
            <class name="TenorFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="10" elements="35" statements="19" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TenorFromArray(LocalDate[],LocalDate)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createTimeDiscretizationFromDates(LocalDate[],LocalDate) : double[]" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(Double[])" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double,int,double)" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TenorFromArray(double,double,double,ShortPeriodLocation)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(int) : LocalDate" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/TimeDiscretization.java" name="TimeDiscretization.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="131" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TimeDiscretization">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="doubleStream() : DoubleStream" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/TimeDiscretizationFromArray.java" name="TimeDiscretizationFromArray.java">
            <metrics coveredelements="93" coveredconditionals="7" complexity="47" loc="387" coveredmethods="34" methods="38" elements="130" classes="2" ncloc="209" statements="74" conditionals="18" coveredstatements="52"/>
            <class name="TimeDiscretizationFromArray">
               <metrics coveredelements="93" coveredconditionals="7" complexity="47" coveredmethods="34" methods="38" elements="130" statements="74" conditionals="18" coveredstatements="52"/>
            </class>
            <class name="TimeDiscretizationFromArray.ShortPeriodLocation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,double,boolean)" num="56" count="30200" type="method"/>
            <line num="57" count="30200" type="stmt"/>
            <line num="58" count="30200" type="stmt"/>
            <line num="59" count="30200" type="stmt"/>
            <line falsecount="0" truecount="30200" num="59" type="cond"/>
            <line num="60" count="30200" type="stmt"/>
            <line num="62" count="30200" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,double)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream,boolean)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(DoubleStream)" num="91" count="30154" type="method"/>
            <line num="92" count="30154" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;,double,boolean)" num="102" count="18" type="method"/>
            <line num="103" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;,double)" num="113" count="26" type="method"/>
            <line num="114" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Stream&lt;Double&gt;)" num="122" count="2" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,double,boolean)" num="134" count="18" type="method"/>
            <line num="135" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,double)" num="145" count="14" type="method"/>
            <line num="146" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;,boolean)" num="156" count="4" type="method"/>
            <line num="157" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Iterable&lt;Double&gt;)" num="166" count="4" type="method"/>
            <line num="167" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double)" num="176" count="26010" type="method"/>
            <line num="177" count="26010" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Double[])" num="186" count="2" type="method"/>
            <line num="187" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(Double[],double)" num="197" count="20" type="method"/>
            <line num="198" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double,int,double)" num="209" count="4140" type="method"/>
            <line num="210" count="4140" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="211" count="356184" type="method"/>
            <line num="213" count="356184" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeDiscretizationFromArray(double,double,double,ShortPeriodLocation)" num="226" count="4" type="method"/>
            <line num="227" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="getEquidistantStreamWithStub(double,double,double,ShortPeriodLocation) : DoubleStream" num="230" count="4" type="method"/>
            <line num="231" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="233" type="cond"/>
            <line num="234" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="235" count="14" type="method"/>
            <line num="237" count="14" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="243" count="14" type="method"/>
            <line num="245" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimes() : int" num="250" count="1905150217" type="method"/>
            <line num="252" count="1905572811" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimeSteps() : int" num="255" count="1206484116" type="method"/>
            <line num="257" count="1206647968" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="260" count="2147483647" type="method"/>
            <line num="262" count="2147483647" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeStep(int) : double" num="265" count="86768455" type="method"/>
            <line num="267" count="86790398" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="270" count="282625823" type="method"/>
            <line num="272" count="282745108" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeIndexNearestLessOrEqual(double) : int" num="275" count="223082812" type="method"/>
            <line num="277" count="223276140" type="stmt"/>
            <line num="278" count="222706077" type="stmt"/>
            <line falsecount="14663700" truecount="208914433" num="278" type="cond"/>
            <line num="279" count="209048385" type="stmt"/>
            <line num="281" count="223170423" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeIndexNearestGreaterOrEqual(double) : int" num="284" count="6" type="method"/>
            <line num="286" count="6" type="stmt"/>
            <line num="287" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDoubleArray() : double[]" num="293" count="542" type="method"/>
            <line num="296" count="542" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsArrayList() : ArrayList&lt;Double&gt;" num="299" count="70" type="method"/>
            <line num="301" count="70" type="stmt"/>
            <line num="302" count="70" type="stmt"/>
            <line num="303" count="4038" type="stmt"/>
            <line num="305" count="70" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeShiftedTimeDiscretization(double) : TimeDiscretization" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="union(TimeDiscretization) : TimeDiscretization" num="323" count="6" type="method"/>
            <line num="325" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="intersect(TimeDiscretization) : TimeDiscretization" num="330" count="6" type="method"/>
            <line num="332" count="6" type="stmt"/>
            <line num="333" count="6" type="stmt"/>
            <line num="335" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTickSize() : double" num="338" count="16" type="method"/>
            <line num="340" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="343" count="64" type="method"/>
            <line num="345" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="348" count="30" type="method"/>
            <line num="350" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="366" count="2" type="method"/>
            <line num="368" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="368" type="cond"/>
            <line num="369" count="2" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="roundToTimeTickSize(double) : double" num="384" count="505236052" type="method"/>
            <line num="385" count="505658903" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.stochastic">
         <metrics coveredelements="118" complexity="211" loc="1867" methods="187" classes="7" statements="248" coveredconditionals="10" coveredmethods="48" elements="479" ncloc="978" files="7" conditionals="44" coveredstatements="60"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/ConditionalExpectationEstimator.java" name="ConditionalExpectationEstimator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ConditionalExpectationEstimator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomOperator.java" name="RandomOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="72" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="RandomOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="compose(RandomOperator) : RandomOperator" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="andThen(RandomOperator) : RandomOperator" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="identity() : RandomOperator" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariable.java" name="RandomVariable.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="13" loc="685" coveredmethods="5" methods="11" elements="33" classes="1" ncloc="117" statements="18" conditionals="4" coveredstatements="9"/>
            <class name="RandomVariable">
               <metrics coveredelements="16" coveredconditionals="2" complexity="13" coveredmethods="5" methods="11" elements="33" statements="18" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="getValues() : RandomVariable" num="83" count="38069278" type="method"/>
            <line num="83" count="38070964" type="stmt"/>
            <line complexity="1" visibility="package" signature="appy(RandomOperator) : RandomVariable" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="bus(double) : RandomVariable" num="389" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="vid(double) : RandomVariable" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectation() : RandomVariable" num="437" count="14" type="method"/>
            <line num="438" count="14" type="stmt"/>
            <line complexity="1" visibility="package" signature="variance() : RandomVariable" num="447" count="6" type="method"/>
            <line num="449" count="6" type="stmt"/>
            <line num="450" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="covariance(RandomVariable) : RandomVariable" num="460" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="471" count="46" type="method"/>
            <line num="473" count="46" type="stmt"/>
            <line complexity="1" visibility="package" signature="expm1() : RandomVariable" num="498" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="addSumProduct(RandomVariable[],RandomVariable[]) : RandomVariable" num="655" count="101166489" type="method"/>
            <line num="657" count="101248025" type="stmt"/>
            <line num="658" count="101310152" type="stmt"/>
            <line falsecount="101033854" truecount="113189955" num="658" type="cond"/>
            <line num="659" count="113230346" type="stmt"/>
            <line num="661" count="101103518" type="stmt"/>
            <line complexity="2" visibility="package" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="670" count="0" type="method"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="673" type="cond"/>
            <line num="674" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariableAccumulator.java" name="RandomVariableAccumulator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableAccumulator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariableArray.java" name="RandomVariableArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="92" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="42" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="RandomVariableArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="27" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="getLevel() : int" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="toDoubleArray() : Object" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariableArray" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/RandomVariableArrayImplementation.java" name="RandomVariableArrayImplementation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="118" loc="600" coveredmethods="0" methods="104" elements="265" classes="1" ncloc="505" statements="137" conditionals="24" coveredstatements="0"/>
            <class name="RandomVariableArrayImplementation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="118" coveredmethods="0" methods="104" elements="265" statements="137" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="of(RandomVariable[]) : RandomVariableArray" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="RandomVariableArrayImplementation(RandomVariable[])" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLevel(RandomVariable) : int" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfElements() : int" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElement(int) : RandomVariable" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="map(RandomOperator) : RandomVariableArray" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sumProduct(RandomVariableArray) : RandomVariable" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(RandomVariable) : boolean" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFiltrationTime() : double" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isDeterministic() : boolean" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : double" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : double" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="274" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="294" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="301" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="314" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="344" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="371" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="384" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="394" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="404" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="424" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="441" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="444" count="0" type="method"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="451" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="481" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="494" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="501" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="514" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="521" count="0" type="method"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="531" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="544" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="554" count="0" type="method"/>
            <line num="556" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="564" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="581" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="584" count="0" type="method"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="594" count="0" type="method"/>
            <line num="596" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/stochastic/Scalar.java" name="Scalar.java">
            <metrics coveredelements="102" coveredconditionals="8" complexity="69" loc="369" coveredmethods="43" methods="65" elements="146" classes="1" ncloc="283" statements="73" conditionals="8" coveredstatements="51"/>
            <class name="Scalar">
               <metrics coveredelements="102" coveredconditionals="8" complexity="69" coveredmethods="43" methods="65" elements="146" statements="73" conditionals="8" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="Scalar(double)" num="27" count="380851746" type="method"/>
            <line num="28" count="380640105" type="stmt"/>
            <line num="29" count="380989749" type="stmt"/>
            <line complexity="2" visibility="public" signature="arrayOf(double[]) : Scalar[]" num="35" count="3408" type="method"/>
            <line num="36" count="3408" type="stmt"/>
            <line num="37" count="3408" type="stmt"/>
            <line falsecount="3408" truecount="133526" num="37" type="cond"/>
            <line num="38" count="133524" type="stmt"/>
            <line num="40" count="3408" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="43" count="12" type="method"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="48" count="247241216" type="method"/>
            <line num="50" count="247286009" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="53" count="246605228" type="method"/>
            <line num="55" count="246667468" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="58" count="981285276" type="method"/>
            <line num="60" count="982406166" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="63" count="1288615" type="method"/>
            <line num="65" count="1288806" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="68" count="297579783" type="method"/>
            <line num="70" count="297622121" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="78" count="233158783" type="method"/>
            <line num="80" count="233206007" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="103" count="1543823" type="method"/>
            <line num="105" count="1543767" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="108" count="4" type="method"/>
            <line num="110" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="113" count="34" type="method"/>
            <line num="115" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="138" count="24" type="method"/>
            <line num="140" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="178" count="150" type="method"/>
            <line num="180" count="150" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="189" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="196" count="669314" type="method"/>
            <line num="198" count="669319" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="201" count="278" type="method"/>
            <line num="203" count="278" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="206" count="57775464" type="method"/>
            <line num="208" count="57810035" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="211" count="2553490" type="method"/>
            <line num="213" count="2554366" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="216" count="227028251" type="method"/>
            <line num="218" count="227244949" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="221" count="776474" type="method"/>
            <line num="223" count="776797" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="226" count="38479" type="method"/>
            <line num="228" count="38475" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="231" count="2592" type="method"/>
            <line num="233" count="2592" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="236" count="1898110" type="method"/>
            <line num="238" count="1899035" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="241" count="102186" type="method"/>
            <line num="243" count="102216" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="246" count="17933629" type="method"/>
            <line num="248" count="17942537" type="stmt"/>
            <line complexity="1" visibility="public" signature="expm1() : RandomVariable" num="251" count="454013" type="method"/>
            <line num="253" count="454221" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="256" count="406219" type="method"/>
            <line num="258" count="406325" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="271" count="33028423" type="method"/>
            <line num="273" count="33096757" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="276" count="2325950" type="method"/>
            <line num="278" count="2327047" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="286" count="117158746" type="method"/>
            <line num="288" count="117218930" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="291" count="2313241" type="method"/>
            <line num="293" count="2314353" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="301" count="38" type="method"/>
            <line num="303" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="306" count="28" type="method"/>
            <line num="308" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="311" count="11448" type="method"/>
            <line num="313" count="11448" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="316" count="51654778" type="method"/>
            <line num="318" count="51654764" type="stmt"/>
            <line falsecount="51654679" truecount="80" num="318" type="cond"/>
            <line num="319" count="80" type="stmt"/>
            <line num="322" count="51654630" type="stmt"/>
            <line complexity="2" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="326" count="837817" type="method"/>
            <line num="328" count="838109" type="stmt"/>
            <line falsecount="203046" truecount="635259" num="328" type="cond"/>
            <line num="329" count="635402" type="stmt"/>
            <line num="331" count="203046" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="335" count="4320260" type="method"/>
            <line num="337" count="4320528" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="340" count="183810" type="method"/>
            <line num="342" count="183852" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="345" count="17005770" type="method"/>
            <line num="347" count="17009182" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="350" count="57142306" type="method"/>
            <line num="352" count="57143123" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="355" count="6" type="method"/>
            <line num="357" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="360" count="2" type="method"/>
            <line num="362" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="isNaN() : RandomVariable" num="365" count="10" type="method"/>
            <line num="367" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="367" type="cond"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor.xmlparser">
         <metrics coveredelements="73" complexity="44" loc="425" methods="9" classes="3" statements="144" coveredconditionals="11" coveredmethods="7" elements="207" ncloc="249" files="3" conditionals="54" coveredstatements="55"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/xmlparser/FIPXMLParser.java" name="FIPXMLParser.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="21" loc="198" coveredmethods="3" methods="5" elements="99" classes="1" ncloc="116" statements="64" conditionals="30" coveredstatements="5"/>
            <class name="FIPXMLParser">
               <metrics coveredelements="8" coveredconditionals="0" complexity="21" coveredmethods="3" methods="5" elements="99" statements="64" conditionals="30" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="FIPXMLParser()" num="40" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="FIPXMLParser(boolean,String)" num="50" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductDescriptor(File) : ProductDescriptor" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="getSwapProductDescriptor(File) : InterestRateSwapProductDescriptor" num="83" count="2" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getSwapLegProductDescriptor(Element,String,String,DayCountConvention) : InterestRateSwapLegProductDescriptor" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/xmlparser/FPMLParser.java" name="FPMLParser.java">
            <metrics coveredelements="65" coveredconditionals="11" complexity="23" loc="196" coveredmethods="4" methods="4" elements="108" classes="1" ncloc="124" statements="80" conditionals="24" coveredstatements="50"/>
            <class name="FPMLParser">
               <metrics coveredelements="65" coveredconditionals="11" complexity="23" coveredmethods="4" methods="4" elements="108" statements="80" conditionals="24" coveredstatements="50"/>
            </class>
            <line complexity="1" visibility="public" signature="FPMLParser(String,String)" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="getProductDescriptor(File) : ProductDescriptor" num="55" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="0" truecount="8" num="75" type="cond"/>
            <line num="76" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="76" type="cond"/>
            <line num="77" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="79" type="cond"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getSwapProductDescriptor(Element) : ProductDescriptor" num="103" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="109" type="cond"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="getSwapLegProductDescriptor(Element) : InterestRateSwapLegProductDescriptor" num="130" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="141" type="cond"/>
            <line num="142" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/xmlparser/XMLParser.java" name="XMLParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="XMLParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.calibration">
         <metrics coveredelements="95" complexity="106" loc="1314" methods="47" classes="6" statements="286" coveredconditionals="13" coveredmethods="9" elements="423" ncloc="624" files="5" conditionals="90" coveredstatements="73"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/CalibratedCurves.java" name="CalibratedCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="73" loc="841" coveredmethods="0" methods="29" elements="275" classes="2" ncloc="407" statements="182" conditionals="64" coveredstatements="0"/>
            <class name="CalibratedCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="63" coveredmethods="0" methods="23" elements="229" statements="144" conditionals="62" coveredstatements="0"/>
            </class>
            <class name="CalibratedCurves.CalibrationSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="46" statements="38" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 95()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="142" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="183" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,double[],String,double,String,String,double)" num="211" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,String,double)" num="246" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneShifted(double) : CalibrationSpec" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(List&lt;CalibrationSpec&gt;,AnalyticModel,double,double)" num="318" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double,double)" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double)" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols)" num="410" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(Collection&lt;CalibrationSpec&gt;)" num="422" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[])" num="434" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getCalibrationProductForSpec(CalibrationSpec) : AnalyticProduct" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="460" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="474" type="cond"/>
            <line num="475" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="489" type="cond"/>
            <line num="491" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="495" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="502" type="cond"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="508" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AnalyticModel" num="528" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="538" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastNumberOfInterations() : int" num="547" count="0" type="method"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(String,double) : CalibratedCurves" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="566" type="cond"/>
            <line num="567" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Map&lt;String,Double&gt;) : CalibratedCurves" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="591" type="cond"/>
            <line num="592" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Pattern,double) : CalibratedCurves" num="617" count="0" type="method"/>
            <line num="619" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="623" type="cond"/>
            <line num="624" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneShiftedForRegExp(String,double) : CalibratedCurves" num="649" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastAccuracy() : double" num="658" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCalibrationProductForSymbol(String) : AnalyticProduct" num="670" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="calibrate(double) : int" num="687" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="add(CalibrationSpec) : String" num="702" count="0" type="method"/>
            <line num="704" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="718" type="cond"/>
            <line num="719" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line num="727" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="727" type="cond"/>
            <line num="728" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="738" type="cond"/>
            <line num="740" count="0" type="stmt"/>
            <line num="747" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createDiscountCurve(String) : DiscountCurveInterface" num="764" count="0" type="method"/>
            <line num="765" count="0" type="stmt"/>
            <line num="766" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="766" type="cond"/>
            <line num="767" count="0" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line complexity="18" visibility="private" signature="createForwardCurve(Schedule,String) : String" num="781" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line num="791" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="793" type="cond"/>
            <line num="794" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="796" type="cond"/>
            <line num="797" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="800" type="cond"/>
            <line num="801" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="808" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="810" type="cond"/>
            <line num="811" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/ParameterAggregation.java" name="ParameterAggregation.java">
            <metrics coveredelements="28" coveredconditionals="3" complexity="13" loc="140" coveredmethods="3" methods="9" elements="51" classes="1" ncloc="74" statements="34" conditionals="8" coveredstatements="22"/>
            <class name="ParameterAggregation">
               <metrics coveredelements="28" coveredconditionals="3" complexity="13" coveredmethods="3" methods="9" elements="51" statements="34" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterAggregation()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(Set&lt;E&gt;)" num="50" count="12" type="method"/>
            <line num="51" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(E[])" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : void" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(E) : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="82" count="12" type="method"/>
            <line num="85" count="12" type="stmt"/>
            <line num="86" count="12" type="stmt"/>
            <line num="87" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="87" type="cond"/>
            <line num="88" count="12" type="stmt"/>
            <line num="92" count="12" type="stmt"/>
            <line num="95" count="12" type="stmt"/>
            <line num="96" count="12" type="stmt"/>
            <line num="97" count="12" type="stmt"/>
            <line num="98" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="98" type="cond"/>
            <line num="99" count="12" type="stmt"/>
            <line num="100" count="12" type="stmt"/>
            <line num="104" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameter(RandomVariable[]) : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getObjectsToModifyForParameter(RandomVariable[]) : Map&lt;E, RandomVariable[]&gt;" num="121" count="696" type="method"/>
            <line num="122" count="696" type="stmt"/>
            <line num="123" count="696" type="stmt"/>
            <line num="124" count="696" type="stmt"/>
            <line num="125" count="696" type="stmt"/>
            <line num="126" count="696" type="stmt"/>
            <line falsecount="0" truecount="696" num="126" type="cond"/>
            <line num="128" count="696" type="stmt"/>
            <line num="129" count="696" type="stmt"/>
            <line num="130" count="696" type="stmt"/>
            <line num="133" count="696" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/ParameterObject.java" name="ParameterObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/ParameterTransformation.java" name="ParameterTransformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterTransformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/calibration/Solver.java" name="Solver.java">
            <metrics coveredelements="67" coveredconditionals="10" complexity="20" loc="248" coveredmethods="6" methods="9" elements="97" classes="1" ncloc="129" statements="70" conditionals="18" coveredstatements="51"/>
            <class name="Solver">
               <metrics coveredelements="67" coveredconditionals="10" complexity="20" coveredmethods="6" methods="9" elements="97" statements="70" conditionals="18" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,StochasticOptimizerFactory)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,double)" num="85" count="12" type="method"/>
            <line num="86" count="12" type="stmt"/>
            <line num="87" count="12" type="stmt"/>
            <line num="88" count="12" type="stmt"/>
            <line num="89" count="12" type="stmt"/>
            <line num="90" count="12" type="stmt"/>
            <line num="91" count="12" type="stmt"/>
            <line num="92" count="12" type="stmt"/>
            <line num="93" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,double,double)" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,double,double)" num="119" count="12" type="method"/>
            <line num="120" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;)" num="130" count="12" type="method"/>
            <line num="131" count="12" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCalibratedModel(Set&lt;ParameterObject&gt;) : AnalyticModel" num="145" count="12" type="method"/>
            <line num="146" count="12" type="stmt"/>
            <line num="149" count="12" type="stmt"/>
            <line num="152" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="12" type="stmt"/>
            <line num="158" count="12" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line num="160" count="12" type="stmt"/>
            <line num="161" count="12" type="stmt"/>
            <line num="162" count="12" type="stmt"/>
            <line num="163" count="12" type="stmt"/>
            <line num="164" count="12" type="stmt"/>
            <line num="165" count="12" type="stmt"/>
            <line num="167" count="12" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="168" count="684" type="method"/>
            <line num="170" count="684" type="stmt"/>
            <line num="171" count="684" type="stmt"/>
            <line num="172" count="684" type="stmt"/>
            <line falsecount="684" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="684" type="stmt"/>
            <line num="179" count="684" type="stmt"/>
            <line num="180" count="684" type="stmt"/>
            <line falsecount="684" truecount="3174" num="180" type="cond"/>
            <line num="181" count="3174" type="stmt"/>
            <line num="183" count="684" type="stmt"/>
            <line falsecount="684" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="194" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="194" type="cond"/>
            <line num="195" count="12" type="stmt"/>
            <line num="196" count="12" type="stmt"/>
            <line num="199" count="12" type="stmt"/>
            <line num="200" count="12" type="stmt"/>
            <line num="202" count="12" type="stmt"/>
            <line num="204" count="12" type="stmt"/>
            <line num="205" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line num="210" count="12" type="stmt"/>
            <line num="212" count="12" type="stmt"/>
            <line num="213" count="12" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="12" type="stmt"/>
            <line num="219" count="12" type="stmt"/>
            <line falsecount="12" truecount="54" num="219" type="cond"/>
            <line num="220" count="54" type="stmt"/>
            <line num="221" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="54" type="stmt"/>
            <line num="226" count="12" type="stmt"/>
            <line num="228" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="236" count="12" type="method"/>
            <line num="237" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves.locallinearregression">
         <metrics coveredelements="0" complexity="33" loc="355" methods="16" classes="3" statements="94" coveredconditionals="0" coveredmethods="0" elements="136" ncloc="211" files="2" conditionals="26" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/locallinearregression/CurveEstimation.java" name="CurveEstimation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="229" coveredmethods="0" methods="4" elements="85" classes="2" ncloc="143" statements="67" conditionals="14" coveredstatements="0"/>
            <class name="CurveEstimation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="4" elements="85" statements="67" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="CurveEstimation.Distribution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CurveEstimation(LocalDate,double,double[],double[],double[],double,Distribution)" num="68" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CurveEstimation(LocalDate,double,double[],double[],double[],double)" num="108" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRegressionCurve() : Curve" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="solveEquationSystem() : DoubleMatrix" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/locallinearregression/Partition.java" name="Partition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="126" coveredmethods="0" methods="12" elements="51" classes="1" ncloc="68" statements="27" conditionals="12" coveredstatements="0"/>
            <class name="Partition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="12" elements="51" statements="27" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="Partition(double[],double)" num="29" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Partition(double[])" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getIntervalNumber(double) : int" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="d(double) : double" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferencePoints() : double[]" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntervalReferencePoint(int) : double" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoints() : double[]" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoint(int) : double" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLength() : int" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIntervals() : int" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntervalLength(int) : double" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeight() : double" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products.smile">
         <metrics coveredelements="67" complexity="21" loc="325" methods="16" classes="3" statements="73" coveredconditionals="6" coveredmethods="10" elements="99" ncloc="171" files="3" conditionals="10" coveredstatements="51"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/smile/EuropeanOptionSmile.java" name="EuropeanOptionSmile.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="12" loc="118" coveredmethods="6" methods="10" elements="35" classes="1" ncloc="66" statements="21" conditionals="4" coveredstatements="9"/>
            <class name="EuropeanOptionSmile">
               <metrics coveredelements="15" coveredconditionals="0" complexity="12" coveredmethods="6" methods="10" elements="35" statements="21" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmile(String,double,double[])" num="30" count="1014" type="method"/>
            <line num="31" count="1014" type="stmt"/>
            <line num="32" count="1010" type="stmt"/>
            <line num="33" count="1013" type="stmt"/>
            <line num="34" count="1013" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmile(double,double[])" num="37" count="1014" type="method"/>
            <line num="38" count="1014" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="41" count="1010" type="method"/>
            <line num="43" count="1009" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingName() : String" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="54" count="1006" type="method"/>
            <line num="56" count="1005" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="59" count="1007" type="method"/>
            <line num="61" count="1008" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="77" count="4113480" type="method"/>
            <line num="79" count="4115254" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDescriptors(LocalDate) : Map&lt;Double, SingleAssetEuropeanOptionProductDescriptor&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDescriptor(LocalDate,int) : SingleAssetEuropeanOptionProductDescriptor" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/smile/EuropeanOptionSmileByCarrMadan.java" name="EuropeanOptionSmileByCarrMadan.java">
            <metrics coveredelements="52" coveredconditionals="6" complexity="9" loc="154" coveredmethods="4" methods="6" elements="64" classes="1" ncloc="93" statements="52" conditionals="6" coveredstatements="42"/>
            <class name="EuropeanOptionSmileByCarrMadan">
               <metrics coveredelements="52" coveredconditionals="6" complexity="9" coveredmethods="4" methods="6" elements="64" statements="52" conditionals="6" coveredstatements="42"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(double,double[])" num="51" count="1014" type="method"/>
            <line num="52" count="1013" type="stmt"/>
            <line num="53" count="1012" type="stmt"/>
            <line num="54" count="1014" type="stmt"/>
            <line num="55" count="1013" type="stmt"/>
            <line num="56" count="1013" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(String,double,double[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionSmileByCarrMadan(String,double,double[],int,double,InterpolationMethod,ExtrapolationMethod)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,CharacteristicFunctionModel) : Map&lt;String, Function&lt;Double, Double&gt;&gt;" num="77" count="1010" type="method"/>
            <line num="80" count="1009" type="stmt"/>
            <line num="82" count="1009" type="stmt"/>
            <line num="84" count="1010" type="stmt"/>
            <line num="85" count="1009" type="stmt"/>
            <line num="87" count="1010" type="stmt"/>
            <line num="89" count="1010" type="stmt"/>
            <line falsecount="1010" truecount="4101891" num="89" type="cond"/>
            <line num="91" count="4100327" type="stmt"/>
            <line num="94" count="4101671" type="stmt"/>
            <line num="97" count="4099539" type="stmt"/>
            <line num="99" count="4113792" type="stmt"/>
            <line num="100" count="4108538" type="stmt"/>
            <line num="101" count="4106108" type="stmt"/>
            <line num="103" count="4118591" type="stmt"/>
            <line num="104" count="4119542" type="stmt"/>
            <line falsecount="4118112" truecount="1010" num="104" type="cond"/>
            <line num="105" count="1010" type="stmt"/>
            <line num="107" count="4116279" type="stmt"/>
            <line num="109" count="4116456" type="stmt"/>
            <line num="111" count="4095192" type="stmt"/>
            <line num="115" count="1010" type="stmt"/>
            <line num="116" count="1010" type="stmt"/>
            <line num="117" count="1010" type="stmt"/>
            <line num="120" count="1010" type="stmt"/>
            <line num="121" count="1010" type="stmt"/>
            <line num="122" count="1010" type="stmt"/>
            <line num="124" count="1010" type="stmt"/>
            <line falsecount="1010" truecount="4044121" num="124" type="cond"/>
            <line num="125" count="4052582" type="stmt"/>
            <line num="126" count="4057912" type="stmt"/>
            <line num="127" count="4023186" type="stmt"/>
            <line num="130" count="1010" type="stmt"/>
            <line num="132" count="1010" type="stmt"/>
            <line num="133" count="1010" type="stmt"/>
            <line num="135" count="1009" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : Double" num="137" count="10157" type="method"/>
            <line num="139" count="10157" type="stmt"/>
            <line num="144" count="1010" type="stmt"/>
            <line num="145" count="1010" type="stmt"/>
            <line num="146" count="1010" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double,double[]) : EuropeanOptionSmile" num="149" count="1004" type="method"/>
            <line num="151" count="1004" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/smile/SmileByIntegralTransform.java" name="SmileByIntegralTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SmileByIntegralTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.products">
         <metrics coveredelements="68" complexity="117" loc="1240" methods="62" classes="12" statements="273" coveredconditionals="15" coveredmethods="8" elements="429" ncloc="616" files="12" conditionals="94" coveredstatements="45"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/AbstractAnalyticProduct.java" name="AbstractAnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="33" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="AbstractAnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue(double,Model) : Object" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel) : RandomVariable" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/AnalyticProduct.java" name="AnalyticProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="2" elements="23" classes="1" ncloc="30" statements="13" conditionals="8" coveredstatements="0"/>
            <class name="Cashflow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean,String)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Deposit.java" name="Deposit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="137" coveredmethods="0" methods="9" elements="65" classes="1" ncloc="82" statements="42" conditionals="14" coveredstatements="0"/>
            <class name="Deposit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="9" elements="65" statements="42" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="Deposit(Schedule,double,String)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : RandomVariable" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRate() : double" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEndTime() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingTime() : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Forward.java" name="Forward.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="81" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="41" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="Forward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="32" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Forward(double,double,String,double,String)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/ForwardRateAgreement.java" name="ForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="118" coveredmethods="0" methods="4" elements="55" classes="1" ncloc="63" statements="33" conditionals="18" coveredstatements="0"/>
            <class name="ForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="55" statements="33" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String,boolean)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateAgreement(Schedule,double,String,String)" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRate(AnalyticModel) : RandomVariable" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/MarketForwardRateAgreement.java" name="MarketForwardRateAgreement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="92" coveredmethods="0" methods="2" elements="33" classes="1" ncloc="42" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="MarketForwardRateAgreement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="33" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketForwardRateAgreement(double,double,String,double,String)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Performance.java" name="Performance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="56" coveredmethods="0" methods="3" elements="11" classes="1" ncloc="24" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Performance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Performance(AbstractAnalyticProduct,AbstractAnalyticProduct)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="152" coveredmethods="0" methods="9" elements="36" classes="1" ncloc="62" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="36" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(Portfolio,List&lt;AnalyticProduct&gt;,List&lt;Double&gt;)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(AnalyticProduct,double)" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Portfolio(List&lt;AnalyticProduct&gt;)" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(AnalyticProduct) : RandomVariable" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : RandomVariable" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : List&lt;AnalyticProduct&gt;" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : List&lt;Double&gt;" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/Swap.java" name="Swap.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="15" loc="180" coveredmethods="4" methods="11" elements="59" classes="1" ncloc="96" statements="40" conditionals="8" coveredstatements="10"/>
            <class name="Swap">
               <metrics coveredelements="14" coveredconditionals="0" complexity="15" coveredmethods="4" methods="11" elements="59" statements="40" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(AnalyticProduct,AnalyticProduct)" num="42" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String,boolean)" num="61" count="54" type="method"/>
            <line num="69" count="54" type="stmt"/>
            <line num="70" count="54" type="stmt"/>
            <line num="71" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Schedule,String,double,String,Schedule,String,double,String)" num="86" count="54" type="method"/>
            <line num="93" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="96" count="3284" type="method"/>
            <line num="99" count="3284" type="stmt"/>
            <line num="100" count="3284" type="stmt"/>
            <line num="102" count="3284" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurveInterface) : RandomVariable" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardSwapRate(TimeDiscretization,TimeDiscretization,ForwardCurveInterface,DiscountCurveInterface) : RandomVariable" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurveInterface) : RandomVariable" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getForwardSwapRate(Schedule,Schedule,ForwardCurveInterface,AnalyticModel) : RandomVariable" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : AnalyticProduct" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : AnalyticProduct" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/SwapAnnuity.java" name="SwapAnnuity.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="139" coveredmethods="0" methods="8" elements="34" classes="1" ncloc="59" statements="22" conditionals="4" coveredstatements="0"/>
            <class name="SwapAnnuity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="34" statements="22" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwapAnnuity(Schedule,String)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,DiscountCurveInterface) : RandomVariable" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(TimeDiscretization,ForwardCurveInterface) : RandomVariable" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,DiscountCurveInterface) : RandomVariable" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapAnnuity(Schedule,ForwardCurveInterface) : RandomVariable" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSwapAnnuity(double,Schedule,DiscountCurveInterface,AnalyticModel) : RandomVariable" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="54" coveredconditionals="15" complexity="23" loc="161" coveredmethods="4" methods="10" elements="77" classes="1" ncloc="95" statements="45" conditionals="22" coveredstatements="35"/>
            <class name="SwapLeg">
               <metrics coveredelements="54" coveredconditionals="15" complexity="23" coveredmethods="4" methods="10" elements="77" statements="45" conditionals="22" coveredstatements="35"/>
            </class>
            <line complexity="2" visibility="public" signature="SwapLeg(Schedule,String,double,String,String,boolean)" num="44" count="112" type="method"/>
            <line num="45" count="112" type="stmt"/>
            <line num="46" count="112" type="stmt"/>
            <line num="47" count="112" type="stmt"/>
            <line num="48" count="112" type="stmt"/>
            <line num="49" count="112" type="stmt"/>
            <line num="50" count="112" type="stmt"/>
            <line falsecount="112" truecount="0" num="50" type="cond"/>
            <line num="51" count="112" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String,boolean)" num="63" count="108" type="method"/>
            <line num="64" count="108" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,String,double,String)" num="75" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,AnalyticModel) : RandomVariable" num="80" count="6568" type="method"/>
            <line num="82" count="6568" type="stmt"/>
            <line falsecount="6568" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="6568" type="stmt"/>
            <line num="87" count="6568" type="stmt"/>
            <line num="88" count="6568" type="stmt"/>
            <line falsecount="6568" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="6568" type="stmt"/>
            <line falsecount="6568" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="6568" type="stmt"/>
            <line num="96" count="6568" type="stmt"/>
            <line falsecount="6568" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="6568" type="stmt"/>
            <line num="101" count="6568" type="stmt"/>
            <line falsecount="6568" truecount="35176" num="101" type="cond"/>
            <line num="102" count="35176" type="stmt"/>
            <line num="103" count="35176" type="stmt"/>
            <line num="104" count="35176" type="stmt"/>
            <line num="105" count="35176" type="stmt"/>
            <line num="106" count="35176" type="stmt"/>
            <line num="108" count="35176" type="stmt"/>
            <line num="109" count="35176" type="stmt"/>
            <line falsecount="17588" truecount="17588" num="109" type="cond"/>
            <line num="110" count="17588" type="stmt"/>
            <line num="114" count="35176" type="stmt"/>
            <line num="115" count="35176" type="stmt"/>
            <line falsecount="0" truecount="35176" num="115" type="cond"/>
            <line num="116" count="35176" type="stmt"/>
            <line num="119" count="35176" type="stmt"/>
            <line falsecount="40" truecount="35136" num="119" type="cond"/>
            <line num="120" count="35136" type="stmt"/>
            <line falsecount="0" truecount="35136" num="120" type="cond"/>
            <line num="121" count="35136" type="stmt"/>
            <line num="123" count="35136" type="stmt"/>
            <line falsecount="6564" truecount="28572" num="123" type="cond"/>
            <line num="124" count="28572" type="stmt"/>
            <line num="129" count="6568" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpread() : double" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model.curves">
         <metrics coveredelements="345" complexity="212" loc="2410" methods="120" classes="17" statements="468" coveredconditionals="53" coveredmethods="62" elements="736" ncloc="1112" files="11" conditionals="148" coveredstatements="230"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/AbstractCurve.java" name="AbstractCurve.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="9" loc="85" coveredmethods="5" methods="8" elements="23" classes="1" ncloc="43" statements="13" conditionals="2" coveredstatements="7"/>
            <class name="AbstractCurve">
               <metrics coveredelements="12" coveredconditionals="0" complexity="9" coveredmethods="5" methods="8" elements="23" statements="13" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCurve(String,LocalDate)" num="28" count="36" type="method"/>
            <line num="29" count="36" type="stmt"/>
            <line num="30" count="36" type="stmt"/>
            <line num="31" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="37" count="794" type="method"/>
            <line num="39" count="794" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="42" count="84" type="method"/>
            <line num="44" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double[]) : RandomVariable[]" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AbstractCurve" num="70" count="690" type="method"/>
            <line num="72" count="690" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="18" type="method"/>
            <line num="83" count="18" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/AbstractForwardCurve.java" name="AbstractForwardCurve.java">
            <metrics coveredelements="30" coveredconditionals="1" complexity="13" loc="178" coveredmethods="9" methods="10" elements="48" classes="1" ncloc="91" statements="32" conditionals="6" coveredstatements="20"/>
            <class name="AbstractForwardCurve">
               <metrics coveredelements="30" coveredconditionals="1" complexity="13" coveredmethods="9" methods="10" elements="48" statements="32" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,String)" num="52" count="12" type="method"/>
            <line num="62" count="12" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line num="65" count="12" type="stmt"/>
            <line num="67" count="12" type="stmt"/>
            <line num="69" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,String)" num="82" count="12" type="method"/>
            <line num="88" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,double,String)" num="99" count="10" type="method"/>
            <line num="100" count="10" type="stmt"/>
            <line num="101" count="10" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line num="104" count="10" type="stmt"/>
            <line num="105" count="10" type="stmt"/>
            <line num="106" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="112" count="6" type="method"/>
            <line num="114" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPaymentOffset(double) : double" num="120" count="13538" type="method"/>
            <line num="122" count="13538" type="stmt"/>
            <line falsecount="0" truecount="13538" num="122" type="cond"/>
            <line num="123" count="13538" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : RandomVariable[]" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="162" count="6" type="method"/>
            <line num="164" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetCode() : String" num="167" count="13544" type="method"/>
            <line num="168" count="13544" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentBusinessdayCalendar() : BusinessdayCalendar" num="171" count="6" type="method"/>
            <line num="172" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPaymentDateRollConvention() : BusinessdayCalendar.DateRollConvention" num="175" count="6" type="method"/>
            <line num="176" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/Curve.java" name="Curve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Curve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/CurveBuilder.java" name="CurveBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CurveBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/CurveInterpolation.java" name="CurveInterpolation.java">
            <metrics coveredelements="148" coveredconditionals="29" complexity="64" loc="565" coveredmethods="16" methods="33" elements="227" classes="6" ncloc="328" statements="148" conditionals="46" coveredstatements="103"/>
            <class name="CurveInterpolation">
               <metrics coveredelements="137" coveredconditionals="28" complexity="51" coveredmethods="13" methods="22" elements="188" statements="124" conditionals="42" coveredstatements="96"/>
            </class>
            <class name="CurveInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.InterpolationEntity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.Point">
               <metrics coveredelements="11" coveredconditionals="1" complexity="5" coveredmethods="3" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="CurveInterpolation.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Point(double,RandomVariable,boolean)" num="122" count="4412" type="method"/>
            <line num="123" count="4412" type="stmt"/>
            <line num="124" count="4412" type="stmt"/>
            <line num="125" count="4412" type="stmt"/>
            <line num="126" count="4412" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(Point) : int" num="129" count="2586" type="method"/>
            <line num="132" count="2586" type="stmt"/>
            <line falsecount="0" truecount="2586" num="132" type="cond"/>
            <line num="133" count="2586" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="142" count="3450" type="method"/>
            <line num="144" count="3450" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String,LocalDate)" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(CurveInterpolation)" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationMethod(InterpolationMethod) : CurveBuilder" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExtrapolationMethod(ExtrapolationMethod) : CurveBuilder" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationEntity(InterpolationEntity) : CurveBuilder" num="222" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,RandomVariable,boolean) : CurveBuilder" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,double[],RandomVariable[])" num="264" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="293" count="34" type="method"/>
            <line num="299" count="34" type="stmt"/>
            <line num="300" count="34" type="stmt"/>
            <line num="301" count="34" type="stmt"/>
            <line num="302" count="34" type="stmt"/>
            <line complexity="1" visibility="private" signature="CurveInterpolation(String,LocalDate)" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="317" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="323" count="199394" type="method"/>
            <line num="326" count="199394" type="stmt"/>
            <line falsecount="712" truecount="198682" num="326" type="cond"/>
            <line num="327" count="199394" type="stmt"/>
            <line falsecount="198682" truecount="712" num="327" type="cond"/>
            <line num="328" count="712" type="stmt"/>
            <line num="329" count="712" type="stmt"/>
            <line num="331" count="199394" type="stmt"/>
            <line num="332" count="199394" type="stmt"/>
            <line falsecount="7332" truecount="192062" num="332" type="cond"/>
            <line num="333" count="192062" type="stmt"/>
            <line num="336" count="7332" type="stmt"/>
            <line num="337" count="7332" type="stmt"/>
            <line num="338" count="7332" type="stmt"/>
            <line complexity="3" visibility="private" signature="getInterpolationEntityValue(double) : RandomVariable" num="341" count="7332" type="method"/>
            <line num="343" count="7332" type="stmt"/>
            <line num="345" count="7332" type="stmt"/>
            <line falsecount="6620" truecount="712" num="345" type="cond"/>
            <line num="346" count="712" type="stmt"/>
            <line num="347" count="712" type="stmt"/>
            <line num="348" count="712" type="stmt"/>
            <line falsecount="712" truecount="3774" num="348" type="cond"/>
            <line num="349" count="3774" type="stmt"/>
            <line num="350" count="3774" type="stmt"/>
            <line num="352" count="712" type="stmt"/>
            <line num="360" count="7332" type="stmt"/>
            <line complexity="12" visibility="protected" signature="addPoint(double,RandomVariable,boolean) : void" num="372" count="330" type="method"/>
            <line num="373" count="330" type="stmt"/>
            <line num="374" count="330" type="stmt"/>
            <line falsecount="324" truecount="6" num="374" type="cond"/>
            <line num="375" count="6" type="stmt"/>
            <line num="375" count="6" type="stmt"/>
            <line num="376" count="6" type="stmt"/>
            <line num="376" count="6" type="stmt"/>
            <line num="376" count="6" type="stmt"/>
            <line num="376" count="6" type="stmt"/>
            <line num="376" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="376" type="cond"/>
            <line falsecount="0" truecount="6" num="376" type="cond"/>
            <line num="377" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="377" type="cond"/>
            <line num="378" count="6" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="324" type="stmt"/>
            <line num="386" count="324" type="stmt"/>
            <line num="387" count="324" type="stmt"/>
            <line falsecount="324" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="398" count="324" type="stmt"/>
            <line num="399" count="324" type="stmt"/>
            <line num="401" count="324" type="stmt"/>
            <line falsecount="10" truecount="314" num="401" type="cond"/>
            <line num="403" count="314" type="stmt"/>
            <line num="404" count="314" type="stmt"/>
            <line falsecount="314" truecount="0" num="404" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="314" type="stmt"/>
            <line num="410" count="324" type="stmt"/>
            <line num="411" count="324" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="420" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExtrapolationMethod() : ExtrapolationMethod" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntity() : InterpolationEntity" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeIndex(double) : int" num="442" count="324" type="method"/>
            <line num="443" count="324" type="stmt"/>
            <line num="444" count="324" type="stmt"/>
            <line num="445" count="324" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getParameterIndex(double) : int" num="448" count="314" type="method"/>
            <line num="449" count="314" type="stmt"/>
            <line num="450" count="314" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="454" count="1428" type="method"/>
            <line num="456" count="1428" type="stmt"/>
            <line num="457" count="1428" type="stmt"/>
            <line falsecount="1428" truecount="6618" num="457" type="cond"/>
            <line num="458" count="6618" type="stmt"/>
            <line num="460" count="1428" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(RandomVariable[]) : void" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setParameterPrivate(RandomVariable[]) : void" num="469" count="690" type="method"/>
            <line num="470" count="690" type="stmt"/>
            <line falsecount="690" truecount="3198" num="470" type="cond"/>
            <line num="471" count="3198" type="stmt"/>
            <line num="473" count="690" type="stmt"/>
            <line num="474" count="690" type="stmt"/>
            <line complexity="5" visibility="private" signature="interpolationEntityFromValue(RandomVariable,double) : RandomVariable" num="477" count="3522" type="method"/>
            <line num="478" count="3522" type="stmt"/>
            <line num="479" count="2460" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="2460" type="stmt"/>
            <line num="482" count="1038" type="stmt"/>
            <line num="483" count="1038" type="stmt"/>
            <line num="484" count="24" type="stmt"/>
            <line num="485" count="24" type="stmt"/>
            <line falsecount="24" truecount="0" num="485" type="cond"/>
            <line num="486" count="0" type="stmt"/>
            <line num="488" count="24" type="stmt"/>
            <line complexity="4" visibility="private" signature="valueFromInterpolationEntity(RandomVariable,double) : RandomVariable" num="493" count="14034" type="method"/>
            <line num="494" count="14034" type="stmt"/>
            <line num="495" count="9042" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="9042" type="stmt"/>
            <line num="498" count="4956" type="stmt"/>
            <line num="499" count="4956" type="stmt"/>
            <line num="500" count="36" type="stmt"/>
            <line num="501" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : CurveInterpolation" num="505" count="690" type="method"/>
            <line num="507" count="690" type="stmt"/>
            <line num="509" count="690" type="stmt"/>
            <line num="510" count="690" type="stmt"/>
            <line num="511" count="690" type="stmt"/>
            <line num="512" count="690" type="stmt"/>
            <line num="513" count="690" type="stmt"/>
            <line num="514" count="3450" type="stmt"/>
            <line num="515" count="3450" type="stmt"/>
            <line num="516" count="3450" type="stmt"/>
            <line falsecount="252" truecount="3198" num="516" type="cond"/>
            <line num="517" count="3198" type="stmt"/>
            <line num="521" count="690" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(RandomVariable[]) : Curve" num="524" count="696" type="method"/>
            <line num="526" count="696" type="stmt"/>
            <line falsecount="690" truecount="6" num="526" type="cond"/>
            <line num="527" count="6" type="stmt"/>
            <line num="529" count="690" type="stmt"/>
            <line num="530" count="690" type="stmt"/>
            <line num="532" count="690" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="535" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="541" count="18" type="method"/>
            <line num="546" count="18" type="stmt"/>
            <line num="547" count="18" type="stmt"/>
            <line num="548" count="18" type="stmt"/>
            <line num="549" count="84" type="stmt"/>
            <line num="550" count="84" type="stmt"/>
            <line num="551" count="84" type="stmt"/>
            <line num="554" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="560" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveFromForwardCurve.java" name="DiscountCurveFromForwardCurve.java">
            <metrics coveredelements="25" coveredconditionals="5" complexity="27" loc="214" coveredmethods="3" methods="12" elements="96" classes="1" ncloc="110" statements="54" conditionals="30" coveredstatements="17"/>
            <class name="DiscountCurveFromForwardCurve">
               <metrics coveredelements="25" coveredconditionals="5" complexity="27" coveredmethods="3" methods="12" elements="96" statements="54" conditionals="30" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String,double)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurveInterface,double)" num="72" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String)" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurveInterface)" num="103" count="2" type="method"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : RandomVariable" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : RandomVariable" num="118" count="124" type="method"/>
            <line num="120" count="124" type="stmt"/>
            <line num="121" count="124" type="stmt"/>
            <line falsecount="0" truecount="124" num="121" type="cond"/>
            <line num="122" count="124" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="124" type="stmt"/>
            <line falsecount="124" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="124" type="stmt"/>
            <line num="131" count="124" type="stmt"/>
            <line num="132" count="124" type="stmt"/>
            <line num="133" count="124" type="stmt"/>
            <line falsecount="124" truecount="684" num="133" type="cond"/>
            <line num="134" count="684" type="stmt"/>
            <line num="135" count="684" type="stmt"/>
            <line falsecount="684" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="684" type="stmt"/>
            <line num="139" count="684" type="stmt"/>
            <line num="142" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(RandomVariable[]) : void" num="158" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveInterface.java" name="DiscountCurveInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurveInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/DiscountCurveInterpolation.java" name="DiscountCurveInterpolation.java">
            <metrics coveredelements="43" coveredconditionals="6" complexity="42" loc="507" coveredmethods="13" methods="26" elements="150" classes="1" ncloc="220" statements="94" conditionals="30" coveredstatements="24"/>
            <class name="DiscountCurveInterpolation">
               <metrics coveredelements="43" coveredconditionals="6" complexity="42" coveredmethods="13" methods="26" elements="150" statements="94" conditionals="30" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String)" num="52" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="80" count="6" type="method"/>
            <line num="83" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="99" count="6" type="method"/>
            <line num="104" count="6" type="stmt"/>
            <line num="106" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="106" type="cond"/>
            <line num="107" count="30" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="125" count="6" type="method"/>
            <line num="131" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="145" count="6" type="method"/>
            <line num="150" count="6" type="stmt"/>
            <line num="151" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="151" type="cond"/>
            <line num="152" count="30" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="158" count="6" type="method"/>
            <line num="163" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="164" count="30" type="method"/>
            <line num="165" count="30" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],RandomVariable[]) : DiscountCurveInterpolation" num="178" count="6" type="method"/>
            <line num="179" count="6" type="stmt"/>
            <line num="181" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="181" type="cond"/>
            <line num="182" count="30" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[]) : DiscountCurveInterpolation" num="188" count="6" type="method"/>
            <line num="189" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="190" count="30" type="method"/>
            <line num="191" count="30" type="stmt"/>
            <line num="193" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="213" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,Date,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="244" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="270" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],RandomVariable[]) : DiscountCurveInterpolation" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],RandomVariable[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="325" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="355" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountFactorsFromForwardRates(String,TimeDiscretization,RandomVariable[]) : DiscountCurveInterface" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="createDiscountCurveFromMonteCarloLiborModel(String,LIBORModelMonteCarloSimulationModel,double) : DiscountCurveInterface" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="createZeroRates(double,double[],LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="416" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="427" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : RandomVariable" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : RandomVariable[]" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addDiscountFactor(double,RandomVariable,boolean) : void" num="489" count="60" type="method"/>
            <line num="490" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="493" count="12" type="method"/>
            <line num="495" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : RandomVariable" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : RandomVariable" num="503" count="186540" type="method"/>
            <line num="505" count="186540" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveFromDiscountCurve.java" name="ForwardCurveFromDiscountCurve.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="15" loc="178" coveredmethods="6" methods="11" elements="40" classes="1" ncloc="69" statements="23" conditionals="6" coveredstatements="14"/>
            <class name="ForwardCurveFromDiscountCurve">
               <metrics coveredelements="23" coveredconditionals="3" complexity="15" coveredmethods="6" methods="11" elements="40" statements="23" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="53" count="12" type="method"/>
            <line num="54" count="12" type="stmt"/>
            <line num="56" count="12" type="stmt"/>
            <line num="57" count="12" type="stmt"/>
            <line num="58" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="74" count="12" type="method"/>
            <line num="75" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention)" num="89" count="12" type="method"/>
            <line num="90" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String)" num="102" count="12" type="method"/>
            <line num="103" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,LocalDate,String)" num="120" count="12" type="method"/>
            <line num="121" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : RandomVariable" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getForward(AnalyticModel,double,double) : RandomVariable" num="134" count="5424" type="method"/>
            <line num="137" count="5424" type="stmt"/>
            <line falsecount="5424" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="5424" type="stmt"/>
            <line num="141" count="5424" type="stmt"/>
            <line falsecount="5424" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="5424" type="stmt"/>
            <line falsecount="5424" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="5424" type="stmt"/>
            <line num="149" count="5424" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : RandomVariable" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : RandomVariable" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveInterface.java" name="ForwardCurveInterface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="50" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurveInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/curves/ForwardCurveInterpolation.java" name="ForwardCurveInterpolation.java">
            <metrics coveredelements="64" coveredconditionals="9" complexity="42" loc="470" coveredmethods="10" methods="20" elements="152" classes="2" ncloc="214" statements="104" conditionals="28" coveredstatements="45"/>
            <class name="ForwardCurveInterpolation">
               <metrics coveredelements="64" coveredconditionals="9" complexity="42" coveredmethods="10" methods="20" elements="152" statements="104" conditionals="28" coveredstatements="45"/>
            </class>
            <class name="ForwardCurveInterpolation.InterpolationEntityForward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String)" num="69" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,InterpolationEntityForward,String)" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,String)" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,double,InterpolationEntityForward,String)" num="121" count="10" type="method"/>
            <line num="122" count="10" type="stmt"/>
            <line num="123" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="144" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,Date,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="177" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,String,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,InterpolationEntityForward,String,AnalyticModel,double[],RandomVariable[]) : ForwardCurveInterpolation" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],RandomVariable[],double) : ForwardCurveInterpolation" num="234" count="4" type="method"/>
            <line num="235" count="4" type="stmt"/>
            <line num="237" count="4" type="stmt"/>
            <line falsecount="4" truecount="240" num="237" type="cond"/>
            <line num="238" count="240" type="stmt"/>
            <line num="239" count="240" type="stmt"/>
            <line num="240" count="240" type="stmt"/>
            <line num="243" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="createForwardCurveFromDiscountFactors(String,double[],RandomVariable[],double) : ForwardCurveInterpolation" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],RandomVariable[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="295" count="6" type="method"/>
            <line num="296" count="6" type="stmt"/>
            <line num="298" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="298" type="cond"/>
            <line num="299" count="30" type="stmt"/>
            <line num="300" count="30" type="stmt"/>
            <line num="301" count="30" type="stmt"/>
            <line num="303" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="317" count="6" type="method"/>
            <line num="318" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : RandomVariableFromDoubleArray" num="319" count="30" type="method"/>
            <line num="320" count="30" type="stmt"/>
            <line num="322" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="createForwardCurveFromMonteCarloLiborModel(String,LIBORModelMonteCarloSimulationModel,double) : ForwardCurveInterpolation" num="334" count="4" type="method"/>
            <line num="336" count="4" type="stmt"/>
            <line num="338" count="4" type="stmt"/>
            <line num="339" count="4" type="stmt"/>
            <line num="340" count="4" type="stmt"/>
            <line num="341" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="345" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="345" type="cond"/>
            <line num="346" count="4" type="stmt"/>
            <line num="347" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="347" type="cond"/>
            <line num="348" count="4" type="stmt"/>
            <line falsecount="4" truecount="240" num="348" type="cond"/>
            <line num="349" count="240" type="stmt"/>
            <line num="350" count="240" type="stmt"/>
            <line num="353" count="4" type="stmt"/>
            <line num="354" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double) : RandomVariable" num="358" count="12854" type="method"/>
            <line num="361" count="12854" type="stmt"/>
            <line num="363" count="12854" type="stmt"/>
            <line num="364" count="12854" type="stmt"/>
            <line num="365" count="12854" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="12854" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double,double) : RandomVariable" num="398" count="12170" type="method"/>
            <line num="405" count="12170" type="stmt"/>
            <line complexity="5" visibility="private" signature="addForward(AnalyticModel,double,RandomVariable,boolean) : void" num="416" count="270" type="method"/>
            <line num="417" count="270" type="stmt"/>
            <line num="418" count="270" type="stmt"/>
            <line num="419" count="270" type="stmt"/>
            <line num="420" count="270" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="270" type="stmt"/>
            <line num="423" count="270" type="stmt"/>
            <line num="424" count="270" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="444" count="270" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addPoint(double,RandomVariable,boolean) : void" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntityForward() : InterpolationEntityForward" num="460" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="464" count="6" type="method"/>
            <line num="466" count="6" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward">
         <metrics coveredelements="473" complexity="256" loc="1485" methods="111" classes="5" statements="442" coveredconditionals="104" coveredmethods="79" elements="711" ncloc="1114" files="2" conditionals="158" coveredstatements="290"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAAD.java" name="RandomVariableDifferentiableAAD.java">
            <metrics coveredelements="449" coveredconditionals="104" complexity="244" loc="1354" coveredmethods="69" methods="99" elements="683" classes="3" ncloc="1045" statements="426" conditionals="158" coveredstatements="276"/>
            <class name="RandomVariableDifferentiableAAD">
               <metrics coveredelements="176" coveredconditionals="23" complexity="113" coveredmethods="60" methods="87" elements="267" statements="138" conditionals="42" coveredstatements="93"/>
            </class>
            <class name="RandomVariableDifferentiableAAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAAD.OperatorTreeNode">
               <metrics coveredelements="273" coveredconditionals="81" complexity="131" coveredmethods="9" methods="12" elements="416" statements="288" conditionals="116" coveredstatements="183"/>
            </class>
            <line complexity="28" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,Object,RandomVariableDifferentiableAADFactory)" num="95" count="24265222" type="method"/>
            <line num="96" count="24254566" type="stmt"/>
            <line num="97" count="24269363" type="stmt"/>
            <line num="98" count="24323759" type="stmt"/>
            <line num="99" count="24322659" type="stmt"/>
            <line num="100" count="24321752" type="stmt"/>
            <line num="101" count="24321850" type="stmt"/>
            <line num="106" count="24321328" type="stmt"/>
            <line falsecount="23329648" truecount="991441" num="106" type="cond"/>
            <line num="108" count="991654" type="stmt"/>
            <line num="110" count="23330938" type="stmt"/>
            <line falsecount="23327711" truecount="3196" num="110" type="cond"/>
            <line num="112" count="3196" type="stmt"/>
            <line num="114" count="23327967" type="stmt"/>
            <line falsecount="11236556" truecount="12093545" num="114" type="cond"/>
            <line num="116" count="12094124" type="stmt"/>
            <line falsecount="12094127" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="12094411" type="stmt"/>
            <line falsecount="706522" truecount="11388265" num="119" type="cond"/>
            <line num="120" count="11388246" type="stmt"/>
            <line num="123" count="11237196" type="stmt"/>
            <line falsecount="11130205" truecount="107512" num="123" type="cond"/>
            <line num="125" count="107510" type="stmt"/>
            <line falsecount="17030" truecount="90479" num="125" type="cond"/>
            <line num="126" count="90482" type="stmt"/>
            <line num="129" count="11130183" type="stmt"/>
            <line falsecount="1972652" truecount="9158071" num="129" type="cond"/>
            <line num="131" count="9158110" type="stmt"/>
            <line num="133" count="9158174" type="stmt"/>
            <line falsecount="2747711" truecount="6410489" num="133" type="cond"/>
            <line num="134" count="6410483" type="stmt"/>
            <line num="136" count="9158506" type="stmt"/>
            <line falsecount="6852878" truecount="2305732" num="136" type="cond"/>
            <line num="137" count="2305742" type="stmt"/>
            <line num="140" count="1972757" type="stmt"/>
            <line falsecount="1902322" truecount="70505" num="140" type="cond"/>
            <line num="142" count="70509" type="stmt"/>
            <line falsecount="70506" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="70510" type="stmt"/>
            <line falsecount="70506" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="70515" type="stmt"/>
            <line falsecount="70513" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="1902354" type="stmt"/>
            <line falsecount="1882268" truecount="20088" num="152" type="cond"/>
            <line num="153" count="20088" type="stmt"/>
            <line falsecount="20088" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="24326453" type="stmt"/>
            <line complexity="11" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="165" count="87210110" type="method"/>
            <line num="166" count="87210110" type="stmt"/>
            <line falsecount="87210110" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="87210110" type="stmt"/>
            <line falsecount="87210110" truecount="211153108" num="171" type="cond"/>
            <line num="172" count="211153108" type="stmt"/>
            <line num="173" count="211153108" type="stmt"/>
            <line falsecount="44579078" truecount="166574030" num="173" type="cond"/>
            <line num="174" count="166574030" type="stmt"/>
            <line num="176" count="166574030" type="stmt"/>
            <line num="177" count="166574030" type="stmt"/>
            <line num="178" count="166574030" type="stmt"/>
            <line num="183" count="166574030" type="stmt"/>
            <line num="184" count="2602" type="stmt"/>
            <line num="186" count="2602" type="stmt"/>
            <line num="187" count="2602" type="stmt"/>
            <line num="188" count="244" type="stmt"/>
            <line num="190" count="244" type="stmt"/>
            <line num="191" count="244" type="stmt"/>
            <line num="192" count="244" type="stmt"/>
            <line num="193" count="744" type="stmt"/>
            <line num="195" count="744" type="stmt"/>
            <line falsecount="742" truecount="2" num="195" type="cond"/>
            <line num="196" count="2" type="stmt"/>
            <line num="198" count="744" type="stmt"/>
            <line num="199" count="166570440" type="stmt"/>
            <line num="201" count="166570440" type="stmt"/>
            <line num="207" count="166574030" type="stmt"/>
            <line falsecount="71599676" truecount="94974354" num="207" type="cond"/>
            <line num="209" count="94974354" type="stmt"/>
            <line num="213" count="71599676" type="stmt"/>
            <line num="216" count="166574030" type="stmt"/>
            <line complexity="70" visibility="private" signature="getPartialDerivative(OperatorTreeNode,int) : RandomVariable" num="230" count="166574030" type="method"/>
            <line num="232" count="166574030" type="stmt"/>
            <line falsecount="166574030" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="166574030" type="stmt"/>
            <line falsecount="28675902" truecount="137898128" num="236" type="cond"/>
            <line num="237" count="166574030" type="stmt"/>
            <line falsecount="28680238" truecount="137893792" num="237" type="cond"/>
            <line num="238" count="166574030" type="stmt"/>
            <line falsecount="78917158" truecount="87656872" num="238" type="cond"/>
            <line num="240" count="166574030" type="stmt"/>
            <line num="242" count="166574030" type="stmt"/>
            <line num="244" count="40" type="stmt"/>
            <line num="245" count="40" type="stmt"/>
            <line num="246" count="40" type="stmt"/>
            <line num="247" count="12" type="stmt"/>
            <line num="248" count="12" type="stmt"/>
            <line num="249" count="12" type="stmt"/>
            <line num="250" count="2112" type="stmt"/>
            <line num="251" count="2112" type="stmt"/>
            <line num="252" count="2112" type="stmt"/>
            <line num="253" count="1732" type="stmt"/>
            <line num="254" count="1732" type="stmt"/>
            <line num="255" count="1732" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="2602" type="stmt"/>
            <line num="266" count="2602" type="stmt"/>
            <line num="267" count="2602" type="stmt"/>
            <line num="268" count="244" type="stmt"/>
            <line num="269" count="244" type="stmt"/>
            <line num="270" count="244" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="196" type="stmt"/>
            <line num="296" count="196" type="stmt"/>
            <line num="297" count="196" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="28571868" type="stmt"/>
            <line num="305" count="28571868" type="stmt"/>
            <line num="306" count="28571868" type="stmt"/>
            <line num="307" count="101432" type="stmt"/>
            <line num="308" count="101432" type="stmt"/>
            <line falsecount="290" truecount="101142" num="308" type="cond"/>
            <line num="309" count="101432" type="stmt"/>
            <line num="310" count="42874252" type="stmt"/>
            <line num="311" count="42874252" type="stmt"/>
            <line falsecount="14178870" truecount="28695382" num="311" type="cond"/>
            <line num="312" count="42874252" type="stmt"/>
            <line num="313" count="67292" type="stmt"/>
            <line num="314" count="67292" type="stmt"/>
            <line falsecount="8088" truecount="59204" num="314" type="cond"/>
            <line num="315" count="67292" type="stmt"/>
            <line num="316" count="7289728" type="stmt"/>
            <line num="317" count="7289728" type="stmt"/>
            <line falsecount="8" truecount="7289720" num="317" type="cond"/>
            <line num="318" count="7289720" type="stmt"/>
            <line num="321" count="8" type="stmt"/>
            <line num="323" count="7289728" type="stmt"/>
            <line num="324" count="2630" type="stmt"/>
            <line num="325" count="2630" type="stmt"/>
            <line falsecount="0" truecount="2630" num="325" type="cond"/>
            <line num="326" count="2630" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="2630" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="3018" type="stmt"/>
            <line num="349" count="3018" type="stmt"/>
            <line falsecount="0" truecount="3018" num="349" type="cond"/>
            <line num="350" count="3018" type="stmt"/>
            <line num="351" count="72468516" type="stmt"/>
            <line num="352" count="72468516" type="stmt"/>
            <line falsecount="43322752" truecount="29145764" num="352" type="cond"/>
            <line num="353" count="29145764" type="stmt"/>
            <line num="354" count="43322752" type="stmt"/>
            <line falsecount="14308588" truecount="29014164" num="354" type="cond"/>
            <line num="355" count="29014164" type="stmt"/>
            <line num="357" count="14308588" type="stmt"/>
            <line num="359" count="72468516" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="309988" type="stmt"/>
            <line num="379" count="309988" type="stmt"/>
            <line falsecount="154994" truecount="154994" num="379" type="cond"/>
            <line num="380" count="154994" type="stmt"/>
            <line num="381" count="154994" type="stmt"/>
            <line falsecount="0" truecount="154994" num="381" type="cond"/>
            <line num="382" count="154994" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="309988" type="stmt"/>
            <line num="387" count="14877624" type="stmt"/>
            <line num="388" count="14877624" type="stmt"/>
            <line falsecount="7438812" truecount="7438812" num="388" type="cond"/>
            <line num="389" count="7438812" type="stmt"/>
            <line num="390" count="7438812" type="stmt"/>
            <line falsecount="0" truecount="7438812" num="390" type="cond"/>
            <line num="391" count="7438812" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="14877624" type="stmt"/>
            <line num="396" count="744" type="stmt"/>
            <line num="397" count="744" type="stmt"/>
            <line falsecount="488" truecount="256" num="397" type="cond"/>
            <line num="398" count="256" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="409" count="254" type="stmt"/>
            <line num="415" count="254" type="stmt"/>
            <line num="416" count="254" type="stmt"/>
            <line falsecount="252" truecount="2" num="416" type="cond"/>
            <line num="417" count="2" type="stmt"/>
            <line num="419" count="252" type="stmt"/>
            <line falsecount="10" truecount="242" num="419" type="cond"/>
            <line num="420" count="242" type="stmt"/>
            <line num="421" count="242" type="stmt"/>
            <line num="422" count="242" type="stmt"/>
            <line num="423" count="242" type="stmt"/>
            <line num="426" count="10" type="stmt"/>
            <line num="428" count="254" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="2" type="stmt"/>
            <line num="433" count="2" type="stmt"/>
            <line num="434" count="2" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="441" count="488" type="stmt"/>
            <line falsecount="244" truecount="244" num="441" type="cond"/>
            <line num="442" count="244" type="stmt"/>
            <line num="444" count="244" type="stmt"/>
            <line num="446" count="744" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="166574030" type="stmt"/>
            <line complexity="2" visibility="private" signature="getDiracDeltaRegression(RandomVariable,RandomVariable) : RandomVariable" num="454" count="2" type="method"/>
            <line num="455" count="2" type="stmt"/>
            <line num="456" count="2" type="stmt"/>
            <line num="458" count="2" type="stmt"/>
            <line num="460" count="2" type="stmt"/>
            <line num="461" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="471" count="2" type="stmt"/>
            <line num="474" count="2" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDensityRegression(RandomVariable) : double" num="478" count="2" type="method"/>
            <line num="479" count="2" type="stmt"/>
            <line num="484" count="2" type="stmt"/>
            <line num="485" count="2" type="stmt"/>
            <line num="486" count="2" type="stmt"/>
            <line num="487" count="2" type="stmt"/>
            <line num="488" count="2" type="stmt"/>
            <line num="489" count="2" type="stmt"/>
            <line num="490" count="2" type="stmt"/>
            <line num="491" count="2" type="stmt"/>
            <line num="493" count="2" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="496" type="cond"/>
            <line num="497" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="518" count="2" type="stmt"/>
            <line num="520" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="520" type="cond"/>
            <line num="521" count="100" type="stmt"/>
            <line num="523" count="100" type="stmt"/>
            <line num="524" count="100" type="stmt"/>
            <line num="526" count="100" type="stmt"/>
            <line num="527" count="100" type="stmt"/>
            <line num="529" count="100" type="stmt"/>
            <line num="530" count="100" type="stmt"/>
            <line num="533" count="2" type="stmt"/>
            <line num="534" count="2" type="stmt"/>
            <line num="536" count="2" type="stmt"/>
            <line num="540" count="2" type="stmt"/>
            <line num="542" count="2" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="of(RandomVariable) : OperatorTreeNode" num="549" count="31921044" type="method"/>
            <line num="550" count="31930487" type="stmt"/>
            <line falsecount="19211627" truecount="12737582" num="550" type="cond"/>
            <line complexity="2" visibility="private" signature="getValue(RandomVariable) : RandomVariable" num="553" count="2562933" type="method"/>
            <line num="554" count="2563093" type="stmt"/>
            <line falsecount="0" truecount="2563142" num="554" type="cond"/>
            <line complexity="2" visibility="private" signature="extractOperatorTreeNodes(List&lt;RandomVariable&gt;) : List&lt;OperatorTreeNode&gt;" num="557" count="1639192" type="method"/>
            <line num="558" count="1639286" type="stmt"/>
            <line falsecount="738633" truecount="900785" num="558" type="cond"/>
            <line complexity="2" visibility="private" signature="extractOperatorValues(List&lt;RandomVariable&gt;) : List&lt;RandomVariable&gt;" num="561" count="1639419" type="method"/>
            <line num="562" count="1639494" type="stmt"/>
            <line falsecount="738634" truecount="900923" num="562" type="cond"/>
            <line complexity="2" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="565" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory,int)" num="586" count="24233776" type="method"/>
            <line num="587" count="24219080" type="stmt"/>
            <line num="588" count="24242722" type="stmt"/>
            <line num="589" count="24249328" type="stmt"/>
            <line num="590" count="24290163" type="stmt"/>
            <line falsecount="1978" truecount="24296589" num="590" type="cond"/>
            <line num="591" count="24300508" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAAD" num="594" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAAD" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(double)" num="602" count="2" type="method"/>
            <line num="603" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable)" num="606" count="1976" type="method"/>
            <line num="607" count="1976" type="stmt"/>
            <line falsecount="1976" truecount="0" num="607" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,RandomVariableDifferentiableAADFactory)" num="610" count="736651" type="method"/>
            <line num="611" count="736648" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,OperatorType,RandomVariableDifferentiableAADFactory)" num="614" count="1637450" type="method"/>
            <line num="615" count="1637412" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory)" num="618" count="1639429" type="method"/>
            <line num="619" count="1639349" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,RandomVariableDifferentiableAADFactory,int)" num="622" count="1639550" type="method"/>
            <line num="623" count="1639480" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="626" count="35415642" type="method"/>
            <line num="627" count="35442565" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="635" count="67915641" type="method"/>
            <line num="637" count="67953522" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactory() : RandomVariableDifferentiableAADFactory" num="640" count="197917319" type="method"/>
            <line num="641" count="197927223" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="644" count="135126" type="method"/>
            <line num="646" count="135126" type="stmt"/>
            <line complexity="8" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="657" count="3262" type="method"/>
            <line num="661" count="3262" type="stmt"/>
            <line num="663" count="3262" type="stmt"/>
            <line num="666" count="3262" type="stmt"/>
            <line num="668" count="3262" type="stmt"/>
            <line num="670" count="3262" type="stmt"/>
            <line falsecount="3262" truecount="94977616" num="670" type="cond"/>
            <line num="672" count="94977616" type="stmt"/>
            <line num="673" count="94977616" type="stmt"/>
            <line num="674" count="94977616" type="stmt"/>
            <line num="677" count="94977616" type="stmt"/>
            <line num="678" count="94977616" type="stmt"/>
            <line falsecount="7767506" truecount="87210110" num="678" type="cond"/>
            <line num="680" count="87210110" type="stmt"/>
            <line num="683" count="87210110" type="stmt"/>
            <line falsecount="1782" truecount="87208328" num="683" type="cond"/>
            <line num="684" count="87208328" type="stmt"/>
            <line num="688" count="87210110" type="stmt"/>
            <line num="690" count="211153108" type="stmt"/>
            <line falsecount="44579078" truecount="166574030" num="690" type="cond"/>
            <line num="691" count="166574030" type="stmt"/>
            <line num="696" count="94977616" type="stmt"/>
            <line falsecount="94977616" truecount="0" num="696" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line num="701" count="3262" type="stmt"/>
            <line complexity="1" visibility="private" signature="isGradientRetainsLeafNodesOnly() : boolean" num="704" count="87210110" type="method"/>
            <line num="705" count="87210110" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="708" count="0" type="method"/>
            <line num="710" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="718" count="2" type="method"/>
            <line num="720" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="723" count="220" type="method"/>
            <line num="725" count="220" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="728" count="42063465" type="method"/>
            <line num="730" count="42073954" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="733" count="22440" type="method"/>
            <line num="735" count="22440" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="738" count="2002" type="method"/>
            <line num="740" count="2002" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="743" count="802" type="method"/>
            <line num="745" count="802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="748" count="750" type="method"/>
            <line num="750" count="750" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="753" count="216" type="method"/>
            <line num="755" count="216" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="758" count="2" type="method"/>
            <line num="760" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="763" count="508" type="method"/>
            <line num="765" count="508" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="768" count="184079" type="method"/>
            <line num="770" count="184078" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="773" count="0" type="method"/>
            <line num="775" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="778" count="106" type="method"/>
            <line num="780" count="106" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="783" count="0" type="method"/>
            <line num="785" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="793" count="1766" type="method"/>
            <line num="795" count="1766" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="798" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="803" count="460" type="method"/>
            <line num="805" count="460" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="808" count="0" type="method"/>
            <line num="810" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="813" count="10" type="method"/>
            <line num="815" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="823" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="828" count="28" type="method"/>
            <line num="830" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="833" count="0" type="method"/>
            <line num="835" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="842" count="677974" type="method"/>
            <line num="844" count="677974" type="stmt"/>
            <line num="845" count="677974" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="848" count="310625" type="method"/>
            <line num="850" count="310799" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="860" count="4100" type="method"/>
            <line num="862" count="4100" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="872" count="68927" type="method"/>
            <line num="874" count="68943" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="884" count="145646" type="method"/>
            <line num="886" count="145697" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="896" count="1103777" type="method"/>
            <line num="898" count="1105012" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="908" count="81727" type="method"/>
            <line num="910" count="81748" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="920" count="6718" type="method"/>
            <line num="922" count="6718" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="929" count="3195" type="method"/>
            <line num="931" count="3196" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="938" count="1832" type="method"/>
            <line num="940" count="1832" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="949" count="11548" type="method"/>
            <line num="951" count="11548" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="958" count="1038" type="method"/>
            <line num="960" count="1038" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="967" count="34152" type="method"/>
            <line num="969" count="34151" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="976" count="4390" type="method"/>
            <line num="978" count="4390" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="985" count="0" type="method"/>
            <line num="987" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="994" count="0" type="method"/>
            <line num="996" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1007" count="694084" type="method"/>
            <line num="1009" count="694716" type="stmt"/>
            <line falsecount="691393" truecount="0" num="1009" type="cond"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1014" count="691923" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1024" count="27751" type="method"/>
            <line num="1026" count="27751" type="stmt"/>
            <line falsecount="27750" truecount="0" num="1026" type="cond"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1031" count="27752" type="stmt"/>
            <line complexity="2" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1041" count="50664" type="method"/>
            <line num="1043" count="50664" type="stmt"/>
            <line falsecount="50664" truecount="0" num="1043" type="cond"/>
            <line num="1045" count="0" type="stmt"/>
            <line num="1048" count="50664" type="stmt"/>
            <line complexity="2" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1058" count="10976573" type="method"/>
            <line num="1060" count="10977232" type="stmt"/>
            <line falsecount="10974558" truecount="0" num="1060" type="cond"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1065" count="10975012" type="stmt"/>
            <line complexity="2" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1075" count="25670" type="method"/>
            <line num="1077" count="25669" type="stmt"/>
            <line falsecount="25662" truecount="0" num="1077" type="cond"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1082" count="25663" type="stmt"/>
            <line complexity="2" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1092" count="0" type="method"/>
            <line num="1094" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1094" type="cond"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1099" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1109" count="522" type="method"/>
            <line num="1111" count="522" type="stmt"/>
            <line falsecount="522" truecount="0" num="1111" type="cond"/>
            <line num="1113" count="0" type="stmt"/>
            <line num="1116" count="522" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1123" count="6" type="method"/>
            <line num="1125" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="1125" type="cond"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1130" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1137" count="70494" type="method"/>
            <line num="1139" count="70492" type="stmt"/>
            <line falsecount="70404" truecount="0" num="1139" type="cond"/>
            <line num="1141" count="0" type="stmt"/>
            <line num="1144" count="70419" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1151" count="757185" type="method"/>
            <line num="1153" count="757201" type="stmt"/>
            <line falsecount="757146" truecount="0" num="1153" type="cond"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1158" count="757157" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1165" count="20088" type="method"/>
            <line num="1167" count="20088" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1177" count="9952" type="method"/>
            <line num="1179" count="9952" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1186" count="196" type="method"/>
            <line num="1188" count="196" type="stmt"/>
            <line complexity="2" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1195" count="708486" type="method"/>
            <line num="1197" count="709101" type="stmt"/>
            <line falsecount="702913" truecount="0" num="1197" type="cond"/>
            <line num="1199" count="0" type="stmt"/>
            <line num="1202" count="704133" type="stmt"/>
            <line complexity="3" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1212" count="8443912" type="method"/>
            <line num="1214" count="8444188" type="stmt"/>
            <line falsecount="8440223" truecount="0" num="1214" type="cond"/>
            <line num="1216" count="0" type="stmt"/>
            <line num="1219" count="8440681" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1229" count="0" type="method"/>
            <line num="1231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1231" type="cond"/>
            <line num="1233" count="0" type="stmt"/>
            <line num="1236" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1243" count="0" type="method"/>
            <line num="1245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1245" type="cond"/>
            <line num="1247" count="0" type="stmt"/>
            <line num="1250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="1261" count="18" type="method"/>
            <line num="1263" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="1266" count="0" type="method"/>
            <line num="1268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="1271" count="0" type="method"/>
            <line num="1273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="1276" count="0" type="method"/>
            <line num="1278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="1281" count="0" type="method"/>
            <line num="1283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1286" count="0" type="method"/>
            <line num="1288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="1291" count="0" type="method"/>
            <line num="1293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="1300" count="0" type="method"/>
            <line num="1302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="1309" count="0" type="method"/>
            <line num="1311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="1318" count="0" type="method"/>
            <line num="1320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="1327" count="0" type="method"/>
            <line num="1329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="1336" count="0" type="method"/>
            <line num="1338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1345" count="52" type="method"/>
            <line num="1347" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneIndependent() : RandomVariableDifferentiable" num="1350" count="1976" type="method"/>
            <line num="1352" count="1976" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADFactory.java" name="RandomVariableDifferentiableAADFactory.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="12" loc="131" coveredmethods="10" methods="12" elements="28" classes="2" ncloc="69" statements="16" conditionals="0" coveredstatements="14"/>
            <class name="RandomVariableDifferentiableAADFactory">
               <metrics coveredelements="24" coveredconditionals="0" complexity="12" coveredmethods="10" methods="12" elements="28" statements="16" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="RandomVariableDifferentiableAADFactory.DiracDeltaApproximationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(RandomVariableFactory,Map&lt;String, Object&gt;)" num="60" count="2118" type="method"/>
            <line num="61" count="2118" type="stmt"/>
            <line num="67" count="2118" type="stmt"/>
            <line num="68" count="2118" type="stmt"/>
            <line num="69" count="2118" type="stmt"/>
            <line num="71" count="2118" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(Map&lt;String, Object&gt;)" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory(RandomVariableFactory)" num="84" count="2054" type="method"/>
            <line num="85" count="2054" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADFactory()" num="88" count="2012" type="method"/>
            <line num="89" count="2012" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="92" count="718641" type="method"/>
            <line num="94" count="718642" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="97" count="18014" type="method"/>
            <line num="99" count="18014" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationMethod() : DiracDeltaApproximationMethod" num="102" count="770" type="method"/>
            <line num="103" count="770" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationWidthPerStdDev() : double" num="106" count="256" type="method"/>
            <line num="107" count="256" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiracDeltaApproximationDensityRegressionWidthPerStdDev() : double" num="110" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBarrierDiracWidth() : double" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isGradientRetainsLeafNodesOnly() : boolean" num="119" count="87210110" type="method"/>
            <line num="120" count="87210110" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="123" count="32" type="method"/>
            <line num="125" count="32" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.randomnumbers">
         <metrics coveredelements="56" complexity="34" loc="426" methods="27" classes="8" statements="69" coveredconditionals="9" coveredmethods="11" elements="110" ncloc="205" files="8" conditionals="14" coveredstatements="36"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/AcceptanceRejectionRandomNumberGenerator.java" name="AcceptanceRejectionRandomNumberGenerator.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="4" loc="61" coveredmethods="2" methods="3" elements="20" classes="1" ncloc="39" statements="15" conditionals="2" coveredstatements="14"/>
            <class name="AcceptanceRejectionRandomNumberGenerator">
               <metrics coveredelements="18" coveredconditionals="2" complexity="4" coveredmethods="2" methods="3" elements="20" statements="15" conditionals="2" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="AcceptanceRejectionRandomNumberGenerator(RandomNumberGenerator,DoubleUnaryOperator,DoubleUnaryOperator,DoubleUnaryOperator,double)" num="30" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNext() : double[]" num="44" count="2000000" type="method"/>
            <line num="46" count="2000000" type="stmt"/>
            <line num="47" count="2000000" type="stmt"/>
            <line num="48" count="2000000" type="stmt"/>
            <line falsecount="2000000" truecount="2631060" num="48" type="cond"/>
            <line num="49" count="2631060" type="stmt"/>
            <line num="50" count="2631060" type="stmt"/>
            <line num="51" count="2631060" type="stmt"/>
            <line num="52" count="2631060" type="stmt"/>
            <line num="54" count="2000000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/HaltonSequence.java" name="HaltonSequence.java">
            <metrics coveredelements="29" coveredconditionals="7" complexity="10" loc="83" coveredmethods="5" methods="6" elements="33" classes="1" ncloc="44" statements="19" conditionals="8" coveredstatements="17"/>
            <class name="HaltonSequence">
               <metrics coveredelements="29" coveredconditionals="7" complexity="10" coveredmethods="5" methods="6" elements="33" statements="19" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="3" visibility="public" signature="HaltonSequence(int[])" num="31" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line falsecount="4" truecount="6" num="32" type="cond"/>
            <line num="33" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNext() : double[]" num="41" count="4631060" type="method"/>
            <line num="43" count="4631060" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHaltonNumber(long) : double[]" num="51" count="4631060" type="method"/>
            <line num="52" count="4631060" type="stmt"/>
            <line num="53" count="4631060" type="stmt"/>
            <line falsecount="4631060" truecount="7262120" num="53" type="cond"/>
            <line num="54" count="7262120" type="stmt"/>
            <line num="56" count="4631060" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHaltonNumber(long,int) : double" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHaltonNumberForGivenBase(long,int) : double" num="70" count="7262120" type="method"/>
            <line num="71" count="7262120" type="stmt"/>
            <line num="73" count="7262120" type="stmt"/>
            <line num="74" count="7262120" type="stmt"/>
            <line num="75" count="7262120" type="stmt"/>
            <line falsecount="7262120" truecount="121570374" num="75" type="cond"/>
            <line num="76" count="121570374" type="stmt"/>
            <line num="77" count="121570374" type="stmt"/>
            <line num="78" count="121570374" type="stmt"/>
            <line num="81" count="7262120" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/MersenneTwister.java" name="MersenneTwister.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="49" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="MersenneTwister">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="MersenneTwister(long)" num="25" count="790" type="method"/>
            <line num="26" count="790" type="stmt"/>
            <line complexity="1" visibility="public" signature="MersenneTwister()" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="38" count="820012000" type="method"/>
            <line num="40" count="820012000" type="stmt"/>
            <line num="41" count="820012000" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDoubleFast() : double" num="45" count="2147483647" type="method"/>
            <line num="47" count="2147483647" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/RandomNumberGenerator.java" name="RandomNumberGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomNumberGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/RandomNumberGenerator1D.java" name="RandomNumberGenerator1D.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="4" loc="51" coveredmethods="1" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="1"/>
            <class name="RandomNumberGenerator1D">
               <metrics coveredelements="2" coveredconditionals="0" complexity="4" coveredmethods="1" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="nextDoubleFast() : double" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNext() : double[]" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDimension() : int" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAsDouble() : double" num="47" count="8000000" type="method"/>
            <line num="49" count="8000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/SobolSequence.java" name="SobolSequence.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="50" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="SobolSequence">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SobolSequence(int)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNext() : double[]" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/SobolSequence1D.java" name="SobolSequence1D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="31" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SobolSequence1D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SobolSequence1D()" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/randomnumbers/VanDerCorputSequence.java" name="VanDerCorputSequence.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="72" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="39" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="VanDerCorputSequence">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="27" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VanDerCorputSequence(int,int)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VanDerCorputSequence(int)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextDouble() : double" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVanDerCorputNumber(long,int) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves">
         <metrics coveredelements="505" complexity="354" loc="3656" methods="220" classes="29" statements="732" coveredconditionals="84" coveredmethods="96" elements="1166" ncloc="1805" files="21" conditionals="214" coveredstatements="325"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/AbstractCurve.java" name="AbstractCurve.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="9" loc="85" coveredmethods="6" methods="8" elements="23" classes="1" ncloc="44" statements="13" conditionals="2" coveredstatements="8"/>
            <class name="AbstractCurve">
               <metrics coveredelements="14" coveredconditionals="0" complexity="9" coveredmethods="6" methods="8" elements="23" statements="13" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCurve(String,LocalDate)" num="29" count="18178196" type="method"/>
            <line num="30" count="18176674" type="stmt"/>
            <line num="31" count="18178580" type="stmt"/>
            <line num="32" count="18179067" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="38" count="10840883" type="method"/>
            <line num="40" count="10844691" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="43" count="1567913911" type="method"/>
            <line num="45" count="1574036073" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="51" count="894154" type="method"/>
            <line num="53" count="894165" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double[]) : double[]" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AbstractCurve" num="71" count="32473" type="method"/>
            <line num="73" count="32472" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="52" type="method"/>
            <line num="83" count="52" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/AbstractForwardCurve.java" name="AbstractForwardCurve.java">
            <metrics coveredelements="41" coveredconditionals="4" complexity="13" loc="161" coveredmethods="9" methods="10" elements="48" classes="1" ncloc="81" statements="32" conditionals="6" coveredstatements="28"/>
            <class name="AbstractForwardCurve">
               <metrics coveredelements="41" coveredconditionals="4" complexity="13" coveredmethods="9" methods="10" elements="48" statements="32" conditionals="6" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,String)" num="51" count="123875" type="method"/>
            <line num="56" count="123872" type="stmt"/>
            <line num="57" count="123873" type="stmt"/>
            <line num="58" count="123871" type="stmt"/>
            <line num="59" count="123872" type="stmt"/>
            <line num="61" count="123881" type="stmt"/>
            <line num="63" count="123882" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,String)" num="76" count="123798" type="method"/>
            <line num="77" count="123794" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractForwardCurve(String,LocalDate,double,String)" num="88" count="332" type="method"/>
            <line num="89" count="332" type="stmt"/>
            <line num="90" count="332" type="stmt"/>
            <line num="91" count="332" type="stmt"/>
            <line num="93" count="332" type="stmt"/>
            <line num="94" count="332" type="stmt"/>
            <line num="95" count="332" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="98" count="1406807" type="method"/>
            <line num="100" count="1406977" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPaymentOffset(double) : double" num="103" count="2147483647" type="method"/>
            <line num="105" count="2147483647" type="stmt"/>
            <line falsecount="2147483647" truecount="56140186" num="105" type="cond"/>
            <line num="106" count="56268898" type="stmt"/>
            <line num="109" count="2147483647" type="stmt"/>
            <line falsecount="14162" truecount="2147483647" num="109" type="cond"/>
            <line num="110" count="2147483647" type="stmt"/>
            <line num="118" count="14162" type="stmt"/>
            <line num="119" count="14159" type="stmt"/>
            <line num="120" count="14159" type="stmt"/>
            <line num="121" count="14160" type="stmt"/>
            <line num="122" count="14160" type="stmt"/>
            <line num="123" count="14162" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="145" count="16" type="method"/>
            <line num="147" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffsetCode() : String" num="150" count="2147483647" type="method"/>
            <line num="151" count="2147483647" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentBusinessdayCalendar() : BusinessdayCalendar" num="154" count="14173" type="method"/>
            <line num="155" count="14175" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDateRollConvention() : BusinessdayCalendar.DateRollConvention" num="158" count="14171" type="method"/>
            <line num="159" count="14172" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/Curve.java" name="Curve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="81" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Curve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveBuilder.java" name="CurveBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CurveBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveFactory.java" name="CurveFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="178" coveredmethods="0" methods="2" elements="106" classes="1" ncloc="112" statements="74" conditionals="30" coveredstatements="0"/>
            <class name="CurveFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="2" elements="106" statements="74" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CurveFactory()" num="32" count="0" type="method"/>
            <line complexity="23" visibility="public" signature="createIndexCurveWithSeasonality(String,LocalDate,Map&lt;LocalDate, Double&gt;,Map&lt;String, Double&gt;,Integer,Map&lt;LocalDate, Double&gt;,String,String) : Curve" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveFromProductOfCurves.java" name="CurveFromProductOfCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="63" coveredmethods="0" methods="5" elements="13" classes="1" ncloc="31" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="CurveFromProductOfCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CurveFromProductOfCurves(String,LocalDate,Curve)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="55" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/CurveInterpolation.java" name="CurveInterpolation.java">
            <metrics coveredelements="177" coveredconditionals="29" complexity="70" loc="592" coveredmethods="29" methods="39" elements="236" classes="6" ncloc="344" statements="151" conditionals="46" coveredstatements="119"/>
            <class name="CurveInterpolation">
               <metrics coveredelements="144" coveredconditionals="28" complexity="53" coveredmethods="18" methods="24" elements="189" statements="123" conditionals="42" coveredstatements="98"/>
            </class>
            <class name="CurveInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.InterpolationEntity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CurveInterpolation.Point">
               <metrics coveredelements="13" coveredconditionals="1" complexity="9" coveredmethods="4" methods="7" elements="25" statements="14" conditionals="4" coveredstatements="8"/>
            </class>
            <class name="CurveInterpolation.Builder">
               <metrics coveredelements="20" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="package" signature="Point(double,double,boolean)" num="127" count="20250787" type="method"/>
            <line num="128" count="20249171" type="stmt"/>
            <line num="129" count="20251175" type="stmt"/>
            <line num="130" count="20251906" type="stmt"/>
            <line num="131" count="20252309" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(Point) : int" num="134" count="106300" type="method"/>
            <line num="137" count="106300" type="stmt"/>
            <line falsecount="0" truecount="106300" num="137" type="cond"/>
            <line num="138" count="106300" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : double" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : double" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isParameter() : boolean" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="159" count="724" type="method"/>
            <line num="161" count="724" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="164" count="852842" type="method"/>
            <line num="166" count="853326" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="182" count="6457219" type="method"/>
            <line num="183" count="6457640" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String,LocalDate)" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(CurveInterpolation)" num="202" count="1162" type="method"/>
            <line num="203" count="1162" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="209" count="6456466" type="method"/>
            <line num="211" count="6456688" type="stmt"/>
            <line num="212" count="6456917" type="stmt"/>
            <line num="213" count="6456970" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationMethod(InterpolationMethod) : CurveBuilder" num="222" count="2" type="method"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExtrapolationMethod(ExtrapolationMethod) : CurveBuilder" num="233" count="2" type="method"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolationEntity(InterpolationEntity) : CurveBuilder" num="244" count="2" type="method"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="252" count="6456681" type="method"/>
            <line num="254" count="6457057" type="stmt"/>
            <line num="255" count="6458244" type="stmt"/>
            <line complexity="4" visibility="public" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,double[],double[])" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="309" count="124386" type="method"/>
            <line num="310" count="124384" type="stmt"/>
            <line num="311" count="124400" type="stmt"/>
            <line num="312" count="124399" type="stmt"/>
            <line num="313" count="124391" type="stmt"/>
            <line complexity="1" visibility="private" signature="CurveInterpolation(String,LocalDate)" num="322" count="6457294" type="method"/>
            <line num="323" count="6456807" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="326" count="96372093" type="method"/>
            <line num="329" count="96403889" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double) : double" num="332" count="2147483647" type="method"/>
            <line num="335" count="2147483647" type="stmt"/>
            <line falsecount="6490856" truecount="2147483647" num="335" type="cond"/>
            <line num="336" count="2147483647" type="stmt"/>
            <line falsecount="2147483647" truecount="6490877" num="336" type="cond"/>
            <line num="337" count="6491031" type="stmt"/>
            <line num="338" count="6490977" type="stmt"/>
            <line num="340" count="2147483647" type="stmt"/>
            <line num="341" count="2147483647" type="stmt"/>
            <line falsecount="102207048" truecount="2147483647" num="341" type="cond"/>
            <line num="342" count="2147483647" type="stmt"/>
            <line num="345" count="102209783" type="stmt"/>
            <line num="346" count="101965331" type="stmt"/>
            <line num="347" count="102347720" type="stmt"/>
            <line complexity="3" visibility="private" signature="getInterpolationEntityValue(double) : double" num="350" count="102209618" type="method"/>
            <line num="352" count="102221515" type="stmt"/>
            <line num="354" count="102333086" type="stmt"/>
            <line falsecount="95851674" truecount="6490812" num="354" type="cond"/>
            <line num="355" count="6490859" type="stmt"/>
            <line num="356" count="6490805" type="stmt"/>
            <line num="357" count="6490832" type="stmt"/>
            <line falsecount="6491085" truecount="7319509" num="357" type="cond"/>
            <line num="358" count="7319556" type="stmt"/>
            <line num="359" count="7319666" type="stmt"/>
            <line num="361" count="6491075" type="stmt"/>
            <line num="369" count="102348899" type="stmt"/>
            <line complexity="10" visibility="protected" signature="addPoint(double,double,boolean) : void" num="380" count="6467719" type="method"/>
            <line num="381" count="6468005" type="stmt"/>
            <line num="382" count="6470902" type="stmt"/>
            <line falsecount="6470822" truecount="20" num="382" type="cond"/>
            <line num="383" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="383" type="cond"/>
            <line num="384" count="20" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="390" count="6470828" type="stmt"/>
            <line num="392" count="6468780" type="stmt"/>
            <line num="393" count="6466326" type="stmt"/>
            <line falsecount="6466600" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="404" count="6466815" type="stmt"/>
            <line num="405" count="6464825" type="stmt"/>
            <line num="407" count="6465759" type="stmt"/>
            <line falsecount="474" truecount="6465873" num="407" type="cond"/>
            <line num="409" count="6466252" type="stmt"/>
            <line num="410" count="6464170" type="stmt"/>
            <line falsecount="6465238" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="6465563" type="stmt"/>
            <line num="416" count="6467250" type="stmt"/>
            <line num="417" count="6467513" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExtrapolationMethod() : ExtrapolationMethod" num="435" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntity() : InterpolationEntity" num="444" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPoints() : List&lt;Point&gt;" num="453" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimes() : double[]" num="464" count="1046" type="method"/>
            <line num="465" count="1046" type="stmt"/>
            <line num="466" count="1050" type="stmt"/>
            <line falsecount="1047" truecount="6282" num="466" type="cond"/>
            <line num="467" count="6264" type="stmt"/>
            <line num="469" count="1048" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeIndex(double) : int" num="472" count="6469243" type="method"/>
            <line num="473" count="6469743" type="stmt"/>
            <line num="474" count="6468236" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getParameterIndex(double) : int" num="477" count="6466546" type="method"/>
            <line num="478" count="6466810" type="stmt"/>
            <line num="479" count="6465866" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="482" count="67706" type="method"/>
            <line num="484" count="67707" type="stmt"/>
            <line num="485" count="67702" type="stmt"/>
            <line falsecount="67400" truecount="1769796" num="485" type="cond"/>
            <line num="486" count="1770207" type="stmt"/>
            <line num="488" count="67376" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setParameterPrivate(double[]) : void" num="496" count="31330" type="method"/>
            <line num="497" count="31329" type="stmt"/>
            <line falsecount="31258" truecount="825954" num="497" type="cond"/>
            <line num="498" count="826073" type="stmt"/>
            <line num="500" count="31258" type="stmt"/>
            <line num="501" count="31261" type="stmt"/>
            <line complexity="5" visibility="private" signature="interpolationEntityFromValue(double,double) : double" num="504" count="7296533" type="method"/>
            <line num="505" count="7296634" type="stmt"/>
            <line num="506" count="470072" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="469944" type="stmt"/>
            <line num="509" count="6829346" type="stmt"/>
            <line num="510" count="6829410" type="stmt"/>
            <line num="511" count="454" type="stmt"/>
            <line num="512" count="454" type="stmt"/>
            <line falsecount="454" truecount="0" num="512" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="454" type="stmt"/>
            <line complexity="4" visibility="private" signature="valueFromInterpolationEntity(double,double) : double" num="520" count="103872012" type="method"/>
            <line num="521" count="103938293" type="stmt"/>
            <line num="522" count="3991488" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="3985835" type="stmt"/>
            <line num="525" count="100005230" type="stmt"/>
            <line num="526" count="100014952" type="stmt"/>
            <line num="527" count="12136" type="stmt"/>
            <line num="528" count="12135" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : CurveInterpolation" num="532" count="32463" type="method"/>
            <line num="534" count="32470" type="stmt"/>
            <line num="536" count="32470" type="stmt"/>
            <line num="537" count="32475" type="stmt"/>
            <line num="538" count="32484" type="stmt"/>
            <line num="539" count="32482" type="stmt"/>
            <line num="540" count="32486" type="stmt"/>
            <line num="541" count="852497" type="stmt"/>
            <line num="542" count="848115" type="stmt"/>
            <line num="543" count="850626" type="stmt"/>
            <line falsecount="11662" truecount="839629" num="543" type="cond"/>
            <line num="544" count="839910" type="stmt"/>
            <line num="548" count="32502" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="551" count="33749" type="method"/>
            <line num="553" count="33748" type="stmt"/>
            <line falsecount="31272" truecount="2407" num="553" type="cond"/>
            <line num="554" count="2410" type="stmt"/>
            <line num="556" count="31289" type="stmt"/>
            <line num="557" count="31329" type="stmt"/>
            <line num="559" count="31260" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="562" count="1162" type="method"/>
            <line num="564" count="1162" type="stmt"/>
            <line num="565" count="1162" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="568" count="48" type="method"/>
            <line num="573" count="48" type="stmt"/>
            <line num="574" count="48" type="stmt"/>
            <line num="575" count="48" type="stmt"/>
            <line num="576" count="372" type="stmt"/>
            <line num="577" count="372" type="stmt"/>
            <line num="578" count="372" type="stmt"/>
            <line num="581" count="48" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="587" count="58" type="method"/>
            <line num="588" count="58" type="stmt"/>
            <line num="590" count="58" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurve.java" name="DiscountCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveFromForwardCurve.java" name="DiscountCurveFromForwardCurve.java">
            <metrics coveredelements="37" coveredconditionals="7" complexity="28" loc="214" coveredmethods="6" methods="12" elements="100" classes="1" ncloc="111" statements="56" conditionals="32" coveredstatements="24"/>
            <class name="DiscountCurveFromForwardCurve">
               <metrics coveredelements="37" coveredconditionals="7" complexity="28" coveredmethods="6" methods="12" elements="100" statements="56" conditionals="32" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String,double)" num="53" count="17071" type="method"/>
            <line num="54" count="17070" type="stmt"/>
            <line num="56" count="17071" type="stmt"/>
            <line num="57" count="17071" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurve,double)" num="71" count="10678175" type="method"/>
            <line num="72" count="10675785" type="stmt"/>
            <line num="74" count="10679177" type="stmt"/>
            <line num="75" count="10680216" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(String)" num="88" count="17070" type="method"/>
            <line num="89" count="17066" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromForwardCurve(ForwardCurve)" num="102" count="10673405" type="method"/>
            <line num="103" count="10672144" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="106" count="1288" type="method"/>
            <line num="108" count="1288" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="114" count="43678568" type="method"/>
            <line num="116" count="43708555" type="stmt"/>
            <line num="117" count="43720897" type="stmt"/>
            <line falsecount="411289" truecount="43330555" num="117" type="cond"/>
            <line num="118" count="43339143" type="stmt"/>
            <line num="120" count="411734" type="stmt"/>
            <line falsecount="411980" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="412155" type="stmt"/>
            <line num="126" count="43758668" type="stmt"/>
            <line falsecount="43766759" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="43776358" type="stmt"/>
            <line num="131" count="43784182" type="stmt"/>
            <line num="132" count="43791721" type="stmt"/>
            <line num="133" count="43793655" type="stmt"/>
            <line falsecount="43755771" truecount="1300385149" num="133" type="cond"/>
            <line num="134" count="1314271397" type="stmt"/>
            <line num="135" count="1203609118" type="stmt"/>
            <line falsecount="1238627587" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="1250978638" type="stmt"/>
            <line num="139" count="1252161300" type="stmt"/>
            <line num="142" count="43774029" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="158" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveFromProductOfCurves.java" name="DiscountCurveFromProductOfCurves.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="104" coveredmethods="0" methods="8" elements="31" classes="1" ncloc="56" statements="19" conditionals="4" coveredstatements="0"/>
            <class name="DiscountCurveFromProductOfCurves">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="31" statements="19" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveFromProductOfCurves(String,LocalDate,String)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscountCurveFromProductOfCurves(String,LocalDate,DiscountCurve)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="95" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveInterpolation.java" name="DiscountCurveInterpolation.java">
            <metrics coveredelements="71" coveredconditionals="16" complexity="34" loc="454" coveredmethods="14" methods="21" elements="110" classes="1" ncloc="168" statements="63" conditionals="26" coveredstatements="41"/>
            <class name="DiscountCurveInterpolation">
               <metrics coveredelements="71" coveredconditionals="16" complexity="34" coveredmethods="14" methods="21" elements="110" statements="63" conditionals="26" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String)" num="42" count="80" type="method"/>
            <line num="43" count="80" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiscountCurveInterpolation(String,LocalDate,InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="70" count="102" type="method"/>
            <line num="73" count="102" type="stmt"/>
            <line complexity="4" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="89" count="102" type="method"/>
            <line num="94" count="102" type="stmt"/>
            <line falsecount="102" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="102" type="stmt"/>
            <line falsecount="102" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="102" type="stmt"/>
            <line num="104" count="102" type="stmt"/>
            <line falsecount="102" truecount="466" num="104" type="cond"/>
            <line num="105" count="466" type="stmt"/>
            <line num="108" count="102" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="123" count="22" type="method"/>
            <line num="129" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="143" count="22" type="method"/>
            <line num="148" count="22" type="stmt"/>
            <line num="149" count="22" type="stmt"/>
            <line falsecount="22" truecount="116" num="149" type="cond"/>
            <line num="150" count="116" type="stmt"/>
            <line num="153" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromDiscountFactors(String,double[],double[]) : DiscountCurveInterpolation" num="164" count="78" type="method"/>
            <line num="165" count="78" type="stmt"/>
            <line num="167" count="78" type="stmt"/>
            <line falsecount="78" truecount="370" num="167" type="cond"/>
            <line num="168" count="370" type="stmt"/>
            <line num="171" count="78" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="191" count="18" type="method"/>
            <line num="196" count="18" type="stmt"/>
            <line num="198" count="18" type="stmt"/>
            <line falsecount="18" truecount="36" num="198" type="cond"/>
            <line num="199" count="36" type="stmt"/>
            <line num="202" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,Date,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="222" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="247" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,LocalDate,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="272" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromZeroRates(String,double[],double[]) : DiscountCurveInterpolation" num="300" count="58" type="method"/>
            <line num="301" count="58" type="stmt"/>
            <line num="303" count="58" type="stmt"/>
            <line falsecount="58" truecount="290" num="303" type="cond"/>
            <line num="304" count="290" type="stmt"/>
            <line num="307" count="58" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],double[],boolean[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="327" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountCurveFromAnnualizedZeroRates(String,LocalDate,double[],double[],InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : DiscountCurveInterpolation" num="357" count="36" type="method"/>
            <line num="362" count="36" type="stmt"/>
            <line num="363" count="36" type="stmt"/>
            <line num="365" count="36" type="stmt"/>
            <line falsecount="36" truecount="36" num="365" type="cond"/>
            <line num="366" count="36" type="stmt"/>
            <line num="367" count="36" type="stmt"/>
            <line num="370" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="createDiscountFactorsFromForwardRates(String,TimeDiscretization,double[]) : DiscountCurve" num="382" count="2" type="method"/>
            <line num="383" count="2" type="stmt"/>
            <line num="385" count="2" type="stmt"/>
            <line num="386" count="2" type="stmt"/>
            <line falsecount="2" truecount="32" num="386" type="cond"/>
            <line num="387" count="32" type="stmt"/>
            <line num="388" count="32" type="stmt"/>
            <line num="391" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="397" count="23686" type="method"/>
            <line num="400" count="23685" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="406" count="2147483647" type="method"/>
            <line num="409" count="2147483647" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="420" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="422" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : double[]" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addDiscountFactor(double,double,boolean) : void" num="446" count="868" type="method"/>
            <line num="447" count="868" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="450" count="32" type="method"/>
            <line num="452" count="32" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveNelsonSiegelSvensson.java" name="DiscountCurveNelsonSiegelSvensson.java">
            <metrics coveredelements="38" coveredconditionals="10" complexity="23" loc="178" coveredmethods="7" methods="15" elements="65" classes="1" ncloc="95" statements="34" conditionals="16" coveredstatements="21"/>
            <class name="DiscountCurveNelsonSiegelSvensson">
               <metrics coveredelements="38" coveredconditionals="10" complexity="23" coveredmethods="7" methods="15" elements="65" statements="34" conditionals="16" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveNelsonSiegelSvensson(String,LocalDate,double[],double)" num="50" count="846" type="method"/>
            <line num="51" count="846" type="stmt"/>
            <line num="52" count="846" type="stmt"/>
            <line num="54" count="846" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="57" count="1910771" type="method"/>
            <line num="60" count="1911022" type="stmt"/>
            <line complexity="7" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="69" count="1893982459" type="method"/>
            <line num="73" count="1931216783" type="stmt"/>
            <line num="75" count="1951229102" type="stmt"/>
            <line num="76" count="1959702196" type="stmt"/>
            <line num="77" count="1965394724" type="stmt"/>
            <line num="78" count="1972154925" type="stmt"/>
            <line num="79" count="1980233423" type="stmt"/>
            <line num="80" count="1993087139" type="stmt"/>
            <line num="82" count="2002014432" type="stmt"/>
            <line falsecount="0" truecount="2016236482" num="82" type="cond"/>
            <line num="83" count="2024417564" type="stmt"/>
            <line falsecount="35656" truecount="2039334924" num="83" type="cond"/>
            <line num="85" count="2054673297" type="stmt"/>
            <line falsecount="0" truecount="2069976405" num="85" type="cond"/>
            <line falsecount="76019619" truecount="2014478144" num="85" type="cond"/>
            <line num="86" count="2084652560" type="stmt"/>
            <line falsecount="35471" truecount="2089964750" num="86" type="cond"/>
            <line falsecount="76063117" truecount="2026238934" num="86" type="cond"/>
            <line num="88" count="2099475804" type="stmt"/>
            <line num="90" count="2102111257" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRates(double[]) : double[]" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="146" count="726" type="method"/>
            <line num="148" count="726" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeScaling() : double" num="158" count="620651922" type="method"/>
            <line num="159" count="622134379" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DiscountCurveNelsonSiegelSvensson" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : DiscountCurveNelsonSiegelSvensson" num="167" count="706" type="method"/>
            <line num="169" count="706" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="4" type="method"/>
            <line num="174" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/DiscountCurveRenormalized.java" name="DiscountCurveRenormalized.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="103" coveredmethods="0" methods="13" elements="32" classes="1" ncloc="71" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="DiscountCurveRenormalized">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="32" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DiscountCurveRenormalized(String,LocalDate,LocalDate,String)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DiscountCurveRenormalized" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurve.java" name="ForwardCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveFromDiscountCurve.java" name="ForwardCurveFromDiscountCurve.java">
            <metrics coveredelements="28" coveredconditionals="4" complexity="17" loc="215" coveredmethods="7" methods="12" elements="49" classes="1" ncloc="88" statements="29" conditionals="8" coveredstatements="17"/>
            <class name="ForwardCurveFromDiscountCurve">
               <metrics coveredelements="28" coveredconditionals="4" complexity="17" coveredmethods="7" methods="12" elements="49" statements="29" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double)" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="84" count="123792" type="method"/>
            <line num="85" count="123790" type="stmt"/>
            <line num="87" count="123795" type="stmt"/>
            <line num="88" count="123795" type="stmt"/>
            <line num="89" count="123795" type="stmt"/>
            <line num="90" count="123801" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,double,double)" num="106" count="123769" type="method"/>
            <line num="107" count="123763" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention)" num="121" count="123756" type="method"/>
            <line num="122" count="123753" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,String,LocalDate,String)" num="134" count="123751" type="method"/>
            <line num="135" count="123747" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveFromDiscountCurve(String,LocalDate,String)" num="152" count="41375" type="method"/>
            <line num="153" count="41373" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : double" num="156" count="1225896484" type="method"/>
            <line num="159" count="1258364569" type="stmt"/>
            <line num="160" count="1124258091" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="166" count="1186449949" type="method"/>
            <line num="169" count="1208803737" type="stmt"/>
            <line falsecount="1225836513" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="1237573044" type="stmt"/>
            <line num="173" count="1150289513" type="stmt"/>
            <line falsecount="1175313156" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="1197690336" type="stmt"/>
            <line falsecount="1211942611" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="1220974464" type="stmt"/>
            <line falsecount="1226178747" truecount="0" num="180" type="cond"/>
            <line num="186" count="1232033144" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveInterpolation.java" name="ForwardCurveInterpolation.java">
            <metrics coveredelements="71" coveredconditionals="12" complexity="36" loc="409" coveredmethods="12" methods="17" elements="130" classes="2" ncloc="183" statements="91" conditionals="22" coveredstatements="47"/>
            <class name="ForwardCurveInterpolation">
               <metrics coveredelements="71" coveredconditionals="12" complexity="36" coveredmethods="12" methods="17" elements="130" statements="91" conditionals="22" coveredstatements="47"/>
            </class>
            <class name="ForwardCurveInterpolation.InterpolationEntityForward">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String)" num="64" count="76" type="method"/>
            <line num="68" count="76" type="stmt"/>
            <line num="70" count="76" type="stmt"/>
            <line num="72" count="76" type="stmt"/>
            <line falsecount="76" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,InterpolationEntityForward,String)" num="86" count="18" type="method"/>
            <line num="87" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,LocalDate,String,String)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveInterpolation(String,double,InterpolationEntityForward,String)" num="110" count="332" type="method"/>
            <line num="112" count="332" type="stmt"/>
            <line num="113" count="332" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="134" count="30" type="method"/>
            <line num="139" count="30" type="stmt"/>
            <line num="142" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="142" type="cond"/>
            <line num="143" count="150" type="stmt"/>
            <line num="146" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,Date,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,InterpolationMethod,ExtrapolationMethod,InterpolationEntity,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="167" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,String,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,LocalDate,String,InterpolationEntityForward,String,AnalyticModel,double[],double[]) : ForwardCurveInterpolation" num="205" count="18" type="method"/>
            <line num="206" count="18" type="stmt"/>
            <line num="208" count="18" type="stmt"/>
            <line falsecount="18" truecount="90" num="208" type="cond"/>
            <line num="209" count="90" type="stmt"/>
            <line num="212" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],double) : ForwardCurveInterpolation" num="224" count="320" type="method"/>
            <line num="225" count="320" type="stmt"/>
            <line num="227" count="320" type="stmt"/>
            <line falsecount="320" truecount="9384" num="227" type="cond"/>
            <line num="228" count="9384" type="stmt"/>
            <line num="229" count="9384" type="stmt"/>
            <line num="230" count="9384" type="stmt"/>
            <line num="233" count="320" type="stmt"/>
            <line complexity="4" visibility="public" signature="createForwardCurveFromDiscountFactors(String,double[],double[],double) : ForwardCurveInterpolation" num="252" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createForwardCurveFromForwards(String,double[],double[],AnalyticModel,String,double) : ForwardCurveInterpolation" num="286" count="12" type="method"/>
            <line num="287" count="12" type="stmt"/>
            <line num="289" count="12" type="stmt"/>
            <line falsecount="12" truecount="60" num="289" type="cond"/>
            <line num="290" count="60" type="stmt"/>
            <line num="291" count="60" type="stmt"/>
            <line num="292" count="60" type="stmt"/>
            <line num="294" count="12" type="stmt"/>
            <line complexity="6" visibility="public" signature="getForward(AnalyticModel,double) : double" num="297" count="49510642" type="method"/>
            <line num="300" count="50093169" type="stmt"/>
            <line num="302" count="49014558" type="stmt"/>
            <line num="303" count="50494959" type="stmt"/>
            <line num="304" count="50877757" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="51295778" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="337" count="20404848" type="method"/>
            <line num="340" count="20411477" type="stmt"/>
            <line num="341" count="21085813" type="stmt"/>
            <line num="342" count="19106317" type="stmt"/>
            <line falsecount="16196605" truecount="5128937" num="342" type="cond"/>
            <line num="343" count="5138728" type="stmt"/>
            <line num="346" count="17918420" type="stmt"/>
            <line complexity="5" visibility="private" signature="addForward(AnalyticModel,double,double,boolean) : void" num="357" count="9684" type="method"/>
            <line num="358" count="9684" type="stmt"/>
            <line num="359" count="9684" type="stmt"/>
            <line num="360" count="9684" type="stmt"/>
            <line num="361" count="9684" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="9684" type="stmt"/>
            <line num="364" count="9684" type="stmt"/>
            <line num="365" count="9684" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="385" count="9684" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addPoint(double,double,boolean) : void" num="388" count="658" type="method"/>
            <line num="390" count="658" type="stmt"/>
            <line falsecount="658" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="658" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationEntityForward() : InterpolationEntityForward" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="405" count="16" type="method"/>
            <line num="407" count="16" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveNelsonSiegelSvensson.java" name="ForwardCurveNelsonSiegelSvensson.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="18" loc="173" coveredmethods="6" methods="16" elements="53" classes="1" ncloc="97" statements="33" conditionals="4" coveredstatements="20"/>
            <class name="ForwardCurveNelsonSiegelSvensson">
               <metrics coveredelements="28" coveredconditionals="2" complexity="18" coveredmethods="6" methods="16" elements="53" statements="33" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveNelsonSiegelSvensson(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double[],double,double)" num="53" count="66" type="method"/>
            <line num="54" count="66" type="stmt"/>
            <line num="55" count="66" type="stmt"/>
            <line num="56" count="66" type="stmt"/>
            <line num="57" count="66" type="stmt"/>
            <line num="58" count="66" type="stmt"/>
            <line num="59" count="66" type="stmt"/>
            <line num="61" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardCurveNelsonSiegelSvensson(String,LocalDate,String,BusinessdayCalendar,BusinessdayCalendar.DateRollConvention,DayCountConvention,double[],double)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForward(AnalyticModel,double) : double" num="78" count="1911286" type="method"/>
            <line num="80" count="1911331" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="83" count="613137677" type="method"/>
            <line num="85" count="616822452" type="stmt"/>
            <line num="86" count="607558763" type="stmt"/>
            <line falsecount="2720" truecount="608462054" num="86" type="cond"/>
            <line num="87" count="610548705" type="stmt"/>
            <line num="88" count="601285596" type="stmt"/>
            <line num="89" count="591206214" type="stmt"/>
            <line num="92" count="587897679" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(double,double,boolean) : CurveBuilder" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : ForwardCurveNelsonSiegelSvensson" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : ForwardCurveNelsonSiegelSvensson" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="125" count="180046139" type="method"/>
            <line num="127" count="180189106" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffset(double) : double" num="162" count="187693164" type="method"/>
            <line num="164" count="187726498" type="stmt"/>
            <line num="165" count="187110072" type="stmt"/>
            <line num="166" count="187477556" type="stmt"/>
            <line num="167" count="186572021" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDateFromModelTime(double) : LocalDate" num="170" count="1350603715" type="method"/>
            <line num="171" count="1357053540" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/ForwardCurveWithFixings.java" name="ForwardCurveWithFixings.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="89" coveredmethods="0" methods="8" elements="29" classes="1" ncloc="50" statements="15" conditionals="6" coveredstatements="0"/>
            <class name="ForwardCurveWithFixings">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="29" statements="15" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveWithFixings(ForwardCurve,ForwardCurve,double,double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getForward(AnalyticModel,double) : double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getForward(AnalyticModel,double,double) : double" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwards(AnalyticModel,double[]) : double[]" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentOffset(double) : double" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : ForwardCurveWithFixings" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/IndexCurveFromDiscountCurve.java" name="IndexCurveFromDiscountCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="55" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="IndexCurveFromDiscountCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IndexCurveFromDiscountCurve(String,double,DiscountCurve)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/PiecewiseCurve.java" name="PiecewiseCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="162" coveredmethods="0" methods="17" elements="48" classes="2" ncloc="96" statements="29" conditionals="2" coveredstatements="0"/>
            <class name="PiecewiseCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="15" elements="40" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="PiecewiseCurve.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(PiecewiseCurve)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PiecewiseCurve(Curve,Curve,double,double)" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCurve() : Curve" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartCurve() : Curve" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartStartTime() : double" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedPartEndTime() : double" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AnalyticModel,double) : double" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : PiecewiseCurve" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : Builder" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/curves/SeasonalCurve.java" name="SeasonalCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="212" coveredmethods="0" methods="12" elements="81" classes="2" ncloc="116" statements="59" conditionals="10" coveredstatements="0"/>
            <class name="SeasonalCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="10" elements="73" statements="53" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="SeasonalCurve.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(SeasonalCurve)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Curve" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SeasonalCurve(String,LocalDate,Map&lt;LocalDate, Double&gt;,int)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SeasonalCurve(String,LocalDate,Curve)" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(AnalyticModel,double) : double" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : SeasonalCurve" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : Builder" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeSeasonalAdjustments(LocalDate,Map&lt;LocalDate, Double&gt;,int) : double[]" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="computeSeasonalAdjustments(double[],int,int) : double[]" num="176" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.components">
         <metrics coveredelements="308" complexity="177" loc="2261" methods="94" classes="17" statements="552" coveredconditionals="41" coveredmethods="38" elements="772" ncloc="1171" files="17" conditionals="126" coveredstatements="229"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AbstractPeriod.java" name="AbstractPeriod.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="14" loc="170" coveredmethods="9" methods="14" elements="36" classes="1" ncloc="82" statements="22" conditionals="0" coveredstatements="17"/>
            <class name="AbstractPeriod">
               <metrics coveredelements="26" coveredconditionals="0" complexity="14" coveredmethods="9" methods="14" elements="36" statements="22" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractPeriod(LocalDateTime,double,double,double,double,Notional,AbstractProductComponent,double)" num="49" count="6882" type="method"/>
            <line num="52" count="6882" type="stmt"/>
            <line num="53" count="6882" type="stmt"/>
            <line num="54" count="6882" type="stmt"/>
            <line num="55" count="6882" type="stmt"/>
            <line num="56" count="6882" type="stmt"/>
            <line num="57" count="6882" type="stmt"/>
            <line num="58" count="6882" type="stmt"/>
            <line num="59" count="6882" type="stmt"/>
            <line num="60" count="6882" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractPeriod(double,double,double,double,Notional,AbstractProductComponent,double)" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractPeriod(double,double,double,double,Notional,AbstractProductComponent)" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="105" count="78842" type="method"/>
            <line num="106" count="78990" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="112" count="2760" type="method"/>
            <line num="113" count="2759" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="119" count="2880" type="method"/>
            <line num="120" count="2880" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDate() : double" num="126" count="32023" type="method"/>
            <line num="127" count="32025" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDate() : double" num="133" count="100950" type="method"/>
            <line num="134" count="101275" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : Notional" num="140" count="31716" type="method"/>
            <line num="141" count="31772" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : AbstractProductComponent" num="147" count="32019" type="method"/>
            <line num="148" count="32014" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction() : double" num="154" count="32019" type="method"/>
            <line num="155" count="32020" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AbstractProductComponent.java" name="AbstractProductComponent.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="79" coveredmethods="4" methods="5" elements="15" classes="1" ncloc="45" statements="10" conditionals="0" coveredstatements="6"/>
            <class name="AbstractProductComponent">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="15" statements="10" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="newThread(Runnable) : Thread" num="45" count="160" type="method"/>
            <line num="47" count="160" type="stmt"/>
            <line num="48" count="160" type="stmt"/>
            <line num="49" count="160" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractProductComponent(String)" num="53" count="12040" type="method"/>
            <line num="54" count="12040" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractProductComponent()" num="57" count="7834" type="method"/>
            <line num="58" count="7834" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExecutor() : ThreadPoolExecutor" num="76" count="73003" type="method"/>
            <line num="77" count="73003" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AccrualAccount.java" name="AccrualAccount.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="75" coveredmethods="0" methods="3" elements="20" classes="1" ncloc="36" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="AccrualAccount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="20" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccrualAccount(String,AnalyticModelIndex,AbstractIndex,double)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/AccruingNotional.java" name="AccruingNotional.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="33" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="AccruingNotional">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccruingNotional(Notional,AbstractPeriod)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Cashflow.java" name="Cashflow.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="99" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="Cashflow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="28" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cashflow(String,double,double,boolean)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Cashflow(double,double,boolean)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Choice.java" name="Choice.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="230" coveredmethods="0" methods="6" elements="99" classes="1" ncloc="142" statements="79" conditionals="14" coveredstatements="0"/>
            <class name="Choice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="6" elements="99" statements="79" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Choice(double,TermStructureMonteCarloProduct,TermStructureMonteCarloProduct)" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="85" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ExpectedTailLoss.java" name="ExpectedTailLoss.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="177" coveredmethods="0" methods="4" elements="71" classes="1" ncloc="92" statements="57" conditionals="10" coveredstatements="0"/>
            <class name="ExpectedTailLoss">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="71" statements="57" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpectedTailLoss(double,double,TermStructureMonteCarloProduct)" num="45" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="73" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ExposureEstimator.java" name="ExposureEstimator.java">
            <metrics coveredelements="78" coveredconditionals="12" complexity="14" loc="201" coveredmethods="3" methods="5" elements="88" classes="1" ncloc="103" statements="67" conditionals="16" coveredstatements="63"/>
            <class name="ExposureEstimator">
               <metrics coveredelements="78" coveredconditionals="12" complexity="14" coveredmethods="3" methods="5" elements="88" statements="67" conditionals="16" coveredstatements="63"/>
            </class>
            <line complexity="1" visibility="public" signature="ExposureEstimator(AbstractLIBORMonteCarloProduct)" num="49" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="78" count="482" type="method"/>
            <line num="81" count="482" type="stmt"/>
            <line num="82" count="482" type="stmt"/>
            <line num="84" count="482" type="stmt"/>
            <line num="86" count="482" type="stmt"/>
            <line falsecount="168" truecount="314" num="86" type="cond"/>
            <line num="87" count="314" type="stmt"/>
            <line num="88" count="314" type="stmt"/>
            <line num="93" count="314" type="stmt"/>
            <line num="94" count="314" type="stmt"/>
            <line num="95" count="314" type="stmt"/>
            <line num="96" count="314" type="stmt"/>
            <line num="97" count="314" type="stmt"/>
            <line num="99" count="314" type="stmt"/>
            <line num="101" count="314" type="stmt"/>
            <line num="103" count="314" type="stmt"/>
            <line num="104" count="314" type="stmt"/>
            <line num="105" count="314" type="stmt"/>
            <line falsecount="314" truecount="1570" num="105" type="cond"/>
            <line num="106" count="1570" type="stmt"/>
            <line num="110" count="314" type="stmt"/>
            <line num="113" count="314" type="stmt"/>
            <line num="117" count="482" type="stmt"/>
            <line complexity="7" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="128" count="314" type="method"/>
            <line num="130" count="314" type="stmt"/>
            <line num="132" count="314" type="stmt"/>
            <line num="135" count="314" type="stmt"/>
            <line num="136" count="314" type="stmt"/>
            <line num="139" count="314" type="stmt"/>
            <line num="140" count="314" type="stmt"/>
            <line num="143" count="314" type="stmt"/>
            <line num="144" count="314" type="stmt"/>
            <line num="145" count="314" type="stmt"/>
            <line falsecount="156" truecount="158" num="145" type="cond"/>
            <line num="146" count="158" type="stmt"/>
            <line num="148" count="314" type="stmt"/>
            <line num="149" count="314" type="stmt"/>
            <line num="151" count="314" type="stmt"/>
            <line num="152" count="314" type="stmt"/>
            <line num="153" count="314" type="stmt"/>
            <line num="155" count="314" type="stmt"/>
            <line num="156" count="314" type="stmt"/>
            <line num="159" count="314" type="stmt"/>
            <line num="160" count="314" type="stmt"/>
            <line num="161" count="314" type="stmt"/>
            <line falsecount="156" truecount="158" num="161" type="cond"/>
            <line num="162" count="158" type="stmt"/>
            <line num="164" count="314" type="stmt"/>
            <line num="166" count="314" type="stmt"/>
            <line num="168" count="314" type="stmt"/>
            <line falsecount="0" truecount="314" num="168" type="cond"/>
            <line num="169" count="314" type="stmt"/>
            <line num="170" count="314" type="stmt"/>
            <line num="171" count="314" type="stmt"/>
            <line num="173" count="314" type="stmt"/>
            <line num="176" count="314" type="stmt"/>
            <line num="182" count="314" type="stmt"/>
            <line num="183" count="314" type="stmt"/>
            <line num="184" count="314" type="stmt"/>
            <line falsecount="156" truecount="158" num="184" type="cond"/>
            <line num="185" count="158" type="stmt"/>
            <line num="187" count="314" type="stmt"/>
            <line num="188" count="314" type="stmt"/>
            <line num="190" count="314" type="stmt"/>
            <line falsecount="0" truecount="314" num="190" type="cond"/>
            <line num="191" count="314" type="stmt"/>
            <line num="192" count="314" type="stmt"/>
            <line num="193" count="314" type="stmt"/>
            <line num="195" count="314" type="stmt"/>
            <line num="199" count="314" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/IndexedValue.java" name="IndexedValue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="170" coveredmethods="0" methods="5" elements="79" classes="1" ncloc="96" statements="64" conditionals="10" coveredstatements="0"/>
            <class name="IndexedValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="5" elements="79" statements="64" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IndexedValue(double,AbstractProductComponent,AbstractProductComponent)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRegressionBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Notional.java" name="Notional.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Notional">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/NotionalFromComponent.java" name="NotionalFromComponent.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="61" coveredmethods="0" methods="4" elements="17" classes="1" ncloc="32" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="NotionalFromComponent">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="17" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NotionalFromComponent(AbstractProductComponent)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/NotionalFromConstant.java" name="NotionalFromConstant.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="6" loc="64" coveredmethods="4" methods="6" elements="14" classes="1" ncloc="33" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="NotionalFromConstant">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NotionalFromConstant(double,String)" num="29" count="1836" type="method"/>
            <line num="30" count="1836" type="stmt"/>
            <line num="31" count="1836" type="stmt"/>
            <line num="32" count="1836" type="stmt"/>
            <line complexity="1" visibility="public" signature="NotionalFromConstant(double)" num="40" count="1836" type="method"/>
            <line num="41" count="1836" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodEnd(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="49" count="1440" type="method"/>
            <line num="51" count="1440" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionalAtPeriodStart(AbstractPeriod,TermStructureMonteCarloSimulationModel) : RandomVariable" num="54" count="30216" type="method"/>
            <line num="56" count="30352" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Numeraire.java" name="Numeraire.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="50" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="Numeraire">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="Numeraire()" num="25" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Option.java" name="Option.java">
            <metrics coveredelements="104" coveredconditionals="16" complexity="30" loc="349" coveredmethods="7" methods="12" elements="154" classes="1" ncloc="186" statements="108" conditionals="34" coveredstatements="81"/>
            <class name="Option">
               <metrics coveredelements="104" coveredconditionals="16" complexity="30" coveredmethods="7" methods="12" elements="154" statements="108" conditionals="34" coveredstatements="81"/>
            </class>
            <line complexity="1" visibility="public" signature="Option(double,double,boolean,AbstractLIBORMonteCarloProduct,RegressionBasisFunctionsProvider)" num="72" count="62" type="method"/>
            <line num="73" count="62" type="stmt"/>
            <line num="74" count="62" type="stmt"/>
            <line num="75" count="62" type="stmt"/>
            <line num="76" count="62" type="stmt"/>
            <line num="77" count="62" type="stmt"/>
            <line num="78" count="62" type="stmt"/>
            <line num="79" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,boolean,TermStructureMonteCarloProduct,AbstractLIBORMonteCarloProduct,RegressionBasisFunctionsProvider)" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,boolean,TermStructureMonteCarloProduct,AbstractLIBORMonteCarloProduct)" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,double,boolean,AbstractLIBORMonteCarloProduct)" num="121" count="62" type="method"/>
            <line num="122" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,double,AbstractLIBORMonteCarloProduct)" num="132" count="62" type="method"/>
            <line num="133" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="Option(double,AbstractLIBORMonteCarloProduct)" num="142" count="60" type="method"/>
            <line num="143" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="182" count="64" type="method"/>
            <line num="185" count="64" type="stmt"/>
            <line num="186" count="64" type="stmt"/>
            <line num="189" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="64" type="stmt"/>
            <line num="194" count="64" type="stmt"/>
            <line num="195" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="64" type="stmt"/>
            <line num="201" count="64" type="stmt"/>
            <line falsecount="0" truecount="64" num="201" type="cond"/>
            <line num="203" count="64" type="stmt"/>
            <line falsecount="4" truecount="60" num="203" type="cond"/>
            <line num="204" count="60" type="stmt"/>
            <line num="205" count="60" type="stmt"/>
            <line num="210" count="60" type="stmt"/>
            <line num="211" count="60" type="stmt"/>
            <line num="212" count="60" type="stmt"/>
            <line num="213" count="60" type="stmt"/>
            <line num="214" count="60" type="stmt"/>
            <line num="216" count="60" type="stmt"/>
            <line num="218" count="60" type="stmt"/>
            <line num="220" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="220" type="cond"/>
            <line num="221" count="60" type="stmt"/>
            <line num="222" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="222" type="cond"/>
            <line num="223" count="300" type="stmt"/>
            <line num="227" count="60" type="stmt"/>
            <line num="230" count="60" type="stmt"/>
            <line num="234" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="64" type="stmt"/>
            <line num="241" count="64" type="stmt"/>
            <line falsecount="0" truecount="64" num="241" type="cond"/>
            <line num="242" count="64" type="stmt"/>
            <line num="243" count="64" type="stmt"/>
            <line num="244" count="64" type="stmt"/>
            <line num="248" count="64" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="251" count="60" type="method"/>
            <line num="253" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="253" type="cond"/>
            <line num="254" count="60" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="269" count="60" type="method"/>
            <line num="271" count="60" type="stmt"/>
            <line num="273" count="60" type="stmt"/>
            <line num="276" count="60" type="stmt"/>
            <line num="277" count="60" type="stmt"/>
            <line num="280" count="60" type="stmt"/>
            <line num="281" count="60" type="stmt"/>
            <line num="284" count="60" type="stmt"/>
            <line num="285" count="60" type="stmt"/>
            <line num="286" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="60" type="stmt"/>
            <line num="290" count="60" type="stmt"/>
            <line num="292" count="60" type="stmt"/>
            <line num="293" count="60" type="stmt"/>
            <line num="294" count="60" type="stmt"/>
            <line num="296" count="60" type="stmt"/>
            <line num="297" count="60" type="stmt"/>
            <line num="300" count="60" type="stmt"/>
            <line num="301" count="60" type="stmt"/>
            <line num="302" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="60" type="stmt"/>
            <line num="307" count="60" type="stmt"/>
            <line num="309" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="309" type="cond"/>
            <line num="310" count="60" type="stmt"/>
            <line num="311" count="60" type="stmt"/>
            <line num="312" count="60" type="stmt"/>
            <line num="314" count="60" type="stmt"/>
            <line num="317" count="60" type="stmt"/>
            <line num="323" count="60" type="stmt"/>
            <line num="324" count="60" type="stmt"/>
            <line num="325" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="325" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="60" type="stmt"/>
            <line num="329" count="60" type="stmt"/>
            <line num="331" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="331" type="cond"/>
            <line num="332" count="60" type="stmt"/>
            <line num="333" count="60" type="stmt"/>
            <line num="334" count="60" type="stmt"/>
            <line num="336" count="60" type="stmt"/>
            <line num="340" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Period.java" name="Period.java">
            <metrics coveredelements="58" coveredconditionals="13" complexity="19" loc="214" coveredmethods="6" methods="7" elements="66" classes="1" ncloc="97" statements="43" conditionals="16" coveredstatements="39"/>
            <class name="Period">
               <metrics coveredelements="58" coveredconditionals="13" complexity="19" coveredmethods="6" methods="7" elements="66" statements="43" conditionals="16" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="Period(LocalDateTime,double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean,boolean)" num="47" count="6882" type="method"/>
            <line num="50" count="6882" type="stmt"/>
            <line num="51" count="6882" type="stmt"/>
            <line num="52" count="6882" type="stmt"/>
            <line num="53" count="6882" type="stmt"/>
            <line num="54" count="6882" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean,boolean)" num="72" count="2160" type="method"/>
            <line num="75" count="2160" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,double,boolean,boolean,boolean)" num="94" count="1560" type="method"/>
            <line num="97" count="1560" type="stmt"/>
            <line complexity="1" visibility="public" signature="Period(double,double,double,double,Notional,AbstractProductComponent,boolean,boolean,boolean)" num="115" count="600" type="method"/>
            <line num="118" count="600" type="stmt"/>
            <line complexity="13" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="131" count="70902" type="method"/>
            <line num="134" count="70930" type="stmt"/>
            <line num="135" count="70875" type="stmt"/>
            <line num="136" count="70841" type="stmt"/>
            <line falsecount="61456" truecount="7884" num="136" type="cond"/>
            <line num="137" count="7933" type="stmt"/>
            <line num="144" count="69562" type="stmt"/>
            <line falsecount="29957" truecount="39382" num="144" type="cond"/>
            <line num="145" count="39542" type="stmt"/>
            <line num="149" count="30066" type="stmt"/>
            <line num="150" count="29685" type="stmt"/>
            <line num="151" count="31250" type="stmt"/>
            <line num="155" count="32011" type="stmt"/>
            <line num="158" count="32013" type="stmt"/>
            <line falsecount="0" truecount="32015" num="158" type="cond"/>
            <line num="159" count="32021" type="stmt"/>
            <line num="160" count="32014" type="stmt"/>
            <line num="161" count="32014" type="stmt"/>
            <line num="162" count="32022" type="stmt"/>
            <line falsecount="32023" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="32027" type="stmt"/>
            <line falsecount="30587" truecount="1440" num="172" type="cond"/>
            <line num="173" count="1440" type="stmt"/>
            <line num="175" count="1440" type="stmt"/>
            <line falsecount="120" truecount="1320" num="175" type="cond"/>
            <line num="176" count="1320" type="stmt"/>
            <line num="177" count="1319" type="stmt"/>
            <line num="180" count="1440" type="stmt"/>
            <line falsecount="0" truecount="1440" num="180" type="cond"/>
            <line num="181" count="1440" type="stmt"/>
            <line num="182" count="1440" type="stmt"/>
            <line num="186" count="32027" type="stmt"/>
            <line falsecount="31427" truecount="599" num="186" type="cond"/>
            <line num="187" count="599" type="stmt"/>
            <line num="190" count="32028" type="stmt"/>
            <line num="193" count="32023" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCoupon(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="196" count="32022" type="method"/>
            <line num="199" count="32022" type="stmt"/>
            <line num="202" count="32019" type="stmt"/>
            <line num="203" count="32015" type="stmt"/>
            <line num="205" count="32016" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/ProductCollection.java" name="ProductCollection.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="16" loc="149" coveredmethods="3" methods="8" elements="51" classes="1" ncloc="92" statements="33" conditionals="10" coveredstatements="15"/>
            <class name="ProductCollection">
               <metrics coveredelements="18" coveredconditionals="0" complexity="16" coveredmethods="3" methods="8" elements="51" statements="33" conditionals="10" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductCollection(AbstractProductComponent)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProductCollection(Collection&lt;AbstractProductComponent&gt;)" num="50" count="886" type="method"/>
            <line num="51" count="886" type="stmt"/>
            <line num="52" count="886" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : Collection&lt;AbstractProductComponent&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="97" count="3269" type="method"/>
            <line num="101" count="3269" type="stmt"/>
            <line num="102" count="3271" type="stmt"/>
            <line num="103" count="72997" type="stmt"/>
            <line num="104" count="72995" type="stmt"/>
            <line num="105" count="72997" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : RandomVariable" num="107" count="66568" type="method"/>
            <line num="109" count="66602" type="stmt"/>
            <line num="115" count="4529" type="stmt"/>
            <line num="118" count="73004" type="stmt"/>
            <line num="122" count="3272" type="stmt"/>
            <line num="123" count="3272" type="stmt"/>
            <line num="124" count="3272" type="stmt"/>
            <line num="125" count="73004" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="142" count="3272" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/components/Selector.java" name="Selector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="64" coveredmethods="0" methods="3" elements="12" classes="1" ncloc="28" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="Selector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Selector(String,TermStructureMonteCarloProduct)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.templatemethoddesign.assetderivativevaluation">
         <metrics coveredelements="0" complexity="18" loc="197" methods="18" classes="1" statements="32" coveredconditionals="0" coveredmethods="0" elements="50" ncloc="115" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/templatemethoddesign/assetderivativevaluation/MonteCarloBlackScholesModel2.java" name="MonteCarloBlackScholesModel2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="197" coveredmethods="0" methods="18" elements="50" classes="1" ncloc="115" statements="32" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloBlackScholesModel2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="50" statements="32" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel2(TimeDiscretization,int,double,double,double)" num="40" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel2(TimeDiscretization,int,double,double,double,int)" num="71" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable[]" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int,RandomVariable[]) : RandomVariable" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products">
         <metrics coveredelements="51" complexity="17" loc="314" methods="15" classes="4" statements="42" coveredconditionals="0" coveredmethods="14" elements="57" ncloc="138" files="4" conditionals="0" coveredstatements="37"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/AbstractFourierTransformProduct.java" name="AbstractFourierTransformProduct.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="6" loc="99" coveredmethods="3" methods="4" elements="21" classes="1" ncloc="53" statements="17" conditionals="0" coveredstatements="12"/>
            <class name="AbstractFourierTransformProduct">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="3" methods="4" elements="21" statements="17" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="2" visibility="public" signature="getValue(double,Model) : Double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="46" count="12" type="method"/>
            <line num="48" count="12" type="stmt"/>
            <line num="50" count="12" type="stmt"/>
            <line num="51" count="12" type="stmt"/>
            <line num="52" count="12" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(CharacteristicFunctionModel) : double" num="63" count="146" type="method"/>
            <line num="66" count="146" type="stmt"/>
            <line num="68" count="146" type="stmt"/>
            <line num="69" count="146" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="70" count="2436419" type="method"/>
            <line num="72" count="2497738" type="stmt"/>
            <line num="73" count="2505576" type="stmt"/>
            <line num="77" count="146" type="stmt"/>
            <line num="79" count="146" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/DigitalOption.java" name="DigitalOption.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="5" loc="80" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="33" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="DigitalOption">
               <metrics coveredelements="17" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="17" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double)" num="36" count="10" type="method"/>
            <line num="37" count="10" type="stmt"/>
            <line num="38" count="10" type="stmt"/>
            <line num="39" count="10" type="stmt"/>
            <line num="40" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="46" count="168515" type="method"/>
            <line num="48" count="168073" type="stmt"/>
            <line num="49" count="166126" type="stmt"/>
            <line num="50" count="163962" type="stmt"/>
            <line num="51" count="172106" type="stmt"/>
            <line num="53" count="173164" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="59" count="10" type="method"/>
            <line num="61" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="67" count="10" type="method"/>
            <line num="69" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="75" count="10" type="method"/>
            <line num="77" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/EuropeanOption.java" name="EuropeanOption.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="73" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="36" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="EuropeanOption">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="19" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOption(String,double,double)" num="32" count="136" type="method"/>
            <line num="33" count="136" type="stmt"/>
            <line num="34" count="136" type="stmt"/>
            <line num="35" count="136" type="stmt"/>
            <line num="36" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double)" num="44" count="128" type="method"/>
            <line num="45" count="128" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="48" count="2365211" type="method"/>
            <line num="50" count="2421101" type="stmt"/>
            <line num="51" count="2418419" type="stmt"/>
            <line num="52" count="2421641" type="stmt"/>
            <line num="53" count="2469277" type="stmt"/>
            <line num="55" count="2516141" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="58" count="136" type="method"/>
            <line num="60" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagLowerBound() : double" num="63" count="136" type="method"/>
            <line num="65" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegrationDomainImagUpperBound() : double" num="68" count="136" type="method"/>
            <line num="70" count="136" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/products/FourierTransformProduct.java" name="FourierTransformProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FourierTransformProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata.model">
         <metrics coveredelements="89" complexity="59" loc="458" methods="27" classes="2" statements="106" coveredconditionals="12" coveredmethods="19" elements="161" ncloc="248" files="2" conditionals="28" coveredstatements="58"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/AnalyticModel.java" name="AnalyticModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="117" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="24" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/AnalyticModelFromCurvesAndVols.java" name="AnalyticModelFromCurvesAndVols.java">
            <metrics coveredelements="89" coveredconditionals="12" complexity="59" loc="341" coveredmethods="19" methods="27" elements="161" classes="1" ncloc="224" statements="106" conditionals="28" coveredstatements="58"/>
            <class name="AnalyticModelFromCurvesAndVols">
               <metrics coveredelements="89" coveredconditionals="12" complexity="59" coveredmethods="19" methods="27" elements="161" statements="106" conditionals="28" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols()" num="45" count="192" type="method"/>
            <line num="46" count="192" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate)" num="54" count="12973052" type="method"/>
            <line num="55" count="12973947" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Curve[])" num="63" count="27724" type="method"/>
            <line num="64" count="27724" type="stmt"/>
            <line num="65" count="55453" type="stmt"/>
            <line num="67" count="27727" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Collection&lt;Curve&gt;)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Curve[])" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Collection&lt;Curve&gt;)" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="123" count="43591" type="method"/>
            <line num="124" count="43593" type="stmt"/>
            <line num="125" count="43591" type="stmt"/>
            <line num="126" count="43599" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="129" count="1439591904" type="method"/>
            <line num="132" count="1457280498" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurves() : Map&lt;String, Curve&gt;" num="135" count="43590" type="method"/>
            <line num="138" count="43589" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurve(String,Curve) : AnalyticModel" num="141" count="72" type="method"/>
            <line num="143" count="72" type="stmt"/>
            <line num="145" count="72" type="stmt"/>
            <line falsecount="72" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="72" type="stmt"/>
            <line num="150" count="72" type="stmt"/>
            <line num="152" count="72" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurve(Curve) : AnalyticModel" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurves(Curve) : AnalyticModel" num="168" count="1486" type="method"/>
            <line num="170" count="1486" type="stmt"/>
            <line num="172" count="1486" type="stmt"/>
            <line num="173" count="1522" type="stmt"/>
            <line num="175" count="1522" type="stmt"/>
            <line num="176" count="1522" type="stmt"/>
            <line falsecount="1522" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="181" count="1486" type="stmt"/>
            <line num="182" count="1486" type="stmt"/>
            <line num="184" count="1486" type="stmt"/>
            <line complexity="4" visibility="public" signature="addCurves(Set&lt;Curve&gt;) : AnalyticModel" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve(String) : DiscountCurve" num="206" count="1342654783" type="method"/>
            <line num="208" count="1373427704" type="stmt"/>
            <line num="209" count="1385283546" type="stmt"/>
            <line num="210" count="1316684164" type="stmt"/>
            <line falsecount="5586" truecount="1342290470" num="210" type="cond"/>
            <line num="211" count="1356971628" type="stmt"/>
            <line num="214" count="1364359005" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardCurve(String) : ForwardCurve" num="217" count="56545233" type="method"/>
            <line num="219" count="56575942" type="stmt"/>
            <line num="220" count="56595591" type="stmt"/>
            <line num="221" count="56441622" type="stmt"/>
            <line falsecount="21427804" truecount="35389578" num="221" type="cond"/>
            <line num="222" count="35397403" type="stmt"/>
            <line num="225" count="56527936" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurface(String) : VolatilitySurface" num="228" count="117710661" type="method"/>
            <line num="230" count="117756319" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaces() : Map&lt;String, VolatilitySurface&gt;" num="233" count="43588" type="method"/>
            <line num="235" count="43588" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurface(VolatilitySurface) : AnalyticModel" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurfaces(VolatilitySurface) : AnalyticModel" num="252" count="6457331" type="method"/>
            <line num="255" count="6457779" type="stmt"/>
            <line num="256" count="6457036" type="stmt"/>
            <line num="257" count="6457693" type="stmt"/>
            <line num="259" count="6455674" type="stmt"/>
            <line num="260" count="6454343" type="stmt"/>
            <line falsecount="6454578" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="6454787" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilitySurfaces(Set&lt;VolatilitySurface&gt;) : AnalyticModel" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setCurve(Curve) : void" num="281" count="34360" type="method"/>
            <line num="283" count="34362" type="stmt"/>
            <line complexity="1" visibility="private" signature="setVolatilitySurface(VolatilitySurface) : void" num="286" count="5287" type="method"/>
            <line num="288" count="5281" type="stmt"/>
            <line complexity="3" visibility="private" signature="set(Object) : void" num="291" count="39613" type="method"/>
            <line num="292" count="39617" type="stmt"/>
            <line falsecount="5284" truecount="34340" num="292" type="cond"/>
            <line num="293" count="34346" type="stmt"/>
            <line num="294" count="5280" type="stmt"/>
            <line falsecount="0" truecount="5277" num="294" type="cond"/>
            <line num="295" count="5282" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelFromCurvesAndVols" num="301" count="12928576" type="method"/>
            <line num="304" count="12929453" type="stmt"/>
            <line num="305" count="12923146" type="stmt"/>
            <line num="306" count="12935824" type="stmt"/>
            <line num="307" count="12937805" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(Map&lt;ParameterObject, double[]&gt;) : AnalyticModel" num="310" count="18500" type="method"/>
            <line num="314" count="18502" type="stmt"/>
            <line num="317" count="18494" type="stmt"/>
            <line falsecount="14" truecount="18483" num="317" type="cond"/>
            <line num="318" count="18477" type="stmt"/>
            <line num="319" count="39653" type="stmt"/>
            <line num="320" count="39589" type="stmt"/>
            <line num="324" count="18471" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="337" count="87112" type="method"/>
            <line num="338" count="87107" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.products">
         <metrics coveredelements="0" complexity="0" loc="61" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/products/Swaption.java" name="Swaption.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="61" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Swaption">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Swaption.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.models">
         <metrics coveredelements="168" complexity="103" loc="1444" methods="91" classes="6" statements="231" coveredconditionals="16" coveredmethods="28" elements="346" ncloc="712" files="6" conditionals="24" coveredstatements="124"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/BatesModel.java" name="BatesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="485" coveredmethods="0" methods="22" elements="96" classes="1" ncloc="264" statements="66" conditionals="8" coveredstatements="0"/>
            <class name="BatesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="22" elements="96" statements="66" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BatesModel(LocalDate,double,DiscountCurve,DiscountCurve,double[],double[],double[],double[],double[],double[],double,double)" num="108" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,DiscountCurve,DiscountCurve,double[],double[],double[],double[],double[],double[],double,double)" num="155" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,double,double,double[],double[],double[],double[],double[],double[],double,double)" num="186" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BatesModel(double,double,double,double,double,double,double,double,double,double,double)" num="232" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Complex) : Complex" num="267" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="370" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="381" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="393" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="400" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double[]" num="407" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAlpha() : double[]" num="421" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBeta() : double[]" num="428" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double[]" num="435" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : double[]" num="442" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double[]" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getK() : double" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDelta() : double" num="463" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="470" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/BlackScholesModel.java" name="BlackScholesModel.java">
            <metrics coveredelements="35" coveredconditionals="4" complexity="17" loc="188" coveredmethods="7" methods="15" elements="51" classes="1" ncloc="89" statements="32" conditionals="4" coveredstatements="24"/>
            <class name="BlackScholesModel">
               <metrics coveredelements="35" coveredconditionals="4" complexity="17" coveredmethods="7" methods="15" elements="51" statements="32" conditionals="4" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModel(LocalDate,double,DiscountCurve,DiscountCurve,double)" num="47" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double,double)" num="67" count="10" type="method"/>
            <line num="68" count="10" type="stmt"/>
            <line num="69" count="10" type="stmt"/>
            <line num="70" count="10" type="stmt"/>
            <line num="71" count="10" type="stmt"/>
            <line num="72" count="10" type="stmt"/>
            <line num="73" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double)" num="85" count="10" type="method"/>
            <line num="86" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="89" count="14" type="method"/>
            <line num="91" count="14" type="stmt"/>
            <line num="92" count="14" type="stmt"/>
            <line num="94" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="95" count="204457" type="method"/>
            <line num="97" count="205768" type="stmt"/>
            <line num="98" count="205134" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="115" count="14" type="method"/>
            <line num="116" count="14" type="stmt"/>
            <line falsecount="4" truecount="10" num="116" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="125" count="14" type="method"/>
            <line num="126" count="14" type="stmt"/>
            <line falsecount="4" truecount="10" num="126" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/CharacteristicFunctionModel.java" name="CharacteristicFunctionModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CharacteristicFunctionModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/HestonModel.java" name="HestonModel.java">
            <metrics coveredelements="48" coveredconditionals="4" complexity="22" loc="298" coveredmethods="8" methods="20" elements="72" classes="1" ncloc="131" statements="48" conditionals="4" coveredstatements="36"/>
            <class name="HestonModel">
               <metrics coveredelements="48" coveredconditionals="4" complexity="22" coveredmethods="8" methods="20" elements="72" statements="48" conditionals="4" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double,double,double)" num="87" count="246" type="method"/>
            <line num="88" count="246" type="stmt"/>
            <line num="89" count="246" type="stmt"/>
            <line num="90" count="246" type="stmt"/>
            <line num="91" count="246" type="stmt"/>
            <line num="92" count="246" type="stmt"/>
            <line num="93" count="246" type="stmt"/>
            <line num="94" count="246" type="stmt"/>
            <line num="95" count="245" type="stmt"/>
            <line num="96" count="246" type="stmt"/>
            <line num="97" count="246" type="stmt"/>
            <line num="98" count="245" type="stmt"/>
            <line num="99" count="246" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,DiscountCurve,DiscountCurve,double,double,double,double,double)" num="114" count="246" type="method"/>
            <line num="115" count="245" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double)" num="130" count="8" type="method"/>
            <line num="132" count="8" type="stmt"/>
            <line num="133" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line num="135" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
            <line num="137" count="8" type="stmt"/>
            <line num="138" count="8" type="stmt"/>
            <line num="139" count="8" type="stmt"/>
            <line num="140" count="8" type="stmt"/>
            <line num="141" count="8" type="stmt"/>
            <line num="142" count="8" type="stmt"/>
            <line num="143" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double)" num="146" count="8" type="method"/>
            <line num="148" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="151" count="519" type="method"/>
            <line num="154" count="519" type="stmt"/>
            <line num="155" count="519" type="stmt"/>
            <line num="157" count="519" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="158" count="2602760" type="method"/>
            <line num="161" count="2600604" type="stmt"/>
            <line num="163" count="2592886" type="stmt"/>
            <line num="170" count="2615606" type="stmt"/>
            <line num="179" count="2662774" type="stmt"/>
            <line num="184" count="2658588" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="195" count="518" type="method"/>
            <line num="196" count="518" type="stmt"/>
            <line falsecount="487" truecount="32" num="196" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="205" count="517" type="method"/>
            <line num="206" count="517" type="stmt"/>
            <line falsecount="487" truecount="32" num="206" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : double" num="268" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : double" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : double" num="282" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/MertonModel.java" name="MertonModel.java">
            <metrics coveredelements="45" coveredconditionals="4" complexity="20" loc="247" coveredmethods="7" methods="18" elements="67" classes="1" ncloc="120" statements="45" conditionals="4" coveredstatements="34"/>
            <class name="MertonModel">
               <metrics coveredelements="45" coveredconditionals="4" complexity="20" coveredmethods="7" methods="18" elements="67" statements="45" conditionals="4" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double,double)" num="59" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double)" num="87" count="4" type="method"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double)" num="114" count="4" type="method"/>
            <line num="116" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="119" count="64" type="method"/>
            <line num="121" count="64" type="stmt"/>
            <line num="122" count="64" type="stmt"/>
            <line num="123" count="64" type="stmt"/>
            <line num="124" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="125" count="682814" type="method"/>
            <line num="127" count="693957" type="stmt"/>
            <line num="129" count="692081" type="stmt"/>
            <line num="132" count="715570" type="stmt"/>
            <line num="134" count="712147" type="stmt"/>
            <line num="136" count="721190" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="154" count="64" type="method"/>
            <line num="155" count="64" type="stmt"/>
            <line falsecount="2" truecount="62" num="155" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="164" count="64" type="method"/>
            <line num="165" count="64" type="stmt"/>
            <line falsecount="2" truecount="62" num="165" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : double" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : double" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : double" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/models/VarianceGammaModel.java" name="VarianceGammaModel.java">
            <metrics coveredelements="40" coveredconditionals="4" complexity="18" loc="197" coveredmethods="6" methods="16" elements="60" classes="1" ncloc="101" statements="40" conditionals="4" coveredstatements="30"/>
            <class name="VarianceGammaModel">
               <metrics coveredelements="40" coveredconditionals="4" complexity="18" coveredmethods="6" methods="16" elements="60" statements="40" conditionals="4" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(LocalDate,double,DiscountCurve,DiscountCurve,double,double,double)" num="47" count="261" type="method"/>
            <line num="49" count="261" type="stmt"/>
            <line num="50" count="262" type="stmt"/>
            <line num="51" count="262" type="stmt"/>
            <line num="52" count="262" type="stmt"/>
            <line num="53" count="262" type="stmt"/>
            <line num="54" count="262" type="stmt"/>
            <line num="55" count="262" type="stmt"/>
            <line num="56" count="260" type="stmt"/>
            <line num="57" count="261" type="stmt"/>
            <line num="58" count="262" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double,double)" num="71" count="6" type="method"/>
            <line num="73" count="6" type="stmt"/>
            <line num="74" count="6" type="stmt"/>
            <line num="75" count="6" type="stmt"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="78" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : CharacteristicFunction" num="85" count="597" type="method"/>
            <line num="87" count="597" type="stmt"/>
            <line num="88" count="597" type="stmt"/>
            <line num="90" count="598" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Complex) : Complex" num="91" count="3025054" type="method"/>
            <line num="93" count="3032325" type="stmt"/>
            <line num="94" count="3033369" type="stmt"/>
            <line num="95" count="3058814" type="stmt"/>
            <line num="96" count="3072507" type="stmt"/>
            <line num="98" count="3066361" type="stmt"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForForward(double) : double" num="112" count="597" type="method"/>
            <line num="113" count="597" type="stmt"/>
            <line falsecount="522" truecount="76" num="113" type="cond"/>
            <line complexity="2" visibility="private" signature="getLogDiscountFactorForDiscounting(double) : double" num="122" count="596" type="method"/>
            <line num="123" count="597" type="stmt"/>
            <line falsecount="520" truecount="76" num="123" type="cond"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : double" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.productfactory">
         <metrics coveredelements="74" complexity="48" loc="611" methods="31" classes="12" statements="120" coveredconditionals="12" coveredmethods="15" elements="181" ncloc="336" files="5" conditionals="30" coveredstatements="47"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/InterestRateAnalyticProductFactory.java" name="InterestRateAnalyticProductFactory.java">
            <metrics coveredelements="9" coveredconditionals="1" complexity="4" loc="60" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="41" statements="16" conditionals="4" coveredstatements="6"/>
            <class name="InterestRateAnalyticProductFactory">
               <metrics coveredelements="9" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="22" statements="16" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateAnalyticProductFactory(LocalDate)" num="31" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends InterestRateProductDescriptor&gt;" num="36" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="38" type="cond"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/InterestRateMonteCarloProductFactory.java" name="InterestRateMonteCarloProductFactory.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="21" loc="240" coveredmethods="5" methods="12" elements="81" classes="4" ncloc="144" statements="53" conditionals="16" coveredstatements="19"/>
            <class name="InterestRateMonteCarloProductFactory">
               <metrics coveredelements="24" coveredconditionals="5" complexity="8" coveredmethods="3" methods="3" elements="39" statements="26" conditionals="10" coveredstatements="16"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwapLegMonteCarlo">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwapMonteCarlo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="25" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="InterestRateMonteCarloProductFactory.SwaptionPhysicalMonteCarlo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateMonteCarloProductFactory(LocalDate)" num="46" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends InterestRateProductDescriptor&gt;" num="51" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="54" type="cond"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="constructLiborIndex(String,Schedule) : AbstractIndex" num="88" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="90" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="2" truecount="140" num="96" type="cond"/>
            <line num="97" count="140" type="stmt"/>
            <line num="98" count="140" type="stmt"/>
            <line num="100" count="140" type="stmt"/>
            <line num="101" count="140" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLegMonteCarlo(InterestRateSwapLegProductDescriptor,LocalDate)" num="128" count="4" type="method"/>
            <line num="129" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(double) : NotionalFromConstant" num="131" count="280" type="method"/>
            <line num="133" count="280" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwapLegProductDescriptor" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapMonteCarlo(InterestRateSwapProductDescriptor,LocalDate)" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescriptor() : InterestRateSwapProductDescriptor" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionPhysicalMonteCarlo(InterestRateSwaptionProductDescriptor,LocalDate)" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : InterestRateSwaptionProductDescriptor" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/ProductFactoryCascade.java" name="ProductFactoryCascade.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="84" coveredmethods="0" methods="5" elements="28" classes="1" ncloc="43" statements="21" conditionals="2" coveredstatements="0"/>
            <class name="ProductFactoryCascade">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="28" statements="21" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductFactoryCascade()" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProductFactoryCascade(List&lt;ProductFactory&lt;? extends T&gt;&gt;)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFactoryBefore(ProductFactory&lt;? extends T&gt;) : ProductFactoryCascade&lt;T&gt;" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFactoryAfter(ProductFactory&lt;? extends T&gt;) : ProductFactoryCascade&lt;T&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends T&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/SingleAssetFourierProductFactory.java" name="SingleAssetFourierProductFactory.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="8" loc="115" coveredmethods="4" methods="6" elements="25" classes="3" ncloc="54" statements="15" conditionals="4" coveredstatements="11"/>
            <class name="SingleAssetFourierProductFactory">
               <metrics coveredelements="12" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="SingleAssetFourierProductFactory.EuropeanOptionFourierMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SingleAssetFourierProductFactory.DigitalOptionFourierMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetFourierProductFactory(LocalDate)" num="37" count="12" type="method"/>
            <line num="38" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends SingleAssetProductDescriptor&gt;" num="41" count="12" type="method"/>
            <line num="44" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="44" type="cond"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="48" type="cond"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionFourierMethod(SingleAssetEuropeanOptionProductDescriptor,LocalDate)" num="76" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetEuropeanOptionProductDescriptor" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOptionFourierMethod(SingleAssetDigitalOptionProductDescriptor,LocalDate)" num="104" count="4" type="method"/>
            <line num="105" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetDigitalOptionProductDescriptor" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/productfactory/SingleAssetMonteCarloProductFactory.java" name="SingleAssetMonteCarloProductFactory.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="8" loc="112" coveredmethods="4" methods="6" elements="25" classes="3" ncloc="54" statements="15" conditionals="4" coveredstatements="11"/>
            <class name="SingleAssetMonteCarloProductFactory">
               <metrics coveredelements="12" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="SingleAssetMonteCarloProductFactory.EuropeanOptionMonteCarlo">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SingleAssetMonteCarloProductFactory.DigitalOptionMonteCarlo">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetMonteCarloProductFactory(LocalDate)" num="37" count="12" type="method"/>
            <line num="38" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProductFromDescriptor(ProductDescriptor) : DescribedProduct&lt;? extends SingleAssetProductDescriptor&gt;" num="41" count="12" type="method"/>
            <line num="44" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="44" type="cond"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="48" type="cond"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOptionMonteCarlo(SingleAssetEuropeanOptionProductDescriptor,LocalDate)" num="75" count="8" type="method"/>
            <line num="76" count="8" type="stmt"/>
            <line num="77" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetEuropeanOptionProductDescriptor" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOptionMonteCarlo(SingleAssetDigitalOptionProductDescriptor,LocalDate)" num="102" count="4" type="method"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptor() : SingleAssetDigitalOptionProductDescriptor" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process.component.barrier">
         <metrics coveredelements="0" complexity="0" loc="58" methods="0" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="14" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/component/barrier/Barrier.java" name="Barrier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Barrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/component/barrier/ProcessWithBarrier.java" name="ProcessWithBarrier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProcessWithBarrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.parser">
         <metrics coveredelements="0" complexity="77" loc="675" methods="19" classes="2" statements="195" coveredconditionals="0" coveredmethods="0" elements="272" ncloc="340" files="2" conditionals="58" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/parser/CSVCurveParser.java" name="CSVCurveParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="193" coveredmethods="0" methods="8" elements="64" classes="1" ncloc="94" statements="46" conditionals="10" coveredstatements="0"/>
            <class name="CSVCurveParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="8" elements="64" statements="46" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CSVCurveParser()" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CSVCurveParser(InterpolationMethod,ExtrapolationMethod,InterpolationEntity)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSV(File,String,String) : DiscountCurve" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseZIP(File,String,String) : DiscountCurve[]" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInterpolation(InterpolationMethod,ExtrapolationMethod,InterpolationEntity) : void" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDates(Curve[]) : LocalDate[]" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="parseStream(InputStream,String,String) : DiscountCurve" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="readNonEmptyLine(BufferedReader) : String" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/parser/CSVSwaptionParser.java" name="CSVSwaptionParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="59" loc="482" coveredmethods="0" methods="11" elements="208" classes="1" ncloc="246" statements="149" conditionals="48" coveredstatements="0"/>
            <class name="CSVSwaptionParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="59" coveredmethods="0" methods="11" elements="208" statements="149" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CSVSwaptionParser(SchedulePrototype,SchedulePrototype)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CSVSwaptionParser(String[],String[],SchedulePrototype,SchedulePrototype)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFileQuotingConvention(QuotingConvention,double,double) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSV(File,File,LocalDate,String,String,String) : SwaptionDataLattice" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="parseZIP(File,File,String,String,String) : SwaptionDataLattice[]" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="24" visibility="private" signature="parseStreams(InputStream,InputStream,LocalDate,String,String,String) : SwaptionDataLattice" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseZIPToConvention(File,File,String,String,String,QuotingConvention,double,AnalyticModel) : SwaptionDataLattice[]" num="306" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="parseStreamsToConvention(ZipFile,ZipEntry,ZipFile,ZipEntry,LocalDate,String,String,String,QuotingConvention,double,AnalyticModel) : SwaptionDataLattice" num="372" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseCSVMultiShift(File,File,LocalDate,String,String,String) : Set&lt;SwaptionDataLattice&gt;" num="411" count="0" type="method"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="parseTenorsPerShift(File,String) : Map&lt;Double, Set&lt;String&gt;&gt;" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="443" type="cond"/>
            <line num="445" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDates(SwaptionDataLattice[]) : LocalDate[]" num="479" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.calibration">
         <metrics coveredelements="210" complexity="107" loc="1301" methods="48" classes="6" statements="287" coveredconditionals="34" coveredmethods="22" elements="425" ncloc="614" files="5" conditionals="90" coveredstatements="154"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/CalibratedCurves.java" name="CalibratedCurves.java">
            <metrics coveredelements="95" coveredconditionals="17" complexity="74" loc="835" coveredmethods="10" methods="30" elements="277" classes="2" ncloc="402" statements="183" conditionals="64" coveredstatements="68"/>
            <class name="CalibratedCurves">
               <metrics coveredelements="81" coveredconditionals="17" complexity="63" coveredmethods="9" methods="23" elements="229" statements="144" conditionals="62" coveredstatements="55"/>
            </class>
            <class name="CalibratedCurves.CalibrationSpec">
               <metrics coveredelements="14" coveredconditionals="0" complexity="11" coveredmethods="1" methods="7" elements="48" statements="39" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 95()" num="95" count="4" type="method"/>
            <line num="97" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="142" count="1162" type="method"/>
            <line num="153" count="1162" type="stmt"/>
            <line num="154" count="1162" type="stmt"/>
            <line num="155" count="1162" type="stmt"/>
            <line num="156" count="1162" type="stmt"/>
            <line num="157" count="1162" type="stmt"/>
            <line num="158" count="1162" type="stmt"/>
            <line num="159" count="1162" type="stmt"/>
            <line num="160" count="1162" type="stmt"/>
            <line num="161" count="1162" type="stmt"/>
            <line num="162" count="1162" type="stmt"/>
            <line num="163" count="1162" type="stmt"/>
            <line num="164" count="1162" type="stmt"/>
            <line num="165" count="1162" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,Schedule,String,double,String,Schedule,String,double,String,String,double)" num="183" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,double[],String,double,String,String,double)" num="211" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibrationSpec(String,double[],String,double,String,String,double)" num="246" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneShifted(double) : CalibrationSpec" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbol() : String" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(List&lt;CalibrationSpec&gt;,AnalyticModel,double,double)" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double,double)" num="357" count="14" type="method"/>
            <line num="358" count="14" type="stmt"/>
            <line falsecount="0" truecount="14" num="358" type="cond"/>
            <line num="359" count="14" type="stmt"/>
            <line num="361" count="14" type="stmt"/>
            <line num="362" count="14" type="stmt"/>
            <line num="364" count="14" type="stmt"/>
            <line num="365" count="1162" type="stmt"/>
            <line num="368" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols,double)" num="391" count="14" type="method"/>
            <line num="392" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[],AnalyticModelFromCurvesAndVols)" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(Collection&lt;CalibrationSpec&gt;)" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratedCurves(CalibrationSpec[])" num="438" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getCalibrationProductForSpec(CalibrationSpec) : AnalyticProduct" num="442" count="1328" type="method"/>
            <line num="443" count="1328" type="stmt"/>
            <line num="444" count="1328" type="stmt"/>
            <line num="449" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="457" count="1328" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="458" count="2656" type="method"/>
            <line num="460" count="2656" type="stmt"/>
            <line num="463" count="1328" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String) : boolean" num="464" count="2656" type="method"/>
            <line num="466" count="2656" type="stmt"/>
            <line num="469" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="472" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="472" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="478" count="1328" type="stmt"/>
            <line falsecount="1328" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line num="483" count="1328" type="stmt"/>
            <line num="484" count="1328" type="stmt"/>
            <line num="486" count="1328" type="stmt"/>
            <line num="487" count="1328" type="stmt"/>
            <line falsecount="1072" truecount="256" num="487" type="cond"/>
            <line num="488" count="256" type="stmt"/>
            <line num="490" count="1072" type="stmt"/>
            <line falsecount="832" truecount="240" num="490" type="cond"/>
            <line num="491" count="240" type="stmt"/>
            <line num="493" count="832" type="stmt"/>
            <line falsecount="832" truecount="0" num="493" type="cond"/>
            <line num="495" count="0" type="stmt"/>
            <line num="497" count="832" type="stmt"/>
            <line falsecount="832" truecount="0" num="497" type="cond"/>
            <line num="499" count="0" type="stmt"/>
            <line num="501" count="832" type="stmt"/>
            <line falsecount="0" truecount="832" num="501" type="cond"/>
            <line num="502" count="832" type="stmt"/>
            <line num="503" count="832" type="stmt"/>
            <line num="504" count="832" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="512" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="523" count="1328" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AnalyticModel" num="532" count="14" type="method"/>
            <line num="533" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="542" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastNumberOfInterations() : int" num="551" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(String,double) : CalibratedCurves" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="570" type="cond"/>
            <line num="571" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Map&lt;String,Double&gt;) : CalibratedCurves" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneShifted(Pattern,double) : CalibratedCurves" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="627" type="cond"/>
            <line num="628" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneShiftedForRegExp(String,double) : CalibratedCurves" num="653" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastAccuracy() : double" num="662" count="0" type="method"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCalibrationProductForSymbol(String) : AnalyticProduct" num="674" count="0" type="method"/>
            <line num="681" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="681" type="cond"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="683" type="cond"/>
            <line num="684" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="calibrate(double) : int" num="691" count="14" type="method"/>
            <line num="692" count="14" type="stmt"/>
            <line num="693" count="14" type="stmt"/>
            <line num="695" count="14" type="stmt"/>
            <line num="697" count="14" type="stmt"/>
            <line complexity="4" visibility="private" signature="add(CalibrationSpec) : String" num="706" count="1162" type="method"/>
            <line num="708" count="1162" type="stmt"/>
            <line num="715" count="1162" type="stmt"/>
            <line num="716" count="1162" type="stmt"/>
            <line num="721" count="1162" type="stmt"/>
            <line num="722" count="1162" type="stmt"/>
            <line falsecount="1162" truecount="0" num="722" type="cond"/>
            <line num="723" count="0" type="stmt"/>
            <line num="727" count="1162" type="stmt"/>
            <line num="730" count="1162" type="stmt"/>
            <line num="731" count="1162" type="stmt"/>
            <line falsecount="658" truecount="504" num="731" type="cond"/>
            <line num="732" count="504" type="stmt"/>
            <line num="734" count="658" type="stmt"/>
            <line falsecount="0" truecount="658" num="734" type="cond"/>
            <line num="735" count="658" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="742" count="1162" type="stmt"/>
            <line num="746" count="1162" type="stmt"/>
            <line num="747" count="1162" type="stmt"/>
            <line num="749" count="1162" type="stmt"/>
            <line complexity="2" visibility="private" signature="createDiscountCurve(String) : DiscountCurve" num="758" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line complexity="18" visibility="private" signature="createForwardCurve(Schedule,String) : String" num="775" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="781" type="cond"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="784" type="cond"/>
            <line num="785" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line num="791" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="794" type="cond"/>
            <line num="795" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="802" type="cond"/>
            <line num="804" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="804" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="815" type="cond"/>
            <line num="824" count="0" type="stmt"/>
            <line num="828" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/ParameterAggregation.java" name="ParameterAggregation.java">
            <metrics coveredelements="28" coveredconditionals="3" complexity="13" loc="139" coveredmethods="3" methods="9" elements="51" classes="1" ncloc="73" statements="34" conditionals="8" coveredstatements="22"/>
            <class name="ParameterAggregation">
               <metrics coveredelements="28" coveredconditionals="3" complexity="13" coveredmethods="3" methods="9" elements="51" statements="34" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterAggregation()" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(Set&lt;E&gt;)" num="49" count="64" type="method"/>
            <line num="50" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterAggregation(E[])" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(E) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(E) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : double[]" num="81" count="64" type="method"/>
            <line num="84" count="64" type="stmt"/>
            <line num="85" count="64" type="stmt"/>
            <line num="86" count="92" type="stmt"/>
            <line falsecount="0" truecount="92" num="86" type="cond"/>
            <line num="87" count="92" type="stmt"/>
            <line num="91" count="64" type="stmt"/>
            <line num="94" count="64" type="stmt"/>
            <line num="95" count="64" type="stmt"/>
            <line num="96" count="92" type="stmt"/>
            <line num="97" count="92" type="stmt"/>
            <line falsecount="0" truecount="92" num="97" type="cond"/>
            <line num="98" count="92" type="stmt"/>
            <line num="99" count="92" type="stmt"/>
            <line num="103" count="64" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameter(double[]) : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getObjectsToModifyForParameter(double[]) : Map&lt;E, double[]&gt;" num="120" count="18493" type="method"/>
            <line num="121" count="18490" type="stmt"/>
            <line num="122" count="18493" type="stmt"/>
            <line num="123" count="18494" type="stmt"/>
            <line num="124" count="39685" type="stmt"/>
            <line num="125" count="39663" type="stmt"/>
            <line falsecount="0" truecount="39673" num="125" type="cond"/>
            <line num="127" count="39688" type="stmt"/>
            <line num="128" count="39706" type="stmt"/>
            <line num="129" count="39707" type="stmt"/>
            <line num="132" count="18490" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : Curve" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/ParameterObject.java" name="ParameterObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/ParameterTransformation.java" name="ParameterTransformation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterTransformation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/calibration/Solver.java" name="Solver.java">
            <metrics coveredelements="87" coveredconditionals="14" complexity="20" loc="245" coveredmethods="9" methods="9" elements="97" classes="1" ncloc="127" statements="70" conditionals="18" coveredstatements="64"/>
            <class name="Solver">
               <metrics coveredelements="87" coveredconditionals="14" complexity="20" coveredmethods="9" methods="9" elements="97" statements="70" conditionals="18" coveredstatements="64"/>
            </class>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,OptimizerFactory)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,ParameterTransformation,double,double)" num="83" count="60" type="method"/>
            <line num="84" count="60" type="stmt"/>
            <line num="85" count="60" type="stmt"/>
            <line num="86" count="60" type="stmt"/>
            <line num="87" count="60" type="stmt"/>
            <line num="88" count="60" type="stmt"/>
            <line num="89" count="60" type="stmt"/>
            <line num="90" count="60" type="stmt"/>
            <line num="91" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,double,double)" num="104" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;,double,double)" num="117" count="52" type="method"/>
            <line num="118" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="Solver(AnalyticModel,Vector&lt;AnalyticProduct&gt;)" num="128" count="26" type="method"/>
            <line num="129" count="26" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCalibratedModel(Set&lt;ParameterObject&gt;) : AnalyticModel" num="143" count="64" type="method"/>
            <line num="144" count="64" type="stmt"/>
            <line num="147" count="64" type="stmt"/>
            <line num="150" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="64" type="stmt"/>
            <line num="156" count="64" type="stmt"/>
            <line num="157" count="64" type="stmt"/>
            <line num="158" count="64" type="stmt"/>
            <line num="159" count="64" type="stmt"/>
            <line num="160" count="64" type="stmt"/>
            <line num="161" count="64" type="stmt"/>
            <line num="162" count="64" type="stmt"/>
            <line num="163" count="64" type="stmt"/>
            <line num="164" count="64" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="165" count="18431" type="method"/>
            <line num="167" count="18428" type="stmt"/>
            <line num="168" count="18430" type="stmt"/>
            <line num="169" count="18425" type="stmt"/>
            <line falsecount="18415" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="18431" type="stmt"/>
            <line num="176" count="18419" type="stmt"/>
            <line num="177" count="18388" type="stmt"/>
            <line falsecount="18430" truecount="976250" num="177" type="cond"/>
            <line num="178" count="976182" type="stmt"/>
            <line num="180" count="18430" type="stmt"/>
            <line falsecount="12606" truecount="5824" num="180" type="cond"/>
            <line num="181" count="5824" type="stmt"/>
            <line falsecount="5824" truecount="73516" num="181" type="cond"/>
            <line num="182" count="73515" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="64" type="stmt"/>
            <line falsecount="0" truecount="64" num="191" type="cond"/>
            <line num="192" count="64" type="stmt"/>
            <line num="193" count="64" type="stmt"/>
            <line num="196" count="64" type="stmt"/>
            <line num="197" count="64" type="stmt"/>
            <line num="199" count="64" type="stmt"/>
            <line num="201" count="64" type="stmt"/>
            <line num="202" count="64" type="stmt"/>
            <line falsecount="64" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="64" type="stmt"/>
            <line num="207" count="64" type="stmt"/>
            <line num="209" count="64" type="stmt"/>
            <line num="210" count="64" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="64" type="stmt"/>
            <line num="216" count="64" type="stmt"/>
            <line falsecount="64" truecount="1668" num="216" type="cond"/>
            <line num="217" count="1668" type="stmt"/>
            <line num="218" count="1668" type="stmt"/>
            <line falsecount="1564" truecount="104" num="218" type="cond"/>
            <line num="219" count="104" type="stmt"/>
            <line num="221" count="1668" type="stmt"/>
            <line num="223" count="64" type="stmt"/>
            <line num="225" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="233" count="44" type="method"/>
            <line num="234" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="242" count="38" type="method"/>
            <line num="243" count="38" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.cds">
         <metrics coveredelements="138" complexity="66" loc="520" methods="23" classes="3" statements="173" coveredconditionals="37" coveredmethods="4" elements="260" ncloc="307" files="1" conditionals="64" coveredstatements="97"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/cds/CDS.java" name="CDS.java">
            <metrics coveredelements="138" coveredconditionals="37" complexity="66" loc="520" coveredmethods="4" methods="23" elements="260" classes="3" ncloc="307" statements="173" conditionals="64" coveredstatements="97"/>
            <class name="CDS">
               <metrics coveredelements="138" coveredconditionals="37" complexity="66" coveredmethods="4" methods="23" elements="260" statements="173" conditionals="64" coveredstatements="97"/>
            </class>
            <class name="CDS.ValuationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CDS.DirtyCleanPrice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CDS(Schedule,String,String,String,String,double,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="70" count="30" type="method"/>
            <line num="83" count="30" type="stmt"/>
            <line num="84" count="30" type="stmt"/>
            <line num="85" count="30" type="stmt"/>
            <line num="86" count="30" type="stmt"/>
            <line num="87" count="30" type="stmt"/>
            <line num="88" count="30" type="stmt"/>
            <line num="89" count="30" type="stmt"/>
            <line num="90" count="30" type="stmt"/>
            <line num="91" count="30" type="stmt"/>
            <line num="92" count="30" type="stmt"/>
            <line num="93" count="30" type="stmt"/>
            <line num="94" count="30" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(Schedule,String,String,String,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="111" count="30" type="method"/>
            <line num="112" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(Schedule,String,String,String,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(ScheduleFromPeriods,String,String,String,String,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CDS(ScheduleFromPeriods,String,String,String,String,double,double,LocalDate,CDS.ValuationModel,CDS.DirtyCleanPrice,boolean)" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="29" visibility="public" signature="getValue(double,AnalyticModel) : double" num="177" count="1049" type="method"/>
            <line num="180" count="1048" type="stmt"/>
            <line falsecount="1049" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="1050" type="stmt"/>
            <line num="185" count="1048" type="stmt"/>
            <line falsecount="1049" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="190" count="1049" type="stmt"/>
            <line num="191" count="1046" type="stmt"/>
            <line falsecount="1048" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="1048" type="stmt"/>
            <line num="196" count="1043" type="stmt"/>
            <line falsecount="1044" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="1046" type="stmt"/>
            <line num="201" count="1047" type="stmt"/>
            <line falsecount="1047" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="205" count="1047" type="stmt"/>
            <line num="206" count="1048" type="stmt"/>
            <line num="210" count="1044" type="stmt"/>
            <line num="211" count="1046" type="stmt"/>
            <line num="212" count="1050" type="stmt"/>
            <line falsecount="1039" truecount="6198" num="212" type="cond"/>
            <line num="213" count="6200" type="stmt"/>
            <line num="215" count="1039" type="stmt"/>
            <line falsecount="1043" truecount="3092" num="215" type="cond"/>
            <line num="216" count="3096" type="stmt"/>
            <line num="217" count="3094" type="stmt"/>
            <line num="219" count="1042" type="stmt"/>
            <line num="220" count="1045" type="stmt"/>
            <line num="222" count="1046" type="stmt"/>
            <line num="224" count="1046" type="stmt"/>
            <line num="226" count="1048" type="stmt"/>
            <line falsecount="1044" truecount="3096" num="226" type="cond"/>
            <line num="229" count="3103" type="stmt"/>
            <line falsecount="3107" truecount="0" num="229" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="3114" type="stmt"/>
            <line num="238" count="3100" type="stmt"/>
            <line num="241" count="3096" type="stmt"/>
            <line falsecount="2069" truecount="1045" num="241" type="cond"/>
            <line num="242" count="1046" type="stmt"/>
            <line num="245" count="3108" type="stmt"/>
            <line falsecount="2078" truecount="1044" num="245" type="cond"/>
            <line num="246" count="1044" type="stmt"/>
            <line num="250" count="3118" type="stmt"/>
            <line falsecount="1042" truecount="2077" num="250" type="cond"/>
            <line num="252" count="3117" type="stmt"/>
            <line falsecount="0" truecount="3117" num="252" type="cond"/>
            <line num="253" count="3048" type="stmt"/>
            <line falsecount="0" truecount="3056" num="253" type="cond"/>
            <line num="255" count="3052" type="stmt"/>
            <line falsecount="0" truecount="3060" num="255" type="cond"/>
            <line num="256" count="3087" type="stmt"/>
            <line falsecount="0" truecount="3097" num="256" type="cond"/>
            <line num="259" count="3076" type="stmt"/>
            <line num="260" count="3082" type="stmt"/>
            <line falsecount="3083" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="3088" type="stmt"/>
            <line num="267" count="3067" type="stmt"/>
            <line num="268" count="3059" type="stmt"/>
            <line num="269" count="3062" type="stmt"/>
            <line num="270" count="3061" type="stmt"/>
            <line num="271" count="3068" type="stmt"/>
            <line num="274" count="3127" type="stmt"/>
            <line num="275" count="1049" type="stmt"/>
            <line num="276" count="1049" type="stmt"/>
            <line num="277" count="1050" type="stmt"/>
            <line num="278" count="1048" type="stmt"/>
            <line num="279" count="1035" type="stmt"/>
            <line num="280" count="1035" type="stmt"/>
            <line falsecount="1031" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="302" count="1032" type="stmt"/>
            <line num="303" count="1035" type="stmt"/>
            <line num="304" count="1036" type="stmt"/>
            <line num="306" count="1033" type="stmt"/>
            <line num="307" count="1035" type="stmt"/>
            <line num="308" count="1037" type="stmt"/>
            <line falsecount="1037" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="328" count="1038" type="stmt"/>
            <line num="329" count="1039" type="stmt"/>
            <line num="331" count="1038" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="337" count="1044" type="stmt"/>
            <line complexity="12" visibility="public" signature="getConventionalSpread(double,AnalyticModel) : double" num="349" count="6" type="method"/>
            <line num="351" count="6" type="stmt"/>
            <line num="352" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="6" type="stmt"/>
            <line num="357" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="6" type="stmt"/>
            <line num="362" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="6" type="stmt"/>
            <line num="367" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="371" count="6" type="stmt"/>
            <line num="372" count="6" type="stmt"/>
            <line num="374" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="374" type="cond"/>
            <line num="376" count="30" type="stmt"/>
            <line num="377" count="30" type="stmt"/>
            <line num="379" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="379" type="cond"/>
            <line num="380" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="380" type="cond"/>
            <line num="382" count="30" type="stmt"/>
            <line num="384" count="30" type="stmt"/>
            <line num="385" count="30" type="stmt"/>
            <line falsecount="6" truecount="24" num="385" type="cond"/>
            <line num="386" count="24" type="stmt"/>
            <line num="389" count="30" type="stmt"/>
            <line falsecount="6" truecount="24" num="389" type="cond"/>
            <line num="391" count="30" type="stmt"/>
            <line num="394" count="6" type="stmt"/>
            <line num="396" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFeePayment(int,AnalyticModel) : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="415" type="cond"/>
            <line num="416" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedFee(LocalDate,AnalyticModel) : double" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedFee(double,AnalyticModelFromCurvesAndVols) : double" num="444" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="453" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="457" count="0" type="method"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbabilityCurveName() : String" num="461" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecoveryRateCurveName() : String" num="465" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedFee() : double" num="469" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingFeeSpread() : double" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpfrontPayment() : double" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTradeDate() : LocalDate" num="481" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuationModel() : ValuationModel" num="483" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDirtyCleanPrice() : DirtyCleanPrice" num="485" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseFinerDiscretization() : boolean" num="487" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.data">
         <metrics coveredelements="405" complexity="191" loc="1852" methods="97" classes="10" statements="582" coveredconditionals="70" coveredmethods="61" elements="819" ncloc="1093" files="7" conditionals="140" coveredstatements="274"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTable.java" name="DataTable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="193" coveredmethods="0" methods="1" elements="18" classes="2" ncloc="55" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="DataTable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="18" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DataTable.TableConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="exportTable(DataTable) : Map&lt;String, Object&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableBasic.java" name="DataTableBasic.java">
            <metrics coveredelements="140" coveredconditionals="20" complexity="47" loc="366" coveredmethods="25" methods="29" elements="180" classes="2" ncloc="254" statements="123" conditionals="28" coveredstatements="95"/>
            <class name="DataTableBasic">
               <metrics coveredelements="110" coveredconditionals="15" complexity="33" coveredmethods="20" methods="23" elements="131" statements="88" conditionals="20" coveredstatements="75"/>
            </class>
            <class name="DataTableBasic.DoubleKey">
               <metrics coveredelements="30" coveredconditionals="5" complexity="14" coveredmethods="5" methods="6" elements="49" statements="35" conditionals="8" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="upgradeDataTableLight(DataTableLight,LocalDate,SchedulePrototype) : DataTableBasic" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="20" type="stmt"/>
            <line num="43" count="320" type="stmt"/>
            <line num="44" count="320" type="stmt"/>
            <line num="45" count="320" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype)" num="71" count="1973" type="method"/>
            <line num="72" count="1974" type="stmt"/>
            <line num="73" count="1974" type="stmt"/>
            <line num="74" count="1974" type="stmt"/>
            <line num="75" count="1974" type="stmt"/>
            <line complexity="2" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="89" count="1840" type="method"/>
            <line num="91" count="1839" type="stmt"/>
            <line num="92" count="1840" type="stmt"/>
            <line falsecount="1840" truecount="12151" num="92" type="cond"/>
            <line num="93" count="12156" type="stmt"/>
            <line num="94" count="12135" type="stmt"/>
            <line num="95" count="12152" type="stmt"/>
            <line complexity="2" visibility="public" signature="DataTableBasic(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="110" count="128" type="method"/>
            <line num="112" count="128" type="stmt"/>
            <line num="113" count="128" type="stmt"/>
            <line falsecount="128" truecount="3200" num="113" type="cond"/>
            <line num="114" count="3200" type="stmt"/>
            <line num="115" count="3200" type="stmt"/>
            <line num="116" count="3200" type="stmt"/>
            <line num="118" count="3200" type="stmt"/>
            <line num="119" count="3200" type="stmt"/>
            <line num="120" count="3200" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(int,int,double) : DataTable" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addPoints(int[],int[],double[]) : DataTable" num="133" count="30" type="method"/>
            <line num="135" count="30" type="stmt"/>
            <line num="136" count="30" type="stmt"/>
            <line falsecount="30" truecount="150" num="136" type="cond"/>
            <line num="137" count="150" type="stmt"/>
            <line num="138" count="150" type="stmt"/>
            <line num="139" count="150" type="stmt"/>
            <line num="141" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(int,int) : double" num="144" count="6113274" type="method"/>
            <line num="146" count="6114531" type="stmt"/>
            <line num="147" count="6098885" type="stmt"/>
            <line falsecount="10" truecount="6100371" num="147" type="cond"/>
            <line num="148" count="6102631" type="stmt"/>
            <line num="150" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,double) : double" num="154" count="64837854" type="method"/>
            <line num="156" count="64944233" type="stmt"/>
            <line num="157" count="64718959" type="stmt"/>
            <line falsecount="10" truecount="64669761" num="157" type="cond"/>
            <line num="158" count="64738586" type="stmt"/>
            <line num="160" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="164" count="507800" type="method"/>
            <line num="166" count="507799" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int) : boolean" num="169" count="1740421" type="method"/>
            <line num="171" count="1740467" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(double,double) : boolean" num="174" count="66489857" type="method"/>
            <line num="176" count="66538745" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : TreeSet&lt;Integer&gt;" num="179" count="3342821" type="method"/>
            <line num="181" count="3343091" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTerminations() : TreeSet&lt;Integer&gt;" num="184" count="1015156" type="method"/>
            <line num="186" count="1015151" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTerminationsForMaturity(int) : TreeSet&lt;Integer&gt;" num="189" count="1225487" type="method"/>
            <line num="191" count="1225473" type="stmt"/>
            <line falsecount="0" truecount="1225488" num="191" type="cond"/>
            <line num="192" count="1225497" type="stmt"/>
            <line num="193" count="1225497" type="stmt"/>
            <line num="194" count="6111935" type="stmt"/>
            <line falsecount="0" truecount="6094632" num="194" type="cond"/>
            <line num="195" count="6096593" type="stmt"/>
            <line num="198" count="1224537" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMaturitiesForTermination(int) : TreeSet&lt;Integer&gt;" num="204" count="4" type="method"/>
            <line num="206" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="206" type="cond"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="40" type="stmt"/>
            <line falsecount="0" truecount="40" num="209" type="cond"/>
            <line num="210" count="40" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="219" count="62" type="method"/>
            <line num="221" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="224" count="62" type="method"/>
            <line num="226" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : TableConvention" num="229" count="1732026" type="method"/>
            <line num="231" count="1732112" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheduleMetaData() : SchedulePrototype" num="234" count="62" type="method"/>
            <line num="236" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableBasic" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="248" count="2" type="method"/>
            <line num="250" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(double) : String" num="253" count="26" type="method"/>
            <line num="254" count="26" type="stmt"/>
            <line num="255" count="26" type="stmt"/>
            <line num="256" count="26" type="stmt"/>
            <line num="257" count="196" type="stmt"/>
            <line num="259" count="26" type="stmt"/>
            <line num="260" count="160" type="stmt"/>
            <line num="261" count="160" type="stmt"/>
            <line num="262" count="1460" type="stmt"/>
            <line num="263" count="1460" type="stmt"/>
            <line num="264" count="1460" type="stmt"/>
            <line falsecount="0" truecount="1460" num="264" type="cond"/>
            <line num="265" count="1460" type="stmt"/>
            <line num="270" count="26" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getValue(DoubleKey) : double" num="273" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="DoubleKey(int,int)" num="296" count="20036342" type="method"/>
            <line num="297" count="20048698" type="stmt"/>
            <line num="298" count="20064313" type="stmt"/>
            <line num="299" count="20055209" type="stmt"/>
            <line num="300" count="19914622" type="stmt"/>
            <line num="301" count="19885242" type="stmt"/>
            <line complexity="1" visibility="protected" signature="DoubleKey(double,double)" num="310" count="194145951" type="method"/>
            <line num="311" count="194386533" type="stmt"/>
            <line num="312" count="194479955" type="stmt"/>
            <line complexity="5" visibility="private" signature="dateFromOffset(LocalDate,int) : LocalDate" num="315" count="40038836" type="method"/>
            <line num="316" count="40067389" type="stmt"/>
            <line num="317" count="40085855" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="40102173" type="stmt"/>
            <line num="322" count="40122340" type="stmt"/>
            <line num="323" count="40145094" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="40165756" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="336" count="260805739" type="method"/>
            <line num="338" count="261088341" type="stmt"/>
            <line falsecount="261256898" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="261400542" type="stmt"/>
            <line falsecount="261536831" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="261705883" type="stmt"/>
            <line falsecount="261816677" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="261977900" type="stmt"/>
            <line falsecount="209800452" truecount="52560730" num="349" type="cond"/>
            <line num="350" count="52562518" type="stmt"/>
            <line num="352" count="210011278" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="355" count="212175918" type="method"/>
            <line num="357" count="212545885" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableExtrapolated.java" name="DataTableExtrapolated.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="8" elements="54" classes="1" ncloc="70" statements="44" conditionals="2" coveredstatements="0"/>
            <class name="DataTableExtrapolated">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="54" statements="44" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype)" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableExtrapolated(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int) : double" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableExtrapolated" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableInterpolated.java" name="DataTableInterpolated.java">
            <metrics coveredelements="87" coveredconditionals="17" complexity="22" loc="212" coveredmethods="8" methods="9" elements="102" classes="1" ncloc="125" statements="75" conditionals="18" coveredstatements="62"/>
            <class name="DataTableInterpolated">
               <metrics coveredelements="87" coveredconditionals="17" complexity="22" coveredmethods="8" methods="9" elements="102" statements="75" conditionals="18" coveredstatements="62"/>
            </class>
            <line complexity="1" visibility="public" signature="interpolateDataTable(DataTableBasic) : DataTableInterpolated" num="35" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="20" type="stmt"/>
            <line num="44" count="320" type="stmt"/>
            <line num="45" count="320" type="stmt"/>
            <line num="46" count="320" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="82" count="50" type="method"/>
            <line num="84" count="50" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableInterpolated(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="98" count="22" type="method"/>
            <line num="100" count="22" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(int,int) : double" num="103" count="118620" type="method"/>
            <line num="105" count="118616" type="stmt"/>
            <line falsecount="117872" truecount="742" num="105" type="cond"/>
            <line num="106" count="742" type="stmt"/>
            <line num="110" count="117874" type="stmt"/>
            <line falsecount="8" truecount="117870" num="110" type="cond"/>
            <line num="112" count="117873" type="stmt"/>
            <line num="113" count="117874" type="stmt"/>
            <line num="115" count="117874" type="stmt"/>
            <line falsecount="117875" truecount="589435" num="115" type="cond"/>
            <line num="116" count="589435" type="stmt"/>
            <line num="119" count="117874" type="stmt"/>
            <line num="120" count="117874" type="stmt"/>
            <line num="122" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="122" type="cond"/>
            <line num="124" count="4" type="stmt"/>
            <line num="125" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="127" type="cond"/>
            <line num="128" count="40" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="143" type="cond"/>
            <line num="144" count="40" type="stmt"/>
            <line falsecount="40" truecount="640" num="144" type="cond"/>
            <line num="145" count="640" type="stmt"/>
            <line num="149" count="4" type="stmt"/>
            <line num="151" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="156" count="5353023" type="method"/>
            <line num="158" count="5353142" type="stmt"/>
            <line falsecount="117860" truecount="5234483" num="158" type="cond"/>
            <line num="159" count="5234743" type="stmt"/>
            <line num="163" count="117861" type="stmt"/>
            <line num="164" count="117864" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="117863" type="stmt"/>
            <line num="166" count="117863" type="stmt"/>
            <line num="166" count="117862" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="173" count="117866" type="stmt"/>
            <line num="174" count="117861" type="stmt"/>
            <line num="176" count="117857" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableInterpolated" num="179" count="4" type="method"/>
            <line num="182" count="4" type="stmt"/>
            <line num="183" count="4" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line num="188" count="20" type="stmt"/>
            <line num="189" count="100" type="stmt"/>
            <line num="190" count="100" type="stmt"/>
            <line num="191" count="100" type="stmt"/>
            <line num="195" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="198" count="6" type="method"/>
            <line num="200" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="203" count="6" type="method"/>
            <line num="205" count="6" type="stmt"/>
            <line num="206" count="6" type="stmt"/>
            <line num="207" count="6" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableLight.java" name="DataTableLight.java">
            <metrics coveredelements="92" coveredconditionals="17" complexity="42" loc="297" coveredmethods="18" methods="25" elements="144" classes="2" ncloc="202" statements="89" conditionals="30" coveredstatements="57"/>
            <class name="DataTableLight">
               <metrics coveredelements="73" coveredconditionals="12" complexity="34" coveredmethods="14" methods="21" elements="119" statements="76" conditionals="22" coveredstatements="47"/>
            </class>
            <class name="DataTableLight.DataKey">
               <metrics coveredelements="19" coveredconditionals="5" complexity="8" coveredmethods="4" methods="4" elements="25" statements="13" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="DataTableLight(String,TableConvention)" num="36" count="524" type="method"/>
            <line num="37" count="524" type="stmt"/>
            <line num="38" count="524" type="stmt"/>
            <line complexity="4" visibility="public" signature="DataTableLight(String,TableConvention,int[],int[],double[])" num="50" count="22" type="method"/>
            <line num="51" count="22" type="stmt"/>
            <line num="53" count="22" type="stmt"/>
            <line falsecount="22" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="22" type="stmt"/>
            <line falsecount="22" truecount="550" num="58" type="cond"/>
            <line num="59" count="550" type="stmt"/>
            <line num="60" count="550" type="stmt"/>
            <line num="61" count="550" type="stmt"/>
            <line complexity="4" visibility="public" signature="DataTableLight(String,TableConvention,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="74" count="502" type="method"/>
            <line num="75" count="502" type="stmt"/>
            <line num="77" count="502" type="stmt"/>
            <line falsecount="502" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="502" type="stmt"/>
            <line falsecount="502" truecount="12768" num="82" type="cond"/>
            <line num="83" count="12768" type="stmt"/>
            <line num="84" count="12768" type="stmt"/>
            <line num="85" count="12768" type="stmt"/>
            <line num="87" count="12768" type="stmt"/>
            <line num="88" count="12768" type="stmt"/>
            <line num="89" count="12768" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPoint(int,int,double) : DataTableLight" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addPoints(int[],int[],double[]) : DataTableLight" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(int,int) : double" num="113" count="16216" type="method"/>
            <line num="115" count="16216" type="stmt"/>
            <line num="116" count="16216" type="stmt"/>
            <line falsecount="10" truecount="16206" num="116" type="cond"/>
            <line num="117" count="16206" type="stmt"/>
            <line num="119" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int) : boolean" num="123" count="14300" type="method"/>
            <line num="125" count="14300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : TreeSet&lt;Integer&gt;" num="128" count="424" type="method"/>
            <line num="130" count="424" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTerminations() : TreeSet&lt;Integer&gt;" num="133" count="68" type="method"/>
            <line num="135" count="68" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTerminationsForMaturity(int) : TreeSet&lt;Integer&gt;" num="138" count="1780" type="method"/>
            <line num="140" count="1780" type="stmt"/>
            <line falsecount="0" truecount="1780" num="140" type="cond"/>
            <line num="141" count="1780" type="stmt"/>
            <line num="142" count="1780" type="stmt"/>
            <line num="143" count="9120" type="stmt"/>
            <line falsecount="0" truecount="9120" num="143" type="cond"/>
            <line num="144" count="9120" type="stmt"/>
            <line num="147" count="1780" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMaturitiesForTermination(int) : TreeSet&lt;Integer&gt;" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="168" count="14" type="method"/>
            <line num="170" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : TableConvention" num="173" count="8" type="method"/>
            <line num="175" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableLight" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="187" count="82" type="method"/>
            <line num="189" count="82" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(double) : String" num="198" count="82" type="method"/>
            <line num="199" count="82" type="stmt"/>
            <line num="200" count="82" type="stmt"/>
            <line num="201" count="82" type="stmt"/>
            <line num="202" count="432" type="stmt"/>
            <line num="204" count="82" type="stmt"/>
            <line num="205" count="420" type="stmt"/>
            <line num="206" count="420" type="stmt"/>
            <line num="207" count="2320" type="stmt"/>
            <line num="208" count="2320" type="stmt"/>
            <line num="209" count="2320" type="stmt"/>
            <line falsecount="8" truecount="2312" num="209" type="cond"/>
            <line num="210" count="2312" type="stmt"/>
            <line num="215" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="218" count="162" type="method"/>
            <line num="220" count="162" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(int,int)" num="242" count="71480" type="method"/>
            <line num="243" count="71480" type="stmt"/>
            <line num="244" count="71480" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="247" count="99598" type="method"/>
            <line num="249" count="99598" type="stmt"/>
            <line falsecount="99598" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="253" count="99598" type="stmt"/>
            <line falsecount="99598" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="99598" type="stmt"/>
            <line falsecount="99598" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="260" count="99598" type="stmt"/>
            <line falsecount="60390" truecount="39208" num="260" type="cond"/>
            <line num="261" count="39208" type="stmt"/>
            <line num="263" count="60390" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="266" count="73792" type="method"/>
            <line num="268" count="73792" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="271" count="10" type="method"/>
            <line num="273" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double) : double" num="277" count="12" type="method"/>
            <line num="279" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(double,double) : boolean" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheduleMetaData() : SchedulePrototype" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/DataTableLinear.java" name="DataTableLinear.java">
            <metrics coveredelements="86" coveredconditionals="16" complexity="26" loc="210" coveredmethods="10" methods="10" elements="108" classes="1" ncloc="126" statements="78" conditionals="20" coveredstatements="60"/>
            <class name="DataTableLinear">
               <metrics coveredelements="86" coveredconditionals="16" complexity="26" coveredmethods="10" methods="10" elements="108" statements="78" conditionals="20" coveredstatements="60"/>
            </class>
            <line complexity="1" visibility="public" signature="interpolateDataTable(DataTableBasic) : DataTableLinear" num="35" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="20" type="stmt"/>
            <line num="44" count="320" type="stmt"/>
            <line num="45" count="320" type="stmt"/>
            <line num="46" count="320" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype)" num="62" count="6" type="method"/>
            <line num="64" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype,int[],int[],double[])" num="78" count="1788" type="method"/>
            <line num="80" count="1788" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataTableLinear(String,TableConvention,LocalDate,SchedulePrototype,List&lt;Integer&gt;,List&lt;Integer&gt;,List&lt;Double&gt;)" num="94" count="106" type="method"/>
            <line num="96" count="106" type="stmt"/>
            <line complexity="4" visibility="private" signature="initInterpolator() : void" num="99" count="507540" type="method"/>
            <line num="100" count="507545" type="stmt"/>
            <line falsecount="74" truecount="507470" num="100" type="cond"/>
            <line num="101" count="507473" type="stmt"/>
            <line num="104" count="74" type="stmt"/>
            <line num="105" count="74" type="stmt"/>
            <line num="106" count="74" type="stmt"/>
            <line num="107" count="74" type="stmt"/>
            <line falsecount="74" truecount="380" num="107" type="cond"/>
            <line num="108" count="380" type="stmt"/>
            <line falsecount="380" truecount="2120" num="108" type="cond"/>
            <line num="109" count="2120" type="stmt"/>
            <line num="112" count="74" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(int,int) : double" num="115" count="1621717" type="method"/>
            <line num="117" count="1621796" type="stmt"/>
            <line falsecount="1612297" truecount="7630" num="117" type="cond"/>
            <line num="118" count="7630" type="stmt"/>
            <line num="122" count="1612387" type="stmt"/>
            <line falsecount="507540" truecount="1107108" num="122" type="cond"/>
            <line num="124" count="1107154" type="stmt"/>
            <line num="125" count="1107204" type="stmt"/>
            <line num="127" count="1107193" type="stmt"/>
            <line falsecount="1105144" truecount="5509643" num="127" type="cond"/>
            <line num="128" count="5512000" type="stmt"/>
            <line num="131" count="1105374" type="stmt"/>
            <line num="132" count="1107209" type="stmt"/>
            <line num="134" count="507544" type="stmt"/>
            <line falsecount="507531" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="507542" type="stmt"/>
            <line falsecount="507526" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="507539" type="stmt"/>
            <line num="151" count="507517" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,double) : double" num="155" count="61062441" type="method"/>
            <line num="157" count="61120678" type="stmt"/>
            <line falsecount="1613925" truecount="59496743" num="157" type="cond"/>
            <line num="158" count="59570265" type="stmt"/>
            <line num="162" count="1614000" type="stmt"/>
            <line num="163" count="1614042" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="1613710" type="stmt"/>
            <line num="165" count="1613824" type="stmt"/>
            <line num="165" count="1613866" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="1613904" type="stmt"/>
            <line num="173" count="1613949" type="stmt"/>
            <line num="175" count="1614014" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : DataTableLinear" num="178" count="54" type="method"/>
            <line num="181" count="54" type="stmt"/>
            <line num="182" count="54" type="stmt"/>
            <line num="183" count="54" type="stmt"/>
            <line num="185" count="54" type="stmt"/>
            <line num="186" count="54" type="stmt"/>
            <line num="187" count="180" type="stmt"/>
            <line num="188" count="900" type="stmt"/>
            <line num="189" count="900" type="stmt"/>
            <line num="190" count="900" type="stmt"/>
            <line num="194" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="197" count="18" type="method"/>
            <line num="199" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double) : String" num="202" count="18" type="method"/>
            <line num="204" count="18" type="stmt"/>
            <line num="205" count="18" type="stmt"/>
            <line num="206" count="18" type="stmt"/>
            <line num="208" count="18" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/data/ErrorEstimation.java" name="ErrorEstimation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="441" coveredmethods="0" methods="15" elements="213" classes="1" ncloc="261" statements="156" conditionals="42" coveredstatements="0"/>
            <class name="ErrorEstimation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="40" coveredmethods="0" methods="15" elements="213" statements="156" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ErrorEstimation(LocalDate,SchedulePrototype,SchedulePrototype,AnnuityMappingType,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,String,String,String,double,double,int)" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate(SwaptionDataLattice,VolatilityCubeModel) : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="evaluateTenor(int,int,VolatilityCubeModel) : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashAverageError() : double" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashMaxError() : double" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashAverageErrorPercent() : double" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCashMaxErrorPercent() : double" num="281" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalAverageError() : double" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalMaxError() : double" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalAverageErrorPercent() : double" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="327" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPhysicalMaxErrorPercent() : double" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashAverageError(int,int,VolatilityCubeModel) : double" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashMaxError(int,int,VolatilityCubeModel) : double" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashAverageErrorPercent(int,int,VolatilityCubeModel) : double" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCashMaxErrorPercent(int,int,VolatilityCubeModel) : double" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.curves">
         <metrics coveredelements="8" complexity="6" loc="69" methods="5" classes="1" statements="9" coveredconditionals="1" coveredmethods="2" elements="16" ncloc="35" files="1" conditionals="2" coveredstatements="5"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/curves/ExponentialCorrelationCurve.java" name="ExponentialCorrelationCurve.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="6" loc="69" coveredmethods="2" methods="5" elements="16" classes="1" ncloc="35" statements="9" conditionals="2" coveredstatements="5"/>
            <class name="ExponentialCorrelationCurve">
               <metrics coveredelements="8" coveredconditionals="1" complexity="6" coveredmethods="2" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialCorrelationCurve(String,LocalDate,double,double)" num="38" count="894172" type="method"/>
            <line num="39" count="894140" type="stmt"/>
            <line num="41" count="894191" type="stmt"/>
            <line num="42" count="894217" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(AnalyticModel,double) : double" num="45" count="894152" type="method"/>
            <line num="47" count="894183" type="stmt"/>
            <line falsecount="894185" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="894197" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.crosscurrency">
         <metrics coveredelements="0" complexity="0" loc="68" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="13" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/crosscurrency/CrossCurrencyTermStructureMonteCarloSimulationModel.java" name="CrossCurrencyTermStructureMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="68" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CrossCurrencyTermStructureMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.interpolation">
         <metrics coveredelements="257" complexity="80" loc="691" methods="20" classes="5" statements="254" coveredconditionals="62" coveredmethods="16" elements="362" ncloc="421" files="2" conditionals="88" coveredstatements="179"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/interpolation/BiLinearInterpolation.java" name="BiLinearInterpolation.java">
            <metrics coveredelements="34" coveredconditionals="8" complexity="7" loc="78" coveredmethods="3" methods="3" elements="34" classes="1" ncloc="46" statements="23" conditionals="8" coveredstatements="23"/>
            <class name="BiLinearInterpolation">
               <metrics coveredelements="34" coveredconditionals="8" complexity="7" coveredmethods="3" methods="3" elements="34" statements="23" conditionals="8" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="BiLinearInterpolation(double[],double[],double[][])" num="33" count="76" type="method"/>
            <line num="34" count="76" type="stmt"/>
            <line num="35" count="76" type="stmt"/>
            <line num="36" count="76" type="stmt"/>
            <line num="37" count="76" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double,Double) : Double" num="40" count="507514" type="method"/>
            <line num="42" count="507519" type="stmt"/>
            <line complexity="5" visibility="package" signature="getValue(double,double) : double" num="45" count="515809" type="method"/>
            <line num="46" count="515811" type="stmt"/>
            <line num="47" count="515819" type="stmt"/>
            <line falsecount="499686" truecount="16134" num="47" type="cond"/>
            <line num="48" count="16134" type="stmt"/>
            <line num="50" count="515822" type="stmt"/>
            <line num="51" count="515824" type="stmt"/>
            <line num="53" count="515822" type="stmt"/>
            <line num="54" count="515822" type="stmt"/>
            <line falsecount="118" truecount="515703" num="54" type="cond"/>
            <line num="55" count="515703" type="stmt"/>
            <line num="57" count="515825" type="stmt"/>
            <line num="58" count="515826" type="stmt"/>
            <line num="60" count="515823" type="stmt"/>
            <line falsecount="471776" truecount="44044" num="60" type="cond"/>
            <line num="61" count="44044" type="stmt"/>
            <line num="63" count="515821" type="stmt"/>
            <line falsecount="515294" truecount="524" num="63" type="cond"/>
            <line num="64" count="524" type="stmt"/>
            <line num="67" count="515821" type="stmt"/>
            <line num="68" count="515824" type="stmt"/>
            <line num="70" count="515825" type="stmt"/>
            <line num="76" count="515825" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/interpolation/RationalFunctionInterpolation.java" name="RationalFunctionInterpolation.java">
            <metrics coveredelements="223" coveredconditionals="54" complexity="73" loc="613" coveredmethods="13" methods="17" elements="328" classes="4" ncloc="375" statements="231" conditionals="80" coveredstatements="156"/>
            <class name="RationalFunctionInterpolation">
               <metrics coveredelements="207" coveredconditionals="53" complexity="69" coveredmethods="10" methods="14" elements="306" statements="214" conditionals="78" coveredstatements="144"/>
            </class>
            <class name="RationalFunctionInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.RationalFunction">
               <metrics coveredelements="16" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="22" statements="17" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="package" signature="RationalFunction(double[],double[])" num="90" count="5263764" type="method"/>
            <line num="91" count="5261887" type="stmt"/>
            <line num="92" count="5265588" type="stmt"/>
            <line num="93" count="5266852" type="stmt"/>
            <line complexity="1" visibility="package" signature="RationalFunction(double[])" num="101" count="5254764" type="method"/>
            <line num="102" count="5252786" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double) : double" num="111" count="5048803" type="method"/>
            <line num="113" count="5052014" type="stmt"/>
            <line num="114" count="5051983" type="stmt"/>
            <line num="115" count="5051839" type="stmt"/>
            <line num="117" count="5051734" type="stmt"/>
            <line num="118" count="10116741" type="stmt"/>
            <line num="119" count="10114287" type="stmt"/>
            <line num="122" count="5049532" type="stmt"/>
            <line falsecount="0" truecount="5048420" num="122" type="cond"/>
            <line num="123" count="5035943" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],double[])" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],double[],InterpolationMethod,ExtrapolationMethod)" num="161" count="6532916" type="method"/>
            <line num="162" count="6532759" type="stmt"/>
            <line num="163" count="6532936" type="stmt"/>
            <line num="164" count="6532955" type="stmt"/>
            <line num="165" count="6532994" type="stmt"/>
            <line num="166" count="6533081" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double) : double" num="184" count="103183159" type="method"/>
            <line num="186" count="103190551" type="stmt"/>
            <line num="187" count="103244126" type="stmt"/>
            <line falsecount="96716988" truecount="6533250" num="187" type="cond"/>
            <line num="188" count="6533253" type="stmt"/>
            <line num="193" count="103277712" type="stmt"/>
            <line num="194" count="103279652" type="stmt"/>
            <line falsecount="101597645" truecount="1683588" num="194" type="cond"/>
            <line num="195" count="1683350" type="stmt"/>
            <line num="198" count="101590670" type="stmt"/>
            <line num="201" count="101585771" type="stmt"/>
            <line falsecount="101588885" truecount="1422" num="201" type="cond"/>
            <line num="203" count="1422" type="stmt"/>
            <line falsecount="20" truecount="1402" num="203" type="cond"/>
            <line num="204" count="1402" type="stmt"/>
            <line num="205" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="205" type="cond"/>
            <line num="206" count="20" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="101589096" type="stmt"/>
            <line falsecount="5050398" truecount="96536303" num="211" type="cond"/>
            <line num="213" count="96534017" type="stmt"/>
            <line falsecount="234" truecount="96531700" num="213" type="cond"/>
            <line num="214" count="96530888" type="stmt"/>
            <line num="215" count="234" type="stmt"/>
            <line falsecount="0" truecount="234" num="215" type="cond"/>
            <line num="216" count="234" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="5050526" type="stmt"/>
            <line num="225" count="5050628" type="stmt"/>
            <line complexity="10" visibility="private" signature="doCreateRationalFunctions() : void" num="228" count="6532966" type="method"/>
            <line num="230" count="6533004" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="72880" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="72879" type="stmt"/>
            <line num="240" count="72852" type="stmt"/>
            <line num="241" count="6458942" type="stmt"/>
            <line num="242" count="6458998" type="stmt"/>
            <line num="243" count="6457356" type="stmt"/>
            <line num="244" count="64" type="stmt"/>
            <line num="245" count="64" type="stmt"/>
            <line num="246" count="64" type="stmt"/>
            <line num="247" count="64" type="stmt"/>
            <line num="248" count="64" type="stmt"/>
            <line num="249" count="64" type="stmt"/>
            <line num="250" count="1064" type="stmt"/>
            <line num="251" count="1064" type="stmt"/>
            <line num="252" count="1064" type="stmt"/>
            <line num="253" count="54" type="stmt"/>
            <line num="254" count="54" type="stmt"/>
            <line num="255" count="54" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForPiecewiseConstantInterpolation() : void" num="259" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForLinearInterpolation() : void" num="278" count="72879" type="method"/>
            <line num="280" count="72872" type="stmt"/>
            <line falsecount="72871" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="287" count="72873" type="stmt"/>
            <line num="290" count="72876" type="stmt"/>
            <line falsecount="72859" truecount="1209134" num="290" type="cond"/>
            <line num="291" count="1209223" type="stmt"/>
            <line num="293" count="1209508" type="stmt"/>
            <line num="294" count="1209506" type="stmt"/>
            <line num="296" count="1209562" type="stmt"/>
            <line num="297" count="1209606" type="stmt"/>
            <line num="299" count="1209718" type="stmt"/>
            <line num="300" count="1209837" type="stmt"/>
            <line num="302" count="1209885" type="stmt"/>
            <line complexity="5" visibility="private" signature="doCreateRationalFunctionsForCubicSplineInterpolation() : void" num="306" count="6459038" type="method"/>
            <line num="308" count="6459028" type="stmt"/>
            <line num="311" count="6458995" type="stmt"/>
            <line num="312" count="6458962" type="stmt"/>
            <line falsecount="6458982" truecount="216" num="312" type="cond"/>
            <line num="313" count="216" type="stmt"/>
            <line num="320" count="6458968" type="stmt"/>
            <line num="322" count="6458978" type="stmt"/>
            <line num="323" count="6459089" type="stmt"/>
            <line num="326" count="6459098" type="stmt"/>
            <line num="327" count="6459162" type="stmt"/>
            <line num="328" count="6459150" type="stmt"/>
            <line num="329" count="6459160" type="stmt"/>
            <line num="331" count="6459158" type="stmt"/>
            <line falsecount="6459082" truecount="162" num="331" type="cond"/>
            <line num="333" count="162" type="stmt"/>
            <line num="335" count="162" type="stmt"/>
            <line num="336" count="162" type="stmt"/>
            <line num="337" count="162" type="stmt"/>
            <line num="340" count="6459314" type="stmt"/>
            <line falsecount="6459167" truecount="54" num="340" type="cond"/>
            <line num="341" count="54" type="stmt"/>
            <line num="342" count="54" type="stmt"/>
            <line num="346" count="6459138" type="stmt"/>
            <line num="351" count="6458585" type="stmt"/>
            <line num="354" count="6458986" type="stmt"/>
            <line falsecount="6459028" truecount="216" num="354" type="cond"/>
            <line num="355" count="216" type="stmt"/>
            <line num="357" count="215" type="stmt"/>
            <line num="358" count="216" type="stmt"/>
            <line num="359" count="216" type="stmt"/>
            <line num="360" count="216" type="stmt"/>
            <line num="362" count="216" type="stmt"/>
            <line complexity="1" visibility="private" signature="doCreateRationalFunctionsForAkimaInterpolation() : void" num="366" count="64" type="method"/>
            <line num="368" count="64" type="stmt"/>
            <line complexity="12" visibility="private" signature="doCreateRationalFunctionsForAkimaInterpolation(double) : void" num="371" count="128" type="method"/>
            <line num="373" count="128" type="stmt"/>
            <line num="375" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="375" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="128" type="stmt"/>
            <line num="382" count="128" type="stmt"/>
            <line num="383" count="128" type="stmt"/>
            <line num="384" count="128" type="stmt"/>
            <line falsecount="128" truecount="512" num="384" type="cond"/>
            <line num="385" count="512" type="stmt"/>
            <line num="386" count="512" type="stmt"/>
            <line num="387" count="512" type="stmt"/>
            <line falsecount="128" truecount="384" num="387" type="cond"/>
            <line num="388" count="384" type="stmt"/>
            <line num="393" count="128" type="stmt"/>
            <line num="397" count="128" type="stmt"/>
            <line num="400" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="404" count="128" type="stmt"/>
            <line num="409" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="128" type="stmt"/>
            <line num="419" count="128" type="stmt"/>
            <line num="422" count="128" type="stmt"/>
            <line falsecount="128" truecount="128" num="422" type="cond"/>
            <line num="424" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="424" type="cond"/>
            <line num="426" count="0" type="stmt"/>
            <line num="429" count="128" type="stmt"/>
            <line num="438" count="128" type="stmt"/>
            <line num="441" count="128" type="stmt"/>
            <line falsecount="128" truecount="511" num="441" type="cond"/>
            <line num="442" count="512" type="stmt"/>
            <line num="444" count="512" type="stmt"/>
            <line num="445" count="512" type="stmt"/>
            <line num="446" count="512" type="stmt"/>
            <line num="447" count="512" type="stmt"/>
            <line num="449" count="512" type="stmt"/>
            <line complexity="15" visibility="private" signature="doCreateRationalFunctionsForHarmonicSplineInterpolation() : void" num="454" count="1118" type="method"/>
            <line num="455" count="1118" type="stmt"/>
            <line num="458" count="1117" type="stmt"/>
            <line num="459" count="1118" type="stmt"/>
            <line num="460" count="1118" type="stmt"/>
            <line num="461" count="1118" type="stmt"/>
            <line falsecount="1118" truecount="4052096" num="461" type="cond"/>
            <line num="462" count="4051647" type="stmt"/>
            <line num="463" count="4054663" type="stmt"/>
            <line num="464" count="4055350" type="stmt"/>
            <line falsecount="1118" truecount="4057032" num="464" type="cond"/>
            <line num="465" count="4057186" type="stmt"/>
            <line num="470" count="1118" type="stmt"/>
            <line num="474" count="1118" type="stmt"/>
            <line num="477" count="1118" type="stmt"/>
            <line num="481" count="1118" type="stmt"/>
            <line falsecount="1064" truecount="54" num="481" type="cond"/>
            <line num="483" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="491" type="cond"/>
            <line num="493" count="0" type="stmt"/>
            <line num="495" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="495" type="cond"/>
            <line num="496" count="0" type="stmt"/>
            <line num="501" count="1118" type="stmt"/>
            <line falsecount="1118" truecount="4064020" num="501" type="cond"/>
            <line num="502" count="4064706" type="stmt"/>
            <line falsecount="4063756" truecount="2020" num="502" type="cond"/>
            <line num="503" count="2020" type="stmt"/>
            <line num="506" count="4064067" type="stmt"/>
            <line num="508" count="4065588" type="stmt"/>
            <line num="515" count="1118" type="stmt"/>
            <line num="518" count="1118" type="stmt"/>
            <line falsecount="1118" truecount="4034933" num="518" type="cond"/>
            <line num="519" count="4035776" type="stmt"/>
            <line num="521" count="4040643" type="stmt"/>
            <line num="522" count="4044224" type="stmt"/>
            <line num="523" count="4046195" type="stmt"/>
            <line num="524" count="4049176" type="stmt"/>
            <line num="526" count="4054670" type="stmt"/>
            <line complexity="6" visibility="public" signature="main(String[]) : void" num="532" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="565" type="cond"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="575" type="cond"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="585" type="cond"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="603" count="4006" type="method"/>
            <line num="605" count="4006" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="608" count="6" type="method"/>
            <line num="609" count="6" type="stmt"/>
            <line num="611" count="6" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata2.interpolation">
         <metrics coveredelements="66" complexity="29" loc="367" methods="11" classes="4" statements="78" coveredconditionals="15" coveredmethods="6" elements="117" ncloc="155" files="1" conditionals="28" coveredstatements="45"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/interpolation/RationalFunctionInterpolation.java" name="RationalFunctionInterpolation.java">
            <metrics coveredelements="66" coveredconditionals="15" complexity="29" loc="367" coveredmethods="6" methods="11" elements="117" classes="4" ncloc="155" statements="78" conditionals="28" coveredstatements="45"/>
            <class name="RationalFunctionInterpolation">
               <metrics coveredelements="51" coveredconditionals="12" complexity="23" coveredmethods="4" methods="8" elements="89" statements="59" conditionals="22" coveredstatements="35"/>
            </class>
            <class name="RationalFunctionInterpolation.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.ExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RationalFunctionInterpolation.RationalFunction">
               <metrics coveredelements="15" coveredconditionals="3" complexity="6" coveredmethods="2" methods="3" elements="28" statements="19" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="package" signature="RationalFunction(RandomVariable[],RandomVariable[])" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="RationalFunction(RandomVariable[])" num="95" count="3062" type="method"/>
            <line num="96" count="3062" type="stmt"/>
            <line num="97" count="3062" type="stmt"/>
            <line num="98" count="3062" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double) : RandomVariable" num="107" count="3346" type="method"/>
            <line num="109" count="3346" type="stmt"/>
            <line num="111" count="3346" type="stmt"/>
            <line num="113" count="3346" type="stmt"/>
            <line falsecount="3346" truecount="3346" num="113" type="cond"/>
            <line num="114" count="3346" type="stmt"/>
            <line num="115" count="3346" type="stmt"/>
            <line num="118" count="3346" type="stmt"/>
            <line falsecount="0" truecount="3346" num="118" type="cond"/>
            <line num="119" count="3346" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],RandomVariable[])" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RationalFunctionInterpolation(double[],RandomVariable[],InterpolationMethod,ExtrapolationMethod)" num="157" count="712" type="method"/>
            <line num="158" count="712" type="stmt"/>
            <line num="159" count="712" type="stmt"/>
            <line num="160" count="712" type="stmt"/>
            <line num="161" count="712" type="stmt"/>
            <line num="162" count="712" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValue(double) : RandomVariable" num="181" count="7332" type="method"/>
            <line num="183" count="7332" type="stmt"/>
            <line num="184" count="7332" type="stmt"/>
            <line falsecount="6620" truecount="712" num="184" type="cond"/>
            <line num="185" count="712" type="stmt"/>
            <line num="190" count="7332" type="stmt"/>
            <line num="191" count="7332" type="stmt"/>
            <line falsecount="4234" truecount="3098" num="191" type="cond"/>
            <line num="192" count="3098" type="stmt"/>
            <line num="195" count="4234" type="stmt"/>
            <line num="198" count="4234" type="stmt"/>
            <line falsecount="3790" truecount="444" num="198" type="cond"/>
            <line num="200" count="444" type="stmt"/>
            <line falsecount="0" truecount="444" num="200" type="cond"/>
            <line num="201" count="444" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="3790" type="stmt"/>
            <line falsecount="3346" truecount="444" num="208" type="cond"/>
            <line num="210" count="444" type="stmt"/>
            <line falsecount="0" truecount="444" num="210" type="cond"/>
            <line num="211" count="444" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="3346" type="stmt"/>
            <line num="222" count="3346" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="225" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="doCreateRationalFunctions() : void" num="231" count="712" type="method"/>
            <line num="233" count="712" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="540" type="stmt"/>
            <line num="241" count="172" type="stmt"/>
            <line num="242" count="712" type="stmt"/>
            <line num="243" count="712" type="stmt"/>
            <line complexity="3" visibility="private" signature="doCreateRationalFunctionsForPiecewiseConstantInterpolation() : void" num="248" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="doCreateRationalFunctionsForLinearInterpolation() : void" num="267" count="712" type="method"/>
            <line num="272" count="712" type="stmt"/>
            <line num="275" count="712" type="stmt"/>
            <line falsecount="712" truecount="3062" num="275" type="cond"/>
            <line num="276" count="3062" type="stmt"/>
            <line num="278" count="3062" type="stmt"/>
            <line num="279" count="3062" type="stmt"/>
            <line num="281" count="3062" type="stmt"/>
            <line num="282" count="3062" type="stmt"/>
            <line num="284" count="3062" type="stmt"/>
            <line num="285" count="3062" type="stmt"/>
            <line num="287" count="3062" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate">
         <metrics coveredelements="72" complexity="16" loc="233" methods="6" classes="1" statements="76" coveredconditionals="13" coveredmethods="3" elements="100" ncloc="148" files="1" conditionals="18" coveredstatements="56"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/Utils.java" name="Utils.java">
            <metrics coveredelements="72" coveredconditionals="13" complexity="16" loc="233" coveredmethods="3" methods="6" elements="100" classes="1" ncloc="148" statements="76" conditionals="18" coveredstatements="56"/>
            <class name="Utils">
               <metrics coveredelements="72" coveredconditionals="13" complexity="16" coveredmethods="3" methods="6" elements="100" statements="76" conditionals="18" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="convertTableToLattice(DataTable,QuotingConvention,LocalDate,String,String,SchedulePrototype,SchedulePrototype) : SwaptionDataLattice" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 45()" num="45" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convertMapOfTablesToLattice(Map&lt;Integer, DataTable&gt;,QuotingConvention,LocalDate,String,String,SchedulePrototype,SchedulePrototype) : SwaptionDataLattice" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="shiftCashToPhysicalSmile(VolatilityCubeModel,SwaptionDataLattice,SwaptionDataLattice) : SwaptionDataLattice" num="106" count="6" type="method"/>
            <line num="108" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="111" count="12" type="stmt"/>
            <line num="113" count="12" type="stmt"/>
            <line num="114" count="12" type="stmt"/>
            <line num="115" count="12" type="stmt"/>
            <line num="116" count="12" type="stmt"/>
            <line num="118" count="12" type="stmt"/>
            <line num="119" count="60" type="stmt"/>
            <line falsecount="48" truecount="12" num="119" type="cond"/>
            <line num="120" count="12" type="stmt"/>
            <line num="123" count="48" type="stmt"/>
            <line num="124" count="240" type="stmt"/>
            <line num="125" count="1194" type="stmt"/>
            <line falsecount="1194" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="1194" type="stmt"/>
            <line num="130" count="1194" type="stmt"/>
            <line num="131" count="1194" type="stmt"/>
            <line num="132" count="1194" type="stmt"/>
            <line num="138" count="12" type="stmt"/>
            <line num="145" count="12" type="stmt"/>
            <line num="148" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="convertCashLatticeToNormalVolatility(SwaptionDataLattice,VolatilityCubeModel) : SwaptionDataLattice" num="159" count="12" type="method"/>
            <line num="162" count="12" type="stmt"/>
            <line num="163" count="12" type="stmt"/>
            <line num="164" count="12" type="stmt"/>
            <line num="166" count="12" type="stmt"/>
            <line num="167" count="12" type="stmt"/>
            <line num="168" count="12" type="stmt"/>
            <line num="169" count="12" type="stmt"/>
            <line num="171" count="12" type="stmt"/>
            <line num="172" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="172" type="cond"/>
            <line num="173" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="174" type="cond"/>
            <line num="175" count="6" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="12" type="stmt"/>
            <line num="181" count="60" type="stmt"/>
            <line num="182" count="300" type="stmt"/>
            <line num="183" count="1494" type="stmt"/>
            <line num="184" count="1494" type="stmt"/>
            <line num="185" count="1494" type="stmt"/>
            <line num="186" count="1494" type="stmt"/>
            <line falsecount="744" truecount="750" num="186" type="cond"/>
            <line num="187" count="1494" type="stmt"/>
            <line num="188" count="1494" type="stmt"/>
            <line num="190" count="1494" type="stmt"/>
            <line num="191" count="1494" type="stmt"/>
            <line num="192" count="1494" type="stmt"/>
            <line falsecount="744" truecount="750" num="192" type="cond"/>
            <line num="193" count="750" type="stmt"/>
            <line num="194" count="750" type="stmt"/>
            <line num="196" count="744" type="stmt"/>
            <line num="197" count="744" type="stmt"/>
            <line num="203" count="12" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double,Schedule) : double" num="218" count="1494" type="method"/>
            <line num="220" count="1494" type="stmt"/>
            <line num="221" count="1494" type="stmt"/>
            <line num="222" count="1494" type="stmt"/>
            <line falsecount="1494" truecount="15270" num="222" type="cond"/>
            <line num="223" count="15270" type="stmt"/>
            <line num="225" count="1494" type="stmt"/>
            <line num="227" count="1494" type="stmt"/>
            <line falsecount="1494" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="1494" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model">
         <metrics coveredelements="25" complexity="16" loc="172" methods="10" classes="2" statements="21" coveredconditionals="2" coveredmethods="7" elements="35" ncloc="79" files="2" conditionals="4" coveredstatements="16"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/AnalyticModelWithVolatilityCubes.java" name="AnalyticModelWithVolatilityCubes.java">
            <metrics coveredelements="25" coveredconditionals="2" complexity="16" loc="115" coveredmethods="7" methods="10" elements="35" classes="1" ncloc="67" statements="21" conditionals="4" coveredstatements="16"/>
            <class name="AnalyticModelWithVolatilityCubes">
               <metrics coveredelements="25" coveredconditionals="2" complexity="16" coveredmethods="7" methods="10" elements="35" statements="21" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes()" num="33" count="22" type="method"/>
            <line num="34" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes(LocalDate)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelWithVolatilityCubes(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;,Map&lt;String, VolatilityCube&gt;)" num="54" count="43592" type="method"/>
            <line num="56" count="43592" type="stmt"/>
            <line num="57" count="43592" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCube(String) : VolatilityCube" num="60" count="34718161" type="method"/>
            <line num="62" count="34732296" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilityCube(VolatilityCube) : VolatilityCubeModel" num="65" count="43515" type="method"/>
            <line num="68" count="43520" type="stmt"/>
            <line num="70" count="43521" type="stmt"/>
            <line falsecount="43511" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="43502" type="stmt"/>
            <line num="75" count="43521" type="stmt"/>
            <line num="77" count="43517" type="stmt"/>
            <line complexity="4" visibility="public" signature="addVolatilityCube(String,VolatilityCube) : VolatilityCubeModel" num="80" count="2" type="method"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelWithVolatilityCubes" num="95" count="43588" type="method"/>
            <line num="97" count="43589" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubeNames() : Set&lt;String&gt;" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityCubes() : Map&lt;String, VolatilityCube&gt;" num="111" count="43586" type="method"/>
            <line num="113" count="43584" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/VolatilityCubeModel.java" name="VolatilityCubeModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="57" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilityCubeModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet">
         <metrics coveredelements="0" complexity="143" loc="979" methods="48" classes="5" statements="367" coveredconditionals="0" coveredmethods="0" elements="569" ncloc="672" files="5" conditionals="154" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapShiftedVol.java" name="CapShiftedVol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="143" coveredmethods="0" methods="2" elements="69" classes="1" ncloc="76" statements="41" conditionals="26" coveredstatements="0"/>
            <class name="CapShiftedVol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="2" elements="69" statements="41" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapShiftedVol(Schedule,String,double,boolean,String,String,double)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="getValueAsPrice(double,AnalyticModel) : double" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapTenorStructure.java" name="CapTenorStructure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CapTenorStructure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapVolMarketData.java" name="CapVolMarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="206" coveredmethods="0" methods="27" elements="93" classes="1" ncloc="139" statements="52" conditionals="14" coveredstatements="0"/>
            <class name="CapVolMarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="27" elements="93" statements="52" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CapVolMarketData(String,String,String,CapTenorStructure,int[],double[],double[][],double,int,int,int)" num="41" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapVolMarketData(String,String,CapTenorStructure,int[],double[],double[][],double,int)" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapVolData(int,double) : double" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapVolData(int,int) : double" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShift() : double" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfStrikes() : int" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfExpiryDates() : int" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxExpiryInMonths() : int" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxExpiryInYears() : double" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryInMonths(int) : int" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryInYears(int) : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolMatrix() : double[][]" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikeVector() : double[]" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryVectorInMonths() : int[]" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpiryVectorInYears() : double[]" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRowIndex(int) : int" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike(int) : double" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getColumnIndex(double) : int" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapTenorStructure() : CapTenorStructure" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTenorInMonths() : int" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTenorInMonthsBeforeChange() : int" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenorChangeTimeInMonths() : int" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : String" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndexBeforeChange() : String" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountIndex() : String" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCapVolMatrixEntry(int,int,double) : void" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffsetCodeFromIndex(String) : String" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapletVolBootstrapping.java" name="CapletVolBootstrapping.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="57" loc="378" coveredmethods="0" methods="8" elements="279" classes="1" ncloc="300" statements="193" conditionals="78" coveredstatements="0"/>
            <class name="CapletVolBootstrapping">
               <metrics coveredelements="0" coveredconditionals="0" complexity="57" coveredmethods="0" methods="8" elements="279" statements="193" conditionals="78" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="CapletVolBootstrapping(CorrelationProvider,CapVolMarketData,AnalyticModel)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolBootstrapping(CapVolMarketData,AnalyticModel)" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="33" visibility="public" signature="getCapletVolMatrix() : double[][]" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="16" visibility="public" signature="calculateCapVolsFromCapletVols(double[][]) : double[][]" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="305" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParsedModel() : AnalyticModel" num="363" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="371" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCapletFixingTimeVectorInYears() : double[]" num="375" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/CapletVolatilitySurface.java" name="CapletVolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="243" coveredmethods="0" methods="11" elements="128" classes="1" ncloc="152" statements="81" conditionals="36" coveredstatements="0"/>
            <class name="CapletVolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="11" elements="128" statements="81" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitySurface(String,LocalDate,double[][],double[],double[],ForwardCurve,QuotingConvention,DiscountCurve)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="CapletVolatilitySurface(String,LocalDate,double,double[],double[],ForwardCurve,QuotingConvention,DiscountCurve)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process">
         <metrics coveredelements="162" complexity="76" loc="861" methods="41" classes="7" statements="149" coveredconditionals="36" coveredmethods="22" elements="236" ncloc="377" files="6" conditionals="46" coveredstatements="104"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/EulerSchemeFromProcessModel.java" name="EulerSchemeFromProcessModel.java">
            <metrics coveredelements="127" coveredconditionals="32" complexity="47" loc="391" coveredmethods="10" methods="16" elements="157" classes="2" ncloc="208" statements="101" conditionals="40" coveredstatements="85"/>
            <class name="EulerSchemeFromProcessModel">
               <metrics coveredelements="127" coveredconditionals="32" complexity="47" coveredmethods="10" methods="16" elements="157" statements="101" conditionals="40" coveredstatements="85"/>
            </class>
            <class name="EulerSchemeFromProcessModel.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 63()" num="63" count="102" type="method"/>
            <line num="65" count="102" type="stmt"/>
            <line complexity="1" visibility="public" signature="EulerSchemeFromProcessModel(ProcessModel,IndependentIncrements,Scheme)" num="96" count="1662" type="method"/>
            <line num="97" count="1662" type="stmt"/>
            <line num="98" count="1662" type="stmt"/>
            <line num="99" count="1662" type="stmt"/>
            <line complexity="1" visibility="public" signature="EulerSchemeFromProcessModel(ProcessModel,IndependentIncrements)" num="108" count="6860" type="method"/>
            <line num="109" count="6860" type="stmt"/>
            <line num="110" count="6853" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="119" count="22148084" type="method"/>
            <line num="122" count="22154951" type="stmt"/>
            <line num="123" count="22221369" type="stmt"/>
            <line falsecount="22213926" truecount="7438" num="123" type="cond"/>
            <line num="124" count="7438" type="stmt"/>
            <line num="128" count="22220648" type="stmt"/>
            <line falsecount="22219572" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="22219390" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="142" count="1209459" type="method"/>
            <line num="145" count="1209522" type="stmt"/>
            <line num="146" count="1210098" type="stmt"/>
            <line falsecount="1210082" truecount="16" num="146" type="cond"/>
            <line num="147" count="16" type="stmt"/>
            <line num="152" count="1210089" type="stmt"/>
            <line complexity="19" visibility="private" signature="doPrecalculateProcess() : void" num="158" count="7454" type="method"/>
            <line num="159" count="7454" type="stmt"/>
            <line falsecount="7453" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="7454" type="stmt"/>
            <line num="164" count="7454" type="stmt"/>
            <line num="165" count="7451" type="stmt"/>
            <line num="168" count="7454" type="stmt"/>
            <line num="169" count="7454" type="stmt"/>
            <line num="172" count="7454" type="stmt"/>
            <line num="175" count="7452" type="stmt"/>
            <line num="176" count="7453" type="stmt"/>
            <line num="177" count="7453" type="stmt"/>
            <line falsecount="7453" truecount="679299" num="177" type="cond"/>
            <line num="178" count="679313" type="stmt"/>
            <line num="179" count="679319" type="stmt"/>
            <line num="187" count="7451" type="stmt"/>
            <line num="190" count="7453" type="stmt"/>
            <line falsecount="7454" truecount="757419" num="190" type="cond"/>
            <line num="191" count="757402" type="stmt"/>
            <line num="193" count="757399" type="stmt"/>
            <line num="196" count="757389" type="stmt"/>
            <line num="197" count="757391" type="stmt"/>
            <line num="198" count="757382" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="205" count="757447" type="stmt"/>
            <line num="208" count="757443" type="stmt"/>
            <line num="209" count="757430" type="stmt"/>
            <line falsecount="757445" truecount="102446837" num="209" type="cond"/>
            <line num="210" count="102446828" type="stmt"/>
            <line num="212" count="102446819" type="stmt"/>
            <line num="215" count="102446823" type="stmt"/>
            <line falsecount="50910304" truecount="51536511" num="215" type="cond"/>
            <line num="216" count="51536510" type="stmt"/>
            <line num="217" count="51536509" type="stmt"/>
            <line num="220" count="50910306" type="stmt"/>
            <line complexity="5" visibility="public" signature="call() : RandomVariable" num="221" count="50698433" type="method"/>
            <line num="223" count="50712927" type="stmt"/>
            <line falsecount="1415603" truecount="49286134" num="223" type="cond"/>
            <line num="224" count="49294892" type="stmt"/>
            <line num="227" count="50617256" type="stmt"/>
            <line num="230" count="50304247" type="stmt"/>
            <line falsecount="50381065" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="50424386" type="stmt"/>
            <line falsecount="0" truecount="50452911" num="235" type="cond"/>
            <line num="236" count="50472378" type="stmt"/>
            <line num="240" count="50073765" type="stmt"/>
            <line num="243" count="50209216" type="stmt"/>
            <line num="251" count="50910322" type="stmt"/>
            <line num="252" count="50910316" type="stmt"/>
            <line num="253" count="50910306" type="stmt"/>
            <line falsecount="0" truecount="50910312" num="253" type="cond"/>
            <line num="254" count="50910296" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="263" count="50910348" type="stmt"/>
            <line num="267" count="757448" type="stmt"/>
            <line falsecount="757420" truecount="102446819" num="267" type="cond"/>
            <line num="268" count="102446823" type="stmt"/>
            <line num="269" count="102446820" type="stmt"/>
            <line num="270" count="102446838" type="stmt"/>
            <line falsecount="51536499" truecount="50910340" num="270" type="cond"/>
            <line num="271" count="50910338" type="stmt"/>
            <line num="273" count="51536494" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="280" count="757417" type="stmt"/>
            <line falsecount="751826" truecount="5600" num="280" type="cond"/>
            <line num="283" count="5600" type="stmt"/>
            <line num="285" count="5600" type="stmt"/>
            <line falsecount="5600" truecount="255200" num="285" type="cond"/>
            <line num="286" count="255200" type="stmt"/>
            <line num="287" count="255200" type="stmt"/>
            <line num="289" count="255200" type="stmt"/>
            <line falsecount="129600" truecount="125600" num="289" type="cond"/>
            <line num="290" count="125600" type="stmt"/>
            <line num="294" count="129600" type="stmt"/>
            <line num="297" count="129600" type="stmt"/>
            <line num="300" count="129600" type="stmt"/>
            <line num="305" count="757421" type="stmt"/>
            <line num="308" count="7454" type="stmt"/>
            <line num="309" count="7454" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="319" count="2008055" type="method"/>
            <line num="321" count="2008055" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="327" count="715243" type="method"/>
            <line num="329" count="715244" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStochasticDriver() : IndependentIncrements" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="343" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : EulerSchemeFromProcessModel" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedModel(ProcessModel) : MonteCarloProcess" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloProcess" num="357" count="1344" type="method"/>
            <line num="359" count="1344" type="stmt"/>
            <line num="361" count="1344" type="stmt"/>
            <line falsecount="1344" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="365" count="1344" type="stmt"/>
            <line num="366" count="1344" type="stmt"/>
            <line falsecount="1344" truecount="0" num="366" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="369" count="1344" type="stmt"/>
            <line falsecount="1344" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="373" count="1344" type="stmt"/>
            <line num="376" count="1344" type="stmt"/>
            <line num="378" count="1344" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="386" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/LinearInterpolatedTimeDiscreteProcess.java" name="LinearInterpolatedTimeDiscreteProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="159" coveredmethods="0" methods="12" elements="42" classes="1" ncloc="74" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="LinearInterpolatedTimeDiscreteProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="12" elements="42" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearInterpolatedTimeDiscreteProcess(Map&lt;Double, RandomVariable&gt;)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LinearInterpolatedTimeDiscreteProcess(TimeDiscretization,Map&lt;Double, RandomVariable&gt;)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(LinearInterpolatedTimeDiscreteProcess) : LinearInterpolatedTimeDiscreteProcess" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : LinearInterpolatedTimeDiscreteProcess" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProcessValue(double,int) : RandomVariable" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Process" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/MonteCarloProcess.java" name="MonteCarloProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="83" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/MonteCarloProcessFromProcessModel.java" name="MonteCarloProcessFromProcessModel.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="13" loc="107" coveredmethods="11" methods="11" elements="28" classes="1" ncloc="54" statements="15" conditionals="2" coveredstatements="15"/>
            <class name="MonteCarloProcessFromProcessModel">
               <metrics coveredelements="28" coveredconditionals="2" complexity="13" coveredmethods="11" methods="11" elements="28" statements="15" conditionals="2" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloProcessFromProcessModel(TimeDiscretization,ProcessModel)" num="34" count="8518" type="method"/>
            <line num="35" count="8520" type="stmt"/>
            <line num="36" count="8520" type="stmt"/>
            <line num="37" count="8521" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : ProcessModel" num="50" count="20104" type="method"/>
            <line num="52" count="20104" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="55" count="278346" type="method"/>
            <line num="57" count="278347" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState() : RandomVariable[]" num="60" count="7454" type="method"/>
            <line num="61" count="7453" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="64" count="762998" type="method"/>
            <line num="65" count="762995" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="68" count="50617866" type="method"/>
            <line num="70" count="50647044" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(int,int,RandomVariable) : RandomVariable" num="73" count="51079418" type="method"/>
            <line num="75" count="51120766" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(int,int,RandomVariable) : RandomVariable" num="78" count="49237203" type="method"/>
            <line num="80" count="49263246" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="87" count="936513" type="method"/>
            <line num="89" count="936532" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTime(int) : double" num="92" count="104151222" type="method"/>
            <line num="94" count="104192100" type="stmt"/>
            <line falsecount="103876984" truecount="736" num="94" type="cond"/>
            <line num="95" count="736" type="stmt"/>
            <line num="97" count="103951770" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="100" count="12635248" type="method"/>
            <line num="102" count="12637449" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/Process.java" name="Process.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="3" loc="92" coveredmethods="1" methods="2" elements="9" classes="1" ncloc="22" statements="5" conditionals="2" coveredstatements="4"/>
            <class name="Process">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="1" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="getModel() : ProcessModel" num="26" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getProcessValue(int) : RandomVariable[]" num="35" count="880" type="method"/>
            <line num="36" count="880" type="stmt"/>
            <line num="37" count="880" type="stmt"/>
            <line falsecount="880" truecount="880" num="37" type="cond"/>
            <line num="38" count="880" type="stmt"/>
            <line num="40" count="880" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/ProcessTimeDiscretizationProvider.java" name="ProcessTimeDiscretizationProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProcessTimeDiscretizationProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.conditionalexpectation">
         <metrics coveredelements="106" complexity="45" loc="554" methods="24" classes="10" statements="112" coveredconditionals="26" coveredmethods="10" elements="176" ncloc="263" files="8" conditionals="40" coveredstatements="70"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/LinearRegression.java" name="LinearRegression.java">
            <metrics coveredelements="42" coveredconditionals="12" complexity="9" loc="89" coveredmethods="2" methods="2" elements="45" classes="1" ncloc="46" statements="29" conditionals="14" coveredstatements="28"/>
            <class name="LinearRegression">
               <metrics coveredelements="42" coveredconditionals="12" complexity="9" coveredmethods="2" methods="2" elements="45" statements="29" conditionals="14" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearRegression(RandomVariable[])" num="25" count="6" type="method"/>
            <line num="26" count="6" type="stmt"/>
            <line num="27" count="6" type="stmt"/>
            <line complexity="8" visibility="public" signature="getRegressionCoefficients(RandomVariable) : double[]" num="36" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="40" type="cond"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="46" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="56" type="cond"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="73" type="cond"/>
            <line num="74" count="6" type="stmt"/>
            <line falsecount="6" truecount="12" num="74" type="cond"/>
            <line num="75" count="12" type="stmt"/>
            <line num="76" count="12" type="stmt"/>
            <line num="77" count="12" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="82" type="cond"/>
            <line num="83" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationLinearRegressionFactory.java" name="MonteCarloConditionalExpectationLinearRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="18" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationLinearRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(RandomVariable[],RandomVariable[]) : ConditionalExpectationEstimator" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory.java" name="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="27" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationLocalizedOnDependentRegressionFactory(double)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(RandomVariable[],RandomVariable[]) : ConditionalExpectationEstimator" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegression.java" name="MonteCarloConditionalExpectationRegression.java">
            <metrics coveredelements="64" coveredconditionals="14" complexity="18" loc="180" coveredmethods="8" methods="10" elements="70" classes="3" ncloc="95" statements="44" conditionals="16" coveredstatements="42"/>
            <class name="MonteCarloConditionalExpectationRegression">
               <metrics coveredelements="59" coveredconditionals="14" complexity="16" coveredmethods="6" methods="8" elements="65" statements="41" conditionals="16" coveredstatements="39"/>
            </class>
            <class name="MonteCarloConditionalExpectationRegression.RegressionBasisFunctions">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MonteCarloConditionalExpectationRegression.RegressionBasisFunctionsGiven">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="RegressionBasisFunctionsGiven(RandomVariable[])" num="51" count="3062" type="method"/>
            <line num="52" count="3062" type="stmt"/>
            <line num="53" count="3062" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions() : RandomVariable[]" num="56" count="5856" type="method"/>
            <line num="58" count="5856" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression()" num="69" count="2688" type="method"/>
            <line num="70" count="2688" type="stmt"/>
            <line num="71" count="2688" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression(RandomVariable[])" num="79" count="2314" type="method"/>
            <line num="80" count="2314" type="stmt"/>
            <line num="81" count="2314" type="stmt"/>
            <line num="82" count="2314" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegression(RandomVariable[],RandomVariable[])" num="91" count="374" type="method"/>
            <line num="92" count="374" type="stmt"/>
            <line num="93" count="374" type="stmt"/>
            <line num="94" count="374" type="stmt"/>
            <line complexity="2" visibility="public" signature="getConditionalExpectation(RandomVariable) : RandomVariable" num="97" count="2928" type="method"/>
            <line num="100" count="2928" type="stmt"/>
            <line num="103" count="2928" type="stmt"/>
            <line num="104" count="2928" type="stmt"/>
            <line num="105" count="2928" type="stmt"/>
            <line falsecount="2928" truecount="18842" num="105" type="cond"/>
            <line num="106" count="18842" type="stmt"/>
            <line num="109" count="2928" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLinearRegressionParameters(RandomVariable) : double[]" num="118" count="2928" type="method"/>
            <line num="120" count="2928" type="stmt"/>
            <line num="125" count="2928" type="stmt"/>
            <line num="126" count="2928" type="stmt"/>
            <line falsecount="244" truecount="2684" num="126" type="cond"/>
            <line num="128" count="2684" type="stmt"/>
            <line num="129" count="2684" type="stmt"/>
            <line falsecount="2684" truecount="20454" num="129" type="cond"/>
            <line num="130" count="20454" type="stmt"/>
            <line falsecount="20454" truecount="137434" num="130" type="cond"/>
            <line num="131" count="137434" type="stmt"/>
            <line num="132" count="137434" type="stmt"/>
            <line num="136" count="2684" type="stmt"/>
            <line num="141" count="2928" type="stmt"/>
            <line num="142" count="2928" type="stmt"/>
            <line falsecount="2928" truecount="21770" num="142" type="cond"/>
            <line num="143" count="21770" type="stmt"/>
            <line num="147" count="2928" type="stmt"/>
            <line num="149" count="2928" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsEstimator() : RegressionBasisFunctions" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsPredictor() : RegressionBasisFunctions" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getNonZeroBasisFunctions(RandomVariable[]) : RandomVariable[]" num="160" count="3062" type="method"/>
            <line num="161" count="3062" type="stmt"/>
            <line num="162" count="3062" type="stmt"/>
            <line falsecount="3062" truecount="22344" num="162" type="cond"/>
            <line num="163" count="22344" type="stmt"/>
            <line falsecount="0" truecount="22344" num="163" type="cond"/>
            <line num="164" count="22344" type="stmt"/>
            <line num="168" count="3062" type="stmt"/>
            <line num="170" count="3062" type="stmt"/>
            <line num="171" count="3062" type="stmt"/>
            <line num="172" count="22344" type="stmt"/>
            <line falsecount="0" truecount="22344" num="172" type="cond"/>
            <line num="173" count="22344" type="stmt"/>
            <line num="174" count="22344" type="stmt"/>
            <line num="178" count="3062" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegressionFactory.java" name="MonteCarloConditionalExpectationRegressionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationRegressionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/MonteCarloConditionalExpectationRegressionLocalizedOnDependents.java" name="MonteCarloConditionalExpectationRegressionLocalizedOnDependents.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="129" coveredmethods="0" methods="6" elements="38" classes="1" ncloc="51" statements="24" conditionals="8" coveredstatements="0"/>
            <class name="MonteCarloConditionalExpectationRegressionLocalizedOnDependents">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="6" elements="38" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],RandomVariable[],double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],double)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents()" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[])" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloConditionalExpectationRegressionLocalizedOnDependents(RandomVariable[],RandomVariable[])" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLinearRegressionParameters(RandomVariable) : double[]" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/RegressionBasisFunctionsFromProducts.java" name="RegressionBasisFunctionsFromProducts.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="60" coveredmethods="0" methods="3" elements="16" classes="1" ncloc="35" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="RegressionBasisFunctionsFromProducts">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="16" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RegressionBasisFunctionsFromProducts(List&lt;AbstractMonteCarloProduct&gt;)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="35" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(AbstractMonteCarloProduct) : RandomVariable" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/conditionalexpectation/RegressionBasisFunctionsProvider.java" name="RegressionBasisFunctionsProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RegressionBasisFunctionsProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.util">
         <metrics coveredelements="0" complexity="9" loc="50" methods="2" classes="1" statements="15" coveredconditionals="0" coveredmethods="0" elements="19" ncloc="31" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/util/FileUtilities.java" name="FileUtilities.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="50" coveredmethods="0" methods="2" elements="19" classes="1" ncloc="31" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="FileUtilities">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="19" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="loadObject(File) : Object" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="writeObject(File,Object) : void" num="38" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.calibration">
         <metrics coveredelements="591" complexity="148" loc="2029" methods="92" classes="7" statements="618" coveredconditionals="50" coveredmethods="51" elements="792" ncloc="1155" files="5" conditionals="82" coveredstatements="490"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/AbstractCubeCalibration.java" name="AbstractCubeCalibration.java">
            <metrics coveredelements="113" coveredconditionals="8" complexity="33" loc="463" coveredmethods="14" methods="21" elements="154" classes="2" ncloc="226" statements="119" conditionals="14" coveredstatements="91"/>
            <class name="AbstractCubeCalibration">
               <metrics coveredelements="107" coveredconditionals="8" complexity="26" coveredmethods="12" methods="18" elements="127" statements="95" conditionals="14" coveredstatements="87"/>
            </class>
            <class name="AbstractCubeCalibration.SwaptionInfo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="7" coveredmethods="2" methods="3" elements="27" statements="24" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="AbstractCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="80" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="calibrate(String) : VolatilityCube" num="130" count="4" type="method"/>
            <line num="133" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="runOptimization() : void" num="148" count="4" type="method"/>
            <line num="150" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="157" count="58" type="method"/>
            <line num="161" count="58" type="stmt"/>
            <line num="164" count="58" type="stmt"/>
            <line num="165" count="58" type="stmt"/>
            <line num="166" count="58" type="stmt"/>
            <line num="169" count="57" type="stmt"/>
            <line num="170" count="58" type="stmt"/>
            <line num="171" count="57" type="stmt"/>
            <line num="172" count="57" type="stmt"/>
            <line num="173" count="58" type="stmt"/>
            <line num="174" count="58" type="stmt"/>
            <line num="175" count="57" type="stmt"/>
            <line num="176" count="58" type="stmt"/>
            <line num="178" count="58" type="stmt"/>
            <line num="180" count="58" type="stmt"/>
            <line num="181" count="58" type="stmt"/>
            <line num="182" count="58" type="stmt"/>
            <line num="183" count="7248" type="stmt"/>
            <line num="184" count="7246" type="stmt"/>
            <line num="185" count="7244" type="stmt"/>
            <line num="186" count="7249" type="stmt"/>
            <line num="188" count="7246" type="stmt"/>
            <line falsecount="0" truecount="7250" num="189" type="cond"/>
            <line num="190" count="7249" type="stmt"/>
            <line falsecount="0" truecount="7250" num="191" type="cond"/>
            <line num="194" count="7250" type="stmt"/>
            <line num="195" count="7248" type="stmt"/>
            <line falsecount="7249" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="7250" type="stmt"/>
            <line num="200" count="7244" type="stmt"/>
            <line num="201" count="7247" type="stmt"/>
            <line num="204" count="7249" type="stmt"/>
            <line num="206" count="7248" type="stmt"/>
            <line num="210" count="58" type="stmt"/>
            <line num="211" count="58" type="stmt"/>
            <line num="212" count="58" type="stmt"/>
            <line num="213" count="7192" type="stmt"/>
            <line num="214" count="7191" type="stmt"/>
            <line num="215" count="7191" type="stmt"/>
            <line num="216" count="7191" type="stmt"/>
            <line num="218" count="7192" type="stmt"/>
            <line falsecount="0" truecount="7192" num="219" type="cond"/>
            <line num="220" count="7192" type="stmt"/>
            <line falsecount="0" truecount="7192" num="221" type="cond"/>
            <line num="224" count="7192" type="stmt"/>
            <line num="225" count="7189" type="stmt"/>
            <line falsecount="5739" truecount="1450" num="225" type="cond"/>
            <line num="226" count="1450" type="stmt"/>
            <line num="228" count="5740" type="stmt"/>
            <line num="230" count="5740" type="stmt"/>
            <line num="231" count="5742" type="stmt"/>
            <line num="234" count="7190" type="stmt"/>
            <line num="237" count="7190" type="stmt"/>
            <line num="265" count="4" type="stmt"/>
            <line num="266" count="4" type="stmt"/>
            <line num="268" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateTargets() : void" num="275" count="4" type="method"/>
            <line num="281" count="4" type="stmt"/>
            <line num="282" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="286" count="20" type="stmt"/>
            <line num="287" count="100" type="stmt"/>
            <line num="288" count="500" type="stmt"/>
            <line num="289" count="500" type="stmt"/>
            <line num="294" count="4" type="stmt"/>
            <line num="295" count="20" type="stmt"/>
            <line num="296" count="100" type="stmt"/>
            <line num="297" count="496" type="stmt"/>
            <line num="298" count="496" type="stmt"/>
            <line num="303" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="313" count="4" type="method"/>
            <line num="314" count="4" type="stmt"/>
            <line num="315" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(boolean,double,double,int) : void" num="341" count="4" type="method"/>
            <line num="342" count="4" type="stmt"/>
            <line num="343" count="4" type="stmt"/>
            <line num="344" count="4" type="stmt"/>
            <line num="345" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReplicationUseAsOffset() : boolean" num="351" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="365" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : int" num="372" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="379" count="29933" type="method"/>
            <line num="380" count="29928" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : VolatilityCubeModel" num="386" count="76" type="method"/>
            <line num="387" count="76" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="393" count="41876" type="method"/>
            <line num="394" count="41875" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialParameters() : double[]" num="400" count="4" type="method"/>
            <line num="401" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialParameters(double[]) : void" num="408" count="4" type="method"/>
            <line num="409" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="SwaptionInfo(int,int,int)" num="431" count="996" type="method"/>
            <line num="432" count="996" type="stmt"/>
            <line num="433" count="996" type="stmt"/>
            <line num="434" count="996" type="stmt"/>
            <line complexity="5" visibility="package" signature="SwaptionInfo(int,int,int,TableConvention)" num="447" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="458" count="14440" type="method"/>
            <line num="460" count="14440" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/SABRCubeCalibration.java" name="SABRCubeCalibration.java">
            <metrics coveredelements="220" coveredconditionals="20" complexity="58" loc="750" coveredmethods="17" methods="33" elements="316" classes="2" ncloc="434" statements="247" conditionals="36" coveredstatements="183"/>
            <class name="SABRCubeCalibration">
               <metrics coveredelements="214" coveredconditionals="20" complexity="51" coveredmethods="15" methods="30" elements="289" statements="223" conditionals="36" coveredstatements="179"/>
            </class>
            <class name="SABRCubeCalibration.SwaptionInfo">
               <metrics coveredelements="6" coveredconditionals="0" complexity="7" coveredmethods="2" methods="3" elements="27" statements="24" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="SABRCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="115" count="2" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType,double,double,double,double)" num="147" count="2" type="method"/>
            <line num="150" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="calibrate(String,int[]) : SABRVolatilityCube" num="167" count="2" type="method"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="172" type="cond"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="191" count="10" type="stmt"/>
            <line num="194" count="10" type="stmt"/>
            <line num="195" count="10" type="stmt"/>
            <line num="197" count="10" type="stmt"/>
            <line num="200" count="10" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialParameters(DataTable,DataTable,DataTable) : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findInterpolationNodes() : DataTableLight" num="224" count="2" type="method"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="10" type="stmt"/>
            <line num="237" count="50" type="stmt"/>
            <line num="238" count="50" type="stmt"/>
            <line num="239" count="200" type="stmt"/>
            <line falsecount="0" truecount="200" num="239" type="cond"/>
            <line num="240" count="200" type="stmt"/>
            <line num="243" count="50" type="stmt"/>
            <line num="244" count="200" type="stmt"/>
            <line falsecount="2" truecount="198" num="244" type="cond"/>
            <line num="245" count="198" type="stmt"/>
            <line num="250" count="50" type="stmt"/>
            <line falsecount="0" truecount="50" num="250" type="cond"/>
            <line num="251" count="50" type="stmt"/>
            <line num="252" count="50" type="stmt"/>
            <line num="253" count="50" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="findInitialParameters() : void" num="278" count="2" type="method"/>
            <line num="280" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="280" type="cond"/>
            <line num="281" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : void" num="298" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="initializeParameters(int) : void" num="329" count="10" type="method"/>
            <line num="331" count="10" type="stmt"/>
            <line num="332" count="10" type="stmt"/>
            <line num="333" count="10" type="stmt"/>
            <line num="334" count="10" type="stmt"/>
            <line num="335" count="10" type="stmt"/>
            <line num="337" count="10" type="stmt"/>
            <line falsecount="10" truecount="50" num="337" type="cond"/>
            <line num="338" count="50" type="stmt"/>
            <line num="339" count="50" type="stmt"/>
            <line num="340" count="50" type="stmt"/>
            <line num="343" count="10" type="stmt"/>
            <line num="344" count="10" type="stmt"/>
            <line num="345" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateTargets(int) : void" num="353" count="10" type="method"/>
            <line num="358" count="10" type="stmt"/>
            <line num="359" count="10" type="stmt"/>
            <line num="362" count="10" type="stmt"/>
            <line num="363" count="10" type="stmt"/>
            <line num="366" count="10" type="stmt"/>
            <line num="367" count="50" type="stmt"/>
            <line num="368" count="250" type="stmt"/>
            <line num="369" count="250" type="stmt"/>
            <line num="373" count="10" type="stmt"/>
            <line num="374" count="50" type="stmt"/>
            <line num="375" count="248" type="stmt"/>
            <line num="376" count="248" type="stmt"/>
            <line num="380" count="10" type="stmt"/>
            <line num="381" count="10" type="stmt"/>
            <line num="383" count="10" type="stmt"/>
            <line complexity="2" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="399" count="580" type="method"/>
            <line num="400" count="580" type="stmt"/>
            <line num="401" count="580" type="stmt"/>
            <line num="403" count="580" type="stmt"/>
            <line falsecount="580" truecount="2900" num="403" type="cond"/>
            <line num="404" count="2900" type="stmt"/>
            <line num="405" count="2900" type="stmt"/>
            <line num="406" count="2900" type="stmt"/>
            <line num="409" count="580" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildSlice(String,double[]) : VolatilityCube" num="419" count="570" type="method"/>
            <line num="421" count="570" type="stmt"/>
            <line num="422" count="570" type="stmt"/>
            <line num="423" count="570" type="stmt"/>
            <line num="425" count="570" type="stmt"/>
            <line num="426" count="570" type="stmt"/>
            <line num="427" count="570" type="stmt"/>
            <line num="429" count="570" type="stmt"/>
            <line num="430" count="570" type="stmt"/>
            <line num="431" count="570" type="stmt"/>
            <line num="432" count="570" type="stmt"/>
            <line falsecount="0" truecount="570" num="432" type="cond"/>
            <line num="433" count="570" type="stmt"/>
            <line num="435" count="570" type="stmt"/>
            <line num="437" count="570" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="569" type="stmt"/>
            <line num="451" count="570" type="stmt"/>
            <line complexity="1" visibility="private" signature="gatherParameters() : void" num="457" count="10" type="method"/>
            <line num="459" count="10" type="stmt"/>
            <line num="460" count="10" type="stmt"/>
            <line num="461" count="10" type="stmt"/>
            <line num="463" count="10" type="stmt"/>
            <line num="464" count="10" type="stmt"/>
            <line num="465" count="10" type="stmt"/>
            <line num="467" count="10" type="stmt"/>
            <line num="468" count="10" type="stmt"/>
            <line num="469" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="runOptimization() : void" num="478" count="10" type="method"/>
            <line num="480" count="10" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="488" count="570" type="method"/>
            <line num="492" count="570" type="stmt"/>
            <line num="495" count="570" type="stmt"/>
            <line num="496" count="570" type="stmt"/>
            <line num="497" count="570" type="stmt"/>
            <line num="500" count="570" type="stmt"/>
            <line num="501" count="570" type="stmt"/>
            <line num="502" count="570" type="stmt"/>
            <line num="503" count="570" type="stmt"/>
            <line num="504" count="570" type="stmt"/>
            <line num="505" count="570" type="stmt"/>
            <line num="506" count="570" type="stmt"/>
            <line num="507" count="570" type="stmt"/>
            <line num="509" count="570" type="stmt"/>
            <line num="511" count="570" type="stmt"/>
            <line num="512" count="570" type="stmt"/>
            <line num="513" count="570" type="stmt"/>
            <line num="514" count="14249" type="stmt"/>
            <line num="515" count="14248" type="stmt"/>
            <line num="516" count="14247" type="stmt"/>
            <line num="517" count="14249" type="stmt"/>
            <line num="519" count="14249" type="stmt"/>
            <line falsecount="0" truecount="14249" num="520" type="cond"/>
            <line num="521" count="14249" type="stmt"/>
            <line falsecount="0" truecount="14250" num="522" type="cond"/>
            <line num="525" count="14250" type="stmt"/>
            <line num="526" count="14250" type="stmt"/>
            <line falsecount="14250" truecount="0" num="526" type="cond"/>
            <line num="527" count="0" type="stmt"/>
            <line num="529" count="14250" type="stmt"/>
            <line num="531" count="14250" type="stmt"/>
            <line num="532" count="14250" type="stmt"/>
            <line num="535" count="14250" type="stmt"/>
            <line num="537" count="14249" type="stmt"/>
            <line num="541" count="570" type="stmt"/>
            <line num="542" count="570" type="stmt"/>
            <line num="543" count="570" type="stmt"/>
            <line num="544" count="14202" type="stmt"/>
            <line num="545" count="14201" type="stmt"/>
            <line num="546" count="14202" type="stmt"/>
            <line num="547" count="14202" type="stmt"/>
            <line num="549" count="14202" type="stmt"/>
            <line falsecount="0" truecount="14202" num="550" type="cond"/>
            <line num="551" count="14202" type="stmt"/>
            <line falsecount="0" truecount="14202" num="552" type="cond"/>
            <line num="555" count="14202" type="stmt"/>
            <line num="556" count="14202" type="stmt"/>
            <line falsecount="11352" truecount="2850" num="556" type="cond"/>
            <line num="557" count="2850" type="stmt"/>
            <line num="559" count="11352" type="stmt"/>
            <line num="561" count="11352" type="stmt"/>
            <line num="562" count="11352" type="stmt"/>
            <line num="565" count="14202" type="stmt"/>
            <line num="568" count="14202" type="stmt"/>
            <line num="597" count="10" type="stmt"/>
            <line num="598" count="10" type="stmt"/>
            <line num="600" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="611" count="2" type="method"/>
            <line num="612" count="2" type="stmt"/>
            <line num="613" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="619" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="627" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(boolean,double,double,int) : void" num="639" count="2" type="method"/>
            <line num="640" count="2" type="stmt"/>
            <line num="641" count="2" type="stmt"/>
            <line num="642" count="2" type="stmt"/>
            <line num="643" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReplicationUseAsOffset() : boolean" num="649" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="656" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="663" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : int" num="670" count="0" type="method"/>
            <line num="671" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="674" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCorrelationDecay(double) : void" num="679" count="0" type="method"/>
            <line num="680" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="684" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIborOisDecorrelation(double) : void" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : double" num="694" count="0" type="method"/>
            <line num="695" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBeta() : double" num="698" count="0" type="method"/>
            <line num="699" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseLinearInterpolation() : boolean" num="705" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUseLinearInterpolation(boolean) : void" num="712" count="2" type="method"/>
            <line num="713" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="SwaptionInfo(int,int,int)" num="728" count="498" type="method"/>
            <line num="729" count="498" type="stmt"/>
            <line num="730" count="498" type="stmt"/>
            <line num="731" count="498" type="stmt"/>
            <line complexity="5" visibility="package" signature="SwaptionInfo(int,int,int,TableConvention)" num="734" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="745" count="28452" type="method"/>
            <line num="747" count="28452" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/SABRCubeParallelCalibration.java" name="SABRCubeParallelCalibration.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="16" loc="121" coveredmethods="4" methods="16" elements="36" classes="1" ncloc="75" statements="20" conditionals="0" coveredstatements="8"/>
            <class name="SABRCubeParallelCalibration">
               <metrics coveredelements="12" coveredconditionals="0" complexity="16" coveredmethods="4" methods="16" elements="36" statements="20" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRCubeParallelCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="41" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildCube(String,double[]) : VolatilityCube" num="47" count="18" type="method"/>
            <line num="50" count="18" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initializeParameters() : void" num="55" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="61" count="18" type="method"/>
            <line num="63" count="18" type="stmt"/>
            <line num="66" count="18" type="stmt"/>
            <line num="67" count="18" type="stmt"/>
            <line num="69" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialCorrelationDecay() : double" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialCorrelationDecay(double) : void" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialIborOisDecorrelation() : double" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialIborOisDecorrelation(double) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialDisplacement() : double" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialDisplacement(double) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialBeta() : double" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialBeta(double) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialRho() : double" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialRho(double) : void" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialVolvol() : double" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInitialVolvol(double) : void" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/SABRShiftedSmileCalibration.java" name="SABRShiftedSmileCalibration.java">
            <metrics coveredelements="234" coveredconditionals="22" complexity="36" loc="617" coveredmethods="12" methods="17" elements="270" classes="1" ncloc="382" statements="221" conditionals="32" coveredstatements="200"/>
            <class name="SABRShiftedSmileCalibration">
               <metrics coveredelements="234" coveredconditionals="22" complexity="36" coveredmethods="12" methods="17" elements="270" statements="221" conditionals="32" coveredstatements="200"/>
            </class>
            <line complexity="1" visibility="public" signature="createSABRVolatilityCube(String,LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel,double,double,double,double) : SABRVolatilityCube" num="89" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createVolatilityCubeLattice(String,LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel) : Map&lt;Integer, DataTable&gt;" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRShiftedSmileCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,AnalyticModel,double,double,double,double)" num="142" count="22" type="method"/>
            <line num="145" count="22" type="stmt"/>
            <line num="146" count="22" type="stmt"/>
            <line num="147" count="22" type="stmt"/>
            <line num="148" count="22" type="stmt"/>
            <line num="149" count="22" type="stmt"/>
            <line num="150" count="22" type="stmt"/>
            <line num="151" count="22" type="stmt"/>
            <line num="152" count="22" type="stmt"/>
            <line num="153" count="22" type="stmt"/>
            <line num="154" count="22" type="stmt"/>
            <line num="156" count="22" type="stmt"/>
            <line num="157" count="22" type="stmt"/>
            <line num="158" count="22" type="stmt"/>
            <line num="159" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(String) : SABRVolatilityCube" num="170" count="22" type="method"/>
            <line num="172" count="22" type="stmt"/>
            <line num="173" count="22" type="stmt"/>
            <line num="175" count="22" type="stmt"/>
            <line num="176" count="22" type="stmt"/>
            <line num="178" count="22" type="stmt"/>
            <line num="179" count="22" type="stmt"/>
            <line num="181" count="22" type="stmt"/>
            <line complexity="4" visibility="private" signature="calibrateSmilesOnNodes() : void" num="193" count="22" type="method"/>
            <line num="196" count="22" type="stmt"/>
            <line num="197" count="22" type="stmt"/>
            <line num="198" count="22" type="stmt"/>
            <line num="199" count="22" type="stmt"/>
            <line num="200" count="22" type="stmt"/>
            <line num="203" count="22" type="stmt"/>
            <line num="205" count="22" type="stmt"/>
            <line num="206" count="22" type="stmt"/>
            <line num="209" count="22" type="stmt"/>
            <line num="210" count="22" type="stmt"/>
            <line num="211" count="110" type="stmt"/>
            <line num="213" count="22" type="stmt"/>
            <line num="214" count="22" type="stmt"/>
            <line num="215" count="110" type="stmt"/>
            <line num="218" count="22" type="stmt"/>
            <line num="219" count="110" type="stmt"/>
            <line num="220" count="550" type="stmt"/>
            <line num="221" count="550" type="stmt"/>
            <line num="225" count="550" type="stmt"/>
            <line num="226" count="550" type="stmt"/>
            <line num="227" count="4950" type="stmt"/>
            <line falsecount="22" truecount="4928" num="227" type="cond"/>
            <line num="228" count="4928" type="stmt"/>
            <line num="232" count="550" type="stmt"/>
            <line num="233" count="550" type="stmt"/>
            <line num="235" count="550" type="stmt"/>
            <line num="236" count="550" type="stmt"/>
            <line num="237" count="4950" type="stmt"/>
            <line falsecount="22" truecount="4928" num="237" type="cond"/>
            <line num="238" count="4928" type="stmt"/>
            <line num="239" count="4928" type="stmt"/>
            <line num="245" count="550" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="253" count="59363" type="method"/>
            <line num="257" count="59362" type="stmt"/>
            <line num="258" count="59360" type="stmt"/>
            <line num="259" count="59360" type="stmt"/>
            <line num="261" count="59363" type="stmt"/>
            <line falsecount="59382" truecount="531937" num="261" type="cond"/>
            <line num="262" count="531913" type="stmt"/>
            <line num="269" count="550" type="stmt"/>
            <line num="273" count="550" type="stmt"/>
            <line num="276" count="550" type="stmt"/>
            <line num="277" count="550" type="stmt"/>
            <line num="278" count="550" type="stmt"/>
            <line num="279" count="550" type="stmt"/>
            <line num="280" count="550" type="stmt"/>
            <line num="282" count="550" type="stmt"/>
            <line num="286" count="22" type="stmt"/>
            <line falsecount="0" truecount="22" num="286" type="cond"/>
            <line num="287" count="22" type="stmt"/>
            <line num="289" count="22" type="stmt"/>
            <line num="291" count="22" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findInterpolationNodes() : void" num="305" count="22" type="method"/>
            <line num="307" count="22" type="stmt"/>
            <line num="308" count="22" type="stmt"/>
            <line num="309" count="22" type="stmt"/>
            <line num="311" count="22" type="stmt"/>
            <line num="312" count="22" type="stmt"/>
            <line num="313" count="22" type="stmt"/>
            <line num="314" count="22" type="stmt"/>
            <line num="316" count="22" type="stmt"/>
            <line num="317" count="110" type="stmt"/>
            <line num="318" count="550" type="stmt"/>
            <line num="319" count="550" type="stmt"/>
            <line num="320" count="2200" type="stmt"/>
            <line falsecount="0" truecount="2200" num="320" type="cond"/>
            <line num="321" count="2200" type="stmt"/>
            <line num="324" count="550" type="stmt"/>
            <line num="325" count="2200" type="stmt"/>
            <line falsecount="22" truecount="2178" num="325" type="cond"/>
            <line num="326" count="2178" type="stmt"/>
            <line num="331" count="550" type="stmt"/>
            <line falsecount="0" truecount="550" num="331" type="cond"/>
            <line num="332" count="550" type="stmt"/>
            <line num="333" count="550" type="stmt"/>
            <line num="334" count="550" type="stmt"/>
            <line num="338" count="22" type="stmt"/>
            <line num="342" count="22" type="stmt"/>
            <line falsecount="22" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="makePhysicalVolatilities() : void" num="356" count="22" type="method"/>
            <line num="359" count="22" type="stmt"/>
            <line num="360" count="22" type="stmt"/>
            <line num="361" count="22" type="stmt"/>
            <line num="363" count="22" type="stmt"/>
            <line num="364" count="22" type="stmt"/>
            <line num="365" count="110" type="stmt"/>
            <line num="366" count="550" type="stmt"/>
            <line num="367" count="550" type="stmt"/>
            <line num="369" count="550" type="stmt"/>
            <line num="370" count="550" type="stmt"/>
            <line num="372" count="550" type="stmt"/>
            <line num="373" count="550" type="stmt"/>
            <line num="374" count="550" type="stmt"/>
            <line num="376" count="550" type="stmt"/>
            <line num="381" count="22" type="stmt"/>
            <line num="384" count="22" type="stmt"/>
            <line num="385" count="22" type="stmt"/>
            <line num="387" count="22" type="stmt"/>
            <line num="388" count="22" type="stmt"/>
            <line num="394" count="22" type="stmt"/>
            <line num="395" count="22" type="stmt"/>
            <line num="396" count="22" type="stmt"/>
            <line num="398" count="22" type="stmt"/>
            <line num="400" count="88" type="stmt"/>
            <line num="401" count="88" type="stmt"/>
            <line num="402" count="88" type="stmt"/>
            <line num="404" count="88" type="stmt"/>
            <line num="405" count="88" type="stmt"/>
            <line num="406" count="88" type="stmt"/>
            <line num="409" count="88" type="stmt"/>
            <line num="410" count="440" type="stmt"/>
            <line num="411" count="2200" type="stmt"/>
            <line num="414" count="2200" type="stmt"/>
            <line falsecount="0" truecount="2200" num="414" type="cond"/>
            <line num="415" count="2200" type="stmt"/>
            <line num="416" count="2200" type="stmt"/>
            <line num="418" count="2200" type="stmt"/>
            <line num="419" count="2200" type="stmt"/>
            <line num="420" count="2200" type="stmt"/>
            <line num="424" count="2200" type="stmt"/>
            <line falsecount="22" truecount="2178" num="424" type="cond"/>
            <line num="425" count="2178" type="stmt"/>
            <line num="426" count="2178" type="stmt"/>
            <line num="428" count="2178" type="stmt"/>
            <line num="429" count="2178" type="stmt"/>
            <line num="430" count="2178" type="stmt"/>
            <line num="435" count="88" type="stmt"/>
            <line num="437" count="88" type="stmt"/>
            <line num="441" count="88" type="stmt"/>
            <line num="442" count="88" type="stmt"/>
            <line complexity="2" visibility="private" signature="findPayerVolatilities() : void" num="449" count="22" type="method"/>
            <line num="452" count="22" type="stmt"/>
            <line num="453" count="22" type="stmt"/>
            <line num="455" count="110" type="stmt"/>
            <line num="456" count="110" type="stmt"/>
            <line num="457" count="110" type="stmt"/>
            <line num="459" count="110" type="stmt"/>
            <line num="460" count="550" type="stmt"/>
            <line num="461" count="2750" type="stmt"/>
            <line falsecount="0" truecount="2750" num="461" type="cond"/>
            <line num="463" count="2750" type="stmt"/>
            <line num="464" count="2750" type="stmt"/>
            <line num="466" count="2750" type="stmt"/>
            <line num="467" count="2750" type="stmt"/>
            <line num="468" count="2750" type="stmt"/>
            <line num="470" count="2750" type="stmt"/>
            <line num="471" count="2750" type="stmt"/>
            <line num="472" count="2750" type="stmt"/>
            <line num="477" count="110" type="stmt"/>
            <line num="478" count="110" type="stmt"/>
            <line complexity="2" visibility="private" signature="findReceiverVolatilities() : void" num="486" count="22" type="method"/>
            <line num="489" count="22" type="stmt"/>
            <line num="490" count="22" type="stmt"/>
            <line num="492" count="110" type="stmt"/>
            <line num="493" count="110" type="stmt"/>
            <line num="494" count="110" type="stmt"/>
            <line num="496" count="110" type="stmt"/>
            <line num="497" count="550" type="stmt"/>
            <line num="498" count="2750" type="stmt"/>
            <line falsecount="22" truecount="2728" num="498" type="cond"/>
            <line num="500" count="2728" type="stmt"/>
            <line num="501" count="2728" type="stmt"/>
            <line num="503" count="2728" type="stmt"/>
            <line num="504" count="2728" type="stmt"/>
            <line num="505" count="2728" type="stmt"/>
            <line num="507" count="2728" type="stmt"/>
            <line num="508" count="2728" type="stmt"/>
            <line num="509" count="2728" type="stmt"/>
            <line num="514" count="110" type="stmt"/>
            <line num="515" count="110" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : void" num="522" count="22" type="method"/>
            <line num="524" count="22" type="stmt"/>
            <line num="525" count="22" type="stmt"/>
            <line num="526" count="22" type="stmt"/>
            <line num="528" count="22" type="stmt"/>
            <line num="529" count="22" type="stmt"/>
            <line num="530" count="110" type="stmt"/>
            <line num="531" count="550" type="stmt"/>
            <line num="532" count="550" type="stmt"/>
            <line num="534" count="550" type="stmt"/>
            <line num="535" count="550" type="stmt"/>
            <line num="537" count="550" type="stmt"/>
            <line num="538" count="550" type="stmt"/>
            <line num="539" count="550" type="stmt"/>
            <line num="541" count="550" type="stmt"/>
            <line num="545" count="22" type="stmt"/>
            <line falsecount="0" truecount="22" num="545" type="cond"/>
            <line num="546" count="22" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="560" count="22" type="method"/>
            <line num="561" count="22" type="stmt"/>
            <line num="562" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="568" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="576" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUseLinearInterpolation() : boolean" num="583" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUseLinearInterpolation(boolean) : void" num="590" count="4" type="method"/>
            <line num="591" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double,Schedule) : double" num="601" count="5478" type="method"/>
            <line num="603" count="5478" type="stmt"/>
            <line num="604" count="5478" type="stmt"/>
            <line num="605" count="5478" type="stmt"/>
            <line falsecount="5478" truecount="55990" num="605" type="cond"/>
            <line num="606" count="55990" type="stmt"/>
            <line num="608" count="5478" type="stmt"/>
            <line num="610" count="5478" type="stmt"/>
            <line falsecount="5478" truecount="0" num="610" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="613" count="5478" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/calibration/StaticCubeCalibration.java" name="StaticCubeCalibration.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="78" coveredmethods="4" methods="5" elements="16" classes="1" ncloc="38" statements="11" conditionals="0" coveredstatements="8"/>
            <class name="StaticCubeCalibration">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType)" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticCubeCalibration(LocalDate,SwaptionDataLattice,SwaptionDataLattice,VolatilityCubeModel,AnnuityMappingType,double,double)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildCube(String,double[]) : VolatilityCube" num="57" count="44" type="method"/>
            <line num="59" count="44" type="stmt"/>
            <line complexity="1" visibility="protected" signature="initializeParameters() : void" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="applyParameterBounds(double[]) : double[]" num="69" count="44" type="method"/>
            <line num="71" count="44" type="stmt"/>
            <line num="72" count="44" type="stmt"/>
            <line num="73" count="44" type="stmt"/>
            <line num="74" count="44" type="stmt"/>
            <line num="75" count="44" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.models">
         <metrics coveredelements="1004" complexity="635" loc="6285" methods="260" classes="18" statements="1977" coveredconditionals="223" coveredmethods="81" elements="2893" ncloc="3649" files="8" conditionals="656" coveredstatements="700"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/FundingCapacity.java" name="FundingCapacity.java">
            <metrics coveredelements="40" coveredconditionals="1" complexity="13" loc="236" coveredmethods="6" methods="10" elements="90" classes="2" ncloc="140" statements="74" conditionals="6" coveredstatements="33"/>
            <class name="FundingCapacity">
               <metrics coveredelements="33" coveredconditionals="1" complexity="10" coveredmethods="3" methods="7" elements="83" statements="70" conditionals="6" coveredstatements="29"/>
            </class>
            <class name="FundingCapacity.DefaultFactors">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultFactors(RandomVariable,RandomVariable)" num="61" count="12" type="method"/>
            <line num="62" count="12" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbability() : RandomVariable" num="66" count="8" type="method"/>
            <line num="67" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultCompensation() : RandomVariable" num="70" count="8" type="method"/>
            <line num="71" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="FundingCapacity(String,RandomVariable,SortedMap&lt;Double, Double&gt;)" num="75" count="6" type="method"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="78" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDefaultFactors(double,RandomVariable) : DefaultFactors" num="82" count="12" type="method"/>
            <line num="87" count="12" type="stmt"/>
            <line num="88" count="12" type="stmt"/>
            <line num="89" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="12" type="stmt"/>
            <line num="99" count="12" type="stmt"/>
            <line num="100" count="12" type="stmt"/>
            <line num="101" count="12" type="stmt"/>
            <line num="102" count="12" type="stmt"/>
            <line num="105" count="12" type="stmt"/>
            <line num="106" count="12" type="stmt"/>
            <line num="108" count="12" type="stmt"/>
            <line num="109" count="12" type="stmt"/>
            <line num="110" count="12" type="stmt"/>
            <line num="111" count="42" type="stmt"/>
            <line num="112" count="42" type="stmt"/>
            <line num="114" count="42" type="stmt"/>
            <line num="116" count="42" type="stmt"/>
            <line num="122" count="42" type="stmt"/>
            <line num="128" count="42" type="stmt"/>
            <line num="129" count="42" type="stmt"/>
            <line num="134" count="12" type="stmt"/>
            <line num="135" count="12" type="stmt"/>
            <line num="136" count="12" type="stmt"/>
            <line num="138" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDefaultCompensationForRequiredFunding(double,RandomVariable) : RandomVariable" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSurvivalProbabilityRequiredFunding(double,RandomVariable) : RandomVariable" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentFundingLevel() : RandomVariable" num="223" count="2" type="method"/>
            <line num="224" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="227" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModel.java" name="HullWhiteModel.java">
            <metrics coveredelements="407" coveredconditionals="78" complexity="105" loc="980" coveredmethods="36" methods="45" elements="509" classes="1" ncloc="638" statements="350" conditionals="114" coveredstatements="293"/>
            <class name="HullWhiteModel">
               <metrics coveredelements="407" coveredconditionals="78" complexity="105" coveredmethods="36" methods="45" elements="509" statements="350" conditionals="114" coveredstatements="293"/>
            </class>
            <line complexity="3" visibility="public" signature="HullWhiteModel(RandomVariableFactory,TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, Object&gt;)" num="164" count="78" type="method"/>
            <line num="174" count="78" type="stmt"/>
            <line num="175" count="78" type="stmt"/>
            <line num="176" count="78" type="stmt"/>
            <line num="177" count="78" type="stmt"/>
            <line num="178" count="78" type="stmt"/>
            <line num="179" count="78" type="stmt"/>
            <line num="181" count="78" type="stmt"/>
            <line num="182" count="78" type="stmt"/>
            <line falsecount="0" truecount="78" num="182" type="cond"/>
            <line num="183" count="78" type="stmt"/>
            <line num="184" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="184" type="cond"/>
            <line num="185" count="20" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="193" count="78" type="stmt"/>
            <line num="194" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="HullWhiteModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, Object&gt;)" num="207" count="18" type="method"/>
            <line num="215" count="18" type="stmt"/>
            <line complexity="6" visibility="public" signature="of(RandomVariableFactory,TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,CalibrationProduct[],Map&lt;String, Object&gt;) : HullWhiteModel" num="233" count="2" type="method"/>
            <line num="244" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="247" type="cond"/>
            <line num="248" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="257" type="cond"/>
            <line num="258" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="272" count="8790" type="method"/>
            <line num="274" count="8790" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="277" count="148" type="method"/>
            <line num="279" count="148" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="282" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="288" count="19867" type="method"/>
            <line num="290" count="19885" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="293" count="17769" type="method"/>
            <line num="295" count="17768" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="298" count="74" type="method"/>
            <line num="301" count="74" type="stmt"/>
            <line num="302" count="74" type="stmt"/>
            <line complexity="6" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="305" count="14945" type="method"/>
            <line num="307" count="15004" type="stmt"/>
            <line falsecount="15046" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="311" count="15130" type="stmt"/>
            <line falsecount="10980" truecount="3902" num="311" type="cond"/>
            <line num="313" count="3931" type="stmt"/>
            <line num="314" count="3910" type="stmt"/>
            <line num="317" count="11015" type="stmt"/>
            <line num="318" count="10995" type="stmt"/>
            <line falsecount="7923" truecount="3183" num="318" type="cond"/>
            <line num="324" count="3192" type="stmt"/>
            <line num="325" count="3153" type="stmt"/>
            <line falsecount="0" truecount="3167" num="325" type="cond"/>
            <line num="326" count="3207" type="stmt"/>
            <line num="328" count="3211" type="stmt"/>
            <line num="329" count="3222" type="stmt"/>
            <line num="330" count="3111" type="stmt"/>
            <line num="333" count="3008" type="stmt"/>
            <line num="338" count="7948" type="stmt"/>
            <line num="340" count="8257" type="stmt"/>
            <line num="343" count="8245" type="stmt"/>
            <line num="346" count="8259" type="stmt"/>
            <line num="347" count="8259" type="stmt"/>
            <line falsecount="0" truecount="8260" num="347" type="cond"/>
            <line num="348" count="8261" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="8242" type="stmt"/>
            <line num="356" count="8260" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="367" count="9841" type="method"/>
            <line num="370" count="9840" type="stmt"/>
            <line num="371" count="9817" type="stmt"/>
            <line num="373" count="9792" type="stmt"/>
            <line falsecount="9794" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="377" count="9789" type="stmt"/>
            <line num="378" count="9805" type="stmt"/>
            <line falsecount="9175" truecount="624" num="378" type="cond"/>
            <line num="379" count="624" type="stmt"/>
            <line num="381" count="9800" type="stmt"/>
            <line num="383" count="9810" type="stmt"/>
            <line num="384" count="9898" type="stmt"/>
            <line num="386" count="9916" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="389" count="19553" type="method"/>
            <line num="391" count="19565" type="stmt"/>
            <line num="392" count="19478" type="stmt"/>
            <line num="394" count="19358" type="stmt"/>
            <line num="395" count="19336" type="stmt"/>
            <line falsecount="18089" truecount="1247" num="395" type="cond"/>
            <line num="396" count="1247" type="stmt"/>
            <line num="399" count="19340" type="stmt"/>
            <line num="400" count="19320" type="stmt"/>
            <line num="402" count="19316" type="stmt"/>
            <line num="404" count="19329" type="stmt"/>
            <line num="406" count="19248" type="stmt"/>
            <line num="407" count="19258" type="stmt"/>
            <line falsecount="9854" truecount="9854" num="407" type="cond"/>
            <line num="409" count="9858" type="stmt"/>
            <line num="410" count="9862" type="stmt"/>
            <line num="412" count="9852" type="stmt"/>
            <line falsecount="0" truecount="9860" num="412" type="cond"/>
            <line num="414" count="9870" type="stmt"/>
            <line num="415" count="9856" type="stmt"/>
            <line num="416" count="9865" type="stmt"/>
            <line num="417" count="9869" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="423" count="19710" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="426" count="2112" type="method"/>
            <line num="428" count="2112" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="431" count="12774" type="method"/>
            <line num="434" count="12772" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="442" count="9104" type="method"/>
            <line num="444" count="9104" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="447" count="294" type="method"/>
            <line num="449" count="294" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="452" count="404" type="method"/>
            <line num="454" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="457" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="462" count="7181" type="method"/>
            <line num="464" count="7182" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="467" count="11532" type="method"/>
            <line num="469" count="11532" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="472" count="12981" type="method"/>
            <line num="474" count="12981" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORModel" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="496" count="30094" type="method"/>
            <line num="497" count="30094" type="stmt"/>
            <line num="498" count="30094" type="stmt"/>
            <line falsecount="40" truecount="30051" num="498" type="cond"/>
            <line num="499" count="30087" type="stmt"/>
            <line num="501" count="30076" type="stmt"/>
            <line num="503" count="30097" type="stmt"/>
            <line num="505" count="30085" type="stmt"/>
            <line num="506" count="30100" type="stmt"/>
            <line num="509" count="30099" type="stmt"/>
            <line num="511" count="30103" type="stmt"/>
            <line complexity="2" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="514" count="34645" type="method"/>
            <line num="515" count="34646" type="stmt"/>
            <line num="516" count="34644" type="stmt"/>
            <line falsecount="30093" truecount="4550" num="516" type="cond"/>
            <line num="517" count="4550" type="stmt"/>
            <line num="518" count="4551" type="stmt"/>
            <line num="519" count="4551" type="stmt"/>
            <line num="521" count="30096" type="stmt"/>
            <line num="522" count="30102" type="stmt"/>
            <line num="523" count="30090" type="stmt"/>
            <line num="524" count="30089" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIntegratedDriftAdjustment(MonteCarloProcess,int) : RandomVariable" num="534" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : RandomVariable" num="562" count="30104" type="method"/>
            <line num="563" count="30103" type="stmt"/>
            <line num="564" count="30099" type="stmt"/>
            <line num="566" count="30098" type="stmt"/>
            <line num="568" count="30100" type="stmt"/>
            <line num="570" count="30100" type="stmt"/>
            <line num="572" count="30095" type="stmt"/>
            <line num="574" count="30094" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : RandomVariable" num="584" count="1507437" type="method"/>
            <line num="585" count="1508496" type="stmt"/>
            <line num="586" count="1507382" type="stmt"/>
            <line falsecount="1377784" truecount="130420" num="586" type="cond"/>
            <line num="587" count="130486" type="stmt"/>
            <line num="590" count="1508622" type="stmt"/>
            <line num="591" count="1504695" type="stmt"/>
            <line falsecount="1328299" truecount="177179" num="591" type="cond"/>
            <line num="592" count="177209" type="stmt"/>
            <line num="595" count="1505988" type="stmt"/>
            <line num="596" count="1504835" type="stmt"/>
            <line num="597" count="1505523" type="stmt"/>
            <line num="598" count="1505767" type="stmt"/>
            <line falsecount="1503651" truecount="12490067" num="598" type="cond"/>
            <line num="599" count="12529973" type="stmt"/>
            <line num="600" count="12427847" type="stmt"/>
            <line num="601" count="12308153" type="stmt"/>
            <line num="602" count="12327379" type="stmt"/>
            <line num="604" count="1504081" type="stmt"/>
            <line num="605" count="1504992" type="stmt"/>
            <line num="606" count="1504705" type="stmt"/>
            <line num="608" count="1500314" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : RandomVariable" num="619" count="79965" type="method"/>
            <line num="620" count="79945" type="stmt"/>
            <line num="621" count="79943" type="stmt"/>
            <line falsecount="39404" truecount="40545" num="621" type="cond"/>
            <line num="622" count="40547" type="stmt"/>
            <line num="625" count="79952" type="stmt"/>
            <line num="626" count="79933" type="stmt"/>
            <line falsecount="39284" truecount="40655" num="626" type="cond"/>
            <line num="627" count="40657" type="stmt"/>
            <line num="630" count="79928" type="stmt"/>
            <line num="631" count="79931" type="stmt"/>
            <line num="632" count="79930" type="stmt"/>
            <line num="633" count="79970" type="stmt"/>
            <line falsecount="79894" truecount="338584" num="633" type="cond"/>
            <line num="634" count="338677" type="stmt"/>
            <line num="635" count="338468" type="stmt"/>
            <line num="636" count="338275" type="stmt"/>
            <line num="639" count="338249" type="stmt"/>
            <line num="641" count="79899" type="stmt"/>
            <line num="642" count="79876" type="stmt"/>
            <line num="643" count="79876" type="stmt"/>
            <line num="647" count="79899" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : RandomVariable" num="660" count="18088" type="method"/>
            <line num="661" count="18083" type="stmt"/>
            <line falsecount="18065" truecount="0" num="661" type="cond"/>
            <line num="662" count="0" type="stmt"/>
            <line num="664" count="18042" type="stmt"/>
            <line num="665" count="17904" type="stmt"/>
            <line falsecount="17296" truecount="624" num="665" type="cond"/>
            <line num="666" count="624" type="stmt"/>
            <line num="669" count="17965" type="stmt"/>
            <line num="670" count="17790" type="stmt"/>
            <line falsecount="9627" truecount="8216" num="670" type="cond"/>
            <line num="671" count="8191" type="stmt"/>
            <line num="674" count="17897" type="stmt"/>
            <line num="675" count="17916" type="stmt"/>
            <line num="676" count="17932" type="stmt"/>
            <line num="677" count="17937" type="stmt"/>
            <line num="678" count="17818" type="stmt"/>
            <line falsecount="17860" truecount="16629" num="678" type="cond"/>
            <line num="679" count="16641" type="stmt"/>
            <line num="680" count="16644" type="stmt"/>
            <line num="681" count="16629" type="stmt"/>
            <line num="682" count="16617" type="stmt"/>
            <line num="683" count="16628" type="stmt"/>
            <line num="684" count="16615" type="stmt"/>
            <line num="689" count="16633" type="stmt"/>
            <line num="690" count="16645" type="stmt"/>
            <line num="692" count="17906" type="stmt"/>
            <line num="693" count="17929" type="stmt"/>
            <line num="694" count="17874" type="stmt"/>
            <line num="695" count="17851" type="stmt"/>
            <line num="696" count="17759" type="stmt"/>
            <line num="697" count="17627" type="stmt"/>
            <line num="703" count="17816" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : RandomVariable" num="706" count="39951" type="method"/>
            <line num="707" count="39954" type="stmt"/>
            <line falsecount="39916" truecount="40" num="707" type="cond"/>
            <line num="708" count="40" type="stmt"/>
            <line num="710" count="39917" type="stmt"/>
            <line num="711" count="39916" type="stmt"/>
            <line falsecount="39289" truecount="624" num="711" type="cond"/>
            <line num="712" count="624" type="stmt"/>
            <line num="715" count="39911" type="stmt"/>
            <line num="716" count="39902" type="stmt"/>
            <line falsecount="19645" truecount="20259" num="716" type="cond"/>
            <line num="717" count="20260" type="stmt"/>
            <line num="720" count="39911" type="stmt"/>
            <line num="721" count="39914" type="stmt"/>
            <line num="722" count="39911" type="stmt"/>
            <line num="723" count="39910" type="stmt"/>
            <line num="724" count="39888" type="stmt"/>
            <line falsecount="39913" truecount="247172" num="724" type="cond"/>
            <line num="725" count="247204" type="stmt"/>
            <line num="726" count="247166" type="stmt"/>
            <line num="727" count="247097" type="stmt"/>
            <line num="728" count="246796" type="stmt"/>
            <line num="729" count="247051" type="stmt"/>
            <line num="730" count="247190" type="stmt"/>
            <line num="734" count="246979" type="stmt"/>
            <line num="735" count="247120" type="stmt"/>
            <line num="737" count="39922" type="stmt"/>
            <line num="738" count="39929" type="stmt"/>
            <line num="739" count="39916" type="stmt"/>
            <line num="740" count="39891" type="stmt"/>
            <line num="741" count="39904" type="stmt"/>
            <line num="742" count="39896" type="stmt"/>
            <line num="747" count="39911" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : RandomVariable" num="760" count="30156" type="method"/>
            <line num="761" count="30155" type="stmt"/>
            <line num="762" count="30156" type="stmt"/>
            <line falsecount="30154" truecount="0" num="762" type="cond"/>
            <line num="763" count="0" type="stmt"/>
            <line num="766" count="30156" type="stmt"/>
            <line num="767" count="30157" type="stmt"/>
            <line falsecount="10476" truecount="19681" num="767" type="cond"/>
            <line num="768" count="19681" type="stmt"/>
            <line num="771" count="30156" type="stmt"/>
            <line num="772" count="30154" type="stmt"/>
            <line num="773" count="30154" type="stmt"/>
            <line num="774" count="30152" type="stmt"/>
            <line num="775" count="30157" type="stmt"/>
            <line falsecount="30152" truecount="238194" num="775" type="cond"/>
            <line num="776" count="238207" type="stmt"/>
            <line num="777" count="238142" type="stmt"/>
            <line num="778" count="238082" type="stmt"/>
            <line num="779" count="237814" type="stmt"/>
            <line num="780" count="237975" type="stmt"/>
            <line num="781" count="238102" type="stmt"/>
            <line num="783" count="238095" type="stmt"/>
            <line num="784" count="238177" type="stmt"/>
            <line num="786" count="30152" type="stmt"/>
            <line num="787" count="30151" type="stmt"/>
            <line num="788" count="30153" type="stmt"/>
            <line num="789" count="30148" type="stmt"/>
            <line num="790" count="30151" type="stmt"/>
            <line num="791" count="30152" type="stmt"/>
            <line num="794" count="30150" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : RandomVariable" num="797" count="60" type="method"/>
            <line num="798" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedVolatilityModel(ShortRateVolatilityModel) : HullWhiteModel" num="801" count="58" type="method"/>
            <line num="803" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityModel() : ShortRateVolatilityModel" num="806" count="2" type="method"/>
            <line num="808" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="811" count="0" type="method"/>
            <line num="814" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="822" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="826" type="cond"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="829" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="837" type="cond"/>
            <line num="838" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDiscountFactor(MonteCarloProcess,double) : RandomVariable" num="844" count="8260" type="method"/>
            <line num="845" count="8256" type="stmt"/>
            <line falsecount="0" truecount="8259" num="845" type="cond"/>
            <line num="846" count="8262" type="stmt"/>
            <line num="847" count="8254" type="stmt"/>
            <line falsecount="0" truecount="8256" num="847" type="cond"/>
            <line num="848" count="8258" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getDiscountFactor(MonteCarloProcess,int) : RandomVariable" num="862" count="8255" type="method"/>
            <line num="863" count="8256" type="stmt"/>
            <line falsecount="0" truecount="8257" num="863" type="cond"/>
            <line num="864" count="8264" type="stmt"/>
            <line num="866" count="8249" type="stmt"/>
            <line num="867" count="8264" type="stmt"/>
            <line falsecount="8190" truecount="74" num="867" type="cond"/>
            <line num="868" count="74" type="stmt"/>
            <line num="869" count="74" type="stmt"/>
            <line num="871" count="74" type="stmt"/>
            <line num="873" count="74" type="stmt"/>
            <line falsecount="74" truecount="9862" num="873" type="cond"/>
            <line num="874" count="9867" type="stmt"/>
            <line num="875" count="9878" type="stmt"/>
            <line num="876" count="9875" type="stmt"/>
            <line num="877" count="9873" type="stmt"/>
            <line num="878" count="9864" type="stmt"/>
            <line num="879" count="9864" type="stmt"/>
            <line num="880" count="9870" type="stmt"/>
            <line num="881" count="9863" type="stmt"/>
            <line num="884" count="8264" type="stmt"/>
            <line num="885" count="8263" type="stmt"/>
            <line complexity="3" visibility="private" signature="getZeroRateFromForwardCurve(MonteCarloProcess,double) : RandomVariable" num="889" count="60174" type="method"/>
            <line num="890" count="60173" type="stmt"/>
            <line falsecount="0" truecount="60178" num="890" type="cond"/>
            <line num="892" count="60174" type="stmt"/>
            <line num="893" count="60176" type="stmt"/>
            <line falsecount="60176" truecount="0" num="893" type="cond"/>
            <line num="894" count="0" type="stmt"/>
            <line num="897" count="60178" type="stmt"/>
            <line num="898" count="60173" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDiscountFactorFromForwardCurve(MonteCarloProcess,double) : RandomVariable" num="901" count="76685" type="method"/>
            <line num="902" count="76684" type="stmt"/>
            <line falsecount="0" truecount="76683" num="902" type="cond"/>
            <line num="903" count="76689" type="stmt"/>
            <line num="904" count="76668" type="stmt"/>
            <line falsecount="9105" truecount="67568" num="904" type="cond"/>
            <line num="905" count="67568" type="stmt"/>
            <line num="908" count="9105" type="stmt"/>
            <line num="909" count="9104" type="stmt"/>
            <line num="910" count="9104" type="stmt"/>
            <line num="911" count="9104" type="stmt"/>
            <line num="912" count="9104" type="stmt"/>
            <line num="913" count="9106" type="stmt"/>
            <line num="914" count="9106" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDiscountFactorFromForwardCurve(MonteCarloProcess,int) : RandomVariable" num="918" count="206116" type="method"/>
            <line num="919" count="206117" type="stmt"/>
            <line num="920" count="206245" type="stmt"/>
            <line falsecount="204965" truecount="1264" num="920" type="cond"/>
            <line num="922" count="1265" type="stmt"/>
            <line falsecount="0" truecount="1264" num="922" type="cond"/>
            <line num="923" count="1265" type="stmt"/>
            <line falsecount="1265" truecount="5152" num="923" type="cond"/>
            <line num="924" count="5153" type="stmt"/>
            <line num="925" count="5154" type="stmt"/>
            <line falsecount="5076" truecount="74" num="925" type="cond"/>
            <line num="926" count="74" type="stmt"/>
            <line num="927" count="74" type="stmt"/>
            <line num="930" count="5080" type="stmt"/>
            <line num="931" count="5078" type="stmt"/>
            <line num="932" count="5084" type="stmt"/>
            <line num="934" count="5157" type="stmt"/>
            <line num="939" count="206247" type="stmt"/>
            <line complexity="4" visibility="private" signature="getForwardRateInitialValue(MonteCarloProcess,int) : RandomVariable" num="942" count="5078" type="method"/>
            <line num="943" count="5078" type="stmt"/>
            <line num="944" count="5083" type="stmt"/>
            <line falsecount="0" truecount="5083" num="944" type="cond"/>
            <line num="946" count="5082" type="stmt"/>
            <line falsecount="0" truecount="5081" num="946" type="cond"/>
            <line num="947" count="5080" type="stmt"/>
            <line falsecount="5078" truecount="5079" num="947" type="cond"/>
            <line num="948" count="5081" type="stmt"/>
            <line num="949" count="5081" type="stmt"/>
            <line num="950" count="5081" type="stmt"/>
            <line num="951" count="5079" type="stmt"/>
            <line num="955" count="5083" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(ObjectInputStream) : void" num="958" count="0" type="method"/>
            <line num="959" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="965" count="0" type="stmt"/>
            <line num="966" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="970" count="0" type="method"/>
            <line num="972" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithConstantCoeff.java" name="HullWhiteModelWithConstantCoeff.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="38" loc="374" coveredmethods="0" methods="27" elements="143" classes="1" ncloc="219" statements="94" conditionals="22" coveredstatements="0"/>
            <class name="HullWhiteModelWithConstantCoeff">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="27" elements="143" statements="94" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelWithConstantCoeff(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,double,double,Map&lt;String, ?&gt;)" num="72" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="286" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="306" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getB(double,double) : double" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="359" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="364" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="368" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithDirectSimulation.java" name="HullWhiteModelWithDirectSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="60" loc="627" coveredmethods="0" methods="30" elements="299" classes="1" ncloc="368" statements="209" conditionals="60" coveredstatements="0"/>
            <class name="HullWhiteModelWithDirectSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="60" coveredmethods="0" methods="30" elements="299" statements="209" conditionals="60" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelWithDirectSimulation(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, ?&gt;)" num="141" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="329" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="340" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="360" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="385" count="0" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="404" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : double" num="426" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="430" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : double" num="463" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : double" num="502" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="507" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="521" type="cond"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : double" num="540" count="0" type="method"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="545" type="cond"/>
            <line num="547" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="559" type="cond"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="586" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line num="590" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="594" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="602" type="cond"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="617" count="0" type="method"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="621" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/HullWhiteModelWithShiftExtension.java" name="HullWhiteModelWithShiftExtension.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="66" loc="671" coveredmethods="0" methods="32" elements="322" classes="2" ncloc="399" statements="224" conditionals="66" coveredstatements="0"/>
            <class name="HullWhiteModelWithShiftExtension">
               <metrics coveredelements="0" coveredconditionals="0" complexity="66" coveredmethods="0" methods="32" elements="322" statements="224" conditionals="66" coveredstatements="0"/>
            </class>
            <class name="HullWhiteModelWithShiftExtension.DriftFormula">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="HullWhiteModelWithShiftExtension(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,ShortRateVolatilityModel,Map&lt;String, ?&gt;)" num="145" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="281" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="332" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="337" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="342" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModel" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getShortRate(MonteCarloProcess,int) : RandomVariable" num="372" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getZeroCouponBond(MonteCarloProcess,double,double) : RandomVariable" num="399" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getIntegratedDriftAdjustment(MonteCarloProcess,int) : double" num="419" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="426" type="cond"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getA(MonteCarloProcess,double,double) : double" num="448" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getMRTime(double,double) : double" num="470" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="474" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getB(double,double) : double" num="507" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="509" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="515" type="cond"/>
            <line num="517" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="523" type="cond"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getV(double,double) : double" num="546" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="547" type="cond"/>
            <line num="548" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="557" type="cond"/>
            <line num="559" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="565" type="cond"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getDV(double,double) : double" num="584" count="0" type="method"/>
            <line num="585" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="585" type="cond"/>
            <line num="586" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="591" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="597" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getShortRateConditionalVariance(double,double) : double" num="630" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="632" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="640" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegratedBondSquaredVolatility(double,double) : double" num="661" count="0" type="method"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="665" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelFromCovarianceModel.java" name="LIBORMarketModelFromCovarianceModel.java">
            <metrics coveredelements="557" coveredconditionals="144" complexity="174" loc="1759" coveredmethods="39" methods="52" elements="721" classes="6" ncloc="916" statements="477" conditionals="192" coveredstatements="374"/>
            <class name="LIBORMarketModelFromCovarianceModel">
               <metrics coveredelements="557" coveredconditionals="144" complexity="174" coveredmethods="39" methods="52" elements="721" statements="477" conditionals="192" coveredstatements="374"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.StateSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.InterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelFromCovarianceModel.SimulationTimeInterpolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="of(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;) : LIBORMarketModelFromCovarianceModel" num="280" count="6143" type="method"/>
            <line num="291" count="6143" type="stmt"/>
            <line num="294" count="6142" type="stmt"/>
            <line falsecount="6130" truecount="12" num="294" type="cond"/>
            <line num="295" count="12" type="stmt"/>
            <line num="296" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="296" type="cond"/>
            <line num="297" count="8" type="stmt"/>
            <line num="300" count="12" type="stmt"/>
            <line num="301" count="12" type="stmt"/>
            <line num="302" count="12" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="308" count="12" type="stmt"/>
            <line num="310" count="12" type="stmt"/>
            <line num="312" count="12" type="stmt"/>
            <line num="315" count="6128" type="stmt"/>
            <line complexity="16" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="383" count="6473" type="method"/>
            <line num="395" count="6472" type="stmt"/>
            <line falsecount="14" truecount="6459" num="395" type="cond"/>
            <line num="396" count="6458" type="stmt"/>
            <line num="398" count="6471" type="stmt"/>
            <line falsecount="14" truecount="6456" num="398" type="cond"/>
            <line num="399" count="6456" type="stmt"/>
            <line num="401" count="6467" type="stmt"/>
            <line falsecount="448" truecount="6017" num="401" type="cond"/>
            <line num="402" count="6016" type="stmt"/>
            <line num="404" count="6471" type="stmt"/>
            <line falsecount="6470" truecount="0" num="404" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="6473" type="stmt"/>
            <line falsecount="354" truecount="6117" num="407" type="cond"/>
            <line num="408" count="6119" type="stmt"/>
            <line num="411" count="6474" type="stmt"/>
            <line num="412" count="6472" type="stmt"/>
            <line falsecount="6447" truecount="20" num="412" type="cond"/>
            <line num="413" count="20" type="stmt"/>
            <line num="416" count="6471" type="stmt"/>
            <line num="417" count="6472" type="stmt"/>
            <line num="418" count="6473" type="stmt"/>
            <line num="419" count="6474" type="stmt"/>
            <line num="420" count="6474" type="stmt"/>
            <line num="423" count="6471" type="stmt"/>
            <line falsecount="6460" truecount="12" num="423" type="cond"/>
            <line num="424" count="12" type="stmt"/>
            <line num="425" count="12" type="stmt"/>
            <line num="426" count="12" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="432" count="12" type="stmt"/>
            <line num="435" count="6457" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,RandomVariableFactory,LIBORCovarianceModel,Map&lt;String, ?&gt;)" num="498" count="6139" type="method"/>
            <line num="507" count="6144" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,AnalyticModel,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="574" count="196" type="method"/>
            <line num="584" count="196" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,LIBORCovarianceModel)" num="595" count="2" type="method"/>
            <line num="600" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel)" num="612" count="0" type="method"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,LIBORCovarianceModel,SwaptionMarketData)" num="631" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData)" num="650" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData,Map&lt;String, ?&gt;)" num="671" count="0" type="method"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelFromCovarianceModel(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="756" count="26" type="method"/>
            <line num="765" count="26" type="stmt"/>
            <line complexity="9" visibility="private" signature="getCalibrationItems(TimeDiscretization,ForwardCurve,SwaptionMarketData,boolean) : CalibrationProduct[]" num="768" count="0" type="method"/>
            <line num="769" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="769" type="cond"/>
            <line num="770" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line num="775" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="778" type="cond"/>
            <line num="779" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="779" type="cond"/>
            <line num="782" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line num="785" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="785" type="cond"/>
            <line num="786" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="788" type="cond"/>
            <line num="789" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="798" type="cond"/>
            <line num="799" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="812" type="cond"/>
            <line num="813" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="816" type="cond"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getReferenceDate() : LocalDateTime" num="839" count="34957" type="method"/>
            <line num="841" count="34947" type="stmt"/>
            <line falsecount="22698" truecount="11838" num="841" type="cond"/>
            <line complexity="3" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="855" count="1255977" type="method"/>
            <line num="857" count="1256078" type="stmt"/>
            <line falsecount="1256158" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line num="861" count="1256157" type="stmt"/>
            <line num="865" count="1258199" type="stmt"/>
            <line falsecount="1098" truecount="1257101" num="865" type="cond"/>
            <line num="866" count="1257080" type="stmt"/>
            <line num="868" count="1257113" type="stmt"/>
            <line num="869" count="1256603" type="stmt"/>
            <line num="871" count="1256764" type="stmt"/>
            <line complexity="3" visibility="private" signature="getNumeraireDefaultableZeroBondAsOfTimeZero(MonteCarloProcess,double) : RandomVariable" num="879" count="1257072" type="method"/>
            <line num="880" count="1257080" type="stmt"/>
            <line num="882" count="1257059" type="stmt"/>
            <line falsecount="0" truecount="1257024" num="882" type="cond"/>
            <line num="884" count="1257044" type="stmt"/>
            <line num="885" count="1256760" type="stmt"/>
            <line falsecount="26392" truecount="1230390" num="885" type="cond"/>
            <line num="886" count="1230445" type="stmt"/>
            <line num="890" count="26397" type="stmt"/>
            <line num="891" count="26383" type="stmt"/>
            <line num="892" count="26387" type="stmt"/>
            <line num="893" count="26382" type="stmt"/>
            <line num="894" count="26373" type="stmt"/>
            <line num="895" count="26418" type="stmt"/>
            <line num="896" count="26418" type="stmt"/>
            <line complexity="4" visibility="private" signature="getNumeraireDefaultableZeroBondAsOfTimeZero(MonteCarloProcess,int) : RandomVariable" num="911" count="1283209" type="method"/>
            <line num="912" count="1283189" type="stmt"/>
            <line num="914" count="1283231" type="stmt"/>
            <line falsecount="0" truecount="1283223" num="914" type="cond"/>
            <line num="915" count="1283249" type="stmt"/>
            <line num="917" count="1282886" type="stmt"/>
            <line num="918" count="1283636" type="stmt"/>
            <line num="920" count="1283636" type="stmt"/>
            <line num="921" count="1283634" type="stmt"/>
            <line falsecount="1278346" truecount="5290" num="921" type="cond"/>
            <line num="922" count="5290" type="stmt"/>
            <line num="923" count="5290" type="stmt"/>
            <line num="924" count="5290" type="stmt"/>
            <line num="926" count="5290" type="stmt"/>
            <line falsecount="5290" truecount="668260" num="926" type="cond"/>
            <line num="927" count="668260" type="stmt"/>
            <line num="928" count="668258" type="stmt"/>
            <line num="929" count="668260" type="stmt"/>
            <line num="930" count="668260" type="stmt"/>
            <line num="931" count="668259" type="stmt"/>
            <line num="932" count="668258" type="stmt"/>
            <line num="933" count="668260" type="stmt"/>
            <line num="934" count="668259" type="stmt"/>
            <line num="936" count="5290" type="stmt"/>
            <line num="938" count="1283636" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardDiscountBond(MonteCarloProcess,double,double) : RandomVariable" num="942" count="0" type="method"/>
            <line num="944" count="0" type="stmt"/>
            <line num="945" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="947" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="ensureCacheConsistency(MonteCarloProcess) : void" num="950" count="4301521" type="method"/>
            <line num="954" count="4301552" type="stmt"/>
            <line falsecount="4296117" truecount="5418" num="954" type="cond"/>
            <line num="956" count="5418" type="stmt"/>
            <line num="957" count="5418" type="stmt"/>
            <line num="958" count="5418" type="stmt"/>
            <line num="959" count="5418" type="stmt"/>
            <line num="960" count="5418" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getNumerairetUnAdjusted(MonteCarloProcess,double) : RandomVariable" num="964" count="2537625" type="method"/>
            <line num="968" count="2538009" type="stmt"/>
            <line num="969" count="2536470" type="stmt"/>
            <line num="970" count="2536828" type="stmt"/>
            <line falsecount="2511756" truecount="25657" num="970" type="cond"/>
            <line num="974" count="25747" type="stmt"/>
            <line num="975" count="25789" type="stmt"/>
            <line num="976" count="25820" type="stmt"/>
            <line falsecount="25779" truecount="0" num="976" type="cond"/>
            <line num="977" count="0" type="stmt"/>
            <line num="979" count="25850" type="stmt"/>
            <line falsecount="25975" truecount="0" num="979" type="cond"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="984" type="cond"/>
            <line num="985" count="0" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line num="987" count="0" type="stmt"/>
            <line num="990" count="25871" type="stmt"/>
            <line falsecount="0" truecount="25886" num="990" type="cond"/>
            <line num="991" count="25884" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line num="1000" count="26390" type="stmt"/>
            <line num="1002" count="26360" type="stmt"/>
            <line num="1009" count="2512115" type="stmt"/>
            <line complexity="8" visibility="protected" signature="getNumerairetUnAdjustedAtLIBORIndex(MonteCarloProcess,int) : RandomVariable" num="1013" count="3014911" type="method"/>
            <line num="1017" count="3015086" type="stmt"/>
            <line num="1021" count="3018234" type="stmt"/>
            <line num="1026" count="3018229" type="stmt"/>
            <line num="1027" count="3018230" type="stmt"/>
            <line falsecount="2509756" truecount="508476" num="1027" type="cond"/>
            <line num="1028" count="508476" type="stmt"/>
            <line falsecount="508101" truecount="374" num="1028" type="cond"/>
            <line num="1029" count="374" type="stmt"/>
            <line num="1030" count="374" type="stmt"/>
            <line falsecount="374" truecount="0" num="1030" type="cond"/>
            <line num="1031" count="0" type="stmt"/>
            <line num="1035" count="374" type="stmt"/>
            <line num="1040" count="374" type="stmt"/>
            <line falsecount="374" truecount="9522" num="1040" type="cond"/>
            <line num="1041" count="9522" type="stmt"/>
            <line num="1042" count="9522" type="stmt"/>
            <line num="1043" count="9522" type="stmt"/>
            <line num="1046" count="508102" type="stmt"/>
            <line falsecount="0" truecount="508102" num="1046" type="cond"/>
            <line num="1050" count="508102" type="stmt"/>
            <line falsecount="5402" truecount="502700" num="1050" type="cond"/>
            <line num="1051" count="502700" type="stmt"/>
            <line num="1052" count="502699" type="stmt"/>
            <line falsecount="502699" truecount="0" num="1052" type="cond"/>
            <line num="1053" count="0" type="stmt"/>
            <line num="1056" count="502699" type="stmt"/>
            <line num="1057" count="502699" type="stmt"/>
            <line num="1058" count="502700" type="stmt"/>
            <line num="1061" count="5402" type="stmt"/>
            <line num="1064" count="0" type="stmt"/>
            <line num="1066" count="508474" type="stmt"/>
            <line num="1068" count="3018232" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraireAdjustments() : Map&lt;Double, RandomVariable&gt;" num="1072" count="0" type="method"/>
            <line num="1073" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="1076" count="5422" type="method"/>
            <line num="1078" count="5422" type="stmt"/>
            <line num="1079" count="5422" type="stmt"/>
            <line falsecount="5422" truecount="677164" num="1079" type="cond"/>
            <line num="1080" count="677185" type="stmt"/>
            <line num="1081" count="677134" type="stmt"/>
            <line falsecount="631087" truecount="46052" num="1081" type="cond"/>
            <line num="1084" count="5422" type="stmt"/>
            <line num="1085" count="5422" type="stmt"/>
            <line falsecount="5421" truecount="677177" num="1085" type="cond"/>
            <line num="1086" count="677174" type="stmt"/>
            <line num="1088" count="5421" type="stmt"/>
            <line complexity="13" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="1120" count="707788" type="method"/>
            <line num="1122" count="707781" type="stmt"/>
            <line num="1123" count="707776" type="stmt"/>
            <line num="1124" count="707788" type="stmt"/>
            <line falsecount="682581" truecount="25200" num="1124" type="cond"/>
            <line num="1125" count="25200" type="stmt"/>
            <line num="1128" count="707785" type="stmt"/>
            <line num="1131" count="707776" type="stmt"/>
            <line num="1132" count="707790" type="stmt"/>
            <line falsecount="707770" truecount="50972845" num="1132" type="cond"/>
            <line num="1133" count="50972855" type="stmt"/>
            <line num="1136" count="707776" type="stmt"/>
            <line num="1137" count="707784" type="stmt"/>
            <line num="1139" count="707780" type="stmt"/>
            <line falsecount="1760" truecount="706023" num="1139" type="cond"/>
            <line num="1141" count="706016" type="stmt"/>
            <line falsecount="706030" truecount="50940363" num="1141" type="cond"/>
            <line num="1142" count="50940364" type="stmt"/>
            <line num="1143" count="50940370" type="stmt"/>
            <line num="1144" count="50940374" type="stmt"/>
            <line num="1146" count="50940380" type="stmt"/>
            <line falsecount="49877183" truecount="1063192" num="1146" type="cond"/>
            <line num="1148" count="1063189" type="stmt"/>
            <line num="1151" count="50940389" type="stmt"/>
            <line num="1152" count="50940386" type="stmt"/>
            <line falsecount="50940362" truecount="56997317" num="1152" type="cond"/>
            <line num="1153" count="56997497" type="stmt"/>
            <line num="1156" count="50940375" type="stmt"/>
            <line num="1159" count="1760" type="stmt"/>
            <line falsecount="0" truecount="1760" num="1159" type="cond"/>
            <line num="1161" count="1760" type="stmt"/>
            <line falsecount="1760" truecount="33520" num="1161" type="cond"/>
            <line num="1162" count="33520" type="stmt"/>
            <line num="1163" count="33520" type="stmt"/>
            <line num="1164" count="33520" type="stmt"/>
            <line num="1166" count="33520" type="stmt"/>
            <line falsecount="0" truecount="33520" num="1166" type="cond"/>
            <line num="1167" count="33520" type="stmt"/>
            <line num="1170" count="33520" type="stmt"/>
            <line num="1172" count="33520" type="stmt"/>
            <line num="1174" count="33520" type="stmt"/>
            <line falsecount="33520" truecount="177680" num="1174" type="cond"/>
            <line num="1175" count="177680" type="stmt"/>
            <line num="1180" count="0" type="stmt"/>
            <line num="1182" count="707790" type="stmt"/>
            <line falsecount="655200" truecount="52590" num="1182" type="cond"/>
            <line num="1184" count="52589" type="stmt"/>
            <line falsecount="52590" truecount="1096684" num="1184" type="cond"/>
            <line num="1185" count="1096694" type="stmt"/>
            <line num="1186" count="1096659" type="stmt"/>
            <line num="1189" count="707790" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="1192" count="101595848" type="method"/>
            <line num="1195" count="101603555" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="1198" count="51123302" type="method"/>
            <line num="1200" count="51156261" type="stmt"/>
            <line num="1202" count="51172762" type="stmt"/>
            <line falsecount="50055353" truecount="1142131" num="1202" type="cond"/>
            <line num="1203" count="1142254" type="stmt"/>
            <line num="1206" count="51268798" type="stmt"/>
            <line falsecount="1271653" truecount="50052493" num="1206" type="cond"/>
            <line num="1207" count="50073915" type="stmt"/>
            <line num="1210" count="51465793" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="1213" count="49232292" type="method"/>
            <line num="1215" count="49240463" type="stmt"/>
            <line num="1217" count="49235401" type="stmt"/>
            <line falsecount="48406031" truecount="811733" num="1217" type="cond"/>
            <line num="1218" count="814039" type="stmt"/>
            <line num="1221" count="49256190" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="1224" count="53294732" type="method"/>
            <line num="1226" count="53294744" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftApproximationMethod() : Driftapproximation" num="1232" count="0" type="method"/>
            <line num="1233" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="1236" count="10818479" type="method"/>
            <line num="1239" count="10818934" type="stmt"/>
            <line num="1240" count="10813114" type="stmt"/>
            <line num="1243" count="10809986" type="stmt"/>
            <line num="1244" count="10811916" type="stmt"/>
            <line num="1246" count="10807362" type="stmt"/>
            <line falsecount="10750923" truecount="58047" num="1246" type="cond"/>
            <line num="1247" count="58093" type="stmt"/>
            <line num="1248" count="58060" type="stmt"/>
            <line falsecount="49984" truecount="7055" num="1248" type="cond"/>
            <line num="1249" count="7106" type="stmt"/>
            <line num="1256" count="10809459" type="stmt"/>
            <line falsecount="10758588" truecount="52839" num="1256" type="cond"/>
            <line num="1257" count="52842" type="stmt"/>
            <line num="1258" count="52844" type="stmt"/>
            <line num="1260" count="14118" type="stmt"/>
            <line num="1261" count="14126" type="stmt"/>
            <line num="1262" count="14124" type="stmt"/>
            <line num="1266" count="10759598" type="stmt"/>
            <line falsecount="10720298" truecount="40049" num="1266" type="cond"/>
            <line num="1267" count="40196" type="stmt"/>
            <line num="1268" count="40189" type="stmt"/>
            <line num="1269" count="39530" type="stmt"/>
            <line num="1270" count="39169" type="stmt"/>
            <line falsecount="39322" truecount="0" num="1270" type="cond"/>
            <line num="1271" count="0" type="stmt"/>
            <line num="1273" count="39462" type="stmt"/>
            <line falsecount="14007" truecount="25502" num="1273" type="cond"/>
            <line num="1274" count="25658" type="stmt"/>
            <line num="1277" count="14009" type="stmt"/>
            <line num="1278" count="14017" type="stmt"/>
            <line num="1279" count="14017" type="stmt"/>
            <line num="1282" count="10720838" type="stmt"/>
            <line falsecount="10721882" truecount="0" num="1282" type="cond"/>
            <line num="1283" count="0" type="stmt"/>
            <line num="1287" count="10722627" type="stmt"/>
            <line falsecount="10252353" truecount="470375" num="1287" type="cond"/>
            <line num="1288" count="470376" type="stmt"/>
            <line num="1292" count="10253070" type="stmt"/>
            <line num="1295" count="10253312" type="stmt"/>
            <line falsecount="10210696" truecount="20526433" num="1295" type="cond"/>
            <line num="1297" count="20529632" type="stmt"/>
            <line num="1298" count="20462583" type="stmt"/>
            <line num="1300" count="20534434" type="stmt"/>
            <line falsecount="10288620" truecount="10253616" num="1300" type="cond"/>
            <line num="1303" count="10215163" type="stmt"/>
            <line num="1305" count="10244783" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="1308" count="21508360" type="method"/>
            <line num="1312" count="21513752" type="stmt"/>
            <line complexity="9" visibility="private" signature="getOnePlusInterpolatedLIBORDt(MonteCarloProcess,int,double,int) : RandomVariable" num="1325" count="53915" type="method"/>
            <line num="1327" count="53892" type="stmt"/>
            <line num="1328" count="53552" type="stmt"/>
            <line num="1329" count="53246" type="stmt"/>
            <line num="1330" count="53489" type="stmt"/>
            <line falsecount="39584" truecount="13757" num="1330" type="cond"/>
            <line num="1332" count="13872" type="stmt"/>
            <line num="1333" count="13797" type="stmt"/>
            <line falsecount="13836" truecount="0" num="1333" type="cond"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1338" count="53546" type="stmt"/>
            <line num="1340" count="54511" type="stmt"/>
            <line num="1341" count="54515" type="stmt"/>
            <line num="1343" count="54532" type="stmt"/>
            <line num="1344" count="54539" type="stmt"/>
            <line num="1346" count="2" type="stmt"/>
            <line num="1347" count="2" type="stmt"/>
            <line num="1348" count="2" type="stmt"/>
            <line num="1349" count="54551" type="stmt"/>
            <line num="1350" count="54554" type="stmt"/>
            <line num="1351" count="54567" type="stmt"/>
            <line num="1352" count="2" type="stmt"/>
            <line num="1353" count="2" type="stmt"/>
            <line num="1354" count="2" type="stmt"/>
            <line num="1355" count="2" type="stmt"/>
            <line num="1356" count="2" type="stmt"/>
            <line num="1357" count="2" type="stmt"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1364" count="54582" type="stmt"/>
            <line num="1365" count="54451" type="stmt"/>
            <line num="1367" count="54402" type="stmt"/>
            <line num="1368" count="54410" type="stmt"/>
            <line num="1370" count="2" type="stmt"/>
            <line num="1371" count="2" type="stmt"/>
            <line num="1372" count="2" type="stmt"/>
            <line num="1373" count="54417" type="stmt"/>
            <line num="1374" count="2" type="stmt"/>
            <line num="1375" count="54443" type="stmt"/>
            <line num="1376" count="54494" type="stmt"/>
            <line num="1377" count="0" type="stmt"/>
            <line num="1377" count="0" type="stmt"/>
            <line num="1379" count="54522" type="stmt"/>
            <line num="1381" count="54586" type="stmt"/>
            <line complexity="8" visibility="private" signature="getInterpolationDriftAdjustment(MonteCarloProcess,int,int) : RandomVariable" num="1391" count="2" type="method"/>
            <line num="1393" count="2" type="stmt"/>
            <line num="1395" count="0" type="stmt"/>
            <line num="1396" count="0" type="stmt"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1399" count="2" type="stmt"/>
            <line num="1400" count="2" type="stmt"/>
            <line num="1401" count="2" type="stmt"/>
            <line num="1402" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="1402" type="cond"/>
            <line num="1404" count="0" type="stmt"/>
            <line num="1407" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1407" type="cond"/>
            <line num="1408" count="2" type="stmt"/>
            <line num="1410" count="2" type="stmt"/>
            <line num="1413" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1413" type="cond"/>
            <line num="1414" count="2" type="stmt"/>
            <line num="1417" count="2" type="stmt"/>
            <line num="1418" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1418" type="cond"/>
            <line num="1419" count="2" type="stmt"/>
            <line num="1420" count="2" type="stmt"/>
            <line num="1423" count="2" type="stmt"/>
            <line num="1427" count="0" type="stmt"/>
            <line num="1429" count="0" type="stmt"/>
            <line num="1429" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="getInterpolationDriftAdjustmentEvaluated(MonteCarloProcess,int,int) : RandomVariable" num="1433" count="2" type="method"/>
            <line num="1436" count="2" type="stmt"/>
            <line num="1437" count="2" type="stmt"/>
            <line num="1438" count="2" type="stmt"/>
            <line num="1440" count="2" type="stmt"/>
            <line num="1445" count="2" type="stmt"/>
            <line num="1450" count="2" type="stmt"/>
            <line num="1451" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="1451" type="cond"/>
            <line num="1453" count="20" type="stmt"/>
            <line num="1455" count="2" type="stmt"/>
            <line num="1457" count="2" type="stmt"/>
            <line num="1459" count="2" type="stmt"/>
            <line num="1461" count="2" type="stmt"/>
            <line num="1462" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1462" type="cond"/>
            <line num="1464" count="2" type="stmt"/>
            <line num="1470" count="2" type="stmt"/>
            <line falsecount="2" truecount="72" num="1470" type="cond"/>
            <line num="1472" count="72" type="stmt"/>
            <line num="1473" count="72" type="stmt"/>
            <line falsecount="72" truecount="720" num="1473" type="cond"/>
            <line num="1475" count="720" type="stmt"/>
            <line num="1476" count="720" type="stmt"/>
            <line falsecount="720" truecount="0" num="1476" type="cond"/>
            <line num="1478" count="0" type="stmt"/>
            <line num="1480" count="720" type="stmt"/>
            <line num="1482" count="72" type="stmt"/>
            <line num="1484" count="72" type="stmt"/>
            <line num="1485" count="72" type="stmt"/>
            <line num="1487" count="72" type="stmt"/>
            <line num="1489" count="72" type="stmt"/>
            <line num="1490" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="1490" type="cond"/>
            <line num="1492" count="72" type="stmt"/>
            <line num="1494" count="72" type="stmt"/>
            <line num="1495" count="72" type="stmt"/>
            <line num="1496" count="72" type="stmt"/>
            <line num="1499" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="1502" count="106186247" type="method"/>
            <line num="1504" count="106186268" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="1507" count="3870" type="method"/>
            <line num="1511" count="3870" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="1514" count="0" type="method"/>
            <line num="1517" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLiborPeriod(int) : double" num="1520" count="1593357315" type="method"/>
            <line num="1522" count="1593502384" type="stmt"/>
            <line falsecount="1593061239" truecount="38721" num="1522" type="cond"/>
            <line num="1523" count="38720" type="stmt"/>
            <line num="1525" count="1593177621" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="1528" count="25109730" type="method"/>
            <line num="1530" count="25112498" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="1533" count="154663" type="method"/>
            <line num="1535" count="154703" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolationMethod() : InterpolationMethod" num="1541" count="0" type="method"/>
            <line num="1542" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="1548" count="0" type="method"/>
            <line num="1549" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getIntegratedLIBORCovariance(TimeDiscretization) : double[][][]" num="1552" count="113565" type="method"/>
            <line num="1554" count="113583" type="stmt"/>
            <line num="1555" count="114808" type="stmt"/>
            <line falsecount="113706" truecount="1106" num="1555" type="cond"/>
            <line num="1556" count="1106" type="stmt"/>
            <line num="1558" count="1106" type="stmt"/>
            <line num="1559" count="1106" type="stmt"/>
            <line falsecount="1106" truecount="128829" num="1559" type="cond"/>
            <line num="1560" count="128829" type="stmt"/>
            <line num="1561" count="128829" type="stmt"/>
            <line num="1563" count="128830" type="stmt"/>
            <line falsecount="128830" truecount="18565908" num="1563" type="cond"/>
            <line num="1564" count="18565939" type="stmt"/>
            <line num="1566" count="128829" type="stmt"/>
            <line falsecount="128829" truecount="18564661" num="1566" type="cond"/>
            <line num="1567" count="18564844" type="stmt"/>
            <line num="1569" count="18564923" type="stmt"/>
            <line falsecount="18565042" truecount="1450908033" num="1569" type="cond"/>
            <line num="1570" count="1450929152" type="stmt"/>
            <line num="1571" count="1450973268" type="stmt"/>
            <line falsecount="970418363" truecount="480583017" num="1571" type="cond"/>
            <line num="1572" count="480591381" type="stmt"/>
            <line num="1573" count="480603614" type="stmt"/>
            <line falsecount="480602863" truecount="500273379" num="1573" type="cond"/>
            <line num="1574" count="500424915" type="stmt"/>
            <line num="1577" count="1450982126" type="stmt"/>
            <line num="1583" count="1106" type="stmt"/>
            <line falsecount="1106" truecount="127710" num="1583" type="cond"/>
            <line num="1584" count="127710" type="stmt"/>
            <line num="1585" count="127712" type="stmt"/>
            <line num="1586" count="127712" type="stmt"/>
            <line falsecount="127714" truecount="18430612" num="1586" type="cond"/>
            <line num="1587" count="18431692" type="stmt"/>
            <line falsecount="18433543" truecount="1440878217" num="1587" type="cond"/>
            <line num="1588" count="1440928422" type="stmt"/>
            <line num="1589" count="1440998449" type="stmt"/>
            <line num="1596" count="114710" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="1599" count="12589396" type="method"/>
            <line num="1601" count="12590909" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="1604" count="21447552" type="method"/>
            <line num="1606" count="21450695" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="1609" count="11509560" type="method"/>
            <line num="1611" count="11511690" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionMarketData() : SwaptionMarketData" num="1619" count="0" type="method"/>
            <line num="1620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="1623" count="119926" type="method"/>
            <line num="1625" count="119976" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : Object" num="1628" count="6011" type="method"/>
            <line num="1630" count="6011" type="stmt"/>
            <line num="1631" count="6013" type="stmt"/>
            <line num="1632" count="6012" type="stmt"/>
            <line num="1633" count="6013" type="stmt"/>
            <line num="1634" count="6013" type="stmt"/>
            <line num="1635" count="6012" type="stmt"/>
            <line num="1636" count="6013" type="stmt"/>
            <line num="1638" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedCovarianceModel(LIBORCovarianceModel) : LIBORMarketModelFromCovarianceModel" num="1646" count="6014" type="method"/>
            <line num="1648" count="6013" type="stmt"/>
            <line num="1649" count="6013" type="stmt"/>
            <line num="1650" count="6013" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModelFromCovarianceModel" num="1653" count="6" type="method"/>
            <line num="1655" count="6" type="stmt"/>
            <line num="1656" count="6" type="stmt"/>
            <line num="1657" count="6" type="stmt"/>
            <line num="1658" count="6" type="stmt"/>
            <line num="1659" count="6" type="stmt"/>
            <line num="1660" count="6" type="stmt"/>
            <line num="1662" count="6" type="stmt"/>
            <line num="1663" count="6" type="stmt"/>
            <line num="1664" count="6" type="stmt"/>
            <line num="1665" count="6" type="stmt"/>
            <line num="1666" count="6" type="stmt"/>
            <line num="1668" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="1668" type="cond"/>
            <line num="1669" count="0" type="stmt"/>
            <line num="1670" count="0" type="stmt"/>
            <line num="1671" count="0" type="stmt"/>
            <line num="1672" count="0" type="stmt"/>
            <line num="1673" count="0" type="stmt"/>
            <line num="1674" count="0" type="stmt"/>
            <line num="1676" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1676" type="cond"/>
            <line num="1677" count="0" type="stmt"/>
            <line num="1680" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1680" type="cond"/>
            <line num="1681" count="0" type="stmt"/>
            <line num="1682" count="0" type="stmt"/>
            <line num="1683" count="0" type="stmt"/>
            <line num="1684" count="0" type="stmt"/>
            <line num="1685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1685" type="cond"/>
            <line num="1686" count="0" type="stmt"/>
            <line num="1688" count="0" type="stmt"/>
            <line num="1690" count="0" type="stmt"/>
            <line num="1695" count="6" type="stmt"/>
            <line num="1696" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="1699" count="10" type="method"/>
            <line num="1702" count="10" type="stmt"/>
            <line num="1704" count="10" type="stmt"/>
            <line num="1707" count="10" type="stmt"/>
            <line falsecount="10" truecount="800" num="1707" type="cond"/>
            <line num="1708" count="800" type="stmt"/>
            <line num="1709" count="800" type="stmt"/>
            <line num="1710" count="800" type="stmt"/>
            <line num="1714" count="800" type="stmt"/>
            <line num="1718" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="1718" type="cond"/>
            <line num="1719" count="10" type="stmt"/>
            <line num="1721" count="10" type="stmt"/>
            <line falsecount="10" truecount="60" num="1721" type="cond"/>
            <line num="1722" count="60" type="stmt"/>
            <line num="1728" count="10" type="stmt"/>
            <line num="1729" count="0" type="stmt"/>
            <line num="1732" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(ObjectInputStream) : void" num="1735" count="6" type="method"/>
            <line num="1736" count="6" type="stmt"/>
            <line num="1741" count="6" type="stmt"/>
            <line num="1742" count="6" type="stmt"/>
            <line num="1743" count="6" type="stmt"/>
            <line num="1744" count="6" type="stmt"/>
            <line num="1745" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="1748" count="0" type="method"/>
            <line num="1750" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelStandard.java" name="LIBORMarketModelStandard.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="101" loc="890" coveredmethods="0" methods="39" elements="440" classes="3" ncloc="545" statements="293" conditionals="108" coveredstatements="0"/>
            <class name="LIBORMarketModelStandard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="101" coveredmethods="0" methods="39" elements="440" statements="293" conditionals="108" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelStandard.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelStandard.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 61()" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,LIBORCovarianceModel)" num="97" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel)" num="115" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,LIBORCovarianceModel,SwaptionMarketData)" num="137" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,SwaptionMarketData)" num="156" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORMarketModelStandard(TimeDiscretization,ForwardCurve,DiscountCurve,LIBORCovarianceModel,CalibrationProduct[])" num="178" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="getCalibrationItems(TimeDiscretization,ForwardCurve,SwaptionMarketData) : CalibrationProduct[]" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="329" type="cond"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="414" type="cond"/>
            <line num="415" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="428" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="440" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftApproximationMethod() : Driftapproximation" num="456" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="460" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="495" type="cond"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="519" type="cond"/>
            <line num="520" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="529" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="536" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="543" type="cond"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,int) : RandomVariable" num="556" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="567" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="572" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="578" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLiborPeriod(int) : double" num="588" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="590" type="cond"/>
            <line num="591" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="599" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="607" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getDrift(MonteCarloProcess,int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="621" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="624" type="cond"/>
            <line num="625" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="631" type="cond"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getDriftEuler(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="659" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="672" type="cond"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getDriftLineIntegral(MonteCarloProcess,int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="690" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="696" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="709" type="cond"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="722" type="cond"/>
            <line num="724" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="749" count="0" type="method"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getIntegratedLIBORCovariance(TimeDiscretization) : double[][][]" num="756" count="0" type="method"/>
            <line num="758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="758" type="cond"/>
            <line num="759" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="765" type="cond"/>
            <line num="767" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="767" type="cond"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="769" type="cond"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="773" type="cond"/>
            <line num="774" count="0" type="stmt"/>
            <line num="776" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDriftApproximationMethod(Driftapproximation) : void" num="792" count="0" type="method"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeasure(Measure) : void" num="799" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="803" count="0" type="method"/>
            <line num="805" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="808" count="0" type="method"/>
            <line num="810" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="810" type="cond"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionMarketData() : SwaptionMarketData" num="828" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="835" count="0" type="method"/>
            <line num="837" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedCovarianceModel(LIBORCovarianceModel) : LIBORMarketModelStandard" num="844" count="0" type="method"/>
            <line num="846" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORMarketModelStandard" num="851" count="0" type="method"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="859" type="cond"/>
            <line num="860" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="862" type="cond"/>
            <line num="863" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="865" type="cond"/>
            <line num="866" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="868" type="cond"/>
            <line num="869" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="871" type="cond"/>
            <line num="872" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="875" type="cond"/>
            <line num="876" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="884" count="0" type="method"/>
            <line num="887" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/LIBORMarketModelWithTenorRefinement.java" name="LIBORMarketModelWithTenorRefinement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="78" loc="748" coveredmethods="0" methods="25" elements="369" classes="2" ncloc="424" statements="256" conditionals="88" coveredstatements="0"/>
            <class name="LIBORMarketModelWithTenorRefinement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="78" coveredmethods="0" methods="25" elements="369" statements="256" conditionals="88" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelWithTenorRefinement.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="LIBORMarketModelWithTenorRefinement(TimeDiscretization[],Integer[],AnalyticModel,ForwardCurve,DiscountCurve,TermStructureCovarianceModel,CalibrationProduct[],Map&lt;String, ?&gt;)" num="140" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="17" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getIntegratedVariance(MonteCarloProcess,int,double,double) : RandomVariable" num="425" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getWeightForTenorRefinement(double,double,double,double) : double" num="458" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="470" type="cond"/>
            <line num="471" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="495" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="522" count="0" type="method"/>
            <line num="524" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="527" count="0" type="method"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getLiborPeriodDiscretization(double) : TimeDiscretization" num="532" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="537" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="539" type="cond"/>
            <line num="540" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="540" type="cond"/>
            <line num="541" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getStateVariableForPeriod(TimeDiscretization,RandomVariable[],double,double) : RandomVariable" num="553" count="0" type="method"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="560" type="cond"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="562" type="cond"/>
            <line num="563" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="574" type="cond"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="587" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORForStateVariable(TimeDiscretization,RandomVariable[],double,double) : RandomVariable" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getStateVariable(MonteCarloProcess,int,double,double) : RandomVariable" num="606" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="620" type="cond"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="622" type="cond"/>
            <line num="623" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="633" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="644" type="cond"/>
            <line num="645" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardRate(MonteCarloProcess,double,double,double) : RandomVariable" num="657" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="661" type="cond"/>
            <line num="662" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(MonteCarloProcess,int,double,double) : RandomVariable" num="668" count="0" type="method"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="680" count="0" type="method"/>
            <line num="682" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="685" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="696" count="0" type="method"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnalyticModel() : AnalyticModel" num="711" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="716" count="0" type="method"/>
            <line num="718" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRateCurve() : ForwardCurve" num="721" count="0" type="method"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : TermStructureModel" num="726" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : TermStructureCovarianceModel" num="744" count="0" type="method"/>
            <line num="745" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.businessdaycalendar">
         <metrics coveredelements="182" complexity="86" loc="995" methods="38" classes="11" statements="210" coveredconditionals="38" coveredmethods="26" elements="314" ncloc="622" files="9" conditionals="66" coveredstatements="118"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/AbstractBusinessdayCalendar.java" name="AbstractBusinessdayCalendar.java">
            <metrics coveredelements="77" coveredconditionals="22" complexity="44" loc="269" coveredmethods="4" methods="7" elements="178" classes="1" ncloc="212" statements="127" conditionals="44" coveredstatements="51"/>
            <class name="AbstractBusinessdayCalendar">
               <metrics coveredelements="77" coveredconditionals="22" complexity="44" coveredmethods="4" methods="7" elements="178" statements="127" conditionals="44" coveredstatements="51"/>
            </class>
            <line complexity="10" visibility="public" signature="getAdjustedDate(LocalDate,DateRollConvention) : LocalDate" num="28" count="794364764" type="method"/>
            <line num="30" count="795988225" type="stmt"/>
            <line falsecount="796316271" truecount="52" num="30" type="cond"/>
            <line num="31" count="52" type="stmt"/>
            <line num="33" count="796498633" type="stmt"/>
            <line falsecount="608815325" truecount="187763748" num="33" type="cond"/>
            <line num="34" count="187771226" type="stmt"/>
            <line num="35" count="187667945" type="stmt"/>
            <line falsecount="187741208" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="187762240" type="stmt"/>
            <line num="41" count="608848349" type="stmt"/>
            <line falsecount="609090444" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="608239561" type="stmt"/>
            <line falsecount="0" truecount="609466706" num="49" type="cond"/>
            <line num="50" count="609531409" type="stmt"/>
            <line falsecount="32704" truecount="609458761" num="50" type="cond"/>
            <line num="51" count="609571751" type="stmt"/>
            <line num="52" count="609758037" type="stmt"/>
            <line falsecount="590570912" truecount="372068029" num="52" type="cond"/>
            <line num="53" count="373029936" type="stmt"/>
            <line num="55" count="598788647" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getRolledDate(LocalDate,int) : LocalDate" num="62" count="734468694" type="method"/>
            <line num="64" count="740874310" type="stmt"/>
            <line num="65" count="744333921" type="stmt"/>
            <line falsecount="16352" truecount="747601785" num="65" type="cond"/>
            <line num="66" count="750141413" type="stmt"/>
            <line falsecount="16352" truecount="752889485" num="66" type="cond"/>
            <line num="67" count="755074848" type="stmt"/>
            <line falsecount="757376569" truecount="46814" num="67" type="cond"/>
            <line num="68" count="46814" type="stmt"/>
            <line num="69" count="46813" type="stmt"/>
            <line num="70" count="46812" type="stmt"/>
            <line num="72" count="758783669" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAdjustedDate(LocalDate,String,DateRollConvention) : LocalDate" num="75" count="187200949" type="method"/>
            <line num="77" count="187314528" type="stmt"/>
            <line complexity="9" visibility="public" signature="getDateFromDateAndOffsetCode(LocalDate,String) : LocalDate" num="80" count="187365052" type="method"/>
            <line num="82" count="187402490" type="stmt"/>
            <line num="84" count="187501528" type="stmt"/>
            <line num="86" count="187564702" type="stmt"/>
            <line num="87" count="187602197" type="stmt"/>
            <line falsecount="188190832" truecount="187784527" num="87" type="cond"/>
            <line num="88" count="187848002" type="stmt"/>
            <line num="89" count="188013129" type="stmt"/>
            <line num="95" count="188561639" type="stmt"/>
            <line falsecount="188555375" truecount="10" num="95" type="cond"/>
            <line num="97" count="10" type="stmt"/>
            <line num="98" count="10" type="stmt"/>
            <line num="100" count="188504951" type="stmt"/>
            <line falsecount="0" truecount="188528225" num="100" type="cond"/>
            <line num="101" count="188529324" type="stmt"/>
            <line num="102" count="188483557" type="stmt"/>
            <line num="104" count="187969633" type="stmt"/>
            <line num="105" count="2374" type="stmt"/>
            <line num="107" count="2374" type="stmt"/>
            <line num="108" count="2374" type="stmt"/>
            <line num="110" count="34" type="stmt"/>
            <line num="112" count="34" type="stmt"/>
            <line num="113" count="34" type="stmt"/>
            <line num="115" count="66" type="stmt"/>
            <line num="117" count="66" type="stmt"/>
            <line num="118" count="66" type="stmt"/>
            <line num="120" count="188096295" type="stmt"/>
            <line num="122" count="188107454" type="stmt"/>
            <line num="123" count="188193825" type="stmt"/>
            <line num="125" count="5600" type="stmt"/>
            <line num="127" count="5600" type="stmt"/>
            <line num="128" count="5600" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="139" count="188200116" type="stmt"/>
            <line complexity="10" visibility="public" signature="createDateFromDateAndOffsetCodes(LocalDate,String[]) : LocalDate[]" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="convertOffsetCodesToTimes(String[]) : double[]" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendar.java" name="BusinessdayCalendar.java">
            <metrics coveredelements="38" coveredconditionals="16" complexity="13" loc="170" coveredmethods="2" methods="2" elements="50" classes="3" ncloc="66" statements="26" conditionals="22" coveredstatements="20"/>
            <class name="BusinessdayCalendar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BusinessdayCalendar.DateOffsetUnit">
               <metrics coveredelements="23" coveredconditionals="10" complexity="7" coveredmethods="1" methods="1" elements="27" statements="14" conditionals="12" coveredstatements="12"/>
            </class>
            <class name="BusinessdayCalendar.DateRollConvention">
               <metrics coveredelements="15" coveredconditionals="6" complexity="6" coveredmethods="1" methods="1" elements="23" statements="12" conditionals="10" coveredstatements="8"/>
            </class>
            <line complexity="7" visibility="public" signature="getEnum(String) : DateOffsetUnit" num="33" count="188402795" type="method"/>
            <line num="34" count="188425907" type="stmt"/>
            <line num="36" count="188435855" type="stmt"/>
            <line falsecount="188446766" truecount="2374" num="36" type="cond"/>
            <line num="37" count="2374" type="stmt"/>
            <line num="39" count="188492833" type="stmt"/>
            <line falsecount="188480364" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="188488241" type="stmt"/>
            <line falsecount="188484538" truecount="34" num="42" type="cond"/>
            <line num="43" count="34" type="stmt"/>
            <line num="45" count="188489749" type="stmt"/>
            <line falsecount="188509343" truecount="66" num="45" type="cond"/>
            <line num="46" count="66" type="stmt"/>
            <line num="48" count="188487595" type="stmt"/>
            <line falsecount="5600" truecount="188498274" num="48" type="cond"/>
            <line num="49" count="188496593" type="stmt"/>
            <line num="51" count="5600" type="stmt"/>
            <line falsecount="0" truecount="5600" num="51" type="cond"/>
            <line num="52" count="5600" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getEnum(String) : DateRollConvention" num="72" count="2526" type="method"/>
            <line num="73" count="2526" type="stmt"/>
            <line num="75" count="2526" type="stmt"/>
            <line falsecount="2526" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="2526" type="stmt"/>
            <line falsecount="2524" truecount="2" num="78" type="cond"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="2524" type="stmt"/>
            <line falsecount="2524" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="2524" type="stmt"/>
            <line falsecount="2524" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="2524" type="stmt"/>
            <line falsecount="2524" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="2524" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarAny.java" name="BusinessdayCalendarAny.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="3" loc="36" coveredmethods="2" methods="3" elements="5" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="BusinessdayCalendarAny">
               <metrics coveredelements="3" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarAny()" num="24" count="10" type="method"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="27" count="362" type="method"/>
            <line num="29" count="362" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingGivenHolidays.java" name="BusinessdayCalendarExcludingGivenHolidays.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="6" loc="67" coveredmethods="3" methods="6" elements="15" classes="1" ncloc="37" statements="9" conditionals="0" coveredstatements="6"/>
            <class name="BusinessdayCalendarExcludingGivenHolidays">
               <metrics coveredelements="9" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenHolidays(String,BusinessdayCalendar,boolean)" num="22" count="8" type="method"/>
            <line num="23" count="8" type="stmt"/>
            <line num="24" count="8" type="stmt"/>
            <line num="25" count="8" type="stmt"/>
            <line num="26" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCalendar() : BusinessdayCalendar" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isExcludingWeekends() : boolean" num="46" count="22" type="method"/>
            <line num="46" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="53" count="36" type="method"/>
            <line num="55" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingGivenSetOfHolidays.java" name="BusinessdayCalendarExcludingGivenSetOfHolidays.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="35" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="BusinessdayCalendarExcludingGivenSetOfHolidays">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenSetOfHolidays(String,BusinessdayCalendar,boolean,Set&lt;LocalDate&gt;)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingGivenSetOfHolidays(String,boolean,Set&lt;LocalDate&gt;)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingLONHolidays.java" name="BusinessdayCalendarExcludingLONHolidays.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="131" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="98" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BusinessdayCalendarExcludingLONHolidays">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 104()" num="104" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="982" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingLONHolidays()" num="116" count="2" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingLONHolidays(BusinessdayCalendar)" num="125" count="4" type="method"/>
            <line num="126" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="129" count="8" type="method"/>
            <line num="130" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingNYCHolidays.java" name="BusinessdayCalendarExcludingNYCHolidays.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="138" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="106" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="BusinessdayCalendarExcludingNYCHolidays">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 111()" num="111" count="2" type="method"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="1092" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingNYCHolidays()" num="123" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingNYCHolidays(BusinessdayCalendar)" num="132" count="4" type="method"/>
            <line num="133" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHolidays() : Set&lt;LocalDate&gt;" num="136" count="10" type="method"/>
            <line num="137" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingTARGETHolidays.java" name="BusinessdayCalendarExcludingTARGETHolidays.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="5" loc="94" coveredmethods="5" methods="5" elements="28" classes="1" ncloc="50" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="BusinessdayCalendarExcludingTARGETHolidays">
               <metrics coveredelements="28" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="28" statements="23" conditionals="0" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingTARGETHolidays()" num="30" count="2712" type="method"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingTARGETHolidays(BusinessdayCalendar)" num="38" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="42" count="969122560" type="method"/>
            <line num="44" count="974986625" type="stmt"/>
            <line num="45" count="975987475" type="stmt"/>
            <line num="47" count="976703212" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEasterSunday(LocalDate) : boolean" num="67" count="1142390931" type="method"/>
            <line num="68" count="1159765349" type="stmt"/>
            <line num="69" count="1168437697" type="stmt"/>
            <line num="70" count="1171351760" type="stmt"/>
            <line num="71" count="1177386588" type="stmt"/>
            <line num="72" count="1180389589" type="stmt"/>
            <line num="73" count="1181881461" type="stmt"/>
            <line num="74" count="1186366163" type="stmt"/>
            <line num="75" count="1189932975" type="stmt"/>
            <line num="76" count="1192506939" type="stmt"/>
            <line num="77" count="1191906979" type="stmt"/>
            <line num="78" count="1194967107" type="stmt"/>
            <line num="79" count="1202323380" type="stmt"/>
            <line num="80" count="1212038177" type="stmt"/>
            <line num="81" count="1212830172" type="stmt"/>
            <line num="82" count="1212506357" type="stmt"/>
            <line num="84" count="1213321494" type="stmt"/>
            <line num="85" count="1214562225" type="stmt"/>
            <line num="87" count="1216101240" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="90" count="4" type="method"/>
            <line num="92" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarExcludingWeekends.java" name="BusinessdayCalendarExcludingWeekends.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="4" loc="55" coveredmethods="2" methods="4" elements="7" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="BusinessdayCalendarExcludingWeekends">
               <metrics coveredelements="3" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingWeekends()" num="29" count="127679" type="method"/>
            <line complexity="1" visibility="public" signature="BusinessdayCalendarExcludingWeekends(BusinessdayCalendar)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBusinessday(LocalDate) : boolean" num="44" count="972152470" type="method"/>
            <line num="46" count="976263439" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.bond">
         <metrics coveredelements="51" complexity="72" loc="547" methods="36" classes="3" statements="120" coveredconditionals="13" coveredmethods="3" elements="208" ncloc="280" files="2" conditionals="52" coveredstatements="35"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/bond/Bond.java" name="Bond.java">
            <metrics coveredelements="51" coveredconditionals="13" complexity="53" loc="383" coveredmethods="3" methods="22" elements="165" classes="1" ncloc="189" statements="93" conditionals="50" coveredstatements="35"/>
            <class name="Bond">
               <metrics coveredelements="51" coveredconditionals="13" complexity="53" coveredmethods="3" methods="22" elements="165" statements="93" conditionals="50" coveredstatements="35"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,String,double,double,double)" num="71" count="22" type="method"/>
            <line num="79" count="22" type="stmt"/>
            <line num="80" count="22" type="stmt"/>
            <line num="81" count="22" type="stmt"/>
            <line num="82" count="22" type="stmt"/>
            <line num="83" count="22" type="stmt"/>
            <line num="84" count="22" type="stmt"/>
            <line num="85" count="22" type="stmt"/>
            <line num="86" count="22" type="stmt"/>
            <line num="87" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,double,double)" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,String,double,double)" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,String,String,double)" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(Schedule,String,double)" num="139" count="22" type="method"/>
            <line num="140" count="22" type="stmt"/>
            <line complexity="21" visibility="public" signature="getValue(double,AnalyticModel) : double" num="143" count="3892" type="method"/>
            <line num="146" count="3889" type="stmt"/>
            <line num="148" count="3891" type="stmt"/>
            <line falsecount="3890" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="3887" type="stmt"/>
            <line num="153" count="3863" type="stmt"/>
            <line falsecount="3866" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="3867" type="stmt"/>
            <line num="158" count="3861" type="stmt"/>
            <line falsecount="3861" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="3861" type="stmt"/>
            <line num="163" count="3853" type="stmt"/>
            <line num="165" count="3841" type="stmt"/>
            <line num="166" count="3840" type="stmt"/>
            <line falsecount="3767" truecount="32743" num="166" type="cond"/>
            <line num="167" count="32839" type="stmt"/>
            <line num="168" count="32814" type="stmt"/>
            <line num="170" count="32619" type="stmt"/>
            <line falsecount="0" truecount="32703" num="170" type="cond"/>
            <line num="172" count="32035" type="stmt"/>
            <line falsecount="32194" truecount="0" num="172" type="cond"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="174" count="32266" type="stmt"/>
            <line falsecount="32341" truecount="0" num="174" type="cond"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="32442" type="stmt"/>
            <line num="177" count="32467" type="stmt"/>
            <line falsecount="32431" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="32463" type="stmt"/>
            <line num="184" count="32505" type="stmt"/>
            <line falsecount="32554" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="3772" type="stmt"/>
            <line num="198" count="3775" type="stmt"/>
            <line falsecount="0" truecount="3782" num="198" type="cond"/>
            <line num="200" count="3778" type="stmt"/>
            <line falsecount="3786" truecount="0" num="200" type="cond"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="3787" type="stmt"/>
            <line falsecount="3791" truecount="0" num="202" type="cond"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="3799" type="stmt"/>
            <line num="207" count="3803" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCouponPayment(int,AnalyticModel) : double" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValueWithGivenSpreadOverCurve(double,Curve,double,AnalyticModel) : double" num="243" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line complexity="1" visibility="public" signature="getValueWithGivenYield(double,double,AnalyticModel) : double" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSpread(double,Curve,AnalyticModel) : double" num="278" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getYield(double,AnalyticModel) : double" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedInterest(LocalDate,AnalyticModel) : double" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccruedInterest(double,AnalyticModel) : double" num="332" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule() : Schedule" num="337" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurvivalProbabilityCurveName() : String" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFactorCurveName() : String" num="354" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixedCoupon() : double" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatingSpread() : double" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecoveryRate() : double" num="366" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/bond/BondCurve.java" name="BondCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="164" coveredmethods="0" methods="14" elements="43" classes="2" ncloc="91" statements="27" conditionals="2" coveredstatements="0"/>
            <class name="BondCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="14" elements="43" statements="27" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="BondCurve.Type">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BondCurve(String,LocalDate,Curve,Curve,Type)" num="64" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double) : double" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AnalyticModel,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(double) : double" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountFactor(AnalyticModel,double) : double" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getZeroRate(double) : double" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneBuilder() : CurveBuilder" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCurve() : Curve" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreadCurve() : Curve" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : String" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="155" count="0" type="method"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate">
         <metrics coveredelements="112" complexity="74" loc="688" methods="55" classes="9" statements="136" coveredconditionals="18" coveredmethods="23" elements="223" ncloc="418" files="9" conditionals="32" coveredstatements="71"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/ConvexityAdjustedModel.java" name="ConvexityAdjustedModel.java">
            <metrics coveredelements="28" coveredconditionals="8" complexity="7" loc="66" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="40" statements="18" conditionals="8" coveredstatements="18"/>
            <class name="ConvexityAdjustedModel">
               <metrics coveredelements="28" coveredconditionals="8" complexity="7" coveredmethods="2" methods="2" elements="28" statements="18" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvexityAdjustedModel(ProcessModel,MonteCarloProcess,Map&lt;Integer,Integer&gt;)" num="28" count="22" type="method"/>
            <line num="29" count="22" type="stmt"/>
            <line num="30" count="22" type="stmt"/>
            <line num="31" count="22" type="stmt"/>
            <line num="32" count="22" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDrift(RandomVariable[],MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="35" count="880" type="method"/>
            <line num="39" count="880" type="stmt"/>
            <line num="41" count="880" type="stmt"/>
            <line num="42" count="880" type="stmt"/>
            <line num="43" count="880" type="stmt"/>
            <line num="45" count="880" type="stmt"/>
            <line falsecount="880" truecount="35200" num="45" type="cond"/>
            <line num="46" count="35200" type="stmt"/>
            <line falsecount="18040" truecount="17160" num="46" type="cond"/>
            <line num="47" count="17160" type="stmt"/>
            <line num="49" count="17160" type="stmt"/>
            <line num="50" count="17160" type="stmt"/>
            <line num="52" count="17160" type="stmt"/>
            <line falsecount="17160" truecount="17160" num="52" type="cond"/>
            <line num="53" count="17160" type="stmt"/>
            <line falsecount="10920" truecount="6240" num="53" type="cond"/>
            <line num="54" count="6240" type="stmt"/>
            <line num="59" count="17160" type="stmt"/>
            <line num="64" count="880" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/CrossCurrencyLIBORMarketModelFromModels.java" name="CrossCurrencyLIBORMarketModelFromModels.java">
            <metrics coveredelements="41" coveredconditionals="7" complexity="18" loc="140" coveredmethods="8" methods="14" elements="55" classes="1" ncloc="94" statements="33" conditionals="8" coveredstatements="26"/>
            <class name="CrossCurrencyLIBORMarketModelFromModels">
               <metrics coveredelements="41" coveredconditionals="7" complexity="18" coveredmethods="8" methods="14" elements="55" statements="33" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="CrossCurrencyLIBORMarketModelFromModels(String,Map&lt;String, LIBORModelMonteCarloSimulationModel&gt;,Map&lt;String, MonteCarloProcessFromProcessModel&gt;)" num="38" count="14" type="method"/>
            <line num="41" count="14" type="stmt"/>
            <line num="42" count="14" type="stmt"/>
            <line num="43" count="14" type="stmt"/>
            <line num="44" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseModel() : LIBORModelMonteCarloSimulationModel" num="48" count="90" type="method"/>
            <line num="49" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="52" count="8" type="method"/>
            <line num="54" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="83" count="36" type="method"/>
            <line num="86" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloSimulationModel" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="94" count="46" type="method"/>
            <line num="96" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(String,double) : RandomVariable" num="99" count="4" type="method"/>
            <line num="101" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(RiskFactorID,double) : RandomVariable" num="104" count="30" type="method"/>
            <line num="106" count="30" type="stmt"/>
            <line falsecount="18" truecount="12" num="106" type="cond"/>
            <line num="107" count="12" type="stmt"/>
            <line num="108" count="12" type="stmt"/>
            <line num="110" count="12" type="stmt"/>
            <line num="112" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="112" type="cond"/>
            <line num="113" count="8" type="stmt"/>
            <line num="114" count="8" type="stmt"/>
            <line num="118" count="12" type="stmt"/>
            <line num="120" count="18" type="stmt"/>
            <line falsecount="0" truecount="18" num="120" type="cond"/>
            <line num="121" count="18" type="stmt"/>
            <line falsecount="12" truecount="6" num="121" type="cond"/>
            <line num="122" count="6" type="stmt"/>
            <line num="125" count="12" type="stmt"/>
            <line num="126" count="12" type="stmt"/>
            <line num="128" count="12" type="stmt"/>
            <line num="129" count="12" type="stmt"/>
            <line num="130" count="12" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getInterestRateModel(String) : LIBORModelMonteCarloSimulationModel" num="137" count="2" type="method"/>
            <line num="138" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulation.java" name="HybridAssetLIBORModelMonteCarloSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulationFromModels.java" name="HybridAssetLIBORModelMonteCarloSimulationFromModels.java">
            <metrics coveredelements="27" coveredconditionals="3" complexity="32" loc="233" coveredmethods="7" methods="29" elements="78" classes="1" ncloc="154" statements="43" conditionals="6" coveredstatements="17"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulationFromModels">
               <metrics coveredelements="27" coveredconditionals="3" complexity="32" coveredmethods="7" methods="29" elements="78" statements="43" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="2" visibility="public" signature="HybridAssetLIBORModelMonteCarloSimulationFromModels(LIBORModelMonteCarloSimulationModel,AssetModelMonteCarloSimulationModel,DiscountCurve)" num="53" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HybridAssetLIBORModelMonteCarloSimulationFromModels(LIBORModelMonteCarloSimulationModel,AssetModelMonteCarloSimulationModel)" num="67" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="103" count="1802" type="method"/>
            <line num="105" count="1802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="138" count="3604" type="method"/>
            <line num="140" count="3604" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : HybridAssetLIBORModelMonteCarloSimulationFromModels" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(double) : RandomVariable" num="159" count="3604" type="method"/>
            <line num="162" count="3604" type="stmt"/>
            <line num="164" count="3604" type="stmt"/>
            <line falsecount="3604" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="3604" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : TermStructureModel" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : HybridAssetLIBORModelMonteCarloSimulationFromModels" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="209" count="1802" type="method"/>
            <line num="211" count="1802" type="stmt"/>
            <line num="212" count="1802" type="stmt"/>
            <line num="213" count="1802" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="216" count="1802" type="method"/>
            <line num="218" count="1802" type="stmt"/>
            <line num="221" count="1802" type="stmt"/>
            <line falsecount="1802" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="1802" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetMonteCarloSimulation.java" name="HybridAssetMonteCarloSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HybridAssetMonteCarloSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/ModelFactory.java" name="ModelFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="129" coveredmethods="0" methods="4" elements="46" classes="1" ncloc="77" statements="32" conditionals="10" coveredstatements="0"/>
            <class name="ModelFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="4" elements="46" statements="32" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ModelFactory()" num="34" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getInstance() : ModelFactory" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getHybridAssetLIBORModel(LIBORModelMonteCarloSimulationModel,BrownianMotion,double[],double,double[][],double[],double[],double[],DiscountCurve) : HybridAssetLIBORModelMonteCarloSimulation" num="62" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorFX.java" name="RiskFactorFX.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="16" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="RiskFactorFX">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="RiskFactorFX(String)" num="7" count="18" type="method"/>
            <line num="8" count="18" type="stmt"/>
            <line num="9" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="12" count="42" type="method"/>
            <line num="14" count="42" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorForwardRate.java" name="RiskFactorForwardRate.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="28" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="22" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="RiskFactorForwardRate">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="RiskFactorForwardRate(String,double,double)" num="9" count="12" type="method"/>
            <line num="10" count="12" type="stmt"/>
            <line num="11" count="12" type="stmt"/>
            <line num="12" count="12" type="stmt"/>
            <line num="13" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="16" count="32" type="method"/>
            <line num="18" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="21" count="12" type="method"/>
            <line num="22" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="25" count="12" type="method"/>
            <line num="26" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/hybridassetinterestrate/RiskFactorID.java" name="RiskFactorID.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RiskFactorID">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model">
         <metrics coveredelements="50" complexity="31" loc="389" methods="26" classes="2" statements="71" coveredconditionals="5" coveredmethods="12" elements="107" ncloc="212" files="2" conditionals="10" coveredstatements="33"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/AnalyticModel.java" name="AnalyticModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="118" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="28" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalyticModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/AnalyticModelFromCurvesAndVols.java" name="AnalyticModelFromCurvesAndVols.java">
            <metrics coveredelements="50" coveredconditionals="5" complexity="31" loc="271" coveredmethods="12" methods="26" elements="107" classes="1" ncloc="184" statements="71" conditionals="10" coveredstatements="33"/>
            <class name="AnalyticModelFromCurvesAndVols">
               <metrics coveredelements="50" coveredconditionals="5" complexity="31" coveredmethods="12" methods="26" elements="107" statements="71" conditionals="10" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols()" num="47" count="714" type="method"/>
            <line num="48" count="714" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(RandomVariableFactory)" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Curve[])" num="65" count="18" type="method"/>
            <line num="66" count="18" type="stmt"/>
            <line num="67" count="18" type="stmt"/>
            <line num="68" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(RandomVariableFactory,Curve[])" num="78" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelFromCurvesAndVols(Collection&lt;Curve&gt;)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="97" count="41744" type="method"/>
            <line num="99" count="41744" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurve(String) : Curve" num="102" count="25140" type="method"/>
            <line num="105" count="25140" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurves() : Map&lt;String, Curve&gt;" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurve(String,Curve) : AnalyticModel" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurve(Curve) : AnalyticModel" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurves(Curve) : AnalyticModel" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addCurves(Set&lt;Curve&gt;) : AnalyticModel" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCurve(Curve) : void" num="148" count="696" type="method"/>
            <line num="152" count="696" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCurves(Curve[]) : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDiscountCurve(String) : DiscountCurveInterface" num="168" count="18560" type="method"/>
            <line num="170" count="18560" type="stmt"/>
            <line num="171" count="18560" type="stmt"/>
            <line num="172" count="18560" type="stmt"/>
            <line falsecount="0" truecount="18560" num="172" type="cond"/>
            <line num="173" count="18560" type="stmt"/>
            <line num="176" count="18560" type="stmt"/>
            <line complexity="2" visibility="public" signature="getForwardCurve(String) : ForwardCurveInterface" num="179" count="6568" type="method"/>
            <line num="181" count="6568" type="stmt"/>
            <line num="182" count="6568" type="stmt"/>
            <line num="183" count="6568" type="stmt"/>
            <line falsecount="3284" truecount="3284" num="183" type="cond"/>
            <line num="184" count="3284" type="stmt"/>
            <line num="187" count="6568" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurface(String) : VolatilitySurface" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaces() : Map&lt;String, VolatilitySurface&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurface(VolatilitySurface) : AnalyticModel" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurfaces(VolatilitySurface) : AnalyticModel" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addVolatilitySurfaces(Set&lt;VolatilitySurface&gt;) : AnalyticModel" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setVolatilitySurface(VolatilitySurface) : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="set(Object) : void" num="231" count="696" type="method"/>
            <line num="232" count="696" type="stmt"/>
            <line falsecount="0" truecount="696" num="232" type="cond"/>
            <line num="233" count="696" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : AnalyticModelFromCurvesAndVols" num="241" count="696" type="method"/>
            <line num="244" count="696" type="stmt"/>
            <line num="245" count="696" type="stmt"/>
            <line num="246" count="696" type="stmt"/>
            <line num="247" count="696" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(Map&lt;ParameterObject, RandomVariable[]&gt;) : AnalyticModel" num="250" count="696" type="method"/>
            <line num="254" count="696" type="stmt"/>
            <line num="257" count="696" type="stmt"/>
            <line falsecount="0" truecount="696" num="257" type="cond"/>
            <line num="258" count="696" type="stmt"/>
            <line num="259" count="696" type="stmt"/>
            <line num="260" count="696" type="stmt"/>
            <line num="264" count="696" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.experimental">
         <metrics coveredelements="0" complexity="20" loc="150" methods="10" classes="1" statements="53" coveredconditionals="0" coveredmethods="0" elements="81" ncloc="108" files="1" conditionals="18" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/experimental/BlackScholesTheta.java" name="BlackScholesTheta.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="150" coveredmethods="0" methods="10" elements="81" classes="1" ncloc="108" statements="53" conditionals="18" coveredstatements="0"/>
            <class name="BlackScholesTheta">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="10" elements="81" statements="53" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="V_T(double) : double" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="V_0(double,double) : double" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="V_inf(double,double) : double" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f_s(double) : double" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f_t(double) : double" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="f(double,double,double) : double" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_0(double) : double" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_neg_inf(double,double) : double" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="u_pos_inf(double,double) : double" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="solve() : double[][]" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.timeseries">
         <metrics coveredelements="0" complexity="19" loc="238" methods="19" classes="6" statements="26" coveredconditionals="0" coveredmethods="0" elements="45" ncloc="124" files="6" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/HistoricalSimulationModel.java" name="HistoricalSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HistoricalSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/MarketData.java" name="MarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="37" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="18" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="MarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MarketData(Calendar,Map&lt;String,Double&gt;)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate() : Calendar" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String) : double" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeries.java" name="TimeSeries.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeries">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeriesFromArray.java" name="TimeSeriesFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="60" coveredmethods="0" methods="8" elements="18" classes="1" ncloc="42" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeSeriesFromArray(double[],double[])" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimePoints() : int" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : Iterable&lt;Double&gt;" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Double" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeriesModelParametric.java" name="TimeSeriesModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/TimeSeriesView.java" name="TimeSeriesView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="61" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="44" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TimeSeriesView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeSeriesView(TimeSeries,int,int)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfTimePoints() : int" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : Iterable&lt;Double&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Double&gt;" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Double" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.integration">
         <metrics coveredelements="119" complexity="40" loc="577" methods="26" classes="7" statements="108" coveredconditionals="18" coveredmethods="15" elements="158" ncloc="246" files="7" conditionals="24" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/AbstractRealIntegral.java" name="AbstractRealIntegral.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="60" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="AbstractRealIntegral">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRealIntegral(double,double)" num="29" count="259642" type="method"/>
            <line num="30" count="259636" type="stmt"/>
            <line num="31" count="259648" type="stmt"/>
            <line num="32" count="259643" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double" num="41" count="259701" type="method"/>
            <line num="42" count="259703" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double" num="50" count="259701" type="method"/>
            <line num="51" count="259707" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/MonteCarloIntegrator.java" name="MonteCarloIntegrator.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="88" coveredmethods="3" methods="6" elements="20" classes="1" ncloc="37" statements="14" conditionals="0" coveredstatements="11"/>
            <class name="MonteCarloIntegrator">
               <metrics coveredelements="14" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int,int,boolean)" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int,boolean)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloIntegrator(double,double,int)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="66" count="8" type="method"/>
            <line num="68" count="8" type="stmt"/>
            <line num="69" count="8" type="stmt"/>
            <line num="70" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfEvaluationPoints() : int" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/PiecewiseContantDoubleUnaryOperator.java" name="PiecewiseContantDoubleUnaryOperator.java">
            <metrics coveredelements="46" coveredconditionals="11" complexity="15" loc="176" coveredmethods="4" methods="8" elements="60" classes="1" ncloc="79" statements="38" conditionals="14" coveredstatements="31"/>
            <class name="PiecewiseContantDoubleUnaryOperator">
               <metrics coveredelements="46" coveredconditionals="11" complexity="15" coveredmethods="4" methods="8" elements="60" statements="38" conditionals="14" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="PiecewiseContantDoubleUnaryOperator(double[],double[])" num="38" count="14" type="method"/>
            <line num="39" count="14" type="stmt"/>
            <line num="40" count="14" type="stmt"/>
            <line num="41" count="12" type="stmt"/>
            <line num="42" count="10" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="PiecewiseContantDoubleUnaryOperator(List&lt;Double&gt;,List&lt;Double&gt;)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getIntegral(double,double,DoubleUnaryOperator) : double" num="75" count="30" type="method"/>
            <line num="76" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="30" type="stmt"/>
            <line num="85" count="30" type="stmt"/>
            <line falsecount="4" truecount="26" num="85" type="cond"/>
            <line num="86" count="26" type="stmt"/>
            <line num="89" count="30" type="stmt"/>
            <line num="90" count="30" type="stmt"/>
            <line falsecount="0" truecount="30" num="90" type="cond"/>
            <line num="91" count="30" type="stmt"/>
            <line num="93" count="30" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line falsecount="22" truecount="8" num="95" type="cond"/>
            <line num="97" count="8" type="stmt"/>
            <line num="101" count="22" type="stmt"/>
            <line num="104" count="22" type="stmt"/>
            <line num="107" count="22" type="stmt"/>
            <line falsecount="22" truecount="22" num="107" type="cond"/>
            <line num="108" count="22" type="stmt"/>
            <line num="109" count="22" type="stmt"/>
            <line num="110" count="22" type="stmt"/>
            <line num="111" count="22" type="stmt"/>
            <line num="115" count="22" type="stmt"/>
            <line num="117" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegral(double,double,Function&lt;Double, Double&gt;) : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toPrimitive(Function&lt;Double, Double&gt;) : DoubleUnaryOperator" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegral(double,double) : double" num="147" count="16" type="method"/>
            <line num="148" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="157" count="12" type="method"/>
            <line num="159" count="12" type="stmt"/>
            <line num="160" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="160" type="cond"/>
            <line num="161" count="8" type="stmt"/>
            <line num="163" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Double) : Double" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/RealIntegral.java" name="RealIntegral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealIntegral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/RombergRealIntegration.java" name="RombergRealIntegration.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="50" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RombergRealIntegration">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RombergRealIntegration(double,double,int)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="38" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(double) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/SimpsonRealIntegrator.java" name="SimpsonRealIntegrator.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="4" loc="76" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="35" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="SimpsonRealIntegrator">
               <metrics coveredelements="22" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="22" statements="17" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpsonRealIntegrator(double,double,int,boolean)" num="33" count="259631" type="method"/>
            <line num="34" count="259618" type="stmt"/>
            <line num="35" count="259632" type="stmt"/>
            <line num="36" count="259635" type="stmt"/>
            <line num="37" count="259633" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpsonRealIntegrator(double,double,int)" num="47" count="257471" type="method"/>
            <line num="48" count="257460" type="stmt"/>
            <line complexity="2" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="51" count="259672" type="method"/>
            <line num="53" count="259677" type="stmt"/>
            <line num="54" count="259675" type="stmt"/>
            <line num="55" count="259659" type="stmt"/>
            <line num="57" count="259661" type="stmt"/>
            <line num="59" count="259659" type="stmt"/>
            <line num="60" count="259659" type="stmt"/>
            <line num="62" count="259661" type="stmt"/>
            <line num="64" count="259669" type="stmt"/>
            <line falsecount="257515" truecount="2150" num="64" type="cond"/>
            <line num="65" count="2150" type="stmt"/>
            <line num="68" count="259676" type="stmt"/>
            <line num="72" count="259680" type="stmt"/>
            <line num="74" count="259668" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/integration/TrapezoidalRealIntegrator.java" name="TrapezoidalRealIntegrator.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="9" loc="102" coveredmethods="2" methods="3" elements="41" classes="1" ncloc="50" statements="30" conditionals="8" coveredstatements="22"/>
            <class name="TrapezoidalRealIntegrator">
               <metrics coveredelements="29" coveredconditionals="5" complexity="9" coveredmethods="2" methods="3" elements="41" statements="30" conditionals="8" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="TrapezoidalRealIntegrator(double,double,double[])" num="30" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="TrapezoidalRealIntegrator(double,double,int)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="integrate(DoubleUnaryOperator) : double" num="51" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="57" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="62" type="cond"/>
            <line num="63" count="6" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="69" type="cond"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.models">
         <metrics coveredelements="53" complexity="22" loc="289" methods="22" classes="4" statements="39" coveredconditionals="0" coveredmethods="18" elements="61" ncloc="166" files="4" conditionals="0" coveredstatements="35"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FDMBlackScholesModel.java" name="FDMBlackScholesModel.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="100" coveredmethods="9" methods="11" elements="30" classes="1" ncloc="72" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="FDMBlackScholesModel">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="30" statements="19" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMBlackScholesModel(int,int,int,double,double,double,double,double)" num="29" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line num="39" count="6" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="varianceOfStockPrice(double) : double" num="49" count="12" type="method"/>
            <line num="51" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardValue(double) : double" num="55" count="12" type="method"/>
            <line num="57" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="60" count="1418" type="method"/>
            <line num="62" count="1418" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalVolatility(double,double) : double" num="74" count="50820" type="method"/>
            <line num="76" count="50820" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumTimesteps() : int" num="79" count="228" type="method"/>
            <line num="81" count="228" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumSpacesteps() : int" num="84" count="12" type="method"/>
            <line num="86" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumStandardDeviations() : double" num="89" count="12" type="method"/>
            <line num="91" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,DoubleUnaryOperator,FiniteDifference1DBoundary) : double[][]" num="94" count="6" type="method"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FDMConstantElasticityOfVarianceModel.java" name="FDMConstantElasticityOfVarianceModel.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="11" loc="117" coveredmethods="9" methods="11" elements="31" classes="1" ncloc="75" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="FDMConstantElasticityOfVarianceModel">
               <metrics coveredelements="27" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="31" statements="20" conditionals="0" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMConstantElasticityOfVarianceModel(int,int,int,double,double,double,double,double,double)" num="31" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="varianceOfStockPrice(double) : double" num="57" count="8" type="method"/>
            <line num="59" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardValue(double) : double" num="66" count="8" type="method"/>
            <line num="68" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="74" count="2092" type="method"/>
            <line num="76" count="2092" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalVolatility(double,double) : double" num="88" count="103040" type="method"/>
            <line num="90" count="103040" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumTimesteps() : int" num="93" count="332" type="method"/>
            <line num="95" count="332" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumSpacesteps() : int" num="98" count="8" type="method"/>
            <line num="100" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumStandardDeviations() : double" num="103" count="8" type="method"/>
            <line num="105" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,DoubleUnaryOperator,FiniteDifference1DBoundary) : double[][]" num="111" count="4" type="method"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FiniteDifference1DBoundary.java" name="FiniteDifference1DBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifference1DBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/models/FiniteDifference1DModel.java" name="FiniteDifference1DModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifference1DModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward.alternative">
         <metrics coveredelements="0" complexity="694" loc="4151" methods="398" classes="13" statements="1159" coveredconditionals="0" coveredmethods="0" elements="1833" ncloc="2799" files="7" conditionals="276" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableAAD.java" name="RandomVariableAAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="217" loc="1139" coveredmethods="0" methods="106" elements="613" classes="2" ncloc="782" statements="411" conditionals="96" coveredstatements="0"/>
            <class name="RandomVariableAAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="217" coveredmethods="0" methods="106" elements="613" statements="411" conditionals="96" coveredstatements="0"/>
            </class>
            <class name="RandomVariableAAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RandomVariableAAD(int,RandomVariable,int[],OperatorType,ArrayList&lt;Integer&gt;,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="constructNewAADRandomVariable(RandomVariable,int[],OperatorType,ArrayList&lt;Integer&gt;,boolean) : RandomVariableAAD" num="59" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(double) : RandomVariableAAD" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(RandomVariable) : RandomVariableAAD" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructNewAADRandomVariable(double,double[]) : RandomVariableAAD" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParentAADRandomVariables() : RandomVariableAAD[]" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getParentRandomVariableInderfaces() : RandomVariable[]" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="35" visibility="private" signature="apply(OperatorType,RandomVariable[]) : RandomVariable" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line complexity="1" visibility="private" signature="getPartialDerivative(int,int) : RandomVariable" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="58" visibility="private" signature="partialDerivativeWithRespectTo(int) : RandomVariable" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyAsDouble(double) : double" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="392" type="cond"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="410" count="0" type="method"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="427" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="436" type="cond"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="441" type="cond"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="450" type="cond"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="457" type="cond"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="477" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="484" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="495" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getGradient() : Map&lt;Integer, RandomVariable&gt;" num="520" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="530" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getArrayListOfAllIndicesOfDependentRandomVariables() : ArrayList&lt;Integer&gt;" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line num="557" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="560" type="cond"/>
            <line num="562" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="575" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="585" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="590" count="0" type="method"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="595" count="0" type="method"/>
            <line num="597" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="600" count="0" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="610" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="615" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="620" count="0" type="method"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="625" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentOperator() : OperatorType" num="632" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConstant() : boolean" num="636" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isVariable() : boolean" num="640" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFunctionList() : ArrayList&lt;RandomVariableAAD&gt;" num="644" count="0" type="method"/>
            <line num="645" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetArrayListOfAllAADRandomVariables() : void" num="648" count="0" type="method"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIsConstantTo(boolean) : void" num="655" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariableInterface() : RandomVariable" num="659" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariableInterfaceOfIndex(int) : RandomVariable" num="663" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFunctionIndex() : int" num="667" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentIDs() : int[]" num="671" count="0" type="method"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getChildrenIndices() : ArrayList&lt;Integer&gt;" num="675" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="676" type="cond"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getNumberOfParentVariables() : int" num="682" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="683" type="cond"/>
            <line num="684" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAADRandomVariableFromList(int) : RandomVariableAAD" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addToChildrenIndices(int) : void" num="693" count="0" type="method"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="712" count="0" type="method"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="717" count="0" type="method"/>
            <line num="719" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="725" count="0" type="method"/>
            <line num="727" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="733" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="741" count="0" type="method"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="749" count="0" type="method"/>
            <line num="751" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="762" count="0" type="method"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="770" count="0" type="method"/>
            <line num="772" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="778" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="786" count="0" type="method"/>
            <line num="788" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="794" count="0" type="method"/>
            <line num="796" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="802" count="0" type="method"/>
            <line num="804" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="810" count="0" type="method"/>
            <line num="812" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="818" count="0" type="method"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="826" count="0" type="method"/>
            <line num="828" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="834" count="0" type="method"/>
            <line num="836" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="842" count="0" type="method"/>
            <line num="844" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="850" count="0" type="method"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="858" count="0" type="method"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="866" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="874" count="0" type="method"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="895" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="903" count="0" type="method"/>
            <line num="905" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="911" count="0" type="method"/>
            <line num="913" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="919" count="0" type="method"/>
            <line num="921" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="927" count="0" type="method"/>
            <line num="929" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="935" count="0" type="method"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="943" count="0" type="method"/>
            <line num="945" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="948" count="0" type="method"/>
            <line num="950" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="956" count="0" type="method"/>
            <line num="958" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="964" count="0" type="method"/>
            <line num="966" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="972" count="0" type="method"/>
            <line num="974" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="980" count="0" type="method"/>
            <line num="982" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="988" count="0" type="method"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="996" count="0" type="method"/>
            <line num="998" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1004" count="0" type="method"/>
            <line num="1006" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1012" count="0" type="method"/>
            <line num="1014" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1017" count="0" type="method"/>
            <line num="1019" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1025" count="0" type="method"/>
            <line num="1027" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1033" count="0" type="method"/>
            <line num="1035" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1038" count="0" type="method"/>
            <line num="1040" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1046" count="0" type="method"/>
            <line num="1048" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1054" count="0" type="method"/>
            <line num="1056" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1062" count="0" type="method"/>
            <line num="1064" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1070" count="0" type="method"/>
            <line num="1072" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1075" count="0" type="method"/>
            <line num="1077" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1080" count="0" type="method"/>
            <line num="1082" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1085" count="0" type="method"/>
            <line num="1087" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1090" count="0" type="method"/>
            <line num="1092" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1095" count="0" type="method"/>
            <line num="1097" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1100" count="0" type="method"/>
            <line num="1102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1105" count="0" type="method"/>
            <line num="1107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="1110" count="0" type="method"/>
            <line num="1112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="1115" count="0" type="method"/>
            <line num="1117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="1120" count="0" type="method"/>
            <line num="1122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="1125" count="0" type="method"/>
            <line num="1127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="1130" count="0" type="method"/>
            <line num="1132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1135" count="0" type="method"/>
            <line num="1137" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADPathwise.java" name="RandomVariableDifferentiableAADPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="170" loc="954" coveredmethods="0" methods="94" elements="430" classes="3" ncloc="717" statements="258" conditionals="78" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="89" coveredmethods="0" methods="85" elements="195" statements="104" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPathwise.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPathwise.OperatorTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="81" coveredmethods="0" methods="9" elements="235" statements="154" conditionals="72" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line complexity="1" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="62" visibility="private" signature="getPartialDerivative(OperatorTreeNode) : RandomVariable" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAADPathwise" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAADPathwise" num="289" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(double)" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(double,double[])" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwise(RandomVariable)" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAADPathwise(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariable() : RandomVariable" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="315" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="319" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="324" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="383" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="407" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="439" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="455" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="479" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="497" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="505" count="0" type="method"/>
            <line num="507" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="513" count="0" type="method"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="518" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="526" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="534" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="542" count="0" type="method"/>
            <line num="544" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="550" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="558" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="582" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="590" count="0" type="method"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="598" count="0" type="method"/>
            <line num="600" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="622" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="630" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="638" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="646" count="0" type="method"/>
            <line num="648" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="654" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="659" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="667" count="0" type="method"/>
            <line num="669" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="683" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="691" count="0" type="method"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="699" count="0" type="method"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="715" count="0" type="method"/>
            <line num="717" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="723" count="0" type="method"/>
            <line num="725" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="731" count="0" type="method"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="739" count="0" type="method"/>
            <line num="741" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="747" count="0" type="method"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="766" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="777" count="0" type="method"/>
            <line num="779" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="796" count="0" type="method"/>
            <line num="798" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariableDifferentiable" num="807" count="0" type="method"/>
            <line num="809" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="815" count="0" type="method"/>
            <line num="817" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="823" count="0" type="method"/>
            <line num="825" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="831" count="0" type="method"/>
            <line num="833" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="839" count="0" type="method"/>
            <line num="841" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="850" count="0" type="method"/>
            <line num="852" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="858" count="0" type="method"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="866" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="874" count="0" type="method"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="882" count="0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="893" count="0" type="method"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="901" count="0" type="method"/>
            <line num="903" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="909" count="0" type="method"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="917" count="0" type="method"/>
            <line num="919" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="925" count="0" type="method"/>
            <line num="927" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="930" count="0" type="method"/>
            <line num="932" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="935" count="0" type="method"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="940" count="0" type="method"/>
            <line num="942" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="945" count="0" type="method"/>
            <line num="947" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="950" count="0" type="method"/>
            <line num="952" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADPathwiseFactory.java" name="RandomVariableDifferentiableAADPathwiseFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="50" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADPathwiseFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwiseFactory()" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPathwiseFactory(RandomVariableFactory)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADStochasticNonOptimized.java" name="RandomVariableDifferentiableAADStochasticNonOptimized.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="169" loc="953" coveredmethods="0" methods="94" elements="428" classes="3" ncloc="717" statements="258" conditionals="76" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized">
               <metrics coveredelements="0" coveredconditionals="0" complexity="89" coveredmethods="0" methods="85" elements="195" statements="104" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimized.OperatorTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="80" coveredmethods="0" methods="9" elements="233" statements="154" conditionals="70" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line complexity="1" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="61" visibility="private" signature="getPartialDerivative(OperatorTreeNode) : RandomVariable" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAADStochasticNonOptimized" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAADStochasticNonOptimized" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(double)" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(double,double[])" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimized(RandomVariable)" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAADStochasticNonOptimized(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariable() : RandomVariable" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="314" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="323" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD(RandomVariable) : RandomVariable" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD(RandomVariable) : RandomVariable" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD(RandomVariable) : RandomVariable" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD(RandomVariable) : RandomVariable" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverageAsRandomVariableAAD() : RandomVariable" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="446" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="462" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="470" count="0" type="method"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="483" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="488" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="512" count="0" type="method"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="525" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="533" count="0" type="method"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="549" count="0" type="method"/>
            <line num="551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="557" count="0" type="method"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="565" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="573" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="581" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="589" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="597" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="605" count="0" type="method"/>
            <line num="607" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="613" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="629" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="637" count="0" type="method"/>
            <line num="639" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="645" count="0" type="method"/>
            <line num="647" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="658" count="0" type="method"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="666" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="674" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="682" count="0" type="method"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="690" count="0" type="method"/>
            <line num="692" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="698" count="0" type="method"/>
            <line num="700" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="706" count="0" type="method"/>
            <line num="708" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="714" count="0" type="method"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="722" count="0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="730" count="0" type="method"/>
            <line num="732" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="738" count="0" type="method"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="746" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="765" count="0" type="method"/>
            <line num="767" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="776" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="787" count="0" type="method"/>
            <line num="789" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="795" count="0" type="method"/>
            <line num="797" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariableDifferentiable" num="806" count="0" type="method"/>
            <line num="808" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="814" count="0" type="method"/>
            <line num="816" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="822" count="0" type="method"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="830" count="0" type="method"/>
            <line num="832" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="838" count="0" type="method"/>
            <line num="840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="857" count="0" type="method"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="865" count="0" type="method"/>
            <line num="867" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="873" count="0" type="method"/>
            <line num="875" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="881" count="0" type="method"/>
            <line num="883" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="892" count="0" type="method"/>
            <line num="894" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="900" count="0" type="method"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="908" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="916" count="0" type="method"/>
            <line num="918" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="924" count="0" type="method"/>
            <line num="926" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="929" count="0" type="method"/>
            <line num="931" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="934" count="0" type="method"/>
            <line num="936" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="939" count="0" type="method"/>
            <line num="941" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="944" count="0" type="method"/>
            <line num="946" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="949" count="0" type="method"/>
            <line num="951" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableDifferentiableAADStochasticNonOptimizedFactory.java" name="RandomVariableDifferentiableAADStochasticNonOptimizedFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="49" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableDifferentiableAADStochasticNonOptimizedFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimizedFactory()" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADStochasticNonOptimizedFactory(RandomVariableFactory)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariable.java" name="RandomVariableUniqueVariable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="121" loc="894" coveredmethods="0" methods="87" elements="323" classes="2" ncloc="492" statements="210" conditionals="26" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="121" coveredmethods="0" methods="87" elements="323" statements="210" conditionals="26" coveredstatements="0"/>
            </class>
            <class name="RandomVariableUniqueVariable.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(int,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[],boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[],boolean)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable,boolean)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(double,double[])" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariable(RandomVariable)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="constructRandomVariableUniqueVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,OperatorType) : void" num="82" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParentIDs() : int[]" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariableID() : int" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConstant() : boolean" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentVariables() : ArrayList&lt;RandomVariableUniqueVariable&gt;" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentOperatorType() : OperatorType" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getListOfAllVariables() : ArrayList&lt;RandomVariable&gt;" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParentRandomVariables() : ArrayList&lt;RandomVariable&gt;" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRandomVariable() : RandomVariable" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isVariable() : boolean" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="235" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="298" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="316" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="325" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="334" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="343" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="359" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="371" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="380" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="389" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="398" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="407" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="429" count="0" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="453" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="469" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="485" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="506" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="519" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="528" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="537" count="0" type="method"/>
            <line num="540" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="546" count="0" type="method"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="552" count="0" type="method"/>
            <line num="554" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="560" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="569" count="0" type="method"/>
            <line num="572" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="578" count="0" type="method"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="587" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="596" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="605" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="614" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUpcastableToRandomVariableUniqueVariable(Object) : boolean" num="626" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="13" visibility="private" signature="apply(OperatorType,RandomVariable[]) : RandomVariableUniqueVariable" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="646" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getGradient() : RandomVariable[]" num="709" count="0" type="method"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="725" type="cond"/>
            <line num="727" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="746" type="cond"/>
            <line num="747" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getListOfDependingTrueVariables() : ArrayList&lt;RandomVariableUniqueVariable&gt;" num="753" count="0" type="method"/>
            <line num="755" count="0" type="stmt"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="758" type="cond"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getIDsOfVariablesInList() : int[]" num="768" count="0" type="method"/>
            <line num="769" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getNumberOfVariablesInList() : int" num="780" count="0" type="method"/>
            <line num="781" count="0" type="stmt"/>
            <line complexity="15" visibility="private" signature="getPartialDerivative(int,int) : RandomVariable" num="789" count="0" type="method"/>
            <line num="791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="827" type="cond"/>
            <line num="828" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="832" type="cond"/>
            <line num="833" count="0" type="stmt"/>
            <line num="835" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="854" count="0" type="method"/>
            <line num="856" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="860" type="cond"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="864" count="0" type="method"/>
            <line num="867" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="875" count="0" type="method"/>
            <line num="877" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="880" count="0" type="method"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="885" count="0" type="method"/>
            <line num="887" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="890" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariableFactory.java" name="RandomVariableUniqueVariableFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="112" coveredmethods="0" methods="9" elements="23" classes="1" ncloc="47" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariableFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="23" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableUniqueVariableFactory()" num="31" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(RandomVariable,boolean,ArrayList&lt;RandomVariableUniqueVariable&gt;,RandomVariableUniqueVariable.OperatorType) : RandomVariable" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double,boolean) : RandomVariable" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[],boolean) : RandomVariable" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(RandomVariable) : RandomVariable" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getListOfAllVariables() : ArrayList&lt;RandomVariable&gt;" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfEntriesInList() : int" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference.products">
         <metrics coveredelements="22" complexity="11" loc="140" methods="10" classes="3" statements="16" coveredconditionals="0" coveredmethods="9" elements="28" ncloc="74" files="3" conditionals="2" coveredstatements="13"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/products/FDMEuropeanCallOption.java" name="FDMEuropeanCallOption.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="55" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FDMEuropeanCallOption">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMEuropeanCallOption(double,double)" num="19" count="6" type="method"/>
            <line num="20" count="6" type="stmt"/>
            <line num="21" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,FiniteDifference1DModel) : double[][]" num="24" count="6" type="method"/>
            <line num="31" count="6" type="stmt"/>
            <line num="33" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="34" count="794" type="method"/>
            <line num="36" count="794" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtLowerBoundary(FiniteDifference1DModel,double,double) : double" num="46" count="600" type="method"/>
            <line num="48" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtUpperBoundary(FiniteDifference1DModel,double,double) : double" num="51" count="900" type="method"/>
            <line num="53" count="900" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/products/FDMEuropeanPutOption.java" name="FDMEuropeanPutOption.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="47" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="FDMEuropeanPutOption">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="FDMEuropeanPutOption(double,double)" num="16" count="4" type="method"/>
            <line num="17" count="4" type="stmt"/>
            <line num="18" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,FiniteDifference1DModel) : double[][]" num="21" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtLowerBoundary(FiniteDifference1DModel,double,double) : double" num="38" count="460" type="method"/>
            <line num="40" count="460" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueAtUpperBoundary(FiniteDifference1DModel,double,double) : double" num="43" count="690" type="method"/>
            <line num="45" count="690" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/finitedifference/products/FiniteDifference1DProduct.java" name="FiniteDifference1DProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="1" elements="6" classes="1" ncloc="20" statements="3" conditionals="2" coveredstatements="0"/>
            <class name="FiniteDifference1DProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="getValue(double,Model) : Object" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling">
         <metrics coveredelements="0" complexity="9" loc="314" methods="6" classes="11" statements="7" coveredconditionals="0" coveredmethods="0" elements="19" ncloc="71" files="11" conditionals="6" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/DescribedModel.java" name="DescribedModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DescribedModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/DescribedProduct.java" name="DescribedProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DescribedProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/InterestRateProductDescriptor.java" name="InterestRateProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/Model.java" name="Model.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Model">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ModelDescriptor.java" name="ModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ModelFactory.java" name="ModelFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ModelFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/Product.java" name="Product.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="46" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Product">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="45" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ProductDescriptor.java" name="ProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/ProductFactory.java" name="ProductFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProductFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/SingleAssetProductDescriptor.java" name="SingleAssetProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SingleAssetProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/UnsupportedProduct.java" name="UnsupportedProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="57" coveredmethods="0" methods="5" elements="17" classes="1" ncloc="29" statements="6" conditionals="6" coveredstatements="0"/>
            <class name="UnsupportedProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="17" statements="6" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedProduct(Exception)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,Model) : Object" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line complexity="2" visibility="public" signature="getValue(double,AnalyticModel) : double" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.models">
         <metrics coveredelements="462" complexity="243" loc="2912" methods="200" classes="11" statements="534" coveredconditionals="41" coveredmethods="106" elements="816" ncloc="1576" files="10" conditionals="82" coveredstatements="315"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BachelierModel.java" name="BachelierModel.java">
            <metrics coveredelements="39" coveredconditionals="2" complexity="18" loc="203" coveredmethods="10" methods="17" elements="53" classes="1" ncloc="101" statements="34" conditionals="2" coveredstatements="27"/>
            <class name="BachelierModel">
               <metrics coveredelements="39" coveredconditionals="2" complexity="18" coveredmethods="10" methods="17" elements="53" statements="34" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="BachelierModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable)" num="72" count="576" type="method"/>
            <line num="73" count="576" type="stmt"/>
            <line num="74" count="576" type="stmt"/>
            <line num="75" count="576" type="stmt"/>
            <line num="76" count="576" type="stmt"/>
            <line num="77" count="576" type="stmt"/>
            <line complexity="1" visibility="public" signature="BachelierModel(double,double,double)" num="87" count="40" type="method"/>
            <line num="91" count="40" type="stmt"/>
            <line num="93" count="40" type="stmt"/>
            <line num="94" count="40" type="stmt"/>
            <line num="95" count="40" type="stmt"/>
            <line num="96" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="99" count="600" type="method"/>
            <line num="101" count="600" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="104" count="6000" type="method"/>
            <line num="106" count="6000" type="stmt"/>
            <line num="107" count="6000" type="stmt"/>
            <line falsecount="6000" truecount="6000" num="107" type="cond"/>
            <line num="108" count="6000" type="stmt"/>
            <line num="110" count="6000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="113" count="6000" type="method"/>
            <line num="115" count="6000" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="118" count="6600" type="method"/>
            <line num="120" count="6600" type="stmt"/>
            <line num="121" count="6600" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="124" count="6000" type="method"/>
            <line num="126" count="6000" type="stmt"/>
            <line num="127" count="6000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="130" count="1328" type="method"/>
            <line num="132" count="1328" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="135" count="1200" type="method"/>
            <line num="137" count="1200" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BachelierModel" num="150" count="576" type="method"/>
            <line num="155" count="576" type="stmt"/>
            <line num="157" count="576" type="stmt"/>
            <line num="158" count="576" type="stmt"/>
            <line num="159" count="576" type="stmt"/>
            <line num="161" count="576" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierVolatility(double) : RandomVariable" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BlackScholesModel.java" name="BlackScholesModel.java">
            <metrics coveredelements="48" coveredconditionals="6" complexity="20" loc="203" coveredmethods="16" methods="17" elements="50" classes="1" ncloc="104" statements="27" conditionals="6" coveredstatements="26"/>
            <class name="BlackScholesModel">
               <metrics coveredelements="48" coveredconditionals="6" complexity="20" coveredmethods="16" methods="17" elements="50" statements="27" conditionals="6" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModel(RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="63" count="794" type="method"/>
            <line num="68" count="794" type="stmt"/>
            <line num="70" count="794" type="stmt"/>
            <line num="71" count="794" type="stmt"/>
            <line num="72" count="794" type="stmt"/>
            <line num="73" count="794" type="stmt"/>
            <line num="76" count="794" type="stmt"/>
            <line num="77" count="794" type="stmt"/>
            <line num="78" count="794" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double,RandomVariableFactory)" num="89" count="720" type="method"/>
            <line num="94" count="720" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModel(double,double,double)" num="104" count="86" type="method"/>
            <line num="108" count="86" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="111" count="792" type="method"/>
            <line num="113" count="792" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="116" count="18864" type="method"/>
            <line num="118" count="18864" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="121" count="36024" type="method"/>
            <line num="123" count="36024" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="126" count="19656" type="method"/>
            <line num="128" count="19656" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="131" count="18844" type="method"/>
            <line num="133" count="18844" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="136" count="16840" type="method"/>
            <line num="138" count="16840" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="141" count="4224" type="method"/>
            <line num="143" count="4224" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="151" count="2272" type="method"/>
            <line num="153" count="2272" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BlackScholesModel" num="156" count="624" type="method"/>
            <line num="161" count="624" type="stmt"/>
            <line falsecount="316" truecount="308" num="161" type="cond"/>
            <line num="162" count="624" type="stmt"/>
            <line falsecount="610" truecount="14" num="162" type="cond"/>
            <line num="163" count="624" type="stmt"/>
            <line falsecount="322" truecount="302" num="163" type="cond"/>
            <line num="165" count="624" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="173" count="8" type="method"/>
            <line num="175" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="183" count="816646" type="method"/>
            <line num="184" count="816646" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="192" count="816358" type="method"/>
            <line num="193" count="816358" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="196" count="8" type="method"/>
            <line num="198" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/BlackScholesModelWithCurves.java" name="BlackScholesModelWithCurves.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="17" loc="191" coveredmethods="9" methods="15" elements="47" classes="1" ncloc="102" statements="28" conditionals="4" coveredstatements="20"/>
            <class name="BlackScholesModelWithCurves">
               <metrics coveredelements="29" coveredconditionals="0" complexity="17" coveredmethods="9" methods="15" elements="47" statements="28" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelWithCurves(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariableFactory)" num="65" count="4" type="method"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesModelWithCurves(Double,DiscountCurve,Double,DiscountCurve,RandomVariableFactory)" num="91" count="4" type="method"/>
            <line num="97" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="100" count="4" type="method"/>
            <line num="102" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="105" count="40" type="method"/>
            <line num="107" count="40" type="stmt"/>
            <line num="108" count="40" type="stmt"/>
            <line num="110" count="40" type="stmt"/>
            <line num="112" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="115" count="40" type="method"/>
            <line num="117" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="120" count="44" type="method"/>
            <line num="122" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="125" count="40" type="method"/>
            <line num="127" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="130" count="8" type="method"/>
            <line num="132" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="137" count="8" type="method"/>
            <line num="139" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : BlackScholesModelWithCurves" num="152" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/DisplacedLognomalModel.java" name="DisplacedLognomalModel.java">
            <metrics coveredelements="32" coveredconditionals="2" complexity="20" loc="232" coveredmethods="10" methods="19" elements="55" classes="1" ncloc="120" statements="34" conditionals="2" coveredstatements="20"/>
            <class name="DisplacedLognomalModel">
               <metrics coveredelements="32" coveredconditionals="2" complexity="20" coveredmethods="10" methods="19" elements="55" statements="34" conditionals="2" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable,RandomVariable)" num="75" count="6" type="method"/>
            <line num="81" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
            <line num="86" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(RandomVariableFactory,double,double,double,double)" num="98" count="6" type="method"/>
            <line num="104" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModel(double,double,double,double)" num="121" count="6" type="method"/>
            <line num="126" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="129" count="6" type="method"/>
            <line num="131" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="134" count="600" type="method"/>
            <line num="136" count="600" type="stmt"/>
            <line num="137" count="600" type="stmt"/>
            <line falsecount="600" truecount="600" num="137" type="cond"/>
            <line num="138" count="600" type="stmt"/>
            <line num="140" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="143" count="600" type="method"/>
            <line num="145" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="148" count="606" type="method"/>
            <line num="150" count="606" type="stmt"/>
            <line num="151" count="606" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="154" count="600" type="method"/>
            <line num="156" count="600" type="stmt"/>
            <line num="157" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="160" count="12" type="method"/>
            <line num="162" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="165" count="12" type="method"/>
            <line num="167" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : DisplacedLognomalModel" num="180" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableFactory() : RandomVariableFactory" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="229" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/HestonModel.java" name="HestonModel.java">
            <metrics coveredelements="101" coveredconditionals="16" complexity="40" loc="523" coveredmethods="12" methods="27" elements="159" classes="2" ncloc="302" statements="106" conditionals="26" coveredstatements="73"/>
            <class name="HestonModel">
               <metrics coveredelements="101" coveredconditionals="16" complexity="40" coveredmethods="12" methods="27" elements="159" statements="106" conditionals="26" coveredstatements="73"/>
            </class>
            <class name="HestonModel.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModel(HestonModelDescriptor,Scheme,RandomVariableFactory)" num="127" count="4" type="method"/>
            <line num="130" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariable,Scheme,RandomVariableFactory)" num="158" count="4" type="method"/>
            <line num="170" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="173" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line num="175" count="4" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="177" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line num="181" count="4" type="stmt"/>
            <line num="182" count="4" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,Scheme,RandomVariableFactory)" num="203" count="10" type="method"/>
            <line num="215" count="10" type="stmt"/>
            <line num="217" count="10" type="stmt"/>
            <line num="218" count="10" type="stmt"/>
            <line num="219" count="10" type="stmt"/>
            <line num="220" count="10" type="stmt"/>
            <line num="221" count="10" type="stmt"/>
            <line num="222" count="10" type="stmt"/>
            <line num="223" count="10" type="stmt"/>
            <line num="224" count="10" type="stmt"/>
            <line num="225" count="10" type="stmt"/>
            <line num="226" count="10" type="stmt"/>
            <line num="227" count="10" type="stmt"/>
            <line num="229" count="10" type="stmt"/>
            <line num="231" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double,Scheme,RandomVariableFactory)" num="248" count="6" type="method"/>
            <line num="260" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,double,Scheme)" num="286" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModel(double,double,double,double,double,double,double,Scheme)" num="312" count="6" type="method"/>
            <line num="322" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="325" count="10" type="method"/>
            <line num="328" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="328" type="cond"/>
            <line num="329" count="10" type="stmt"/>
            <line num="330" count="10" type="stmt"/>
            <line num="333" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="336" count="820" type="method"/>
            <line num="338" count="820" type="stmt"/>
            <line num="339" count="820" type="stmt"/>
            <line falsecount="0" truecount="820" num="339" type="cond"/>
            <line num="340" count="820" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="347" count="820" type="stmt"/>
            <line num="349" count="820" type="stmt"/>
            <line num="350" count="820" type="stmt"/>
            <line falsecount="600" truecount="220" num="350" type="cond"/>
            <line num="351" count="220" type="stmt"/>
            <line num="352" count="220" type="stmt"/>
            <line num="354" count="220" type="stmt"/>
            <line num="355" count="220" type="stmt"/>
            <line num="358" count="600" type="stmt"/>
            <line num="361" count="820" type="stmt"/>
            <line num="362" count="820" type="stmt"/>
            <line num="364" count="820" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="367" count="1640" type="method"/>
            <line num="369" count="1640" type="stmt"/>
            <line num="370" count="1640" type="stmt"/>
            <line falsecount="0" truecount="1640" num="370" type="cond"/>
            <line num="371" count="1640" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="378" count="1640" type="stmt"/>
            <line num="380" count="1640" type="stmt"/>
            <line falsecount="820" truecount="820" num="380" type="cond"/>
            <line num="381" count="820" type="stmt"/>
            <line num="382" count="820" type="stmt"/>
            <line num="384" count="820" type="stmt"/>
            <line falsecount="0" truecount="820" num="384" type="cond"/>
            <line num="385" count="820" type="stmt"/>
            <line num="386" count="820" type="stmt"/>
            <line num="387" count="820" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="393" count="1640" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="396" count="1660" type="method"/>
            <line num="398" count="1660" type="stmt"/>
            <line falsecount="830" truecount="830" num="398" type="cond"/>
            <line num="399" count="830" type="stmt"/>
            <line num="401" count="830" type="stmt"/>
            <line falsecount="0" truecount="830" num="401" type="cond"/>
            <line num="402" count="830" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="409" count="1627" type="method"/>
            <line num="411" count="1619" type="stmt"/>
            <line falsecount="820" truecount="820" num="411" type="cond"/>
            <line num="412" count="820" type="stmt"/>
            <line num="414" count="820" type="stmt"/>
            <line falsecount="0" truecount="820" num="414" type="cond"/>
            <line num="415" count="820" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="422" count="144" type="method"/>
            <line num="424" count="144" type="stmt"/>
            <line falsecount="136" truecount="8" num="424" type="cond"/>
            <line num="425" count="8" type="stmt"/>
            <line num="428" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="432" count="20" type="method"/>
            <line num="434" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="442" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : HestonModel" num="447" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="467" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="474" count="0" type="method"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="483" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="492" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="496" count="0" type="method"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="500" count="0" type="method"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : RandomVariable" num="504" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : RandomVariable" num="508" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : RandomVariable" num="512" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : RandomVariable" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="520" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/InhomogeneousDisplacedLognomalModel.java" name="InhomogeneousDisplacedLognomalModel.java">
            <metrics coveredelements="43" coveredconditionals="5" complexity="23" loc="265" coveredmethods="11" methods="20" elements="68" classes="1" ncloc="143" statements="42" conditionals="6" coveredstatements="27"/>
            <class name="InhomogeneousDisplacedLognomalModel">
               <metrics coveredelements="43" coveredconditionals="5" complexity="23" coveredmethods="11" methods="20" elements="68" statements="42" conditionals="6" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="72" count="6" type="method"/>
            <line num="79" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(RandomVariableFactory,double,double,double,double,boolean)" num="98" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(double,double,double,double,boolean)" num="123" count="6" type="method"/>
            <line num="129" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogeneousDisplacedLognomalModel(double,double,double,double)" num="140" count="6" type="method"/>
            <line num="145" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="148" count="6" type="method"/>
            <line num="150" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="153" count="600" type="method"/>
            <line num="155" count="600" type="stmt"/>
            <line num="156" count="600" type="stmt"/>
            <line num="157" count="600" type="stmt"/>
            <line num="158" count="600" type="stmt"/>
            <line num="159" count="600" type="stmt"/>
            <line falsecount="600" truecount="600" num="159" type="cond"/>
            <line num="160" count="600" type="stmt"/>
            <line num="161" count="600" type="stmt"/>
            <line falsecount="600" truecount="0" num="161" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="172" count="600" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="175" count="600" type="method"/>
            <line num="177" count="600" type="stmt"/>
            <line num="178" count="600" type="stmt"/>
            <line falsecount="600" truecount="600" num="178" type="cond"/>
            <line num="179" count="600" type="stmt"/>
            <line num="181" count="600" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="184" count="606" type="method"/>
            <line num="186" count="606" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="189" count="1200" type="method"/>
            <line num="191" count="1200" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="194" count="12" type="method"/>
            <line num="196" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="199" count="12" type="method"/>
            <line num="201" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : InhomogeneousDisplacedLognomalModel" num="214" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableFactory() : RandomVariableFactory" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/InhomogenousBachelierModel.java" name="InhomogenousBachelierModel.java">
            <metrics coveredelements="46" coveredconditionals="2" complexity="18" loc="207" coveredmethods="10" methods="17" elements="62" classes="1" ncloc="110" statements="43" conditionals="2" coveredstatements="34"/>
            <class name="InhomogenousBachelierModel">
               <metrics coveredelements="46" coveredconditionals="2" complexity="18" coveredmethods="10" methods="17" elements="62" statements="43" conditionals="2" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModel(RandomVariableFactory,RandomVariable,RandomVariable,RandomVariable)" num="66" count="144" type="method"/>
            <line num="67" count="144" type="stmt"/>
            <line num="68" count="144" type="stmt"/>
            <line num="69" count="144" type="stmt"/>
            <line num="70" count="144" type="stmt"/>
            <line num="71" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModel(double,double,double)" num="81" count="16" type="method"/>
            <line num="85" count="16" type="stmt"/>
            <line num="87" count="16" type="stmt"/>
            <line num="88" count="16" type="stmt"/>
            <line num="89" count="16" type="stmt"/>
            <line num="90" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="93" count="156" type="method"/>
            <line num="95" count="156" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="98" count="2100" type="method"/>
            <line num="100" count="2100" type="stmt"/>
            <line num="101" count="2100" type="stmt"/>
            <line num="102" count="2100" type="stmt"/>
            <line falsecount="2100" truecount="2100" num="102" type="cond"/>
            <line num="103" count="2100" type="stmt"/>
            <line num="105" count="2100" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="108" count="2100" type="method"/>
            <line num="110" count="2100" type="stmt"/>
            <line num="111" count="2100" type="stmt"/>
            <line num="112" count="2100" type="stmt"/>
            <line num="113" count="2100" type="stmt"/>
            <line num="114" count="2100" type="stmt"/>
            <line num="115" count="2100" type="stmt"/>
            <line num="116" count="2100" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="119" count="2256" type="method"/>
            <line num="121" count="2256" type="stmt"/>
            <line num="122" count="2256" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="125" count="2100" type="method"/>
            <line num="127" count="2100" type="stmt"/>
            <line num="128" count="2100" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="131" count="366" type="method"/>
            <line num="133" count="366" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="136" count="312" type="method"/>
            <line num="138" count="312" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : InhomogenousBachelierModel" num="151" count="144" type="method"/>
            <line num="156" count="144" type="stmt"/>
            <line num="158" count="144" type="stmt"/>
            <line num="159" count="144" type="stmt"/>
            <line num="160" count="144" type="stmt"/>
            <line num="162" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : RandomVariable" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierVolatility(double) : RandomVariable" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/MertonModel.java" name="MertonModel.java">
            <metrics coveredelements="66" coveredconditionals="4" complexity="25" loc="426" coveredmethods="15" methods="23" elements="100" classes="1" ncloc="235" statements="73" conditionals="4" coveredstatements="47"/>
            <class name="MertonModel">
               <metrics coveredelements="66" coveredconditionals="4" complexity="25" coveredmethods="15" methods="23" elements="100" statements="73" conditionals="4" coveredstatements="47"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModel(RandomVariable,DiscountCurve,RandomVariable,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="95" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,DiscountCurve,double,DiscountCurve,double,double,double,RandomVariableFactory)" num="130" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="166" count="6" type="method"/>
            <line num="176" count="6" type="stmt"/>
            <line num="178" count="6" type="stmt"/>
            <line num="179" count="6" type="stmt"/>
            <line num="180" count="6" type="stmt"/>
            <line num="181" count="6" type="stmt"/>
            <line num="182" count="6" type="stmt"/>
            <line num="183" count="6" type="stmt"/>
            <line num="184" count="6" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
            <line num="186" count="6" type="stmt"/>
            <line num="187" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double,RandomVariableFactory)" num="202" count="6" type="method"/>
            <line num="212" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(MertonModelDescriptor)" num="227" count="2" type="method"/>
            <line num="228" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,DiscountCurve,double,DiscountCurve,double,double,double)" num="248" count="2" type="method"/>
            <line num="257" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double,double)" num="272" count="6" type="method"/>
            <line num="281" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="MertonModel(double,double,double,double,double,double)" num="294" count="6" type="method"/>
            <line num="302" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="305" count="808" type="method"/>
            <line num="307" count="808" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="310" count="800" type="method"/>
            <line num="312" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="315" count="8" type="method"/>
            <line num="317" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="320" count="184" type="method"/>
            <line num="322" count="184" type="stmt"/>
            <line falsecount="180" truecount="4" num="322" type="cond"/>
            <line num="323" count="4" type="stmt"/>
            <line num="326" count="180" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="330" count="800" type="method"/>
            <line num="332" count="800" type="stmt"/>
            <line num="333" count="800" type="stmt"/>
            <line falsecount="600" truecount="200" num="333" type="cond"/>
            <line num="334" count="200" type="stmt"/>
            <line num="335" count="200" type="stmt"/>
            <line num="337" count="200" type="stmt"/>
            <line num="340" count="600" type="stmt"/>
            <line num="342" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="349" count="800" type="method"/>
            <line num="351" count="800" type="stmt"/>
            <line num="352" count="800" type="stmt"/>
            <line num="353" count="800" type="stmt"/>
            <line num="354" count="800" type="stmt"/>
            <line num="356" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="359" count="16" type="method"/>
            <line num="361" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="369" count="204" type="method"/>
            <line num="371" count="204" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="374" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="395" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : RandomVariable" num="402" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : RandomVariable" num="409" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : RandomVariable" num="416" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : RandomVariable" num="423" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/MultiAssetBlackScholesModel.java" name="MultiAssetBlackScholesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="35" loc="321" coveredmethods="0" methods="20" elements="115" classes="1" ncloc="175" statements="69" conditionals="26" coveredstatements="0"/>
            <class name="MultiAssetBlackScholesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="35" coveredmethods="0" methods="20" elements="115" statements="69" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="MultiAssetBlackScholesModel(RandomVariableFactory,double[],double,double[][])" num="82" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiAssetBlackScholesModel(RandomVariableFactory,double[],double,double[],double[][])" num="126" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getFactorLoadingsFromVolatilityAnCorrelation(double[],double[][]) : double[][]" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiAssetBlackScholesModel(double[],double,double[][])" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultiAssetBlackScholesModel(double[],double,double[],double[][])" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MultiAssetBlackScholesModel" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingMatrix() : double[][]" num="271" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatilityVector() : double[]" num="280" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCorrelationMatrix() : double[][]" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="305" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/models/VarianceGammaModel.java" name="VarianceGammaModel.java">
            <metrics coveredelements="58" coveredconditionals="4" complexity="27" loc="341" coveredmethods="13" methods="25" elements="107" classes="1" ncloc="184" statements="78" conditionals="4" coveredstatements="41"/>
            <class name="VarianceGammaModel">
               <metrics coveredelements="58" coveredconditionals="4" complexity="27" coveredmethods="13" methods="25" elements="107" statements="78" conditionals="4" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(RandomVariable,DiscountCurve,DiscountCurve,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariable,RandomVariableFactory)" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(VarianceGammaModelDescriptor)" num="108" count="2" type="method"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,DiscountCurve,DiscountCurve,double,double,double,RandomVariableFactory)" num="128" count="2" type="method"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,DiscountCurve,DiscountCurve,double,double,double)" num="154" count="2" type="method"/>
            <line num="156" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double,double)" num="169" count="6" type="method"/>
            <line num="171" count="6" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line num="173" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line num="177" count="6" type="stmt"/>
            <line num="178" count="6" type="stmt"/>
            <line num="179" count="6" type="stmt"/>
            <line num="180" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="VarianceGammaModel(double,double,double,double,double)" num="193" count="6" type="method"/>
            <line num="194" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="197" count="808" type="method"/>
            <line num="199" count="808" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="202" count="800" type="method"/>
            <line num="204" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="207" count="8" type="method"/>
            <line num="209" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="212" count="132" type="method"/>
            <line num="214" count="132" type="stmt"/>
            <line falsecount="128" truecount="4" num="214" type="cond"/>
            <line num="215" count="4" type="stmt"/>
            <line num="218" count="128" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="222" count="800" type="method"/>
            <line num="224" count="800" type="stmt"/>
            <line num="226" count="800" type="stmt"/>
            <line falsecount="600" truecount="200" num="226" type="cond"/>
            <line num="227" count="200" type="stmt"/>
            <line num="228" count="200" type="stmt"/>
            <line num="230" count="200" type="stmt"/>
            <line num="233" count="600" type="stmt"/>
            <line num="237" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="240" count="800" type="method"/>
            <line num="243" count="800" type="stmt"/>
            <line num="244" count="800" type="stmt"/>
            <line num="245" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="248" count="16" type="method"/>
            <line num="250" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="258" count="1004" type="method"/>
            <line num="260" count="1004" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="263" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : RandomVariable" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="298" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountRate() : RandomVariable" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : RandomVariable" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : RandomVariable" num="319" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : RandomVariable" num="326" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.volatilities">
         <metrics coveredelements="271" complexity="94" loc="1402" methods="87" classes="9" statements="292" coveredconditionals="9" coveredmethods="54" elements="393" ncloc="750" files="9" conditionals="14" coveredstatements="208"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCube.java" name="SABRVolatilityCube.java">
            <metrics coveredelements="55" coveredconditionals="2" complexity="16" loc="190" coveredmethods="14" methods="14" elements="59" classes="1" ncloc="107" statements="41" conditionals="4" coveredstatements="39"/>
            <class name="SABRVolatilityCube">
               <metrics coveredelements="55" coveredconditionals="2" complexity="16" coveredmethods="14" methods="14" elements="59" statements="41" conditionals="4" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCube(String,LocalDate,DataTable,double,double,DataTable,DataTable,DataTable,double)" num="62" count="8" type="method"/>
            <line num="65" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCube(String,LocalDate,DataTable,double,double,DataTable,DataTable,DataTable,double,double)" num="82" count="610" type="method"/>
            <line num="85" count="610" type="stmt"/>
            <line num="86" count="610" type="stmt"/>
            <line num="87" count="610" type="stmt"/>
            <line num="88" count="610" type="stmt"/>
            <line num="89" count="610" type="stmt"/>
            <line num="90" count="610" type="stmt"/>
            <line num="91" count="610" type="stmt"/>
            <line num="92" count="610" type="stmt"/>
            <line num="93" count="609" type="stmt"/>
            <line num="94" count="610" type="stmt"/>
            <line num="95" count="610" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="98" count="15341032" type="method"/>
            <line num="101" count="15345846" type="stmt"/>
            <line falsecount="15349040" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="15351400" type="stmt"/>
            <line falsecount="15355071" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="15357754" type="stmt"/>
            <line num="110" count="15407311" type="stmt"/>
            <line num="111" count="15409765" type="stmt"/>
            <line num="112" count="15412877" type="stmt"/>
            <line num="114" count="15400311" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="118" count="6000" type="method"/>
            <line num="120" count="6000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="123" count="2580" type="method"/>
            <line num="125" count="2580" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="128" count="28788" type="method"/>
            <line num="130" count="28789" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="133" count="39366" type="method"/>
            <line num="135" count="39366" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="138" count="4" type="method"/>
            <line num="140" count="4" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line num="147" count="4" type="stmt"/>
            <line num="148" count="4" type="stmt"/>
            <line num="150" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="153" count="85363" type="method"/>
            <line num="155" count="85363" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="158" count="26896" type="method"/>
            <line num="160" count="26897" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingTable() : DataTable" num="166" count="2" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRhoTable() : DataTable" num="173" count="2" type="method"/>
            <line num="174" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseVolTable() : DataTable" num="180" count="2" type="method"/>
            <line num="181" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolvolTable() : DataTable" num="187" count="2" type="method"/>
            <line num="188" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeParallel.java" name="SABRVolatilityCubeParallel.java">
            <metrics coveredelements="43" coveredconditionals="2" complexity="12" loc="164" coveredmethods="9" methods="10" elements="49" classes="1" ncloc="91" statements="35" conditionals="4" coveredstatements="32"/>
            <class name="SABRVolatilityCubeParallel">
               <metrics coveredelements="43" coveredconditionals="2" complexity="12" coveredmethods="9" methods="10" elements="49" statements="35" conditionals="4" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeParallel(String,LocalDate,DataTable,double,double,double,double,DataTable,double)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeParallel(String,LocalDate,DataTable,double,double,double,double,DataTable,double,double)" num="81" count="44" type="method"/>
            <line num="83" count="44" type="stmt"/>
            <line num="84" count="44" type="stmt"/>
            <line num="85" count="44" type="stmt"/>
            <line num="86" count="44" type="stmt"/>
            <line num="87" count="44" type="stmt"/>
            <line num="88" count="44" type="stmt"/>
            <line num="89" count="44" type="stmt"/>
            <line num="90" count="44" type="stmt"/>
            <line num="91" count="44" type="stmt"/>
            <line num="92" count="44" type="stmt"/>
            <line num="93" count="44" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="96" count="2676953" type="method"/>
            <line num="99" count="2677022" type="stmt"/>
            <line falsecount="2677042" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="2677093" type="stmt"/>
            <line falsecount="2677111" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="2677167" type="stmt"/>
            <line num="108" count="2677582" type="stmt"/>
            <line num="113" count="2677457" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="117" count="550" type="method"/>
            <line num="119" count="550" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="122" count="1014" type="method"/>
            <line num="124" count="1014" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="127" count="4589" type="method"/>
            <line num="129" count="4586" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="132" count="4080" type="method"/>
            <line num="134" count="4078" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="137" count="2" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="153" count="12639" type="method"/>
            <line num="155" count="12639" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="159" count="4075" type="method"/>
            <line num="161" count="4069" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeParallelFactory.java" name="SABRVolatilityCubeParallelFactory.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="5" loc="210" coveredmethods="5" methods="5" elements="61" classes="1" ncloc="113" statements="56" conditionals="0" coveredstatements="56"/>
            <class name="SABRVolatilityCubeParallelFactory">
               <metrics coveredelements="61" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="61" statements="56" conditionals="0" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="createSABRVolatilityCubeParallel(String,LocalDate,SchedulePrototype,SchedulePrototype,double,double,double,double,double,double,SwaptionDataLattice,VolatilityCubeModel,String) : SABRVolatilityCubeParallel" num="72" count="22" type="method"/>
            <line num="76" count="22" type="stmt"/>
            <line num="80" count="22" type="stmt"/>
            <line complexity="1" visibility="private" signature="SABRVolatilityCubeParallelFactory(String,LocalDate,SchedulePrototype,SchedulePrototype,double,double,double,double,double,double,SwaptionDataLattice,VolatilityCubeModel,String)" num="100" count="22" type="method"/>
            <line num="103" count="22" type="stmt"/>
            <line num="104" count="22" type="stmt"/>
            <line num="105" count="22" type="stmt"/>
            <line num="106" count="22" type="stmt"/>
            <line num="107" count="22" type="stmt"/>
            <line num="108" count="22" type="stmt"/>
            <line num="109" count="22" type="stmt"/>
            <line num="110" count="22" type="stmt"/>
            <line num="111" count="22" type="stmt"/>
            <line num="112" count="22" type="stmt"/>
            <line num="113" count="22" type="stmt"/>
            <line num="114" count="22" type="stmt"/>
            <line num="115" count="22" type="stmt"/>
            <line num="116" count="22" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildParallel() : SABRVolatilityCubeParallel" num="124" count="22" type="method"/>
            <line num="126" count="22" type="stmt"/>
            <line num="127" count="22" type="stmt"/>
            <line num="129" count="22" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeSwapRateTable() : DataTable" num="136" count="22" type="method"/>
            <line num="138" count="22" type="stmt"/>
            <line num="139" count="22" type="stmt"/>
            <line num="140" count="22" type="stmt"/>
            <line num="142" count="22" type="stmt"/>
            <line num="143" count="110" type="stmt"/>
            <line num="144" count="550" type="stmt"/>
            <line num="145" count="550" type="stmt"/>
            <line num="147" count="550" type="stmt"/>
            <line num="148" count="550" type="stmt"/>
            <line num="150" count="550" type="stmt"/>
            <line num="151" count="550" type="stmt"/>
            <line num="152" count="550" type="stmt"/>
            <line num="154" count="550" type="stmt"/>
            <line num="158" count="22" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeBaseVolTable() : DataTable" num="167" count="22" type="method"/>
            <line num="169" count="22" type="stmt"/>
            <line num="170" count="22" type="stmt"/>
            <line num="171" count="22" type="stmt"/>
            <line num="173" count="22" type="stmt"/>
            <line num="174" count="22" type="stmt"/>
            <line num="175" count="110" type="stmt"/>
            <line num="176" count="550" type="stmt"/>
            <line num="177" count="550" type="stmt"/>
            <line num="179" count="550" type="stmt"/>
            <line num="183" count="22" type="stmt"/>
            <line num="186" count="22" type="stmt"/>
            <line num="189" count="22" type="stmt"/>
            <line num="190" count="22" type="stmt"/>
            <line num="191" count="110" type="stmt"/>
            <line num="193" count="550" type="stmt"/>
            <line num="194" count="550" type="stmt"/>
            <line num="196" count="550" type="stmt"/>
            <line num="197" count="550" type="stmt"/>
            <line num="198" count="550" type="stmt"/>
            <line num="200" count="550" type="stmt"/>
            <line num="201" count="550" type="stmt"/>
            <line num="202" count="550" type="stmt"/>
            <line num="207" count="22" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeSingleSmile.java" name="SABRVolatilityCubeSingleSmile.java">
            <metrics coveredelements="24" coveredconditionals="1" complexity="14" loc="189" coveredmethods="6" methods="13" elements="69" classes="1" ncloc="118" statements="54" conditionals="2" coveredstatements="17"/>
            <class name="SABRVolatilityCubeSingleSmile">
               <metrics coveredelements="24" coveredconditionals="1" complexity="14" coveredmethods="6" methods="13" elements="69" statements="54" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double,double)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SABRVolatilityCubeSingleSmile(String,LocalDate,double,double,double,double,double,double,double,double)" num="108" count="2" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="123" count="8148" type="method"/>
            <line num="127" count="8148" type="stmt"/>
            <line falsecount="0" truecount="8148" num="127" type="cond"/>
            <line num="128" count="8148" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="145" count="6" type="method"/>
            <line num="147" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="160" count="84" type="method"/>
            <line num="162" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="180" count="8" type="method"/>
            <line num="182" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="185" count="2" type="method"/>
            <line num="187" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/ScaledVolatilityCube.java" name="ScaledVolatilityCube.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="11" loc="100" coveredmethods="7" methods="11" elements="32" classes="1" ncloc="66" statements="21" conditionals="0" coveredstatements="13"/>
            <class name="ScaledVolatilityCube">
               <metrics coveredelements="20" coveredconditionals="0" complexity="11" coveredmethods="7" methods="11" elements="32" statements="21" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ScaledVolatilityCube(String,LocalDate,String,double,double,double)" num="36" count="40877" type="method"/>
            <line num="37" count="40881" type="stmt"/>
            <line num="38" count="40878" type="stmt"/>
            <line num="39" count="40882" type="stmt"/>
            <line num="40" count="40886" type="stmt"/>
            <line num="41" count="40886" type="stmt"/>
            <line num="42" count="40883" type="stmt"/>
            <line num="43" count="40884" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScaledVolatilityCube(String,LocalDate,String,double,double)" num="46" count="40877" type="method"/>
            <line num="47" count="40878" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="50" count="12000759" type="method"/>
            <line num="53" count="12003979" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="61" count="81750" type="method"/>
            <line num="63" count="81754" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="66" count="81758" type="method"/>
            <line num="68" count="81764" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCubeName() : String" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="75" count="881823" type="method"/>
            <line num="77" count="881848" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="90" count="81765" type="method"/>
            <line num="92" count="81763" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/StaticVolatilityCube.java" name="StaticVolatilityCube.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="11" loc="115" coveredmethods="9" methods="11" elements="31" classes="1" ncloc="64" statements="20" conditionals="0" coveredstatements="18"/>
            <class name="StaticVolatilityCube">
               <metrics coveredelements="27" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="31" statements="20" conditionals="0" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double,double,double)" num="38" count="44" type="method"/>
            <line num="39" count="44" type="stmt"/>
            <line num="40" count="44" type="stmt"/>
            <line num="41" count="44" type="stmt"/>
            <line num="42" count="44" type="stmt"/>
            <line num="43" count="44" type="stmt"/>
            <line num="44" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double,double)" num="55" count="44" type="method"/>
            <line num="56" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="StaticVolatilityCube(String,LocalDate,double)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="70" count="4425849" type="method"/>
            <line num="73" count="4429853" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="81" count="1038" type="method"/>
            <line num="83" count="1038" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="86" count="10444" type="method"/>
            <line num="88" count="10443" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="91" count="9900" type="method"/>
            <line num="93" count="9900" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="96" count="9901" type="method"/>
            <line num="98" count="9899" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="101" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="110" count="30753" type="method"/>
            <line num="112" count="30752" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolVolCube.java" name="VolVolCube.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="13" loc="130" coveredmethods="2" methods="11" elements="44" classes="1" ncloc="81" statements="29" conditionals="4" coveredstatements="20"/>
            <class name="VolVolCube">
               <metrics coveredelements="26" coveredconditionals="4" complexity="13" coveredmethods="2" methods="11" elements="44" statements="29" conditionals="4" coveredstatements="20"/>
            </class>
            <line complexity="3" visibility="public" signature="VolVolCube(String,LocalDate,String,Schedule,double[])" num="50" count="41187" type="method"/>
            <line num="51" count="41186" type="stmt"/>
            <line num="52" count="41190" type="stmt"/>
            <line num="53" count="41184" type="stmt"/>
            <line num="54" count="41190" type="stmt"/>
            <line num="55" count="41189" type="stmt"/>
            <line num="57" count="41177" type="stmt"/>
            <line num="58" count="41174" type="stmt"/>
            <line falsecount="41156" truecount="426228" num="58" type="cond"/>
            <line num="59" count="426233" type="stmt"/>
            <line num="61" count="41166" type="stmt"/>
            <line num="63" count="41165" type="stmt"/>
            <line num="64" count="41172" type="stmt"/>
            <line falsecount="41166" truecount="426305" num="64" type="cond"/>
            <line num="65" count="426299" type="stmt"/>
            <line num="67" count="41169" type="stmt"/>
            <line num="69" count="41162" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(VolatilityCubeModel,double,double,double,QuotingConvention) : double" num="72" count="894533" type="method"/>
            <line num="75" count="894552" type="stmt"/>
            <line num="76" count="894361" type="stmt"/>
            <line num="78" count="894080" type="stmt"/>
            <line num="79" count="894137" type="stmt"/>
            <line num="80" count="894059" type="stmt"/>
            <line num="82" count="894548" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceCubeName() : String" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention) : double" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationDecay() : double" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Map&lt;String, Object&gt;" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowestStrike(VolatilityCubeModel) : double" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIborOisDecorrelation() : double" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolatilityCube.java" name="VolatilityCube.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="87" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilityCube">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/singleswaprate/model/volatilities/VolatilityCubeFactory.java" name="VolatilityCubeFactory.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="12" loc="217" coveredmethods="2" methods="12" elements="48" classes="1" ncloc="95" statements="36" conditionals="0" coveredstatements="13"/>
            <class name="VolatilityCubeFactory">
               <metrics coveredelements="15" coveredconditionals="0" complexity="12" coveredmethods="2" methods="12" elements="48" statements="36" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatilityCubeFactory(LocalDate,SwaptionDataLattice,SwaptionDataLattice,SwaptionDataLattice,double,double,double,double,AnnuityMappingType)" num="60" count="18" type="method"/>
            <line num="62" count="18" type="stmt"/>
            <line num="64" count="18" type="stmt"/>
            <line num="65" count="18" type="stmt"/>
            <line num="66" count="18" type="stmt"/>
            <line num="67" count="18" type="stmt"/>
            <line num="68" count="18" type="stmt"/>
            <line num="69" count="18" type="stmt"/>
            <line num="70" count="18" type="stmt"/>
            <line num="71" count="18" type="stmt"/>
            <line num="72" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildParallelSABRCube(String,double,double,SwaptionDataLattice,VolatilityCubeModel) : SABRVolatilityCubeParallel" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildShiftedSmileSABRCube(String,VolatilityCubeModel) : SABRVolatilityCube" num="104" count="18" type="method"/>
            <line num="107" count="18" type="stmt"/>
            <line num="109" count="18" type="stmt"/>
            <line num="111" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildSABRVolatilityCube(String,VolatilityCubeModel,int[]) : SABRVolatilityCube" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildSABRVolatilityCube(String,VolatilityCubeModel,int[],DataTable,DataTable,DataTable) : SABRVolatilityCube" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfThreads() : int" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxIterations() : int" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCalibrationParameters(int,int) : void" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReplicationParameters(double,double,int) : void" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationLowerBound() : double" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationUpperBound() : double" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReplicationNumberOfEvaluationPoints() : double" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.optimizer">
         <metrics coveredelements="791" complexity="329" loc="3576" methods="159" classes="21" statements="753" coveredconditionals="204" coveredmethods="82" elements="1198" ncloc="1681" files="17" conditionals="286" coveredstatements="505"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/GoldenSectionSearch.java" name="GoldenSectionSearch.java">
            <metrics coveredelements="67" coveredconditionals="16" complexity="25" loc="258" coveredmethods="8" methods="11" elements="105" classes="1" ncloc="123" statements="70" conditionals="24" coveredstatements="43"/>
            <class name="GoldenSectionSearch">
               <metrics coveredelements="67" coveredconditionals="16" complexity="25" coveredmethods="8" methods="11" elements="105" statements="70" conditionals="24" coveredstatements="43"/>
            </class>
            <line complexity="5" visibility="public" signature="main(String[]) : void" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GoldenSectionSearch(double,double)" num="92" count="1045313" type="method"/>
            <line num="93" count="1045284" type="stmt"/>
            <line num="94" count="1045318" type="stmt"/>
            <line num="95" count="1045330" type="stmt"/>
            <line num="96" count="1045120" type="stmt"/>
            <line num="98" count="1045193" type="stmt"/>
            <line num="99" count="1045180" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestPoint() : double" num="105" count="1045062" type="method"/>
            <line num="107" count="1045087" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNextPoint() : double" num="115" count="97149316" type="method"/>
            <line num="116" count="97190381" type="stmt"/>
            <line num="117" count="97237716" type="stmt"/>
            <line complexity="10" visibility="public" signature="setValue(double) : void" num="127" count="97762460" type="method"/>
            <line num="128" count="97853604" type="stmt"/>
            <line falsecount="97897616" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="97925477" type="stmt"/>
            <line falsecount="94941932" truecount="3132466" num="132" type="cond"/>
            <line num="136" count="3132636" type="stmt"/>
            <line num="138" count="3132720" type="stmt"/>
            <line falsecount="1044921" truecount="2089217" num="138" type="cond"/>
            <line num="139" count="2089343" type="stmt"/>
            <line num="141" count="1044964" type="stmt"/>
            <line falsecount="0" truecount="1045031" num="141" type="cond"/>
            <line num="142" count="1045055" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="152" count="94963280" type="stmt"/>
            <line falsecount="48532890" truecount="47402205" num="152" type="cond"/>
            <line num="154" count="47417037" type="stmt"/>
            <line falsecount="29514188" truecount="18119006" num="154" type="cond"/>
            <line num="158" count="18121827" type="stmt"/>
            <line num="159" count="18125193" type="stmt"/>
            <line num="161" count="18126288" type="stmt"/>
            <line num="162" count="18129984" type="stmt"/>
            <line num="167" count="29516283" type="stmt"/>
            <line num="168" count="29527878" type="stmt"/>
            <line num="172" count="48533206" type="stmt"/>
            <line falsecount="37963493" truecount="10756898" num="172" type="cond"/>
            <line num="176" count="10757962" type="stmt"/>
            <line num="177" count="10759054" type="stmt"/>
            <line num="179" count="10760055" type="stmt"/>
            <line num="180" count="10760839" type="stmt"/>
            <line num="185" count="37973465" type="stmt"/>
            <line num="186" count="37982520" type="stmt"/>
            <line num="193" count="95373284" type="stmt"/>
            <line falsecount="49622509" truecount="46538788" num="193" type="cond"/>
            <line num="194" count="46568429" type="stmt"/>
            <line num="196" count="49647766" type="stmt"/>
            <line num="202" count="95230313" type="stmt"/>
            <line falsecount="94707031" truecount="723463" num="202" type="cond"/>
            <line num="203" count="723475" type="stmt"/>
            <line num="205" count="95610995" type="stmt"/>
            <line num="208" count="98808849" type="stmt"/>
            <line num="209" count="98919752" type="stmt"/>
            <line complexity="2" visibility="public" signature="optimize() : GoldenSectionSearch" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value(double) : double" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoldenSection(double,double) : double" num="234" count="97773356" type="method"/>
            <line num="235" count="97857631" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfIterations() : int" num="241" count="97335927" type="method"/>
            <line num="242" count="97384019" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAccuracy() : double" num="248" count="99057011" type="method"/>
            <line num="249" count="99209668" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="255" count="98322707" type="method"/>
            <line num="256" count="98392612" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/LevenbergMarquardt.java" name="LevenbergMarquardt.java">
            <metrics coveredelements="240" coveredconditionals="55" complexity="80" loc="896" coveredmethods="26" methods="36" elements="321" classes="2" ncloc="409" statements="209" conditionals="76" coveredstatements="159"/>
            <class name="LevenbergMarquardt">
               <metrics coveredelements="240" coveredconditionals="55" complexity="80" coveredmethods="26" methods="36" elements="321" statements="209" conditionals="76" coveredstatements="159"/>
            </class>
            <class name="LevenbergMarquardt.RegularizationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(RegularizationMethod,double[],double[],int,ExecutorService)" num="240" count="1670" type="method"/>
            <line num="241" count="1670" type="stmt"/>
            <line num="242" count="1670" type="stmt"/>
            <line num="243" count="1670" type="stmt"/>
            <line num="244" count="1670" type="stmt"/>
            <line num="245" count="1670" type="stmt"/>
            <line num="247" count="1670" type="stmt"/>
            <line num="248" count="1670" type="stmt"/>
            <line num="250" count="1670" type="stmt"/>
            <line num="251" count="1670" type="stmt"/>
            <line num="252" count="1670" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(double[],double[],int,ExecutorService)" num="263" count="6" type="method"/>
            <line num="264" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(RegularizationMethod,double[],double[],int,int)" num="277" count="1664" type="method"/>
            <line num="278" count="1664" type="stmt"/>
            <line num="280" count="1664" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(double[],double[],int,int)" num="291" count="1572" type="method"/>
            <line num="292" count="1572" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(List&lt;Number&gt;,List&lt;Number&gt;,int,ExecutorService)" num="303" count="2" type="method"/>
            <line num="304" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(List&lt;Number&gt;,List&lt;Number&gt;,int,int)" num="315" count="2" type="method"/>
            <line num="316" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt()" num="324" count="2" type="method"/>
            <line num="325" count="2" type="stmt"/>
            <line num="326" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="numberListToDoubleArray(List&lt;Number&gt;) : double[]" num="335" count="4" type="method"/>
            <line num="336" count="4" type="stmt"/>
            <line num="337" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="337" type="cond"/>
            <line num="338" count="8" type="stmt"/>
            <line num="340" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LevenbergMarquardt(int)" num="348" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setInitialParameters(double[]) : LevenbergMarquardt" num="361" count="2" type="method"/>
            <line num="362" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="2" type="stmt"/>
            <line num="366" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParameterSteps(double[]) : LevenbergMarquardt" num="377" count="94" type="method"/>
            <line num="378" count="94" type="stmt"/>
            <line falsecount="94" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="94" type="stmt"/>
            <line num="382" count="94" type="stmt"/>
            <line complexity="2" visibility="public" signature="setTargetValues(double[]) : LevenbergMarquardt" num="392" count="2" type="method"/>
            <line num="393" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="2" type="stmt"/>
            <line num="397" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setMaxIteration(int) : LevenbergMarquardt" num="407" count="2" type="method"/>
            <line num="408" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="2" type="stmt"/>
            <line num="412" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setWeights(double[]) : LevenbergMarquardt" num="421" count="2" type="method"/>
            <line num="422" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="422" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="2" type="stmt"/>
            <line num="426" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setErrorTolerance(double) : LevenbergMarquardt" num="437" count="1092" type="method"/>
            <line num="438" count="1092" type="stmt"/>
            <line falsecount="1092" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="1092" type="stmt"/>
            <line num="442" count="1092" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double" num="451" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double) : LevenbergMarquardt" num="462" count="92" type="method"/>
            <line num="463" count="92" type="stmt"/>
            <line num="464" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="485" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="486" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="498" count="0" type="method"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="510" count="0" type="method"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="517" count="1684" type="method"/>
            <line num="519" count="1684" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="522" count="42" type="method"/>
            <line num="524" count="42" type="stmt"/>
            <line complexity="1" visibility="private" signature="setErrorMeanSquaredCurrent(double) : void" num="530" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="534" count="100" type="method"/>
            <line num="536" count="100" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(double[],double[][]) : void" num="557" count="136990" type="method"/>
            <line num="561" count="136990" type="stmt"/>
            <line num="562" count="136990" type="stmt"/>
            <line falsecount="136990" truecount="684038" num="562" type="cond"/>
            <line num="563" count="684038" type="stmt"/>
            <line num="564" count="684038" type="stmt"/>
            <line num="566" count="684038" type="stmt"/>
            <line num="567" count="684038" type="stmt"/>
            <line complexity="5" visibility="public" signature="call() : double[]" num="568" count="683650" type="method"/>
            <line num="570" count="683640" type="stmt"/>
            <line num="571" count="683629" type="stmt"/>
            <line falsecount="679215" truecount="4368" num="571" type="cond"/>
            <line num="572" count="4368" type="stmt"/>
            <line num="580" count="679202" type="stmt"/>
            <line num="584" count="683577" type="stmt"/>
            <line num="587" count="683562" type="stmt"/>
            <line num="588" count="683628" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="594" count="683437" type="stmt"/>
            <line falsecount="682924" truecount="6060340" num="594" type="cond"/>
            <line num="595" count="6061015" type="stmt"/>
            <line num="596" count="6059145" type="stmt"/>
            <line num="597" count="6058253" type="stmt"/>
            <line falsecount="6042257" truecount="16548" num="597" type="cond"/>
            <line num="598" count="16548" type="stmt"/>
            <line num="601" count="683032" type="stmt"/>
            <line num="604" count="684038" type="stmt"/>
            <line falsecount="3012" truecount="681026" num="604" type="cond"/>
            <line num="605" count="681026" type="stmt"/>
            <line num="606" count="681026" type="stmt"/>
            <line num="609" count="3012" type="stmt"/>
            <line num="610" count="3012" type="stmt"/>
            <line num="611" count="3012" type="stmt"/>
            <line num="615" count="136990" type="stmt"/>
            <line falsecount="136990" truecount="684038" num="615" type="cond"/>
            <line num="616" count="684038" type="stmt"/>
            <line num="617" count="684038" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="630" count="393044" type="method"/>
            <line num="632" count="393044" type="stmt"/>
            <line complexity="9" visibility="public" signature="run() : void" num="646" count="1674" type="method"/>
            <line num="649" count="1674" type="stmt"/>
            <line falsecount="14" truecount="1660" num="649" type="cond"/>
            <line num="650" count="1660" type="stmt"/>
            <line falsecount="0" truecount="1660" num="650" type="cond"/>
            <line num="651" count="1660" type="stmt"/>
            <line num="652" count="1660" type="stmt"/>
            <line num="656" count="1674" type="stmt"/>
            <line num="659" count="1674" type="stmt"/>
            <line num="660" count="1674" type="stmt"/>
            <line num="662" count="1674" type="stmt"/>
            <line num="663" count="1674" type="stmt"/>
            <line num="664" count="1674" type="stmt"/>
            <line num="666" count="1674" type="stmt"/>
            <line num="667" count="1674" type="stmt"/>
            <line num="668" count="1674" type="stmt"/>
            <line num="670" count="1674" type="stmt"/>
            <line num="671" count="1674" type="stmt"/>
            <line num="673" count="1674" type="stmt"/>
            <line num="675" count="1674" type="stmt"/>
            <line num="677" count="391848" type="stmt"/>
            <line num="680" count="391848" type="stmt"/>
            <line num="683" count="391848" type="stmt"/>
            <line num="689" count="391848" type="stmt"/>
            <line falsecount="254082" truecount="137766" num="689" type="cond"/>
            <line num="690" count="137766" type="stmt"/>
            <line num="693" count="137766" type="stmt"/>
            <line num="694" count="137766" type="stmt"/>
            <line num="695" count="137766" type="stmt"/>
            <line num="698" count="137766" type="stmt"/>
            <line num="701" count="137766" type="stmt"/>
            <line num="703" count="254082" type="stmt"/>
            <line num="706" count="254082" type="stmt"/>
            <line num="710" count="391848" type="stmt"/>
            <line falsecount="1674" truecount="390174" num="710" type="cond"/>
            <line num="711" count="390174" type="stmt"/>
            <line num="713" count="1674" type="stmt"/>
            <line num="717" count="390174" type="stmt"/>
            <line falsecount="390174" truecount="0" num="717" type="cond"/>
            <line num="719" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="724" type="cond"/>
            <line num="725" count="0" type="stmt"/>
            <line num="727" count="0" type="stmt"/>
            <line num="733" count="1674" type="stmt"/>
            <line falsecount="14" truecount="1660" num="733" type="cond"/>
            <line num="734" count="1660" type="stmt"/>
            <line num="735" count="1660" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(double[]) : double" num="740" count="391848" type="method"/>
            <line num="741" count="391848" type="stmt"/>
            <line num="743" count="391848" type="stmt"/>
            <line falsecount="391848" truecount="2881972" num="743" type="cond"/>
            <line num="744" count="2881972" type="stmt"/>
            <line num="745" count="2881972" type="stmt"/>
            <line num="748" count="391848" type="stmt"/>
            <line complexity="13" visibility="private" signature="updateParameterTest() : void" num="756" count="390174" type="method"/>
            <line num="757" count="390174" type="stmt"/>
            <line falsecount="253002" truecount="137172" num="757" type="cond"/>
            <line num="758" count="137172" type="stmt"/>
            <line num="759" count="137172" type="stmt"/>
            <line num="762" count="390174" type="stmt"/>
            <line num="764" count="390174" type="stmt"/>
            <line falsecount="390174" truecount="393800" num="764" type="cond"/>
            <line num="765" count="393800" type="stmt"/>
            <line num="767" count="393800" type="stmt"/>
            <line falsecount="393800" truecount="1892542" num="767" type="cond"/>
            <line num="768" count="1892542" type="stmt"/>
            <line falsecount="1892542" truecount="6051744" num="768" type="cond"/>
            <line num="769" count="6051744" type="stmt"/>
            <line num="770" count="6051744" type="stmt"/>
            <line falsecount="6051744" truecount="92415108" num="770" type="cond"/>
            <line num="771" count="92415108" type="stmt"/>
            <line num="773" count="6051744" type="stmt"/>
            <line falsecount="4159202" truecount="1892542" num="773" type="cond"/>
            <line num="774" count="1892542" type="stmt"/>
            <line falsecount="1888318" truecount="4224" num="774" type="cond"/>
            <line num="776" count="4224" type="stmt"/>
            <line num="780" count="1888318" type="stmt"/>
            <line falsecount="1886820" truecount="1498" num="780" type="cond"/>
            <line num="781" count="1498" type="stmt"/>
            <line num="784" count="1886820" type="stmt"/>
            <line num="789" count="6051744" type="stmt"/>
            <line num="790" count="6051744" type="stmt"/>
            <line num="795" count="393800" type="stmt"/>
            <line falsecount="393800" truecount="1892542" num="795" type="cond"/>
            <line num="796" count="1892542" type="stmt"/>
            <line num="797" count="1892542" type="stmt"/>
            <line num="798" count="1892542" type="stmt"/>
            <line falsecount="1892542" truecount="15117428" num="798" type="cond"/>
            <line num="799" count="15117428" type="stmt"/>
            <line num="801" count="1892542" type="stmt"/>
            <line num="804" count="393800" type="stmt"/>
            <line num="807" count="393800" type="stmt"/>
            <line num="809" count="3626" type="stmt"/>
            <line num="810" count="3626" type="stmt"/>
            <line num="815" count="390174" type="stmt"/>
            <line falsecount="390174" truecount="1878444" num="815" type="cond"/>
            <line num="816" count="1878444" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : LevenbergMarquardt" num="827" count="2" type="method"/>
            <line num="829" count="2" type="stmt"/>
            <line num="830" count="2" type="stmt"/>
            <line num="831" count="2" type="stmt"/>
            <line num="832" count="2" type="stmt"/>
            <line num="833" count="2" type="stmt"/>
            <line num="834" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(double[],double[],boolean) : LevenbergMarquardt" num="855" count="2" type="method"/>
            <line num="856" count="2" type="stmt"/>
            <line num="857" count="2" type="stmt"/>
            <line num="858" count="2" type="stmt"/>
            <line num="860" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="860" type="cond"/>
            <line num="861" count="2" type="stmt"/>
            <line num="864" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;Number&gt;,List&lt;Number&gt;,boolean) : LevenbergMarquardt" num="885" count="0" type="method"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="890" type="cond"/>
            <line num="891" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/Optimizer.java" name="Optimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Optimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Optimizer.ObjectiveFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/OptimizerFactory.java" name="OptimizerFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OptimizerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/OptimizerFactoryCMAES.java" name="OptimizerFactoryCMAES.java">
            <metrics coveredelements="42" coveredconditionals="4" complexity="21" loc="143" coveredmethods="11" methods="15" elements="66" classes="1" ncloc="110" statements="43" conditionals="8" coveredstatements="27"/>
            <class name="OptimizerFactoryCMAES">
               <metrics coveredelements="42" coveredconditionals="4" complexity="21" coveredmethods="11" methods="15" elements="66" statements="43" conditionals="8" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int,double[],double[],double[])" num="27" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int,double[])" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryCMAES(double,int)" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[]) : Optimizer" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[]) : Optimizer" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[],double[]) : Optimizer" num="66" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="69" type="cond"/>
            <line num="70" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="70" type="cond"/>
            <line num="71" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="71" type="cond"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : double[]" num="79" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="84" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIterations() : int" num="89" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="91" type="cond"/>
            <line complexity="2" visibility="public" signature="run() : void" num="94" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeObjectiveValue(double[]) : double" num="97" count="1754" type="method"/>
            <line num="99" count="1754" type="stmt"/>
            <line num="100" count="1754" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="1754" type="stmt"/>
            <line num="105" count="1754" type="stmt"/>
            <line num="106" count="3508" type="stmt"/>
            <line num="108" count="1754" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="111" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="116" count="6" type="method"/>
            <line num="118" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="121" count="1890" type="method"/>
            <line num="123" count="1890" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="126" count="1890" type="method"/>
            <line num="128" count="1890" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/OptimizerFactoryLevenbergMarquardt.java" name="OptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="8" loc="74" coveredmethods="7" methods="8" elements="21" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="12"/>
            <class name="OptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="19" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(LevenbergMarquardt.RegularizationMethod,double,int,double,int)" num="23" count="116" type="method"/>
            <line num="24" count="116" type="stmt"/>
            <line num="25" count="116" type="stmt"/>
            <line num="26" count="116" type="stmt"/>
            <line num="27" count="116" type="stmt"/>
            <line num="28" count="116" type="stmt"/>
            <line num="29" count="116" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(LevenbergMarquardt.RegularizationMethod,int,double,int)" num="32" count="110" type="method"/>
            <line num="33" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(int,double,int)" num="36" count="110" type="method"/>
            <line num="37" count="110" type="stmt"/>
            <line complexity="1" visibility="public" signature="OptimizerFactoryLevenbergMarquardt(int,int)" num="40" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[]) : Optimizer" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[]) : Optimizer" num="49" count="64" type="method"/>
            <line num="51" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,double[],double[],double[],double[],double[]) : Optimizer" num="54" count="92" type="method"/>
            <line num="56" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="65" count="23265" type="method"/>
            <line num="67" count="23266" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/SolverException.java" name="SolverException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="46" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SolverException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SolverException(String)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SolverException(Throwable)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SolverException(String,Throwable)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticLevenbergMarquardt.java" name="StochasticLevenbergMarquardt.java">
            <metrics coveredelements="148" coveredconditionals="40" complexity="63" loc="712" coveredmethods="8" methods="25" elements="247" classes="2" ncloc="327" statements="160" conditionals="62" coveredstatements="100"/>
            <class name="StochasticLevenbergMarquardt">
               <metrics coveredelements="148" coveredconditionals="40" complexity="63" coveredmethods="8" methods="25" elements="247" statements="160" conditionals="62" coveredstatements="100"/>
            </class>
            <class name="StochasticLevenbergMarquardt.RegularizationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="227" count="4" type="method"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="235" count="4" type="stmt"/>
            <line num="236" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardt(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,int)" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double) : void" num="286" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="333" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : RandomVariable[]" num="340" count="4" type="method"/>
            <line num="342" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="345" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setErrorMeanSquaredCurrent(double) : void" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="357" count="4" type="method"/>
            <line num="359" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="366" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="388" count="36" type="method"/>
            <line num="392" count="36" type="stmt"/>
            <line num="393" count="36" type="stmt"/>
            <line num="394" count="36" type="stmt"/>
            <line falsecount="36" truecount="1728" num="394" type="cond"/>
            <line num="395" count="1728" type="stmt"/>
            <line num="396" count="1728" type="stmt"/>
            <line num="398" count="1728" type="stmt"/>
            <line num="399" count="1728" type="stmt"/>
            <line complexity="4" visibility="public" signature="call() : RandomVariable[]" num="400" count="1728" type="method"/>
            <line num="402" count="1728" type="stmt"/>
            <line num="403" count="1728" type="stmt"/>
            <line falsecount="1728" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="412" count="1728" type="stmt"/>
            <line num="416" count="1728" type="stmt"/>
            <line num="419" count="1728" type="stmt"/>
            <line num="420" count="1728" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="1728" type="stmt"/>
            <line falsecount="1728" truecount="266112" num="425" type="cond"/>
            <line num="426" count="266112" type="stmt"/>
            <line num="429" count="1728" type="stmt"/>
            <line num="432" count="1728" type="stmt"/>
            <line falsecount="1728" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="1728" type="stmt"/>
            <line num="438" count="1728" type="stmt"/>
            <line num="439" count="1728" type="stmt"/>
            <line num="443" count="36" type="stmt"/>
            <line falsecount="36" truecount="1728" num="443" type="cond"/>
            <line num="444" count="1728" type="stmt"/>
            <line num="445" count="1728" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="458" count="58" type="method"/>
            <line num="460" count="58" type="stmt"/>
            <line complexity="24" visibility="public" signature="run() : void" num="468" count="4" type="method"/>
            <line num="471" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="478" count="4" type="stmt"/>
            <line num="481" count="4" type="stmt"/>
            <line num="482" count="4" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="485" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="490" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line num="494" count="4" type="stmt"/>
            <line num="496" count="4" type="stmt"/>
            <line num="498" count="58" type="stmt"/>
            <line num="501" count="58" type="stmt"/>
            <line num="504" count="58" type="stmt"/>
            <line num="510" count="58" type="stmt"/>
            <line num="512" count="58" type="stmt"/>
            <line falsecount="24" truecount="34" num="512" type="cond"/>
            <line num="513" count="34" type="stmt"/>
            <line num="514" count="34" type="stmt"/>
            <line num="515" count="34" type="stmt"/>
            <line num="516" count="34" type="stmt"/>
            <line num="520" count="58" type="stmt"/>
            <line falsecount="54" truecount="4" num="520" type="cond"/>
            <line num="521" count="4" type="stmt"/>
            <line num="527" count="54" type="stmt"/>
            <line num="528" count="54" type="stmt"/>
            <line falsecount="24" truecount="30" num="528" type="cond"/>
            <line num="529" count="30" type="stmt"/>
            <line num="532" count="24" type="stmt"/>
            <line num="539" count="54" type="stmt"/>
            <line num="544" count="54" type="stmt"/>
            <line num="546" count="54" type="stmt"/>
            <line num="547" count="54" type="stmt"/>
            <line num="549" count="54" type="stmt"/>
            <line num="550" count="54" type="stmt"/>
            <line falsecount="54" truecount="54" num="550" type="cond"/>
            <line num="552" count="54" type="stmt"/>
            <line falsecount="54" truecount="2592" num="552" type="cond"/>
            <line num="553" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="63504" num="553" type="cond"/>
            <line num="554" count="63504" type="stmt"/>
            <line num="555" count="63504" type="stmt"/>
            <line falsecount="63504" truecount="9779616" num="555" type="cond"/>
            <line num="556" count="9779616" type="stmt"/>
            <line falsecount="2599866" truecount="7179750" num="556" type="cond"/>
            <line num="557" count="7179750" type="stmt"/>
            <line num="560" count="63504" type="stmt"/>
            <line falsecount="60912" truecount="2592" num="560" type="cond"/>
            <line num="561" count="2592" type="stmt"/>
            <line falsecount="0" truecount="2592" num="561" type="cond"/>
            <line num="563" count="2592" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="576" count="63504" type="stmt"/>
            <line num="577" count="63504" type="stmt"/>
            <line num="582" count="54" type="stmt"/>
            <line falsecount="54" truecount="2592" num="582" type="cond"/>
            <line num="583" count="2592" type="stmt"/>
            <line num="584" count="2592" type="stmt"/>
            <line num="585" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="399168" num="585" type="cond"/>
            <line num="586" count="399168" type="stmt"/>
            <line falsecount="82422" truecount="316746" num="586" type="cond"/>
            <line num="587" count="316746" type="stmt"/>
            <line num="590" count="2592" type="stmt"/>
            <line num="593" count="54" type="stmt"/>
            <line num="595" count="54" type="stmt"/>
            <line num="596" count="54" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="604" count="54" type="stmt"/>
            <line falsecount="54" truecount="2592" num="604" type="cond"/>
            <line num="605" count="2592" type="stmt"/>
            <line num="609" count="54" type="stmt"/>
            <line falsecount="54" truecount="0" num="609" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="616" type="cond"/>
            <line num="617" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="625" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="625" type="cond"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(RandomVariable[]) : double" num="632" count="58" type="method"/>
            <line num="633" count="58" type="stmt"/>
            <line num="635" count="58" type="stmt"/>
            <line falsecount="58" truecount="8932" num="635" type="cond"/>
            <line num="636" count="8932" type="stmt"/>
            <line num="637" count="8932" type="stmt"/>
            <line num="640" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : StochasticLevenbergMarquardt" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(RandomVariable[],RandomVariable[],boolean) : StochasticLevenbergMarquardt" num="673" count="0" type="method"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="678" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,boolean) : StochasticLevenbergMarquardt" num="702" count="0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticLevenbergMarquardtAD.java" name="StochasticLevenbergMarquardtAD.java">
            <metrics coveredelements="54" coveredconditionals="23" complexity="20" loc="190" coveredmethods="4" methods="5" elements="60" classes="1" ncloc="81" statements="29" conditionals="26" coveredstatements="27"/>
            <class name="StochasticLevenbergMarquardtAD">
               <metrics coveredelements="54" coveredconditionals="23" complexity="20" coveredmethods="4" methods="5" elements="60" statements="29" conditionals="26" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardtAD(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService,boolean)" num="108" count="4" type="method"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticLevenbergMarquardtAD(RegularizationMethod,RandomVariable[],RandomVariable[],RandomVariable[],int,double,ExecutorService)" num="118" count="4" type="method"/>
            <line num="123" count="4" type="stmt"/>
            <line complexity="3" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="127" count="1786" type="method"/>
            <line num="132" count="1786" type="stmt"/>
            <line falsecount="1786" truecount="85728" num="132" type="cond"/>
            <line num="133" count="85728" type="stmt"/>
            <line falsecount="84768" truecount="960" num="133" type="cond"/>
            <line num="134" count="960" type="stmt"/>
            <line num="138" count="1786" type="stmt"/>
            <line complexity="14" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="141" count="54" type="method"/>
            <line num="146" count="54" type="stmt"/>
            <line num="147" count="54" type="stmt"/>
            <line falsecount="54" truecount="900" num="147" type="cond"/>
            <line num="148" count="900" type="stmt"/>
            <line num="151" count="54" type="stmt"/>
            <line falsecount="0" truecount="54" num="151" type="cond"/>
            <line num="152" count="54" type="stmt"/>
            <line num="153" count="54" type="stmt"/>
            <line falsecount="54" truecount="2772" num="153" type="cond"/>
            <line num="154" count="2772" type="stmt"/>
            <line num="157" count="54" type="stmt"/>
            <line falsecount="36" truecount="18" num="157" type="cond"/>
            <line num="158" count="18" type="stmt"/>
            <line num="162" count="54" type="stmt"/>
            <line falsecount="36" truecount="18" num="162" type="cond"/>
            <line num="163" count="18" type="stmt"/>
            <line num="164" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Integer) : Map&lt;Long, RandomVariable&gt;" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="174" count="18" type="stmt"/>
            <line falsecount="18" truecount="2772" num="174" type="cond"/>
            <line num="175" count="2772" type="stmt"/>
            <line falsecount="180" truecount="2592" num="175" type="cond"/>
            <line num="176" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="0" num="176" type="cond"/>
            <line num="177" count="2592" type="stmt"/>
            <line falsecount="2592" truecount="124416" num="177" type="cond"/>
            <line num="178" count="124416" type="stmt"/>
            <line num="179" count="124416" type="stmt"/>
            <line falsecount="73782" truecount="50634" num="179" type="cond"/>
            <line num="180" count="50634" type="stmt"/>
            <line num="187" count="36" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizer.java" name="StochasticOptimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StochasticOptimizer.ObjectiveFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactory.java" name="StochasticOptimizerFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="29" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryLevenbergMarquardt.java" name="StochasticOptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="52" coveredmethods="0" methods="5" elements="14" classes="1" ncloc="34" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(StochasticLevenbergMarquardt.RegularizationMethod,int,double,int)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(int,double,int)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardt(int,int)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryLevenbergMarquardtAD.java" name="StochasticOptimizerFactoryLevenbergMarquardtAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="46" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="29" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryLevenbergMarquardtAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardtAD(int,double,int)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryLevenbergMarquardtAD(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD.java" name="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="55" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="36" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD(int,RandomVariable,int)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticOptimizerFactoryPathwiseLevenbergMarquardtAD(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardt.java" name="StochasticPathwiseLevenbergMarquardt.java">
            <metrics coveredelements="180" coveredconditionals="54" complexity="71" loc="725" coveredmethods="11" methods="27" elements="274" classes="1" ncloc="335" statements="171" conditionals="76" coveredstatements="115"/>
            <class name="StochasticPathwiseLevenbergMarquardt">
               <metrics coveredelements="180" coveredconditionals="54" complexity="71" coveredmethods="11" methods="27" elements="274" statements="171" conditionals="76" coveredstatements="115"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],int,RandomVariable,ExecutorService)" num="208" count="20" type="method"/>
            <line num="209" count="20" type="stmt"/>
            <line num="210" count="20" type="stmt"/>
            <line num="211" count="20" type="stmt"/>
            <line num="212" count="20" type="stmt"/>
            <line num="213" count="20" type="stmt"/>
            <line num="214" count="20" type="stmt"/>
            <line num="215" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="215" type="cond"/>
            <line num="217" count="20" type="stmt"/>
            <line falsecount="8" truecount="12" num="217" type="cond"/>
            <line num="218" count="12" type="stmt"/>
            <line num="219" count="12" type="stmt"/>
            <line falsecount="12" truecount="54" num="219" type="cond"/>
            <line num="220" count="54" type="stmt"/>
            <line num="224" count="20" type="stmt"/>
            <line num="225" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(RandomVariable[],RandomVariable[],int,int)" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,ExecutorService)" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardt(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,int)" num="260" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="numberListToDoubleArray(List&lt;RandomVariable&gt;) : RandomVariable[]" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambda() : double[]" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLambda(double[]) : void" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaMultiplicator() : double" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaMultiplicator(double) : void" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLambdaDivisor() : double" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLambdaDivisor(double) : void" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestFitParameters() : RandomVariable[]" num="348" count="20" type="method"/>
            <line num="350" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootMeanSquaredError() : double" num="353" count="8" type="method"/>
            <line num="355" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="setErrorMeanSquaredCurrent(RandomVariable) : void" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIterations() : int" num="365" count="20" type="method"/>
            <line num="367" count="20" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="370" count="2554" type="method"/>
            <line num="371" count="2554" type="stmt"/>
            <line complexity="1" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="374" count="1416" type="method"/>
            <line num="375" count="1416" type="stmt"/>
            <line complexity="5" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="396" count="404" type="method"/>
            <line num="400" count="404" type="stmt"/>
            <line num="401" count="404" type="stmt"/>
            <line num="402" count="404" type="stmt"/>
            <line falsecount="404" truecount="1120" num="402" type="cond"/>
            <line num="403" count="1120" type="stmt"/>
            <line num="404" count="1120" type="stmt"/>
            <line num="406" count="1120" type="stmt"/>
            <line num="407" count="1120" type="stmt"/>
            <line complexity="4" visibility="public" signature="call() : RandomVariable[]" num="408" count="1120" type="method"/>
            <line num="410" count="1120" type="stmt"/>
            <line num="411" count="1120" type="stmt"/>
            <line falsecount="552" truecount="568" num="411" type="cond"/>
            <line num="412" count="568" type="stmt"/>
            <line num="420" count="552" type="stmt"/>
            <line num="424" count="1120" type="stmt"/>
            <line num="427" count="1120" type="stmt"/>
            <line num="428" count="1120" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="1120" type="stmt"/>
            <line falsecount="1120" truecount="3136" num="433" type="cond"/>
            <line num="434" count="3136" type="stmt"/>
            <line num="435" count="3136" type="stmt"/>
            <line num="437" count="1120" type="stmt"/>
            <line num="440" count="1120" type="stmt"/>
            <line falsecount="1120" truecount="0" num="440" type="cond"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="445" count="1120" type="stmt"/>
            <line num="446" count="1120" type="stmt"/>
            <line num="447" count="1120" type="stmt"/>
            <line num="451" count="404" type="stmt"/>
            <line falsecount="404" truecount="1120" num="451" type="cond"/>
            <line num="452" count="1120" type="stmt"/>
            <line num="453" count="1120" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="done() : boolean" num="466" count="1942" type="method"/>
            <line num="468" count="1942" type="stmt"/>
            <line complexity="25" visibility="public" signature="run() : void" num="476" count="20" type="method"/>
            <line num="478" count="20" type="stmt"/>
            <line num="481" count="20" type="stmt"/>
            <line num="482" count="20" type="stmt"/>
            <line num="484" count="20" type="stmt"/>
            <line num="485" count="20" type="stmt"/>
            <line num="487" count="20" type="stmt"/>
            <line num="488" count="20" type="stmt"/>
            <line num="489" count="20" type="stmt"/>
            <line num="490" count="20" type="stmt"/>
            <line num="492" count="20" type="stmt"/>
            <line num="494" count="20" type="stmt"/>
            <line num="496" count="1942" type="stmt"/>
            <line num="499" count="1942" type="stmt"/>
            <line num="502" count="1942" type="stmt"/>
            <line num="508" count="1942" type="stmt"/>
            <line num="510" count="1942" type="stmt"/>
            <line falsecount="1942" truecount="4226" num="510" type="cond"/>
            <line num="511" count="4226" type="stmt"/>
            <line num="513" count="1942" type="stmt"/>
            <line falsecount="1942" truecount="2416" num="513" type="cond"/>
            <line num="514" count="2416" type="stmt"/>
            <line num="518" count="1942" type="stmt"/>
            <line num="519" count="1942" type="stmt"/>
            <line num="522" count="1942" type="stmt"/>
            <line falsecount="1922" truecount="20" num="522" type="cond"/>
            <line num="523" count="20" type="stmt"/>
            <line num="528" count="1922" type="stmt"/>
            <line num="529" count="1922" type="stmt"/>
            <line falsecount="1902" truecount="20" num="529" type="cond"/>
            <line num="530" count="20" type="stmt"/>
            <line num="531" count="20" type="stmt"/>
            <line num="533" count="1922" type="stmt"/>
            <line falsecount="1902" truecount="20" num="533" type="cond"/>
            <line num="534" count="20" type="stmt"/>
            <line num="535" count="20" type="stmt"/>
            <line num="541" count="1922" type="stmt"/>
            <line falsecount="1922" truecount="1922" num="541" type="cond"/>
            <line num="542" count="1922" type="stmt"/>
            <line num="543" count="1922" type="stmt"/>
            <line falsecount="800" truecount="1122" num="543" type="cond"/>
            <line num="550" count="1922" type="stmt"/>
            <line num="555" count="1922" type="stmt"/>
            <line num="556" count="1922" type="stmt"/>
            <line falsecount="1922" truecount="1922" num="556" type="cond"/>
            <line num="558" count="1922" type="stmt"/>
            <line num="559" count="1922" type="stmt"/>
            <line num="561" count="1922" type="stmt"/>
            <line num="562" count="1922" type="stmt"/>
            <line falsecount="1922" truecount="1946" num="562" type="cond"/>
            <line num="564" count="1946" type="stmt"/>
            <line falsecount="1946" truecount="4204" num="564" type="cond"/>
            <line num="565" count="4204" type="stmt"/>
            <line falsecount="4204" truecount="7038" num="565" type="cond"/>
            <line num="566" count="7038" type="stmt"/>
            <line num="567" count="7038" type="stmt"/>
            <line falsecount="7038" truecount="12798" num="567" type="cond"/>
            <line num="568" count="12798" type="stmt"/>
            <line num="570" count="7038" type="stmt"/>
            <line falsecount="2834" truecount="4204" num="570" type="cond"/>
            <line num="571" count="4204" type="stmt"/>
            <line falsecount="4204" truecount="0" num="571" type="cond"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="4204" type="stmt"/>
            <line num="578" count="7038" type="stmt"/>
            <line num="579" count="7038" type="stmt"/>
            <line num="584" count="1946" type="stmt"/>
            <line falsecount="1946" truecount="4204" num="584" type="cond"/>
            <line num="585" count="4204" type="stmt"/>
            <line num="586" count="4204" type="stmt"/>
            <line falsecount="4204" truecount="6220" num="586" type="cond"/>
            <line num="587" count="6220" type="stmt"/>
            <line num="589" count="4204" type="stmt"/>
            <line num="592" count="1946" type="stmt"/>
            <line num="594" count="1946" type="stmt"/>
            <line num="595" count="1922" type="stmt"/>
            <line falsecount="1922" truecount="4156" num="595" type="cond"/>
            <line num="596" count="4156" type="stmt"/>
            <line num="598" count="1922" type="stmt"/>
            <line num="600" count="24" type="stmt"/>
            <line num="601" count="24" type="stmt"/>
            <line num="607" count="1922" type="stmt"/>
            <line falsecount="1922" truecount="4156" num="607" type="cond"/>
            <line num="608" count="4156" type="stmt"/>
            <line falsecount="0" truecount="4156" num="608" type="cond"/>
            <line num="612" count="1922" type="stmt"/>
            <line falsecount="1922" truecount="0" num="612" type="cond"/>
            <line num="614" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="617" type="cond"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="626" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="626" type="cond"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanSquaredError(RandomVariable[]) : RandomVariable" num="633" count="1942" type="method"/>
            <line num="635" count="1942" type="stmt"/>
            <line num="637" count="1942" type="stmt"/>
            <line falsecount="1942" truecount="2416" num="637" type="cond"/>
            <line num="638" count="2416" type="stmt"/>
            <line num="639" count="2416" type="stmt"/>
            <line num="642" count="1942" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : StochasticPathwiseLevenbergMarquardt" num="652" count="0" type="method"/>
            <line num="663" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(RandomVariable[],RandomVariable[],boolean) : StochasticPathwiseLevenbergMarquardt" num="684" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="689" type="cond"/>
            <line num="690" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedTargetValues(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,boolean) : StochasticPathwiseLevenbergMarquardt" num="714" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtAD.java" name="StochasticPathwiseLevenbergMarquardtAD.java">
            <metrics coveredelements="30" coveredconditionals="12" complexity="15" loc="166" coveredmethods="3" methods="6" elements="39" classes="1" ncloc="54" statements="19" conditionals="14" coveredstatements="15"/>
            <class name="StochasticPathwiseLevenbergMarquardtAD">
               <metrics coveredelements="30" coveredconditionals="12" complexity="15" coveredmethods="3" methods="6" elements="39" statements="19" conditionals="14" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,ExecutorService)" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;,int,int)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(RandomVariable[],RandomVariable[],int,int)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseLevenbergMarquardtAD(RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],int,RandomVariable,ExecutorService)" num="118" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="3" visibility="protected" signature="prepareAndSetValues(RandomVariable[],RandomVariable[]) : void" num="126" count="508" type="method"/>
            <line num="131" count="508" type="stmt"/>
            <line falsecount="508" truecount="1016" num="131" type="cond"/>
            <line num="132" count="1016" type="stmt"/>
            <line falsecount="0" truecount="1016" num="132" type="cond"/>
            <line num="133" count="1016" type="stmt"/>
            <line num="137" count="508" type="stmt"/>
            <line complexity="8" visibility="protected" signature="prepareAndSetDerivatives(RandomVariable[],RandomVariable[],RandomVariable[][]) : void" num="140" count="506" type="method"/>
            <line num="145" count="506" type="stmt"/>
            <line num="146" count="506" type="stmt"/>
            <line falsecount="506" truecount="1012" num="146" type="cond"/>
            <line num="147" count="1012" type="stmt"/>
            <line num="149" count="506" type="stmt"/>
            <line falsecount="506" truecount="506" num="149" type="cond"/>
            <line num="150" count="506" type="stmt"/>
            <line num="154" count="506" type="stmt"/>
            <line falsecount="0" truecount="506" num="154" type="cond"/>
            <line num="155" count="506" type="stmt"/>
            <line falsecount="506" truecount="506" num="155" type="cond"/>
            <line num="156" count="506" type="stmt"/>
            <line num="157" count="506" type="stmt"/>
            <line falsecount="506" truecount="1012" num="157" type="cond"/>
            <line num="158" count="1012" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/optimizer/StochasticPathwiseOptimizerFactoryLevenbergMarquardt.java" name="StochasticPathwiseOptimizerFactoryLevenbergMarquardt.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="56" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="37" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="StochasticPathwiseOptimizerFactoryLevenbergMarquardt">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="StochasticPathwiseOptimizerFactoryLevenbergMarquardt(int,double,int)" num="22" count="12" type="method"/>
            <line num="23" count="12" type="stmt"/>
            <line num="24" count="12" type="stmt"/>
            <line num="25" count="12" type="stmt"/>
            <line num="26" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="StochasticPathwiseOptimizerFactoryLevenbergMarquardt(int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="38" count="12" type="method"/>
            <line num="40" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="43" count="12" type="method"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="50" count="684" type="method"/>
            <line num="52" count="684" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.process.component.factortransform">
         <metrics coveredelements="0" complexity="0" loc="40" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="7" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/process/component/factortransform/FactorTransform.java" name="FactorTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FactorTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.timeseries.models.parametric">
         <metrics coveredelements="0" complexity="177" loc="2263" methods="106" classes="13" statements="927" coveredconditionals="0" coveredmethods="0" elements="1145" ncloc="1503" files="7" conditionals="112" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/ARMAGARCH.java" name="ARMAGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="37" loc="409" coveredmethods="0" methods="19" elements="214" classes="2" ncloc="281" statements="171" conditionals="24" coveredstatements="0"/>
            <class name="ARMAGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="18" elements="200" statements="158" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="ARMAGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ARMAGARCH(TimeSeries)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getSzenarios(double[]) : double[]" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantilPredictionsForParameters(double[],double[]) : double[]" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="229" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="311" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="384" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="395" count="0" type="method"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormal.java" name="DisplacedLognormal.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="330" coveredmethods="0" methods="13" elements="180" classes="2" ncloc="215" statements="145" conditionals="22" coveredstatements="0"/>
            <class name="DisplacedLognormal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="12" elements="163" statements="129" conditionals="22" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormal.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[])" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],double)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],int,int)" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormal(double[],double,int,int)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(double,int,int) : HistoricalSimulationModel" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLogLikelihoodForParameters(double,double,double,double) : double" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double,double) : double" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double,double[]) : double[]" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="202" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="210" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalARMAGARCH.java" name="DisplacedLognormalARMAGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="370" coveredmethods="0" methods="20" elements="181" classes="2" ncloc="254" statements="151" conditionals="10" coveredstatements="0"/>
            <class name="DisplacedLognormalARMAGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="19" elements="167" statements="138" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalARMAGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries,double)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalARMAGARCH(TimeSeries,double,double)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double[]) : double[]" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="197" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="279" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="356" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="366" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalGARCH.java" name="DisplacedLognormalGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="347" coveredmethods="0" methods="15" elements="186" classes="2" ncloc="234" statements="151" conditionals="20" coveredstatements="0"/>
            <class name="DisplacedLognormalGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="14" elements="169" statements="135" conditionals="20" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="17" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[])" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],double)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],int,int)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="DisplacedLognormalGARCH(double[],double,int,int)" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(double,int,int) : HistoricalSimulationModel" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double,double,double,double) : double" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double,double) : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double,double,double,double) : double[]" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double,double[]) : double[]" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="203" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="211" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="279" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/DisplacedLognormalGJRGARCH.java" name="DisplacedLognormalGJRGARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="371" coveredmethods="0" methods="20" elements="187" classes="2" ncloc="254" statements="151" conditionals="16" coveredstatements="0"/>
            <class name="DisplacedLognormalGJRGARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="19" elements="173" statements="138" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="DisplacedLognormalGJRGARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries,double)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognormalGJRGARCH(TimeSeries,double,double)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLogLikelihoodForParameters(double[]) : double" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getLastResidualForParameters(double[]) : double" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSzenarios(double[]) : double[]" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="198" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeObjectiveValue(double[]) : double" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGoalType() : org.apache.commons.math3.optim.nonlinear.scalar.GoalType" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPoint() : double[]" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound() : double[]" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound() : double[]" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(TimeSeries) : TimeSeriesModelParametric" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : double[]" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : String[]" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/GARCH.java" name="GARCH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="304" coveredmethods="0" methods="12" elements="139" classes="2" ncloc="186" statements="115" conditionals="12" coveredstatements="0"/>
            <class name="GARCH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="11" elements="126" statements="103" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="GARCH.GARCHMaxLikelihoodFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="13" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GARCH(double[])" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GARCH(double[],int,int)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : GARCH" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLogLikelihoodForParameters(double,double,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLastResidualForParameters(double,double,double) : double" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSzenarios(double,double,double) : double[]" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getQuantilPredictionsForParameters(double,double,double,double[]) : double[]" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="173" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="value(double[]) : double" num="181" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="restrictToOpenSet(double,double,double) : double" num="299" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/timeseries/models/parametric/SimpleHistroricalSimulation.java" name="SimpleHistroricalSimulation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="132" coveredmethods="0" methods="7" elements="58" classes="1" ncloc="79" statements="43" conditionals="8" coveredstatements="0"/>
            <class name="SimpleHistroricalSimulation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="58" statements="43" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleHistroricalSimulation(double[])" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleHistroricalSimulation(double[],int,int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithWindow(int,int) : HistoricalSimulationModel" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSzenarios(int) : double[]" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantilPredictions(int,double[]) : double[]" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters() : Map&lt;String, Object&gt;" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestParameters(Map&lt;String, Object&gt;) : Map&lt;String, Object&gt;" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.exception">
         <metrics coveredelements="0" complexity="4" loc="56" methods="4" classes="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="7" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/exception/CalculationException.java" name="CalculationException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="56" coveredmethods="0" methods="4" elements="7" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="CalculationException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CalculationException()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="CalculationException(String)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalculationException(Throwable)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalculationException(String,Throwable)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.daycount">
         <metrics coveredelements="125" complexity="122" loc="1363" methods="49" classes="17" statements="202" coveredconditionals="23" coveredmethods="21" elements="359" ncloc="524" files="17" conditionals="108" coveredstatements="81"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention.java" name="DayCountConvention.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConventionFactory.java" name="DayCountConventionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="98" coveredmethods="0" methods="4" elements="37" classes="1" ncloc="40" statements="19" conditionals="14" coveredstatements="0"/>
            <class name="DayCountConventionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="4" elements="37" statements="19" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="DayCountConventionFactory()" num="25" count="0" type="method"/>
            <line complexity="8" visibility="public" signature="getDayCountConvention(String) : DayCountConvention" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate,String) : double" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate,String) : double" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_30E_360.java" name="DayCountConvention_30E_360.java">
            <metrics coveredelements="19" coveredconditionals="2" complexity="7" loc="92" coveredmethods="4" methods="4" elements="23" classes="1" ncloc="34" statements="15" conditionals="4" coveredstatements="13"/>
            <class name="DayCountConvention_30E_360">
               <metrics coveredelements="19" coveredconditionals="2" complexity="7" coveredmethods="4" methods="4" elements="23" statements="15" conditionals="4" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360(boolean)" num="48" count="754" type="method"/>
            <line num="49" count="754" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360()" num="55" count="754" type="method"/>
            <line num="56" count="754" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="62" count="11678" type="method"/>
            <line num="64" count="11678" type="stmt"/>
            <line falsecount="11678" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="11678" type="stmt"/>
            <line num="69" count="11678" type="stmt"/>
            <line num="70" count="11678" type="stmt"/>
            <line num="72" count="11678" type="stmt"/>
            <line num="73" count="11678" type="stmt"/>
            <line num="74" count="11678" type="stmt"/>
            <line num="76" count="11678" type="stmt"/>
            <line num="78" count="11678" type="stmt"/>
            <line falsecount="11678" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="11678" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="88" count="11678" type="method"/>
            <line num="90" count="11678" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_30E_360_ISDA.java" name="DayCountConvention_30E_360_ISDA.java">
            <metrics coveredelements="24" coveredconditionals="5" complexity="10" loc="90" coveredmethods="3" methods="4" elements="28" classes="1" ncloc="39" statements="18" conditionals="6" coveredstatements="16"/>
            <class name="DayCountConvention_30E_360_ISDA">
               <metrics coveredelements="24" coveredconditionals="5" complexity="10" coveredmethods="3" methods="4" elements="28" statements="18" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360_ISDA(boolean)" num="39" count="4" type="method"/>
            <line num="40" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30E_360_ISDA()" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="53" count="88" type="method"/>
            <line num="55" count="88" type="stmt"/>
            <line falsecount="88" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="88" type="stmt"/>
            <line num="60" count="88" type="stmt"/>
            <line num="61" count="88" type="stmt"/>
            <line num="63" count="88" type="stmt"/>
            <line num="64" count="88" type="stmt"/>
            <line num="65" count="88" type="stmt"/>
            <line num="69" count="88" type="stmt"/>
            <line num="70" count="88" type="stmt"/>
            <line num="73" count="88" type="stmt"/>
            <line falsecount="36" truecount="52" num="73" type="cond"/>
            <line num="74" count="52" type="stmt"/>
            <line num="76" count="88" type="stmt"/>
            <line falsecount="42" truecount="46" num="76" type="cond"/>
            <line num="77" count="46" type="stmt"/>
            <line num="80" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="86" count="88" type="method"/>
            <line num="88" count="88" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_30U_360.java" name="DayCountConvention_30U_360.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="106" coveredmethods="0" methods="4" elements="30" classes="1" ncloc="50" statements="18" conditionals="8" coveredstatements="0"/>
            <class name="DayCountConvention_30U_360">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="30" statements="18" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_30U_360()" num="44" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_30U_360(boolean)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT.java" name="DayCountConvention_ACT.java">
            <metrics coveredelements="7" coveredconditionals="1" complexity="4" loc="57" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="DayCountConvention_ACT">
               <metrics coveredelements="7" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT()" num="24" count="20122778" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="30" count="2122379806" type="method"/>
            <line num="32" count="2147483647" type="stmt"/>
            <line falsecount="2147483647" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="2147483647" type="stmt"/>
            <line complexity="1" visibility="public" signature="daysBetween(LocalDate,LocalDate) : double" num="54" count="2147483647" type="method"/>
            <line num="55" count="2147483647" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_360.java" name="DayCountConvention_ACT_360.java">
            <metrics coveredelements="6" coveredconditionals="1" complexity="3" loc="57" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="DayCountConvention_ACT_360">
               <metrics coveredelements="6" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_360()" num="40" count="20089091" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="47" count="923508325" type="method"/>
            <line num="49" count="936724214" type="stmt"/>
            <line falsecount="945130404" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="949635336" type="stmt"/>
            <line num="55" count="955599105" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365.java" name="DayCountConvention_ACT_365.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="51" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="16" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="DayCountConvention_ACT_365">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365()" num="38" count="124" type="method"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="41" count="1313709910" type="method"/>
            <line num="43" count="1356842254" type="stmt"/>
            <line falsecount="1339998187" truecount="41784541" num="43" type="cond"/>
            <line num="44" count="41794473" type="stmt"/>
            <line num="47" count="1338619526" type="stmt"/>
            <line num="49" count="1336434515" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365A.java" name="DayCountConvention_ACT_365A.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="81" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="36" statements="16" conditionals="14" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_365A">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="2" elements="32" statements="16" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365A()" num="39" count="0" type="method"/>
            <line complexity="10" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_365L.java" name="DayCountConvention_ACT_365L.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="55" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="20" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_365L">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="13" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_365L()" num="35" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_AFB.java" name="DayCountConvention_ACT_ACT_AFB.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="112" coveredmethods="0" methods="3" elements="41" classes="1" ncloc="45" statements="22" conditionals="16" coveredstatements="0"/>
            <class name="DayCountConvention_ACT_ACT_AFB">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="3" elements="41" statements="22" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_AFB()" num="56" count="0" type="method"/>
            <line complexity="11" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_ICMA.java" name="DayCountConvention_ACT_ACT_ICMA.java">
            <metrics coveredelements="19" coveredconditionals="3" complexity="5" loc="103" coveredmethods="2" methods="2" elements="24" classes="1" ncloc="41" statements="16" conditionals="6" coveredstatements="14"/>
            <class name="DayCountConvention_ACT_ACT_ICMA">
               <metrics coveredelements="19" coveredconditionals="3" complexity="5" coveredmethods="2" methods="2" elements="24" statements="16" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ICMA(ArrayList&lt;Period&gt;,int)" num="64" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="73" count="6" type="method"/>
            <line num="75" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="82" type="cond"/>
            <line num="83" count="6" type="stmt"/>
            <line num="85" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="85" type="cond"/>
            <line num="86" count="6" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="94" count="6" type="stmt"/>
            <line num="101" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_ISDA.java" name="DayCountConvention_ACT_ACT_ISDA.java">
            <metrics coveredelements="18" coveredconditionals="3" complexity="7" loc="113" coveredmethods="3" methods="4" elements="26" classes="1" ncloc="38" statements="16" conditionals="6" coveredstatements="12"/>
            <class name="DayCountConvention_ACT_ACT_ISDA">
               <metrics coveredelements="18" coveredconditionals="3" complexity="7" coveredmethods="3" methods="4" elements="26" statements="16" conditionals="6" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ISDA(boolean)" num="53" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line num="55" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_ISDA()" num="61" count="6" type="method"/>
            <line num="62" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="68" count="20" type="method"/>
            <line num="70" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="80" count="20" type="stmt"/>
            <line num="85" count="20" type="stmt"/>
            <line num="87" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="20" type="stmt"/>
            <line num="96" count="20" type="stmt"/>
            <line num="97" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="102" count="20" type="stmt"/>
            <line num="104" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_ACT_ACT_YEARFRAC.java" name="DayCountConvention_ACT_ACT_YEARFRAC.java">
            <metrics coveredelements="24" coveredconditionals="6" complexity="12" loc="133" coveredmethods="2" methods="3" elements="37" classes="1" ncloc="53" statements="22" conditionals="12" coveredstatements="16"/>
            <class name="DayCountConvention_ACT_ACT_YEARFRAC">
               <metrics coveredelements="24" coveredconditionals="6" complexity="12" coveredmethods="2" methods="3" elements="37" statements="22" conditionals="12" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_ACT_ACT_YEARFRAC()" num="51" count="2" type="method"/>
            <line complexity="10" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="57" count="6" type="method"/>
            <line num="59" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line num="70" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="70" type="cond"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="89" type="cond"/>
            <line num="91" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="98" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_NL_365.java" name="DayCountConvention_NL_365.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="75" coveredmethods="0" methods="3" elements="30" classes="1" ncloc="37" statements="15" conditionals="12" coveredstatements="0"/>
            <class name="DayCountConvention_NL_365">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="30" statements="15" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_NL_365()" num="34" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_NONE.java" name="DayCountConvention_NONE.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention_NONE">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_NONE()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/time/daycount/DayCountConvention_UNKNOWN.java" name="DayCountConvention_UNKNOWN.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="53" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="DayCountConvention_UNKNOWN">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DayCountConvention_UNKNOWN()" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DayCountConvention_UNKNOWN(String)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycount(LocalDate,LocalDate) : double" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountFraction(LocalDate,LocalDate) : double" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.information">
         <metrics coveredelements="21" complexity="10" loc="64" methods="5" classes="1" statements="16" coveredconditionals="2" coveredmethods="4" elements="25" ncloc="34" files="1" conditionals="4" coveredstatements="15"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/information/Library.java" name="Library.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="10" loc="64" coveredmethods="4" methods="5" elements="25" classes="1" ncloc="34" statements="16" conditionals="4" coveredstatements="15"/>
            <class name="Library">
               <metrics coveredelements="21" coveredconditionals="2" complexity="10" coveredmethods="4" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 21()" num="21" count="2" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Library()" num="30" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="getProperites() : Properties" num="32" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVersionString() : String" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="44" type="cond"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBuildString() : String" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.forward">
         <metrics coveredelements="325" complexity="220" loc="1110" methods="96" classes="4" statements="338" coveredconditionals="81" coveredmethods="61" elements="576" ncloc="845" files="2" conditionals="142" coveredstatements="183"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/forward/RandomVariableDifferentiableAD.java" name="RandomVariableDifferentiableAD.java">
            <metrics coveredelements="315" coveredconditionals="81" complexity="215" loc="1060" coveredmethods="56" methods="91" elements="566" classes="3" ncloc="819" statements="333" conditionals="142" coveredstatements="178"/>
            <class name="RandomVariableDifferentiableAD">
               <metrics coveredelements="149" coveredconditionals="17" complexity="104" coveredmethods="50" methods="83" elements="249" statements="132" conditionals="34" coveredstatements="82"/>
            </class>
            <class name="RandomVariableDifferentiableAD.OperatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAD.OperatorTreeNode">
               <metrics coveredelements="166" coveredconditionals="64" complexity="111" coveredmethods="6" methods="8" elements="317" statements="201" conditionals="108" coveredstatements="96"/>
            </class>
            <line complexity="3" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;RandomVariable&gt;,Object)" num="76" count="799264" type="method"/>
            <line num="77" count="799254" type="stmt"/>
            <line falsecount="49434" truecount="749832" num="78" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : OperatorTreeNode" num="79" count="1955918" type="method"/>
            <line num="81" count="1955915" type="stmt"/>
            <line falsecount="708094" truecount="1247842" num="81" type="cond"/>
            <line falsecount="49434" truecount="749832" num="84" type="cond"/>
            <line complexity="3" visibility="public" signature="apply(RandomVariable) : RandomVariable" num="85" count="1955916" type="method"/>
            <line num="87" count="1955917" type="stmt"/>
            <line falsecount="708084" truecount="1247845" num="87" type="cond"/>
            <line complexity="28" visibility="package" signature="OperatorTreeNode(OperatorType,List&lt;OperatorTreeNode&gt;,List&lt;RandomVariable&gt;,Object)" num="94" count="799271" type="method"/>
            <line num="95" count="799265" type="stmt"/>
            <line num="96" count="799271" type="stmt"/>
            <line num="97" count="799281" type="stmt"/>
            <line num="98" count="799273" type="stmt"/>
            <line num="99" count="799271" type="stmt"/>
            <line num="101" count="799275" type="stmt"/>
            <line falsecount="724164" truecount="75106" num="101" type="cond"/>
            <line num="103" count="75106" type="stmt"/>
            <line num="105" count="724163" type="stmt"/>
            <line falsecount="724159" truecount="4" num="105" type="cond"/>
            <line num="107" count="4" type="stmt"/>
            <line num="109" count="724161" type="stmt"/>
            <line falsecount="652419" truecount="71742" num="109" type="cond"/>
            <line num="111" count="71742" type="stmt"/>
            <line falsecount="71742" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="71742" type="stmt"/>
            <line falsecount="41814" truecount="29928" num="114" type="cond"/>
            <line num="115" count="29928" type="stmt"/>
            <line num="118" count="652420" type="stmt"/>
            <line falsecount="626634" truecount="25780" num="118" type="cond"/>
            <line num="120" count="25780" type="stmt"/>
            <line falsecount="5894" truecount="19886" num="120" type="cond"/>
            <line num="121" count="19886" type="stmt"/>
            <line num="124" count="626644" type="stmt"/>
            <line falsecount="157626" truecount="469023" num="124" type="cond"/>
            <line num="126" count="469024" type="stmt"/>
            <line num="128" count="469020" type="stmt"/>
            <line falsecount="351193" truecount="117826" num="128" type="cond"/>
            <line num="129" count="117827" type="stmt"/>
            <line num="131" count="469019" type="stmt"/>
            <line falsecount="2950" truecount="466068" num="131" type="cond"/>
            <line num="132" count="466069" type="stmt"/>
            <line num="135" count="157626" type="stmt"/>
            <line falsecount="157041" truecount="584" num="135" type="cond"/>
            <line num="137" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="157041" type="stmt"/>
            <line falsecount="155357" truecount="1684" num="147" type="cond"/>
            <line num="148" count="1684" type="stmt"/>
            <line falsecount="1684" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="154" count="799278" type="stmt"/>
            <line complexity="7" visibility="private" signature="propagateDerivativesFromResultToArgument(Map&lt;Long, RandomVariable&gt;) : void" num="157" count="20672" type="method"/>
            <line num="158" count="20672" type="stmt"/>
            <line falsecount="20672" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="20672" type="stmt"/>
            <line falsecount="20672" truecount="41120" num="161" type="cond"/>
            <line num="162" count="41120" type="stmt"/>
            <line num="163" count="41120" type="stmt"/>
            <line falsecount="4008" truecount="37112" num="163" type="cond"/>
            <line num="164" count="37112" type="stmt"/>
            <line num="166" count="37112" type="stmt"/>
            <line num="167" count="37112" type="stmt"/>
            <line num="168" count="37112" type="stmt"/>
            <line num="171" count="37112" type="stmt"/>
            <line falsecount="37108" truecount="4" num="171" type="cond"/>
            <line num="172" count="4" type="stmt"/>
            <line num="175" count="37112" type="stmt"/>
            <line falsecount="37112" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="37112" type="stmt"/>
            <line falsecount="16220" truecount="20892" num="180" type="cond"/>
            <line num="181" count="20892" type="stmt"/>
            <line num="184" count="16220" type="stmt"/>
            <line num="187" count="37112" type="stmt"/>
            <line complexity="63" visibility="private" signature="getPartialDerivative(OperatorTreeNode,int) : RandomVariable" num="192" count="37112" type="method"/>
            <line num="194" count="37112" type="stmt"/>
            <line falsecount="37112" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="37112" type="stmt"/>
            <line falsecount="36052" truecount="1060" num="198" type="cond"/>
            <line num="199" count="37112" type="stmt"/>
            <line falsecount="36468" truecount="644" num="199" type="cond"/>
            <line num="200" count="37112" type="stmt"/>
            <line falsecount="36524" truecount="588" num="200" type="cond"/>
            <line num="202" count="37112" type="stmt"/>
            <line num="204" count="37112" type="stmt"/>
            <line num="206" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line num="210" count="12" type="stmt"/>
            <line num="211" count="12" type="stmt"/>
            <line num="212" count="200" type="stmt"/>
            <line num="213" count="200" type="stmt"/>
            <line num="214" count="200" type="stmt"/>
            <line num="215" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="4" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="242" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double) : double" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="196" type="stmt"/>
            <line num="258" count="196" type="stmt"/>
            <line num="259" count="196" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="36040" type="stmt"/>
            <line num="267" count="36040" type="stmt"/>
            <line num="268" count="36040" type="stmt"/>
            <line num="269" count="8" type="stmt"/>
            <line num="270" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="270" type="cond"/>
            <line num="271" count="8" type="stmt"/>
            <line num="272" count="32" type="stmt"/>
            <line num="273" count="32" type="stmt"/>
            <line falsecount="12" truecount="20" num="273" type="cond"/>
            <line num="274" count="32" type="stmt"/>
            <line num="275" count="8" type="stmt"/>
            <line num="276" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="276" type="cond"/>
            <line num="277" count="8" type="stmt"/>
            <line num="278" count="16" type="stmt"/>
            <line num="279" count="16" type="stmt"/>
            <line falsecount="8" truecount="8" num="279" type="cond"/>
            <line num="280" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line num="285" count="16" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="588" type="stmt"/>
            <line num="315" count="588" type="stmt"/>
            <line falsecount="392" truecount="196" num="315" type="cond"/>
            <line num="316" count="196" type="stmt"/>
            <line num="317" count="392" type="stmt"/>
            <line falsecount="196" truecount="196" num="317" type="cond"/>
            <line num="318" count="196" type="stmt"/>
            <line num="320" count="196" type="stmt"/>
            <line num="322" count="588" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="380" count="37112" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(double) : RandomVariableDifferentiableAD" num="390" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(RandomVariable) : RandomVariableDifferentiableAD" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(double)" num="398" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(double,double[])" num="402" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable)" num="406" count="49434" type="method"/>
            <line num="407" count="49434" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,OperatorType)" num="410" count="799235" type="method"/>
            <line num="411" count="799232" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType)" num="414" count="799251" type="method"/>
            <line num="415" count="799242" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAD(RandomVariable,List&lt;RandomVariable&gt;,ConditionalExpectationEstimator,OperatorType,int)" num="418" count="799255" type="method"/>
            <line num="419" count="799248" type="stmt"/>
            <line num="420" count="799245" type="stmt"/>
            <line num="421" count="799254" type="stmt"/>
            <line num="423" count="799247" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperatorTreeNode() : OperatorTreeNode" num="426" count="1248223" type="method"/>
            <line num="427" count="1248226" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : RandomVariable" num="435" count="2524799" type="method"/>
            <line num="437" count="2524683" type="stmt"/>
            <line complexity="1" visibility="public" signature="getID() : Long" num="440" count="332" type="method"/>
            <line num="442" count="332" type="stmt"/>
            <line complexity="5" visibility="public" signature="getGradient(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="453" count="52" type="method"/>
            <line num="457" count="52" type="stmt"/>
            <line num="460" count="52" type="stmt"/>
            <line num="463" count="52" type="stmt"/>
            <line num="464" count="52" type="stmt"/>
            <line num="466" count="52" type="stmt"/>
            <line falsecount="52" truecount="20944" num="466" type="cond"/>
            <line num="468" count="20944" type="stmt"/>
            <line num="469" count="20944" type="stmt"/>
            <line num="470" count="20944" type="stmt"/>
            <line num="473" count="20944" type="stmt"/>
            <line num="474" count="20944" type="stmt"/>
            <line falsecount="272" truecount="20672" num="474" type="cond"/>
            <line num="475" count="20672" type="stmt"/>
            <line num="478" count="20672" type="stmt"/>
            <line num="479" count="41120" type="stmt"/>
            <line falsecount="4008" truecount="37112" num="479" type="cond"/>
            <line num="480" count="37112" type="stmt"/>
            <line num="481" count="37112" type="stmt"/>
            <line num="486" count="20672" type="stmt"/>
            <line num="490" count="20944" type="stmt"/>
            <line num="493" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents(Set&lt;Long&gt;) : Map&lt;Long, RandomVariable&gt;" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(RandomVariable) : boolean" num="506" count="2" type="method"/>
            <line num="508" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="511" count="220" type="method"/>
            <line num="513" count="220" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="516" count="1542471" type="method"/>
            <line num="518" count="1542673" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="521" count="20400" type="method"/>
            <line num="523" count="20400" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="526" count="484" type="method"/>
            <line num="528" count="484" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="531" count="402" type="method"/>
            <line num="533" count="402" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizations() : double[]" num="536" count="206" type="method"/>
            <line num="538" count="206" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleValue() : Double" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="546" count="2" type="method"/>
            <line num="548" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="551" count="0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage() : double" num="556" count="6984" type="method"/>
            <line num="558" count="6984" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAverage(RandomVariable) : double" num="561" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="566" count="98" type="method"/>
            <line num="568" count="98" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance(RandomVariable) : double" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVariance() : double" num="576" count="0" type="method"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="581" count="486" type="method"/>
            <line num="583" count="486" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="586" count="0" type="method"/>
            <line num="588" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError() : double" num="591" count="328" type="method"/>
            <line num="593" count="328" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardError(RandomVariable) : double" num="596" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double) : double" num="601" count="10" type="method"/>
            <line num="603" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuantileExpectation(double,double) : double" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(double[]) : double[]" num="616" count="18" type="method"/>
            <line num="618" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistogram(int,double) : double[][]" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="630" count="17100" type="method"/>
            <line num="632" count="17100" type="stmt"/>
            <line num="633" count="17100" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="636" count="28801" type="method"/>
            <line num="638" count="28802" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="644" count="592" type="method"/>
            <line num="646" count="592" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="652" count="1734" type="method"/>
            <line num="654" count="1734" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="660" count="5890" type="method"/>
            <line num="662" count="5890" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="668" count="26214" type="method"/>
            <line num="670" count="26214" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="676" count="15320" type="method"/>
            <line num="678" count="15320" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="684" count="1446" type="method"/>
            <line num="686" count="1446" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="692" count="4" type="method"/>
            <line num="694" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="700" count="4" type="method"/>
            <line num="702" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="710" count="8088" type="method"/>
            <line num="712" count="8088" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="718" count="18" type="method"/>
            <line num="720" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="726" count="31574" type="method"/>
            <line num="728" count="31574" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="734" count="2494" type="method"/>
            <line num="736" count="2494" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="742" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="750" count="0" type="method"/>
            <line num="752" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(RandomVariable) : RandomVariable" num="762" count="51752" type="method"/>
            <line num="764" count="51752" type="stmt"/>
            <line falsecount="51752" truecount="0" num="764" type="cond"/>
            <line num="766" count="0" type="stmt"/>
            <line num="769" count="51752" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="775" count="15728" type="method"/>
            <line num="777" count="15728" type="stmt"/>
            <line falsecount="15728" truecount="0" num="777" type="cond"/>
            <line num="779" count="0" type="stmt"/>
            <line num="782" count="15728" type="stmt"/>
            <line complexity="2" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="788" count="2" type="method"/>
            <line num="790" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="790" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="795" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="801" count="45528" type="method"/>
            <line num="803" count="45528" type="stmt"/>
            <line falsecount="45528" truecount="0" num="803" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line num="808" count="45528" type="stmt"/>
            <line complexity="2" visibility="public" signature="div(RandomVariable) : RandomVariable" num="814" count="10460" type="method"/>
            <line num="816" count="10460" type="stmt"/>
            <line falsecount="10460" truecount="0" num="816" type="cond"/>
            <line num="818" count="0" type="stmt"/>
            <line num="821" count="10460" type="stmt"/>
            <line complexity="2" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="827" count="0" type="method"/>
            <line num="829" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="829" type="cond"/>
            <line num="831" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="840" count="14" type="method"/>
            <line num="842" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="842" type="cond"/>
            <line num="844" count="0" type="stmt"/>
            <line num="847" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="853" count="6" type="method"/>
            <line num="855" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="855" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line num="860" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="866" count="584" type="method"/>
            <line num="868" count="584" type="stmt"/>
            <line falsecount="584" truecount="0" num="868" type="cond"/>
            <line num="870" count="0" type="stmt"/>
            <line num="873" count="584" type="stmt"/>
            <line complexity="2" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="879" count="30020" type="method"/>
            <line num="881" count="30020" type="stmt"/>
            <line falsecount="30020" truecount="0" num="881" type="cond"/>
            <line num="883" count="0" type="stmt"/>
            <line num="886" count="30020" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="897" count="1684" type="method"/>
            <line num="899" count="1684" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="905" count="2672" type="method"/>
            <line num="907" count="2672" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="913" count="196" type="method"/>
            <line num="915" count="196" type="stmt"/>
            <line complexity="2" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="921" count="44724" type="method"/>
            <line num="923" count="44696" type="stmt"/>
            <line falsecount="44466" truecount="0" num="923" type="cond"/>
            <line num="925" count="0" type="stmt"/>
            <line num="928" count="44637" type="stmt"/>
            <line complexity="3" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="934" count="424140" type="method"/>
            <line num="936" count="424144" type="stmt"/>
            <line falsecount="424119" truecount="0" num="936" type="cond"/>
            <line num="938" count="0" type="stmt"/>
            <line num="941" count="424122" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="947" count="0" type="method"/>
            <line num="949" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="949" type="cond"/>
            <line num="951" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="960" count="0" type="method"/>
            <line num="962" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="962" type="cond"/>
            <line num="964" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNaN() : RandomVariable" num="977" count="0" type="method"/>
            <line num="979" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="982" count="0" type="method"/>
            <line num="984" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealizationsStream() : DoubleStream" num="987" count="0" type="method"/>
            <line num="989" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="992" count="0" type="method"/>
            <line num="994" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="997" count="0" type="method"/>
            <line num="999" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="1002" count="0" type="method"/>
            <line num="1004" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVarianceAsRandomVariableAAD() : RandomVariable" num="1007" count="0" type="method"/>
            <line num="1009" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampleVarianceAsRandomVariableAAD() : RandomVariable" num="1015" count="0" type="method"/>
            <line num="1017" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviationAsRandomVariableAAD() : RandomVariable" num="1023" count="0" type="method"/>
            <line num="1025" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardErrorAsRandomVariableAAD() : RandomVariable" num="1031" count="0" type="method"/>
            <line num="1033" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinAsRandomVariableAAD() : RandomVariable" num="1039" count="0" type="method"/>
            <line num="1041" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxAsRandomVariableAAD() : RandomVariable" num="1047" count="0" type="method"/>
            <line num="1049" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTangents() : Map&lt;Long, RandomVariable&gt;" num="1055" count="0" type="method"/>
            <line num="1058" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/automaticdifferentiation/forward/RandomVariableDifferentiableADFactory.java" name="RandomVariableDifferentiableADFactory.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="50" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="RandomVariableDifferentiableADFactory">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableADFactory()" num="25" count="20" type="method"/>
            <line num="26" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableADFactory(RandomVariableFactory)" num="32" count="24" type="method"/>
            <line num="33" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariableDifferentiable" num="36" count="32272" type="method"/>
            <line num="38" count="32272" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariableDifferentiable" num="41" count="17162" type="method"/>
            <line num="43" count="17162" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="46" count="24" type="method"/>
            <line num="48" count="24" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.concurrency">
         <metrics coveredelements="5" complexity="6" loc="56" methods="6" classes="1" statements="7" coveredconditionals="0" coveredmethods="2" elements="13" ncloc="30" files="1" conditionals="0" coveredstatements="3"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/concurrency/FutureWrapper.java" name="FutureWrapper.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="6" loc="56" coveredmethods="2" methods="6" elements="13" classes="1" ncloc="30" statements="7" conditionals="0" coveredstatements="3"/>
            <class name="FutureWrapper">
               <metrics coveredelements="5" coveredconditionals="0" complexity="6" coveredmethods="2" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="FutureWrapper(V)" num="27" count="4530" type="method"/>
            <line num="28" count="4530" type="stmt"/>
            <line num="29" count="4530" type="stmt"/>
            <line complexity="1" visibility="public" signature="cancel(boolean) : boolean" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : V" num="37" count="4530" type="method"/>
            <line num="39" count="4530" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(long,TimeUnit) : V" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCancelled() : boolean" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDone() : boolean" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products">
         <metrics coveredelements="1006" complexity="424" loc="5604" methods="192" classes="39" statements="1498" coveredconditionals="173" coveredmethods="74" elements="2080" ncloc="2922" files="34" conditionals="390" coveredstatements="759"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/AbstractLIBORMonteCarloProduct.java" name="AbstractLIBORMonteCarloProduct.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="8" loc="75" coveredmethods="4" methods="6" elements="20" classes="1" ncloc="47" statements="12" conditionals="2" coveredstatements="9"/>
            <class name="AbstractLIBORMonteCarloProduct">
               <metrics coveredelements="14" coveredconditionals="1" complexity="8" coveredmethods="4" methods="6" elements="20" statements="12" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORMonteCarloProduct(String)" num="30" count="12044" type="method"/>
            <line num="31" count="12044" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractLIBORMonteCarloProduct()" num="37" count="290864" type="method"/>
            <line num="38" count="290855" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueForModifiedData(double,MonteCarloSimulationModel,Map&lt;String, Object&gt;) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="49" count="248" type="method"/>
            <line num="51" count="248" type="stmt"/>
            <line num="52" count="248" type="stmt"/>
            <line num="53" count="248" type="stmt"/>
            <line num="54" count="248" type="stmt"/>
            <line num="55" count="248" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="58" count="85505" type="method"/>
            <line num="61" count="85463" type="stmt"/>
            <line falsecount="0" truecount="85544" num="61" type="cond"/>
            <line num="62" count="85442" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorDrift(LIBORModelMonteCarloSimulationModel,LIBORModelMonteCarloSimulationModel) : FactorTransform" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/BermudanSwaption.java" name="BermudanSwaption.java">
            <metrics coveredelements="81" coveredconditionals="8" complexity="30" loc="313" coveredmethods="8" methods="17" elements="135" classes="1" ncloc="172" statements="92" conditionals="26" coveredstatements="65"/>
            <class name="BermudanSwaption">
               <metrics coveredelements="81" coveredconditionals="8" complexity="30" coveredmethods="8" methods="17" elements="135" statements="92" conditionals="26" coveredstatements="65"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[],boolean,RegressionBasisFunctionsProvider)" num="53" count="64" type="method"/>
            <line num="54" count="64" type="stmt"/>
            <line num="55" count="64" type="stmt"/>
            <line num="56" count="64" type="stmt"/>
            <line num="57" count="64" type="stmt"/>
            <line num="58" count="64" type="stmt"/>
            <line num="59" count="64" type="stmt"/>
            <line num="60" count="64" type="stmt"/>
            <line num="61" count="64" type="stmt"/>
            <line num="62" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[],boolean)" num="74" count="64" type="method"/>
            <line num="75" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaption(boolean[],double[],double[],double[],double[],double[])" num="86" count="64" type="method"/>
            <line num="87" count="64" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="90" count="140" type="method"/>
            <line num="94" count="140" type="stmt"/>
            <line num="95" count="140" type="stmt"/>
            <line num="96" count="140" type="stmt"/>
            <line num="99" count="140" type="stmt"/>
            <line falsecount="140" truecount="1000" num="99" type="cond"/>
            <line num="101" count="1000" type="stmt"/>
            <line num="102" count="1000" type="stmt"/>
            <line num="103" count="1000" type="stmt"/>
            <line num="104" count="1000" type="stmt"/>
            <line num="105" count="1000" type="stmt"/>
            <line num="106" count="1000" type="stmt"/>
            <line num="109" count="1000" type="stmt"/>
            <line num="112" count="1000" type="stmt"/>
            <line num="115" count="1000" type="stmt"/>
            <line num="116" count="1000" type="stmt"/>
            <line num="117" count="1000" type="stmt"/>
            <line num="120" count="1000" type="stmt"/>
            <line falsecount="0" truecount="1000" num="120" type="cond"/>
            <line num="121" count="1000" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="1000" type="stmt"/>
            <line falsecount="0" truecount="1000" num="128" type="cond"/>
            <line num="129" count="1000" type="stmt"/>
            <line num="132" count="1000" type="stmt"/>
            <line num="135" count="1000" type="stmt"/>
            <line num="139" count="1000" type="stmt"/>
            <line num="141" count="1000" type="stmt"/>
            <line num="148" count="140" type="stmt"/>
            <line num="149" count="140" type="stmt"/>
            <line num="150" count="140" type="stmt"/>
            <line num="152" count="140" type="stmt"/>
            <line num="153" count="140" type="stmt"/>
            <line num="154" count="140" type="stmt"/>
            <line num="155" count="140" type="stmt"/>
            <line num="156" count="140" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="169" count="140" type="method"/>
            <line num="171" count="140" type="stmt"/>
            <line complexity="2" visibility="public" signature="getConditionalExpectationEstimator(double,TermStructureMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="182" count="1000" type="method"/>
            <line num="183" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="183" type="cond"/>
            <line num="184" count="1000" type="stmt"/>
            <line num="186" count="1000" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="197" count="1000" type="method"/>
            <line num="199" count="1000" type="stmt"/>
            <line falsecount="0" truecount="1000" num="199" type="cond"/>
            <line num="200" count="1000" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="215" count="1000" type="method"/>
            <line num="217" count="1000" type="stmt"/>
            <line num="220" count="1000" type="stmt"/>
            <line num="221" count="1000" type="stmt"/>
            <line num="223" count="1000" type="stmt"/>
            <line num="224" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="232" count="1000" type="stmt"/>
            <line num="233" count="1000" type="stmt"/>
            <line num="234" count="1000" type="stmt"/>
            <line num="235" count="1000" type="stmt"/>
            <line num="239" count="1000" type="stmt"/>
            <line num="240" count="1000" type="stmt"/>
            <line num="241" count="1000" type="stmt"/>
            <line num="242" count="1000" type="stmt"/>
            <line num="246" count="1000" type="stmt"/>
            <line num="247" count="1000" type="stmt"/>
            <line num="251" count="1000" type="stmt"/>
            <line complexity="4" visibility="public" signature="getExerciseTimes() : double[]" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFixingDates(double) : double[]" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwap() : SimpleSwap" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="289" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodNotionals() : double[]" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapRates() : double[]" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFinalMaturity() : double" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIsCallable() : boolean" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/BermudanSwaptionFromSwapSchedules.java" name="BermudanSwaptionFromSwapSchedules.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="46" loc="549" coveredmethods="0" methods="26" elements="244" classes="2" ncloc="323" statements="178" conditionals="40" coveredstatements="0"/>
            <class name="BermudanSwaptionFromSwapSchedules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="46" coveredmethods="0" methods="26" elements="244" statements="178" conditionals="40" coveredstatements="0"/>
            </class>
            <class name="BermudanSwaptionFromSwapSchedules.SwaptionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[],MonteCarloConditionalExpectationRegressionFactory,RegressionBasisFunctionsProvider)" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[],RegressionBasisFunctionsProvider)" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double[],double[],Schedule[],Schedule[])" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanSwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate[],LocalDate,double,double,Schedule[],Schedule[])" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDates() : LocalDate[]" num="173" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaptionType() : SwaptionType" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapEndDate() : LocalDate" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValues(double,TermStructureMonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getExerciseProbabilitiesFromTimes(LocalDateTime,RandomVariable) : double[]" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProcessTimeDiscretization(LocalDateTime) : TimeDiscretization" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Period) : Double" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getValueUnderlyingNumeraireRelative(TermStructureMonteCarloSimulationModel,Schedule,boolean,double,double) : RandomVariable" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectationEstimator(double,TermStructureMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBasisFunctions(double,LIBORModelMonteCarloSimulationModel) : RandomVariable[]" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="386" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsProviderWithSwapRates() : RegressionBasisFunctionsProvider" num="434" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="436" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="443" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="452" type="cond"/>
            <line num="453" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="455" type="cond"/>
            <line num="456" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBasisFunctionsProviderWithForwardRates() : RegressionBasisFunctionsProvider" num="488" count="0" type="method"/>
            <line num="489" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBasisFunctions(double,MonteCarloSimulationModel) : RandomVariable[]" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(LocalDate) : double" num="497" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="508" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="543" count="0" type="method"/>
            <line num="545" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Bond.java" name="Bond.java">
            <metrics coveredelements="24" coveredconditionals="2" complexity="8" loc="103" coveredmethods="4" methods="6" elements="28" classes="1" ncloc="47" statements="20" conditionals="2" coveredstatements="18"/>
            <class name="Bond">
               <metrics coveredelements="24" coveredconditionals="2" complexity="8" coveredmethods="4" methods="6" elements="28" statements="20" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="Bond(LocalDateTime,double)" num="30" count="82" type="method"/>
            <line num="31" count="82" type="stmt"/>
            <line num="32" count="82" type="stmt"/>
            <line num="33" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="Bond(double)" num="39" count="1534" type="method"/>
            <line num="40" count="1534" type="stmt"/>
            <line num="41" count="1534" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="54" count="1698" type="method"/>
            <line num="57" count="1698" type="stmt"/>
            <line num="58" count="1698" type="stmt"/>
            <line num="59" count="1698" type="stmt"/>
            <line falsecount="1616" truecount="82" num="59" type="cond"/>
            <line num="60" count="82" type="stmt"/>
            <line num="66" count="1698" type="stmt"/>
            <line num="67" count="1698" type="stmt"/>
            <line num="70" count="1698" type="stmt"/>
            <line num="71" count="1698" type="stmt"/>
            <line num="74" count="1698" type="stmt"/>
            <line num="75" count="1698" type="stmt"/>
            <line num="76" count="1698" type="stmt"/>
            <line num="79" count="1698" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="85" count="82" type="method"/>
            <line num="86" count="82" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaturity(double) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/CMSOption.java" name="CMSOption.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="6" loc="144" coveredmethods="3" methods="3" elements="51" classes="1" ncloc="75" statements="42" conditionals="6" coveredstatements="39"/>
            <class name="CMSOption">
               <metrics coveredelements="46" coveredconditionals="4" complexity="6" coveredmethods="3" methods="3" elements="51" statements="42" conditionals="6" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="CMSOption(double,double[],double[],double[],double)" num="41" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="65" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line falsecount="2" truecount="12" num="74" type="cond"/>
            <line num="76" count="12" type="stmt"/>
            <line num="77" count="12" type="stmt"/>
            <line num="79" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="79" type="cond"/>
            <line num="82" count="12" type="stmt"/>
            <line num="85" count="12" type="stmt"/>
            <line num="86" count="12" type="stmt"/>
            <line num="89" count="12" type="stmt"/>
            <line num="90" count="12" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(ForwardCurve,double) : double" num="132" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/CancelableSwap.java" name="CancelableSwap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="172" coveredmethods="0" methods="4" elements="66" classes="1" ncloc="86" statements="54" conditionals="8" coveredstatements="0"/>
            <class name="CancelableSwap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="66" statements="54" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CancelableSwap(boolean[],double[],double[],double[],double[],double[])" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="63" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getConditionalExpectationEstimator(int,TermStructureMonteCarloSimulationModel) : ConditionalExpectationEstimator" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctions(double,TermStructureMonteCarloSimulationModel) : RandomVariable[]" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Caplet.java" name="Caplet.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="9" loc="171" coveredmethods="4" methods="4" elements="50" classes="2" ncloc="76" statements="38" conditionals="8" coveredstatements="22"/>
            <class name="Caplet">
               <metrics coveredelements="28" coveredconditionals="2" complexity="9" coveredmethods="4" methods="4" elements="50" statements="38" conditionals="8" coveredstatements="22"/>
            </class>
            <class name="Caplet.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double,double,boolean,ValueUnit)" num="60" count="210" type="method"/>
            <line num="61" count="210" type="stmt"/>
            <line num="62" count="210" type="stmt"/>
            <line num="63" count="210" type="stmt"/>
            <line num="64" count="210" type="stmt"/>
            <line num="65" count="210" type="stmt"/>
            <line num="66" count="210" type="stmt"/>
            <line num="67" count="210" type="stmt"/>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double,boolean)" num="86" count="14" type="method"/>
            <line num="87" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="Caplet(double,double,double)" num="100" count="14" type="method"/>
            <line num="101" count="14" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="114" count="334" type="method"/>
            <line num="117" count="334" type="stmt"/>
            <line num="120" count="334" type="stmt"/>
            <line num="121" count="334" type="stmt"/>
            <line num="122" count="334" type="stmt"/>
            <line num="129" count="334" type="stmt"/>
            <line num="130" count="334" type="stmt"/>
            <line falsecount="0" truecount="334" num="130" type="cond"/>
            <line num="131" count="334" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="334" type="stmt"/>
            <line num="138" count="334" type="stmt"/>
            <line num="139" count="334" type="stmt"/>
            <line num="140" count="334" type="stmt"/>
            <line num="142" count="334" type="stmt"/>
            <line falsecount="0" truecount="334" num="142" type="cond"/>
            <line num="143" count="334" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/DigitalCaplet.java" name="DigitalCaplet.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="102" coveredmethods="2" methods="6" elements="27" classes="1" ncloc="46" statements="21" conditionals="0" coveredstatements="17"/>
            <class name="DigitalCaplet">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="2" methods="6" elements="27" statements="21" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalCaplet(double,double,double,double)" num="39" count="424" type="method"/>
            <line num="41" count="424" type="stmt"/>
            <line num="42" count="424" type="stmt"/>
            <line num="43" count="424" type="stmt"/>
            <line num="44" count="424" type="stmt"/>
            <line num="45" count="424" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="58" count="424" type="method"/>
            <line num="62" count="424" type="stmt"/>
            <line num="63" count="424" type="stmt"/>
            <line num="66" count="424" type="stmt"/>
            <line num="68" count="424" type="stmt"/>
            <line num="69" count="424" type="stmt"/>
            <line num="72" count="424" type="stmt"/>
            <line num="73" count="424" type="stmt"/>
            <line num="75" count="424" type="stmt"/>
            <line num="78" count="424" type="stmt"/>
            <line num="79" count="424" type="stmt"/>
            <line num="81" count="424" type="stmt"/>
            <line num="84" count="424" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptionMaturity() : double" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStart() : double" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodEnd() : double" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/DigitalFloorlet.java" name="DigitalFloorlet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="83" coveredmethods="0" methods="2" elements="27" classes="1" ncloc="41" statements="21" conditionals="4" coveredstatements="0"/>
            <class name="DigitalFloorlet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="27" statements="21" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalFloorlet(double,double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/FlexiCap.java" name="FlexiCap.java">
            <metrics coveredelements="31" coveredconditionals="3" complexity="5" loc="119" coveredmethods="2" methods="3" elements="35" classes="1" ncloc="54" statements="28" conditionals="4" coveredstatements="26"/>
            <class name="FlexiCap">
               <metrics coveredelements="31" coveredconditionals="3" complexity="5" coveredmethods="2" methods="3" elements="35" statements="28" conditionals="4" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="FlexiCap(double[],double[],double[],int)" num="41" count="156" type="method"/>
            <line num="46" count="156" type="stmt"/>
            <line num="47" count="156" type="stmt"/>
            <line num="48" count="156" type="stmt"/>
            <line num="49" count="156" type="stmt"/>
            <line num="50" count="156" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="63" count="156" type="method"/>
            <line num="67" count="156" type="stmt"/>
            <line num="72" count="156" type="stmt"/>
            <line num="74" count="156" type="stmt"/>
            <line falsecount="156" truecount="6162" num="74" type="cond"/>
            <line num="76" count="6162" type="stmt"/>
            <line num="77" count="6162" type="stmt"/>
            <line num="80" count="6162" type="stmt"/>
            <line falsecount="6162" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="6162" type="stmt"/>
            <line num="85" count="6162" type="stmt"/>
            <line num="88" count="6162" type="stmt"/>
            <line num="89" count="6162" type="stmt"/>
            <line num="90" count="6162" type="stmt"/>
            <line num="93" count="6162" type="stmt"/>
            <line num="94" count="6162" type="stmt"/>
            <line num="95" count="6162" type="stmt"/>
            <line num="97" count="6162" type="stmt"/>
            <line num="100" count="6162" type="stmt"/>
            <line num="103" count="6162" type="stmt"/>
            <line num="106" count="156" type="stmt"/>
            <line num="107" count="156" type="stmt"/>
            <line num="108" count="156" type="stmt"/>
            <line num="110" count="156" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/ForwardRateVolatilitySurfaceCurvature.java" name="ForwardRateVolatilitySurfaceCurvature.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="176" coveredmethods="0" methods="4" elements="51" classes="1" ncloc="61" statements="35" conditionals="12" coveredstatements="0"/>
            <class name="ForwardRateVolatilitySurfaceCurvature">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="51" statements="35" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardRateVolatilitySurfaceCurvature()" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardRateVolatilitySurfaceCurvature(double)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValues(double,LIBORMarketModel) : RandomVariable" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/LIBORBond.java" name="LIBORBond.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="63" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="26" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="LIBORBond">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORBond(double)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/MoneyMarketAccount.java" name="MoneyMarketAccount.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="95" coveredmethods="0" methods="4" elements="26" classes="1" ncloc="38" statements="16" conditionals="6" coveredstatements="0"/>
            <class name="MoneyMarketAccount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="26" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount(double,double,double)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount(double,double)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MoneyMarketAccount()" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Portfolio.java" name="Portfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="158" coveredmethods="0" methods="8" elements="58" classes="1" ncloc="78" statements="36" conditionals="14" coveredstatements="0"/>
            <class name="Portfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="8" elements="58" statements="36" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Portfolio(AbstractLIBORMonteCarloProduct,double)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="Portfolio(AbstractLIBORMonteCarloProduct[],double[])" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="Portfolio(String,AbstractLIBORMonteCarloProduct[],double[])" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCurrency() : String" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line complexity="4" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProducts() : TermStructureMonteCarloProduct[]" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : double[]" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleCappedFlooredFloatingRateBond.java" name="SimpleCappedFlooredFloatingRateBond.java">
            <metrics coveredelements="35" coveredconditionals="5" complexity="6" loc="86" coveredmethods="2" methods="2" elements="41" classes="1" ncloc="52" statements="31" conditionals="8" coveredstatements="28"/>
            <class name="SimpleCappedFlooredFloatingRateBond">
               <metrics coveredelements="35" coveredconditionals="5" complexity="6" coveredmethods="2" methods="2" elements="41" statements="31" conditionals="8" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleCappedFlooredFloatingRateBond(String,double[],double[],double[],double[],double[],double)" num="27" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="37" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="43" type="cond"/>
            <line num="44" count="40" type="stmt"/>
            <line num="45" count="40" type="stmt"/>
            <line num="46" count="40" type="stmt"/>
            <line num="49" count="40" type="stmt"/>
            <line num="52" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="62" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="40" type="stmt"/>
            <line num="68" count="40" type="stmt"/>
            <line num="69" count="40" type="stmt"/>
            <line num="71" count="40" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleSwap.java" name="SimpleSwap.java">
            <metrics coveredelements="35" coveredconditionals="4" complexity="17" loc="212" coveredmethods="4" methods="14" elements="66" classes="1" ncloc="121" statements="46" conditionals="6" coveredstatements="27"/>
            <class name="SimpleSwap">
               <metrics coveredelements="35" coveredconditionals="4" complexity="17" coveredmethods="4" methods="14" elements="66" statements="46" conditionals="6" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],boolean,double[])" num="39" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],boolean,double)" num="62" count="1676" type="method"/>
            <line num="68" count="1676" type="stmt"/>
            <line num="69" count="1676" type="stmt"/>
            <line num="70" count="1676" type="stmt"/>
            <line num="71" count="1676" type="stmt"/>
            <line num="72" count="1676" type="stmt"/>
            <line num="73" count="1676" type="stmt"/>
            <line num="74" count="1676" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],double)" num="86" count="120" type="method"/>
            <line num="91" count="120" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[],double[])" num="102" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleSwap(double[],double[],double[])" num="118" count="1556" type="method"/>
            <line num="123" count="1556" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="136" count="1676" type="method"/>
            <line num="138" count="1676" type="stmt"/>
            <line num="140" count="1676" type="stmt"/>
            <line falsecount="1676" truecount="5156" num="140" type="cond"/>
            <line num="142" count="5156" type="stmt"/>
            <line num="143" count="5156" type="stmt"/>
            <line num="144" count="5156" type="stmt"/>
            <line num="145" count="5156" type="stmt"/>
            <line num="147" count="5156" type="stmt"/>
            <line falsecount="5156" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="5156" type="stmt"/>
            <line num="153" count="5156" type="stmt"/>
            <line num="154" count="5156" type="stmt"/>
            <line falsecount="5156" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="5156" type="stmt"/>
            <line num="159" count="5156" type="stmt"/>
            <line num="160" count="5156" type="stmt"/>
            <line num="162" count="5156" type="stmt"/>
            <line num="165" count="1676" type="stmt"/>
            <line num="166" count="1676" type="stmt"/>
            <line num="167" count="1676" type="stmt"/>
            <line num="169" count="1676" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartTime() : double" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDates() : double[]" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : double[]" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapRates() : double[]" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SimpleZeroSwap.java" name="SimpleZeroSwap.java">
            <metrics coveredelements="33" coveredconditionals="5" complexity="8" loc="131" coveredmethods="2" methods="4" elements="42" classes="1" ncloc="67" statements="30" conditionals="8" coveredstatements="26"/>
            <class name="SimpleZeroSwap">
               <metrics coveredelements="33" coveredconditionals="5" complexity="8" coveredmethods="2" methods="4" elements="42" statements="30" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[],AbstractIndex,boolean)" num="39" count="20" type="method"/>
            <line num="45" count="20" type="stmt"/>
            <line num="46" count="20" type="stmt"/>
            <line num="47" count="20" type="stmt"/>
            <line num="48" count="20" type="stmt"/>
            <line num="49" count="20" type="stmt"/>
            <line num="50" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[],boolean)" num="61" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleZeroSwap(double[],double[],double[])" num="76" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="93" count="40" type="method"/>
            <line num="95" count="40" type="stmt"/>
            <line num="97" count="40" type="stmt"/>
            <line num="98" count="40" type="stmt"/>
            <line falsecount="40" truecount="400" num="98" type="cond"/>
            <line num="100" count="400" type="stmt"/>
            <line num="101" count="400" type="stmt"/>
            <line num="102" count="400" type="stmt"/>
            <line num="103" count="400" type="stmt"/>
            <line num="105" count="400" type="stmt"/>
            <line falsecount="400" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="110" type="cond"/>
            <line num="111" count="400" type="stmt"/>
            <line num="112" count="400" type="stmt"/>
            <line falsecount="400" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="400" type="stmt"/>
            <line num="117" count="400" type="stmt"/>
            <line num="118" count="400" type="stmt"/>
            <line num="120" count="400" type="stmt"/>
            <line num="122" count="400" type="stmt"/>
            <line num="125" count="40" type="stmt"/>
            <line num="126" count="40" type="stmt"/>
            <line num="127" count="40" type="stmt"/>
            <line num="129" count="40" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Swap.java" name="Swap.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="6" loc="100" coveredmethods="3" methods="5" elements="21" classes="1" ncloc="46" statements="14" conditionals="2" coveredstatements="10"/>
            <class name="Swap">
               <metrics coveredelements="15" coveredconditionals="2" complexity="6" coveredmethods="3" methods="5" elements="21" statements="14" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="Swap(TermStructureMonteCarloProduct,TermStructureMonteCarloProduct)" num="40" count="234" type="method"/>
            <line num="41" count="234" type="stmt"/>
            <line num="42" count="234" type="stmt"/>
            <line num="43" count="234" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(Notional,Schedule,AbstractIndex,double,Schedule,AbstractIndex,double)" num="57" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swap(double[],double[],double[])" num="76" count="60" type="method"/>
            <line num="81" count="60" type="stmt"/>
            <line num="82" count="60" type="stmt"/>
            <line num="83" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="86" count="1482" type="method"/>
            <line num="88" count="1482" type="stmt"/>
            <line num="89" count="1482" type="stmt"/>
            <line falsecount="60" truecount="1422" num="89" type="cond"/>
            <line num="90" count="1422" type="stmt"/>
            <line num="93" count="1482" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapLeg.java" name="SwapLeg.java">
            <metrics coveredelements="60" coveredconditionals="17" complexity="15" loc="177" coveredmethods="4" methods="4" elements="70" classes="1" ncloc="90" statements="44" conditionals="22" coveredstatements="39"/>
            <class name="SwapLeg">
               <metrics coveredelements="60" coveredconditionals="17" complexity="15" coveredmethods="4" methods="4" elements="70" statements="44" conditionals="22" coveredstatements="39"/>
            </class>
            <line complexity="7" visibility="public" signature="SwapLeg(Schedule,Notional,AbstractIndex,double,boolean,boolean,boolean)" num="47" count="482" type="method"/>
            <line num="48" count="482" type="stmt"/>
            <line num="50" count="482" type="stmt"/>
            <line falsecount="4" truecount="478" num="50" type="cond"/>
            <line num="59" count="482" type="stmt"/>
            <line num="60" count="482" type="stmt"/>
            <line falsecount="482" truecount="4442" num="60" type="cond"/>
            <line num="61" count="4442" type="stmt"/>
            <line num="62" count="4442" type="stmt"/>
            <line num="63" count="4442" type="stmt"/>
            <line num="70" count="4442" type="stmt"/>
            <line falsecount="4442" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="4442" type="stmt"/>
            <line num="75" count="4442" type="stmt"/>
            <line falsecount="1400" truecount="3042" num="75" type="cond"/>
            <line num="76" count="3042" type="stmt"/>
            <line falsecount="2962" truecount="80" num="76" type="cond"/>
            <line num="77" count="80" type="stmt"/>
            <line num="79" count="2962" type="stmt"/>
            <line num="83" count="1400" type="stmt"/>
            <line num="86" count="4442" type="stmt"/>
            <line num="87" count="4442" type="stmt"/>
            <line num="89" count="4442" type="stmt"/>
            <line falsecount="4442" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="482" type="stmt"/>
            <line complexity="6" visibility="public" signature="SwapLeg(Schedule,Notional[],AbstractIndex,double[],boolean,boolean)" num="107" count="4" type="method"/>
            <line num="108" count="4" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line falsecount="4" truecount="280" num="121" type="cond"/>
            <line num="122" count="280" type="stmt"/>
            <line num="124" count="280" type="stmt"/>
            <line num="125" count="280" type="stmt"/>
            <line num="126" count="280" type="stmt"/>
            <line num="127" count="280" type="stmt"/>
            <line num="128" count="280" type="stmt"/>
            <line num="135" count="280" type="stmt"/>
            <line falsecount="280" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="280" type="stmt"/>
            <line num="140" count="280" type="stmt"/>
            <line falsecount="140" truecount="140" num="140" type="cond"/>
            <line num="141" count="140" type="stmt"/>
            <line falsecount="140" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="140" type="stmt"/>
            <line num="148" count="140" type="stmt"/>
            <line num="151" count="280" type="stmt"/>
            <line num="153" count="280" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwapLeg(Schedule,Notional,AbstractIndex,double,boolean)" num="168" count="482" type="method"/>
            <line num="169" count="482" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="172" count="2872" type="method"/>
            <line num="174" count="2872" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapLegWithFundingProvider.java" name="SwapLegWithFundingProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="112" coveredmethods="0" methods="2" elements="44" classes="1" ncloc="64" statements="34" conditionals="8" coveredstatements="0"/>
            <class name="SwapLegWithFundingProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="44" statements="34" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="SwapLegWithFundingProvider(Schedule,double[],AbstractIndex,double[],FundingCapacity)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwapWithComponents.java" name="SwapWithComponents.java">
            <metrics coveredelements="27" coveredconditionals="4" complexity="4" loc="93" coveredmethods="2" methods="2" elements="27" classes="1" ncloc="48" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="SwapWithComponents">
               <metrics coveredelements="27" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="27" statements="21" conditionals="4" coveredstatements="21"/>
            </class>
            <line complexity="3" visibility="public" signature="SwapWithComponents(double[],double[],double[])" num="36" count="60" type="method"/>
            <line num="40" count="60" type="stmt"/>
            <line num="50" count="60" type="stmt"/>
            <line num="52" count="60" type="stmt"/>
            <line num="54" count="60" type="stmt"/>
            <line num="55" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="55" type="cond"/>
            <line num="56" count="300" type="stmt"/>
            <line num="57" count="300" type="stmt"/>
            <line num="58" count="300" type="stmt"/>
            <line num="60" count="60" type="stmt"/>
            <line num="61" count="60" type="stmt"/>
            <line num="63" count="60" type="stmt"/>
            <line num="64" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="64" type="cond"/>
            <line num="65" count="300" type="stmt"/>
            <line num="66" count="300" type="stmt"/>
            <line num="68" count="300" type="stmt"/>
            <line num="69" count="300" type="stmt"/>
            <line num="71" count="60" type="stmt"/>
            <line num="72" count="60" type="stmt"/>
            <line num="74" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="87" count="60" type="method"/>
            <line num="89" count="60" type="stmt"/>
            <line num="91" count="60" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaprateCovarianceAnalyticApproximation.java" name="SwaprateCovarianceAnalyticApproximation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="93" coveredmethods="0" methods="3" elements="33" classes="1" ncloc="48" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="SwaprateCovarianceAnalyticApproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="33" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaprateCovarianceAnalyticApproximation(double[],double[])" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/Swaption.java" name="Swaption.java">
            <metrics coveredelements="76" coveredconditionals="11" complexity="21" loc="268" coveredmethods="6" methods="14" elements="94" classes="1" ncloc="142" statements="68" conditionals="12" coveredstatements="59"/>
            <class name="Swaption">
               <metrics coveredelements="76" coveredconditionals="11" complexity="21" coveredmethods="6" methods="14" elements="94" statements="68" conditionals="12" coveredstatements="59"/>
            </class>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[],double[],double)" num="58" count="1446" type="method"/>
            <line num="59" count="1446" type="stmt"/>
            <line num="60" count="1446" type="stmt"/>
            <line num="61" count="1446" type="stmt"/>
            <line num="62" count="1446" type="stmt"/>
            <line num="63" count="1446" type="stmt"/>
            <line num="64" count="1446" type="stmt"/>
            <line num="65" count="1446" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[],double[])" num="77" count="6" type="method"/>
            <line num="78" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="Swaption(double,double[],double[],double[])" num="89" count="1440" type="method"/>
            <line num="94" count="1440" type="stmt"/>
            <line complexity="2" visibility="public" signature="Swaption(double,TimeDiscretization,double)" num="104" count="278328" type="method"/>
            <line num="108" count="278312" type="stmt"/>
            <line num="109" count="278326" type="stmt"/>
            <line num="111" count="278354" type="stmt"/>
            <line num="112" count="278311" type="stmt"/>
            <line num="113" count="278258" type="stmt"/>
            <line falsecount="278091" truecount="5761820" num="113" type="cond"/>
            <line num="114" count="5762049" type="stmt"/>
            <line num="115" count="5761595" type="stmt"/>
            <line num="118" count="278073" type="stmt"/>
            <line num="120" count="278135" type="stmt"/>
            <line num="121" count="278181" type="stmt"/>
            <line num="123" count="278234" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="136" count="625985" type="method"/>
            <line num="141" count="625982" type="stmt"/>
            <line num="144" count="625948" type="stmt"/>
            <line falsecount="586448" truecount="10720449" num="144" type="cond"/>
            <line num="146" count="10722847" type="stmt"/>
            <line num="147" count="10724428" type="stmt"/>
            <line num="148" count="10724971" type="stmt"/>
            <line num="150" count="10725523" type="stmt"/>
            <line falsecount="10725705" truecount="238" num="150" type="cond"/>
            <line num="151" count="238" type="stmt"/>
            <line num="154" count="10726953" type="stmt"/>
            <line falsecount="10726914" truecount="412" num="154" type="cond"/>
            <line num="157" count="10727847" type="stmt"/>
            <line num="160" count="10677493" type="stmt"/>
            <line num="164" count="10678616" type="stmt"/>
            <line num="165" count="10680845" type="stmt"/>
            <line num="166" count="10682556" type="stmt"/>
            <line falsecount="400" truecount="10672831" num="166" type="cond"/>
            <line num="167" count="10673951" type="stmt"/>
            <line num="168" count="10667029" type="stmt"/>
            <line num="169" count="10660583" type="stmt"/>
            <line num="170" count="10657305" type="stmt"/>
            <line num="173" count="10667986" type="stmt"/>
            <line num="174" count="10675023" type="stmt"/>
            <line num="175" count="10675800" type="stmt"/>
            <line num="179" count="10678803" type="stmt"/>
            <line num="182" count="10656337" type="stmt"/>
            <line num="188" count="586692" type="stmt"/>
            <line num="190" count="586687" type="stmt"/>
            <line num="191" count="586287" type="stmt"/>
            <line num="192" count="586659" type="stmt"/>
            <line num="194" count="586549" type="stmt"/>
            <line num="195" count="586251" type="stmt"/>
            <line num="196" count="586639" type="stmt"/>
            <line num="198" count="586263" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(ForwardCurve,double) : double" num="209" count="2" type="method"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseIndicator(LIBORModelMonteCarloSimulationModel) : RandomVariable" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDate() : double" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixingDates() : double[]" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPaymentDates() : double[]" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLengths() : double[]" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwaprates() : double[]" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotional() : double" num="265" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionATM.java" name="SwaptionATM.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="9" loc="76" coveredmethods="3" methods="3" elements="28" classes="1" ncloc="44" statements="21" conditionals="4" coveredstatements="16"/>
            <class name="SwaptionATM">
               <metrics coveredelements="21" coveredconditionals="2" complexity="9" coveredmethods="3" methods="3" elements="28" statements="21" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionATM(double[],ValueUnit)" num="26" count="1232" type="method"/>
            <line num="27" count="1232" type="stmt"/>
            <line num="28" count="1232" type="stmt"/>
            <line num="29" count="1232" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="32" count="276236" type="method"/>
            <line num="35" count="276226" type="stmt"/>
            <line num="36" count="276148" type="stmt"/>
            <line falsecount="0" truecount="276150" num="36" type="cond"/>
            <line num="38" count="276115" type="stmt"/>
            <line num="39" count="276068" type="stmt"/>
            <line falsecount="0" truecount="276116" num="39" type="cond"/>
            <line num="42" count="276213" type="stmt"/>
            <line num="45" count="276219" type="stmt"/>
            <line num="48" count="276110" type="stmt"/>
            <line num="50" count="258115" type="stmt"/>
            <line num="51" count="576" type="stmt"/>
            <line num="52" count="576" type="stmt"/>
            <line num="53" count="257609" type="stmt"/>
            <line num="54" count="257636" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImpliedBachelierATMOptionVolatility(RandomVariable,double,double) : RandomVariable" num="73" count="257668" type="method"/>
            <line num="74" count="257650" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximation.java" name="SwaptionAnalyticApproximation.java">
            <metrics coveredelements="110" coveredconditionals="25" complexity="24" loc="286" coveredmethods="4" methods="5" elements="118" classes="1" ncloc="146" statements="85" conditionals="28" coveredstatements="81"/>
            <class name="SwaptionAnalyticApproximation">
               <metrics coveredelements="110" coveredconditionals="25" complexity="24" coveredmethods="4" methods="5" elements="118" statements="85" conditionals="28" coveredstatements="81"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximation(double,TimeDiscretization)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximation(double,double[],ValueUnit)" num="93" count="1586" type="method"/>
            <line num="94" count="1586" type="stmt"/>
            <line num="95" count="1586" type="stmt"/>
            <line num="96" count="1586" type="stmt"/>
            <line num="97" count="1586" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="100" count="13296" type="method"/>
            <line num="102" count="13304" type="stmt"/>
            <line num="103" count="13258" type="stmt"/>
            <line falsecount="0" truecount="13261" num="103" type="cond"/>
            <line num="104" count="13263" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="122" count="13179" type="method"/>
            <line num="123" count="13190" type="stmt"/>
            <line falsecount="13206" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="13222" type="stmt"/>
            <line num="128" count="13239" type="stmt"/>
            <line num="130" count="13248" type="stmt"/>
            <line num="131" count="13215" type="stmt"/>
            <line num="132" count="13173" type="stmt"/>
            <line num="134" count="13059" type="stmt"/>
            <line num="135" count="13236" type="stmt"/>
            <line num="138" count="13292" type="stmt"/>
            <line num="141" count="13291" type="stmt"/>
            <line num="142" count="13282" type="stmt"/>
            <line falsecount="13208" truecount="114957" num="142" type="cond"/>
            <line num="144" count="114407" type="stmt"/>
            <line falsecount="114906" truecount="676683" num="144" type="cond"/>
            <line num="145" count="675231" type="stmt"/>
            <line num="148" count="115299" type="stmt"/>
            <line num="152" count="13201" type="stmt"/>
            <line falsecount="13215" truecount="2" num="152" type="cond"/>
            <line num="153" count="2" type="stmt"/>
            <line num="156" count="13236" type="stmt"/>
            <line num="159" count="13258" type="stmt"/>
            <line falsecount="1176" truecount="12088" num="159" type="cond"/>
            <line num="160" count="12099" type="stmt"/>
            <line num="162" count="1176" type="stmt"/>
            <line falsecount="0" truecount="1176" num="162" type="cond"/>
            <line num="164" count="1176" type="stmt"/>
            <line num="165" count="1176" type="stmt"/>
            <line num="167" count="1176" type="stmt"/>
            <line num="169" count="1176" type="stmt"/>
            <line num="170" count="1176" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="188" count="12957" type="method"/>
            <line num="193" count="12964" type="stmt"/>
            <line num="195" count="13356" type="stmt"/>
            <line falsecount="1585" truecount="11727" num="196" type="cond"/>
            <line num="201" count="11696" type="stmt"/>
            <line num="203" count="1585" type="stmt"/>
            <line num="204" count="1586" type="stmt"/>
            <line num="205" count="1585" type="stmt"/>
            <line num="210" count="1586" type="stmt"/>
            <line falsecount="1298" truecount="287" num="210" type="cond"/>
            <line num="211" count="288" type="stmt"/>
            <line num="213" count="1585" type="stmt"/>
            <line num="215" count="1586" type="stmt"/>
            <line num="216" count="1585" type="stmt"/>
            <line num="219" count="1586" type="stmt"/>
            <line num="220" count="1586" type="stmt"/>
            <line num="223" count="1586" type="stmt"/>
            <line num="224" count="1586" type="stmt"/>
            <line num="227" count="1585" type="stmt"/>
            <line num="230" count="1584" type="stmt"/>
            <line falsecount="1586" truecount="8919" num="230" type="cond"/>
            <line num="231" count="8923" type="stmt"/>
            <line num="233" count="8924" type="stmt"/>
            <line num="234" count="8926" type="stmt"/>
            <line num="238" count="1586" type="stmt"/>
            <line num="239" count="1586" type="stmt"/>
            <line num="240" count="1586" type="stmt"/>
            <line falsecount="1586" truecount="8637" num="240" type="cond"/>
            <line num="241" count="8637" type="stmt"/>
            <line num="242" count="8633" type="stmt"/>
            <line num="243" count="8634" type="stmt"/>
            <line num="247" count="1586" type="stmt"/>
            <line num="249" count="1586" type="stmt"/>
            <line num="250" count="1586" type="stmt"/>
            <line falsecount="1586" truecount="8942" num="250" type="cond"/>
            <line num="251" count="8942" type="stmt"/>
            <line num="252" count="8940" type="stmt"/>
            <line num="255" count="1586" type="stmt"/>
            <line num="256" count="1586" type="stmt"/>
            <line num="257" count="1586" type="stmt"/>
            <line falsecount="1586" truecount="8931" num="257" type="cond"/>
            <line num="258" count="8949" type="stmt"/>
            <line falsecount="1886" truecount="7055" num="258" type="cond"/>
            <line num="259" count="7054" type="stmt"/>
            <line num="262" count="8943" type="stmt"/>
            <line num="263" count="8946" type="stmt"/>
            <line num="265" count="8942" type="stmt"/>
            <line num="267" count="8946" type="stmt"/>
            <line num="268" count="8906" type="stmt"/>
            <line num="269" count="8911" type="stmt"/>
            <line num="271" count="8921" type="stmt"/>
            <line num="276" count="1586" type="stmt"/>
            <line num="277" count="1586" type="stmt"/>
            <line num="278" count="1586" type="stmt"/>
            <line num="279" count="1586" type="stmt"/>
            <line num="281" count="1586" type="stmt"/>
            <line num="283" count="1586" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximationRebonato.java" name="SwaptionAnalyticApproximationRebonato.java">
            <metrics coveredelements="93" coveredconditionals="23" complexity="21" loc="253" coveredmethods="4" methods="5" elements="106" classes="1" ncloc="120" statements="73" conditionals="28" coveredstatements="66"/>
            <class name="SwaptionAnalyticApproximationRebonato">
               <metrics coveredelements="93" coveredconditionals="23" complexity="21" coveredmethods="4" methods="5" elements="106" statements="73" conditionals="28" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximationRebonato(double,TimeDiscretization)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionAnalyticApproximationRebonato(double,double[],ValueUnit)" num="89" count="120" type="method"/>
            <line num="90" count="120" type="stmt"/>
            <line num="91" count="120" type="stmt"/>
            <line num="92" count="120" type="stmt"/>
            <line num="93" count="120" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="96" count="120" type="method"/>
            <line num="98" count="120" type="stmt"/>
            <line num="99" count="120" type="stmt"/>
            <line falsecount="0" truecount="120" num="99" type="cond"/>
            <line num="100" count="120" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="118" count="120" type="method"/>
            <line num="119" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="120" type="stmt"/>
            <line num="124" count="120" type="stmt"/>
            <line num="126" count="120" type="stmt"/>
            <line num="127" count="120" type="stmt"/>
            <line num="128" count="120" type="stmt"/>
            <line num="130" count="120" type="stmt"/>
            <line num="131" count="120" type="stmt"/>
            <line num="134" count="120" type="stmt"/>
            <line num="137" count="120" type="stmt"/>
            <line num="138" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="138" type="cond"/>
            <line num="140" count="600" type="stmt"/>
            <line falsecount="600" truecount="1200" num="140" type="cond"/>
            <line num="141" count="1200" type="stmt"/>
            <line num="144" count="600" type="stmt"/>
            <line num="148" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="120" type="stmt"/>
            <line num="155" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="160" count="120" type="stmt"/>
            <line num="161" count="120" type="stmt"/>
            <line num="163" count="120" type="stmt"/>
            <line num="165" count="120" type="stmt"/>
            <line num="166" count="120" type="stmt"/>
            <line complexity="9" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve,double[]) : Map&lt;String, double[]&gt;" num="181" count="120" type="method"/>
            <line num="185" count="120" type="stmt"/>
            <line num="186" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="120" type="stmt"/>
            <line num="192" count="120" type="stmt"/>
            <line num="195" count="120" type="stmt"/>
            <line num="196" count="120" type="stmt"/>
            <line num="199" count="120" type="stmt"/>
            <line num="200" count="120" type="stmt"/>
            <line num="203" count="120" type="stmt"/>
            <line num="206" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="206" type="cond"/>
            <line num="207" count="600" type="stmt"/>
            <line num="209" count="600" type="stmt"/>
            <line num="210" count="600" type="stmt"/>
            <line num="214" count="120" type="stmt"/>
            <line num="215" count="120" type="stmt"/>
            <line num="216" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="216" type="cond"/>
            <line num="217" count="600" type="stmt"/>
            <line num="218" count="600" type="stmt"/>
            <line num="219" count="600" type="stmt"/>
            <line num="222" count="120" type="stmt"/>
            <line num="223" count="120" type="stmt"/>
            <line num="224" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="224" type="cond"/>
            <line num="225" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="225" type="cond"/>
            <line num="226" count="480" type="stmt"/>
            <line num="228" count="600" type="stmt"/>
            <line num="232" count="120" type="stmt"/>
            <line num="234" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="234" type="cond"/>
            <line num="235" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="235" type="cond"/>
            <line num="236" count="480" type="stmt"/>
            <line num="239" count="600" type="stmt"/>
            <line num="240" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="240" type="cond"/>
            <line num="242" count="600" type="stmt"/>
            <line num="246" count="120" type="stmt"/>
            <line num="247" count="120" type="stmt"/>
            <line num="248" count="120" type="stmt"/>
            <line num="249" count="120" type="stmt"/>
            <line num="251" count="120" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionFactory.java" name="SwaptionFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="42" coveredmethods="0" methods="2" elements="18" classes="1" ncloc="22" statements="10" conditionals="6" coveredstatements="0"/>
            <class name="SwaptionFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SwaptionFactory()" num="22" count="0" type="method"/>
            <line complexity="4" visibility="public" signature="createSwaption(String,double,TimeDiscretization,String) : TermStructureMonteCarloProduct" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionFromSwapSchedules.java" name="SwaptionFromSwapSchedules.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="227" coveredmethods="0" methods="7" elements="108" classes="2" ncloc="161" statements="83" conditionals="18" coveredstatements="0"/>
            <class name="SwaptionFromSwapSchedules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="7" elements="108" statements="83" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="SwaptionFromSwapSchedules.SwaptionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionFromSwapSchedules(LocalDateTime,SwaptionType,LocalDate,Schedule,Schedule,double,double,ValueUnit)" num="47" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessTimeDiscretization(LocalDateTime) : TimeDiscretization" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Period) : Double" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDate() : LocalDate" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValueOfLegAnalytic(double,TermStructureMonteCarloSimulationModel,Schedule,boolean,double,double) : RandomVariable" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionGeneralizedAnalyticApproximation.java" name="SwaptionGeneralizedAnalyticApproximation.java">
            <metrics coveredelements="110" coveredconditionals="24" complexity="34" loc="433" coveredmethods="4" methods="6" elements="190" classes="3" ncloc="236" statements="140" conditionals="44" coveredstatements="82"/>
            <class name="SwaptionGeneralizedAnalyticApproximation">
               <metrics coveredelements="110" coveredconditionals="24" complexity="34" coveredmethods="4" methods="6" elements="190" statements="140" conditionals="44" coveredstatements="82"/>
            </class>
            <class name="SwaptionGeneralizedAnalyticApproximation.StateSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SwaptionGeneralizedAnalyticApproximation.ValueUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionGeneralizedAnalyticApproximation(double,double[],ValueUnit,StateSpace)" num="105" count="1044" type="method"/>
            <line num="106" count="1044" type="stmt"/>
            <line num="107" count="1044" type="stmt"/>
            <line num="108" count="1044" type="stmt"/>
            <line num="109" count="1044" type="stmt"/>
            <line num="110" count="1044" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionGeneralizedAnalyticApproximation(double,TimeDiscretization,StateSpace)" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="127" count="107313" type="method"/>
            <line num="129" count="107341" type="stmt"/>
            <line num="130" count="107065" type="stmt"/>
            <line falsecount="0" truecount="107095" num="130" type="cond"/>
            <line num="131" count="107116" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="149" count="106730" type="method"/>
            <line num="150" count="106857" type="stmt"/>
            <line falsecount="106877" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="106896" type="stmt"/>
            <line num="155" count="107005" type="stmt"/>
            <line num="157" count="107070" type="stmt"/>
            <line num="158" count="106733" type="stmt"/>
            <line num="159" count="106450" type="stmt"/>
            <line num="160" count="105486" type="stmt"/>
            <line num="162" count="105710" type="stmt"/>
            <line falsecount="105840" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="105898" type="stmt"/>
            <line num="169" count="99495" type="stmt"/>
            <line num="173" count="99735" type="stmt"/>
            <line num="176" count="99915" type="stmt"/>
            <line num="177" count="100011" type="stmt"/>
            <line falsecount="98863" truecount="2911110" num="177" type="cond"/>
            <line num="179" count="2908752" type="stmt"/>
            <line falsecount="2878098" truecount="28333537" num="179" type="cond"/>
            <line num="180" count="28460449" type="stmt"/>
            <line num="183" count="2900289" type="stmt"/>
            <line num="187" count="99032" type="stmt"/>
            <line falsecount="99452" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="99706" type="stmt"/>
            <line num="194" count="99868" type="stmt"/>
            <line falsecount="60" truecount="99989" num="194" type="cond"/>
            <line num="195" count="99985" type="stmt"/>
            <line num="199" count="60" type="stmt"/>
            <line num="200" count="60" type="stmt"/>
            <line num="202" count="60" type="stmt"/>
            <line num="203" count="60" type="stmt"/>
            <line num="204" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="60" type="stmt"/>
            <line num="211" count="60" type="stmt"/>
            <line complexity="11" visibility="public" signature="getLogSwapRateDerivative(TimeDiscretization,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="226" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getSwapRateDerivative(TimeDiscretization,AnalyticModel,DiscountCurve,ForwardCurve) : Map&lt;String, double[]&gt;" num="337" count="104985" type="method"/>
            <line num="342" count="105068" type="stmt"/>
            <line num="344" count="107326" type="stmt"/>
            <line falsecount="8179" truecount="99125" num="345" type="cond"/>
            <line num="350" count="99154" type="stmt"/>
            <line num="352" count="8177" type="stmt"/>
            <line num="353" count="8153" type="stmt"/>
            <line num="354" count="8174" type="stmt"/>
            <line num="359" count="8174" type="stmt"/>
            <line falsecount="8120" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="8151" type="stmt"/>
            <line num="364" count="8143" type="stmt"/>
            <line num="367" count="8171" type="stmt"/>
            <line num="368" count="8117" type="stmt"/>
            <line num="371" count="8098" type="stmt"/>
            <line num="372" count="1272" type="stmt"/>
            <line num="375" count="1272" type="stmt"/>
            <line num="378" count="1271" type="stmt"/>
            <line falsecount="1272" truecount="43582" num="378" type="cond"/>
            <line num="379" count="43584" type="stmt"/>
            <line num="381" count="43604" type="stmt"/>
            <line num="382" count="43611" type="stmt"/>
            <line num="386" count="1272" type="stmt"/>
            <line num="387" count="1272" type="stmt"/>
            <line num="388" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="22119" num="388" type="cond"/>
            <line num="389" count="22120" type="stmt"/>
            <line num="390" count="22119" type="stmt"/>
            <line num="391" count="22119" type="stmt"/>
            <line num="395" count="1272" type="stmt"/>
            <line num="397" count="1272" type="stmt"/>
            <line num="398" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="43587" num="398" type="cond"/>
            <line num="399" count="43588" type="stmt"/>
            <line num="400" count="43583" type="stmt"/>
            <line num="403" count="1272" type="stmt"/>
            <line num="404" count="1272" type="stmt"/>
            <line num="405" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="43594" num="405" type="cond"/>
            <line num="406" count="43600" type="stmt"/>
            <line falsecount="22770" truecount="20834" num="406" type="cond"/>
            <line num="407" count="20837" type="stmt"/>
            <line num="410" count="43594" type="stmt"/>
            <line num="411" count="43598" type="stmt"/>
            <line num="413" count="43570" type="stmt"/>
            <line num="415" count="43578" type="stmt"/>
            <line num="416" count="43572" type="stmt"/>
            <line num="417" count="43589" type="stmt"/>
            <line num="419" count="43595" type="stmt"/>
            <line num="423" count="1272" type="stmt"/>
            <line num="424" count="1272" type="stmt"/>
            <line num="425" count="1272" type="stmt"/>
            <line num="426" count="1272" type="stmt"/>
            <line num="428" count="1272" type="stmt"/>
            <line num="430" count="1272" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSimple.java" name="SwaptionSimple.java">
            <metrics coveredelements="33" coveredconditionals="9" complexity="15" loc="109" coveredmethods="3" methods="4" elements="47" classes="1" ncloc="65" statements="29" conditionals="14" coveredstatements="21"/>
            <class name="SwaptionSimple">
               <metrics coveredelements="33" coveredconditionals="9" complexity="15" coveredmethods="3" methods="4" elements="47" statements="29" conditionals="14" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSimple(double,TimeDiscretization)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSimple(double,double[],ValueUnit)" num="49" count="1900" type="method"/>
            <line num="50" count="1900" type="stmt"/>
            <line num="51" count="1900" type="stmt"/>
            <line num="52" count="1900" type="stmt"/>
            <line num="53" count="1900" type="stmt"/>
            <line num="54" count="1900" type="stmt"/>
            <line complexity="12" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="67" count="318014" type="method"/>
            <line num="69" count="318027" type="stmt"/>
            <line num="71" count="296366" type="stmt"/>
            <line falsecount="295537" truecount="864" num="71" type="cond"/>
            <line num="72" count="864" type="stmt"/>
            <line num="75" count="295562" type="stmt"/>
            <line num="76" count="295567" type="stmt"/>
            <line falsecount="5513" truecount="290064" num="76" type="cond"/>
            <line num="78" count="295562" type="stmt"/>
            <line num="79" count="295605" type="stmt"/>
            <line num="80" count="295603" type="stmt"/>
            <line num="81" count="295608" type="stmt"/>
            <line falsecount="5517" truecount="290100" num="81" type="cond"/>
            <line num="83" count="295594" type="stmt"/>
            <line falsecount="290083" truecount="5520" num="83" type="cond"/>
            <line num="84" count="5520" type="stmt"/>
            <line num="85" count="5515" type="stmt"/>
            <line num="87" count="290096" type="stmt"/>
            <line falsecount="0" truecount="290103" num="87" type="cond"/>
            <line num="88" count="290107" type="stmt"/>
            <line num="89" count="290073" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="104" count="30" type="method"/>
            <line num="106" count="30" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSingleCurve.java" name="SwaptionSingleCurve.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="204" coveredmethods="0" methods="6" elements="71" classes="1" ncloc="104" statements="55" conditionals="10" coveredstatements="0"/>
            <class name="SwaptionSingleCurve">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="6" elements="71" statements="55" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurve(double,double[],double[],double[],double[])" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurve(double,double[],double[],double[])" num="64" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionSingleCurve(double,TimeDiscretization,double)" num="84" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="114" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(ForwardCurve,double) : double" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionSingleCurveAnalyticApproximation.java" name="SwaptionSingleCurveAnalyticApproximation.java">
            <metrics coveredelements="87" coveredconditionals="18" complexity="18" loc="222" coveredmethods="4" methods="5" elements="97" classes="1" ncloc="109" statements="70" conditionals="22" coveredstatements="65"/>
            <class name="SwaptionSingleCurveAnalyticApproximation">
               <metrics coveredelements="87" coveredconditionals="18" complexity="18" coveredmethods="4" methods="5" elements="97" statements="70" conditionals="22" coveredstatements="65"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurveAnalyticApproximation(double,TimeDiscretization)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionSingleCurveAnalyticApproximation(double,double[],ValueUnit)" num="68" count="120" type="method"/>
            <line num="69" count="120" type="stmt"/>
            <line num="70" count="120" type="stmt"/>
            <line num="71" count="120" type="stmt"/>
            <line num="72" count="120" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="75" count="120" type="method"/>
            <line num="77" count="120" type="stmt"/>
            <line num="78" count="120" type="stmt"/>
            <line falsecount="0" truecount="120" num="78" type="cond"/>
            <line num="79" count="120" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValues(double,TimeDiscretization,LIBORMarketModel) : RandomVariable" num="97" count="120" type="method"/>
            <line num="98" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="120" type="stmt"/>
            <line num="103" count="120" type="stmt"/>
            <line num="105" count="120" type="stmt"/>
            <line num="106" count="120" type="stmt"/>
            <line num="107" count="120" type="stmt"/>
            <line num="109" count="120" type="stmt"/>
            <line num="110" count="120" type="stmt"/>
            <line num="111" count="120" type="stmt"/>
            <line num="112" count="120" type="stmt"/>
            <line num="115" count="120" type="stmt"/>
            <line num="118" count="120" type="stmt"/>
            <line num="119" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="119" type="cond"/>
            <line num="121" count="600" type="stmt"/>
            <line falsecount="600" truecount="1200" num="121" type="cond"/>
            <line num="122" count="1200" type="stmt"/>
            <line num="125" count="600" type="stmt"/>
            <line num="129" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="120" type="stmt"/>
            <line num="136" count="120" type="stmt"/>
            <line falsecount="120" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="120" type="stmt"/>
            <line num="142" count="120" type="stmt"/>
            <line num="144" count="120" type="stmt"/>
            <line num="146" count="120" type="stmt"/>
            <line num="147" count="120" type="stmt"/>
            <line complexity="6" visibility="public" signature="getLogSwaprateDerivative(TimeDiscretization,ForwardCurve,double[]) : Map&lt;String, double[]&gt;" num="161" count="120" type="method"/>
            <line num="162" count="120" type="stmt"/>
            <line num="163" count="120" type="stmt"/>
            <line num="166" count="120" type="stmt"/>
            <line num="167" count="120" type="stmt"/>
            <line num="170" count="120" type="stmt"/>
            <line num="171" count="120" type="stmt"/>
            <line num="174" count="120" type="stmt"/>
            <line num="175" count="120" type="stmt"/>
            <line falsecount="120" truecount="1860" num="175" type="cond"/>
            <line num="176" count="1860" type="stmt"/>
            <line num="177" count="1860" type="stmt"/>
            <line num="178" count="1860" type="stmt"/>
            <line num="182" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="182" type="cond"/>
            <line num="183" count="600" type="stmt"/>
            <line num="184" count="600" type="stmt"/>
            <line num="186" count="600" type="stmt"/>
            <line num="187" count="600" type="stmt"/>
            <line num="191" count="120" type="stmt"/>
            <line num="192" count="120" type="stmt"/>
            <line num="193" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="193" type="cond"/>
            <line num="194" count="600" type="stmt"/>
            <line num="195" count="600" type="stmt"/>
            <line num="196" count="600" type="stmt"/>
            <line num="201" count="120" type="stmt"/>
            <line num="203" count="120" type="stmt"/>
            <line num="205" count="120" type="stmt"/>
            <line num="206" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="206" type="cond"/>
            <line num="207" count="600" type="stmt"/>
            <line falsecount="120" truecount="480" num="207" type="cond"/>
            <line num="208" count="480" type="stmt"/>
            <line num="211" count="600" type="stmt"/>
            <line num="215" count="120" type="stmt"/>
            <line num="216" count="120" type="stmt"/>
            <line num="217" count="120" type="stmt"/>
            <line num="218" count="120" type="stmt"/>
            <line num="220" count="120" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/SwaptionWithComponents.java" name="SwaptionWithComponents.java">
            <metrics coveredelements="28" coveredconditionals="4" complexity="4" loc="99" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="54" statements="22" conditionals="4" coveredstatements="22"/>
            <class name="SwaptionWithComponents">
               <metrics coveredelements="28" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="28" statements="22" conditionals="4" coveredstatements="22"/>
            </class>
            <line complexity="3" visibility="public" signature="SwaptionWithComponents(double,double[],double[],double[])" num="37" count="60" type="method"/>
            <line num="42" count="60" type="stmt"/>
            <line num="52" count="60" type="stmt"/>
            <line num="54" count="60" type="stmt"/>
            <line num="56" count="60" type="stmt"/>
            <line num="57" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="57" type="cond"/>
            <line num="58" count="300" type="stmt"/>
            <line num="59" count="300" type="stmt"/>
            <line num="62" count="300" type="stmt"/>
            <line num="64" count="60" type="stmt"/>
            <line num="65" count="60" type="stmt"/>
            <line num="67" count="60" type="stmt"/>
            <line num="68" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="68" type="cond"/>
            <line num="69" count="300" type="stmt"/>
            <line num="70" count="300" type="stmt"/>
            <line num="71" count="300" type="stmt"/>
            <line num="74" count="300" type="stmt"/>
            <line num="76" count="60" type="stmt"/>
            <line num="77" count="60" type="stmt"/>
            <line num="79" count="60" type="stmt"/>
            <line num="80" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="93" count="60" type="method"/>
            <line num="95" count="60" type="stmt"/>
            <line num="97" count="60" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/TermStructureMonteCarloProduct.java" name="TermStructureMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="58" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.indices">
         <metrics coveredelements="123" complexity="160" loc="1872" methods="106" classes="23" statements="382" coveredconditionals="17" coveredmethods="20" elements="576" ncloc="1025" files="22" conditionals="88" coveredstatements="86"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AbstractIndex.java" name="AbstractIndex.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="68" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="AbstractIndex">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractIndex(String,String)" num="35" count="4198" type="method"/>
            <line num="36" count="4198" type="stmt"/>
            <line num="37" count="4198" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractIndex(String)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractIndex()" num="53" count="2368" type="method"/>
            <line num="54" count="2368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="65" count="76720" type="method"/>
            <line num="66" count="76723" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AccruedInterest.java" name="AccruedInterest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="96" coveredmethods="0" methods="4" elements="22" classes="1" ncloc="48" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="AccruedInterest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AccruedInterest(String,String,LocalDate,LocalDate,LocalDate,AbstractIndex,Double,DayCountConvention,boolean)" num="61" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getModelDate(double) : LocalDate" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AnalyticModelForwardCurveIndex.java" name="AnalyticModelForwardCurveIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="85" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="46" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="AnalyticModelForwardCurveIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelForwardCurveIndex(String,String,double,double)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/AnalyticModelIndex.java" name="AnalyticModelIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="83" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="44" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="AnalyticModelIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AnalyticModelIndex(String,String,double)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/CappedFlooredIndex.java" name="CappedFlooredIndex.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="13" loc="84" coveredmethods="2" methods="4" elements="45" classes="1" ncloc="54" statements="23" conditionals="18" coveredstatements="10"/>
            <class name="CappedFlooredIndex">
               <metrics coveredelements="14" coveredconditionals="2" complexity="13" coveredmethods="2" methods="4" elements="45" statements="23" conditionals="18" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="CappedFlooredIndex(AbstractIndex,AbstractIndex,AbstractIndex)" num="36" count="20" type="method"/>
            <line num="37" count="20" type="stmt"/>
            <line num="38" count="20" type="stmt"/>
            <line num="39" count="20" type="stmt"/>
            <line num="40" count="20" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="43" count="400" type="method"/>
            <line num="45" count="400" type="stmt"/>
            <line num="47" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="47" type="cond"/>
            <line num="48" count="400" type="stmt"/>
            <line num="50" count="400" type="stmt"/>
            <line falsecount="0" truecount="400" num="50" type="cond"/>
            <line num="51" count="400" type="stmt"/>
            <line num="54" count="400" type="stmt"/>
            <line complexity="8" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ConstantMaturitySwaprate.java" name="ConstantMaturitySwaprate.java">
            <metrics coveredelements="32" coveredconditionals="5" complexity="12" loc="145" coveredmethods="4" methods="9" elements="48" classes="1" ncloc="70" statements="33" conditionals="6" coveredstatements="23"/>
            <class name="ConstantMaturitySwaprate">
               <metrics coveredelements="32" coveredconditionals="5" complexity="12" coveredmethods="4" methods="9" elements="48" statements="33" conditionals="6" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(String,String,double,double[])" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double[])" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double[])" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ConstantMaturitySwaprate(String,String,double,double,double)" num="72" count="26" type="method"/>
            <line num="73" count="26" type="stmt"/>
            <line num="74" count="26" type="stmt"/>
            <line num="76" count="26" type="stmt"/>
            <line num="77" count="26" type="stmt"/>
            <line falsecount="26" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="26" type="stmt"/>
            <line num="81" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double,double)" num="92" count="26" type="method"/>
            <line num="93" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantMaturitySwaprate(double,double)" num="102" count="26" type="method"/>
            <line num="103" count="26" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="106" count="640" type="method"/>
            <line num="110" count="640" type="stmt"/>
            <line num="111" count="640" type="stmt"/>
            <line num="112" count="640" type="stmt"/>
            <line falsecount="640" truecount="11520" num="112" type="cond"/>
            <line num="113" count="11520" type="stmt"/>
            <line num="114" count="11520" type="stmt"/>
            <line num="118" count="640" type="stmt"/>
            <line num="119" count="640" type="stmt"/>
            <line num="120" count="640" type="stmt"/>
            <line falsecount="640" truecount="10879" num="120" type="cond"/>
            <line num="121" count="10879" type="stmt"/>
            <line num="122" count="10880" type="stmt"/>
            <line num="123" count="10878" type="stmt"/>
            <line num="125" count="640" type="stmt"/>
            <line num="126" count="640" type="stmt"/>
            <line num="128" count="640" type="stmt"/>
            <line num="130" count="640" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/DateIndex.java" name="DateIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="90" coveredmethods="0" methods="4" elements="27" classes="2" ncloc="51" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="DateIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="27" statements="23" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DateIndex.DateIndexType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DateIndex(String,String,DateIndexType)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DateIndex(String,DateIndexType)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/FixedCoupon.java" name="FixedCoupon.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="5" loc="60" coveredmethods="2" methods="5" elements="11" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="3"/>
            <class name="FixedCoupon">
               <metrics coveredelements="5" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="FixedCoupon(double)" num="31" count="2260" type="method"/>
            <line num="32" count="2260" type="stmt"/>
            <line num="33" count="2260" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="36" count="12367" type="method"/>
            <line num="38" count="12370" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCoupon() : RandomVariable" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ForwardCurveIndex.java" name="ForwardCurveIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="53" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ForwardCurveIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardCurveIndex(ForwardCurve)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndex.java" name="LIBORIndex.java">
            <metrics coveredelements="47" coveredconditionals="9" complexity="19" loc="164" coveredmethods="5" methods="9" elements="63" classes="1" ncloc="95" statements="42" conditionals="12" coveredstatements="33"/>
            <class name="LIBORIndex">
               <metrics coveredelements="47" coveredconditionals="9" complexity="19" coveredmethods="5" methods="9" elements="63" statements="42" conditionals="12" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORIndex(String,String,String,BusinessdayCalendar,DateRollConvention)" num="41" count="228" type="method"/>
            <line num="43" count="228" type="stmt"/>
            <line num="44" count="228" type="stmt"/>
            <line num="45" count="228" type="stmt"/>
            <line num="46" count="228" type="stmt"/>
            <line num="47" count="228" type="stmt"/>
            <line num="48" count="228" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndex(String,double,double)" num="58" count="1576" type="method"/>
            <line num="59" count="1576" type="stmt"/>
            <line num="60" count="1576" type="stmt"/>
            <line num="61" count="1576" type="stmt"/>
            <line num="62" count="1576" type="stmt"/>
            <line num="63" count="1576" type="stmt"/>
            <line num="64" count="1576" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndex(double,double)" num="73" count="1450" type="method"/>
            <line num="74" count="1450" type="stmt"/>
            <line complexity="10" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="77" count="20372" type="method"/>
            <line num="81" count="20372" type="stmt"/>
            <line falsecount="2440" truecount="17931" num="81" type="cond"/>
            <line num="83" count="17930" type="stmt"/>
            <line falsecount="17929" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="89" count="20370" type="stmt"/>
            <line falsecount="20371" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="96" count="20370" type="stmt"/>
            <line num="101" count="20363" type="stmt"/>
            <line num="103" count="20376" type="stmt"/>
            <line falsecount="20313" truecount="60" num="103" type="cond"/>
            <line num="105" count="60" type="stmt"/>
            <line num="106" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="110" count="60" type="stmt"/>
            <line num="111" count="60" type="stmt"/>
            <line num="112" count="60" type="stmt"/>
            <line num="115" count="20375" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodStartOffset() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPeriodLength(TermStructureMonteCarloSimulationModel,double) : double" num="127" count="20374" type="method"/>
            <line num="128" count="20373" type="stmt"/>
            <line falsecount="15813" truecount="4560" num="128" type="cond"/>
            <line num="129" count="4560" type="stmt"/>
            <line num="130" count="4557" type="stmt"/>
            <line num="131" count="4558" type="stmt"/>
            <line num="132" count="4556" type="stmt"/>
            <line num="134" count="4555" type="stmt"/>
            <line num="137" count="15814" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriodLength() : double" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LaggedIndex.java" name="LaggedIndex.java">
            <metrics coveredelements="10" coveredconditionals="1" complexity="5" loc="75" coveredmethods="2" methods="4" elements="22" classes="1" ncloc="46" statements="16" conditionals="2" coveredstatements="7"/>
            <class name="LaggedIndex">
               <metrics coveredelements="10" coveredconditionals="1" complexity="5" coveredmethods="2" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="LaggedIndex(AbstractProductComponent,String,BusinessdayCalendar)" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LaggedIndex(AbstractProductComponent,double)" num="49" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="62" count="140" type="method"/>
            <line num="64" count="140" type="stmt"/>
            <line falsecount="140" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="140" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/LinearCombinationIndex.java" name="LinearCombinationIndex.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="10" loc="108" coveredmethods="2" methods="8" elements="30" classes="1" ncloc="56" statements="18" conditionals="4" coveredstatements="6"/>
            <class name="LinearCombinationIndex">
               <metrics coveredelements="8" coveredconditionals="0" complexity="10" coveredmethods="2" methods="8" elements="30" statements="18" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearCombinationIndex(double,AbstractProductComponent,double,AbstractProductComponent)" num="38" count="84" type="method"/>
            <line num="39" count="84" type="stmt"/>
            <line num="40" count="84" type="stmt"/>
            <line num="41" count="84" type="stmt"/>
            <line num="42" count="84" type="stmt"/>
            <line num="43" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="160" type="method"/>
            <line num="48" count="160" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex1() : AbstractProductComponent" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex2() : AbstractProductComponent" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScaling1() : double" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScaling2() : double" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/MaxIndex.java" name="MaxIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="MaxIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="27" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="MaxIndex(AbstractProductComponent)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/MinIndex.java" name="MinIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="46" statements="17" conditionals="6" coveredstatements="0"/>
            <class name="MinIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="27" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="MinIndex(AbstractProductComponent)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/NumerairePerformanceIndex.java" name="NumerairePerformanceIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="106" coveredmethods="0" methods="4" elements="34" classes="1" ncloc="65" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="NumerairePerformanceIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="34" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NumerairePerformanceIndex(String,String,String,BusinessdayCalendar,DateRollConvention,DayCountConvention)" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="54" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/NumerairePerformanceOnScheduleIndex.java" name="NumerairePerformanceOnScheduleIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="105" coveredmethods="0" methods="5" elements="37" classes="1" ncloc="61" statements="28" conditionals="4" coveredstatements="0"/>
            <class name="NumerairePerformanceOnScheduleIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="37" statements="28" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NumerairePerformanceOnScheduleIndex(String,String,Schedule)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="46" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPeriod(LocalDateTime) : Period" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/PerformanceIndex.java" name="PerformanceIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="76" coveredmethods="0" methods="5" elements="22" classes="1" ncloc="39" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="PerformanceIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="22" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PerformanceIndex(AbstractProductComponent,AbstractProductComponent)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeratorIndex() : AbstractProductComponent" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDenominatorIndex() : AbstractProductComponent" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/PowIndex.java" name="PowIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="PowIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PowIndex(AbstractProductComponent,double)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/ProductIndex.java" name="ProductIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="58" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="33" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="ProductIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ProductIndex(AbstractIndex,AbstractIndex)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/TimeDiscreteEndOfMonthIndex.java" name="TimeDiscreteEndOfMonthIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="15" classes="1" ncloc="34" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="TimeDiscreteEndOfMonthIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TimeDiscreteEndOfMonthIndex(String,AbstractIndex,int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="42" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/TriggerIndex.java" name="TriggerIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="81" coveredmethods="0" methods="4" elements="33" classes="1" ncloc="53" statements="21" conditionals="8" coveredstatements="0"/>
            <class name="TriggerIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="33" statements="21" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TriggerIndex(AbstractProductComponent,AbstractProductComponent,AbstractProductComponent)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/products/indices/UnsupportedIndex.java" name="UnsupportedIndex.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="68" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="31" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="UnsupportedIndex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsupportedIndex(String,Exception)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsupportedIndex(Exception)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,TermStructureMonteCarloSimulationModel) : RandomVariable" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="queryUnderlyings() : Set&lt;String&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor">
         <metrics coveredelements="171" complexity="96" loc="1151" methods="94" classes="16" statements="179" coveredconditionals="2" coveredmethods="57" elements="277" ncloc="570" files="13" conditionals="4" coveredstatements="112"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/AnalyticModelDescriptor.java" name="AnalyticModelDescriptor.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="9" loc="88" coveredmethods="4" methods="7" elements="32" classes="1" ncloc="54" statements="21" conditionals="4" coveredstatements="11"/>
            <class name="AnalyticModelDescriptor">
               <metrics coveredelements="17" coveredconditionals="2" complexity="9" coveredmethods="4" methods="7" elements="32" statements="21" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="3" visibility="public" signature="AnalyticModelDescriptor(LocalDate,Collection&lt;Curve&gt;,Collection&lt;VolatilitySurface&gt;)" num="30" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="37" type="cond"/>
            <line num="38" count="4" type="stmt"/>
            <line num="39" count="8" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AnalyticModelDescriptor(LocalDate,Map&lt;String, Curve&gt;,Map&lt;String, VolatilitySurface&gt;)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="77" count="4" type="method"/>
            <line num="78" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurvesMap() : Map&lt;String, Curve&gt;" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilitySurfaceMap() : Map&lt;String, VolatilitySurface&gt;" num="85" count="4" type="method"/>
            <line num="86" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/AssetModelDescriptor.java" name="AssetModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/BlackScholesModelDescriptor.java" name="BlackScholesModelDescriptor.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="8" loc="84" coveredmethods="6" methods="8" elements="21" classes="1" ncloc="43" statements="13" conditionals="0" coveredstatements="11"/>
            <class name="BlackScholesModelDescriptor">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="6" methods="8" elements="21" statements="13" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double)" num="29" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="53" count="10" type="method"/>
            <line num="54" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="60" count="12" type="method"/>
            <line num="61" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="67" count="12" type="method"/>
            <line num="68" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="74" count="10" type="method"/>
            <line num="75" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="81" count="14" type="method"/>
            <line num="82" count="14" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/HestonModelDescriptor.java" name="HestonModelDescriptor.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="12" loc="121" coveredmethods="10" methods="12" elements="33" classes="1" ncloc="63" statements="21" conditionals="0" coveredstatements="19"/>
            <class name="HestonModelDescriptor">
               <metrics coveredelements="29" coveredconditionals="0" complexity="12" coveredmethods="10" methods="12" elements="33" statements="21" conditionals="0" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="HestonModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double,Double,Double,Double,Double)" num="34" count="250" type="method"/>
            <line num="37" count="250" type="stmt"/>
            <line num="38" count="250" type="stmt"/>
            <line num="39" count="250" type="stmt"/>
            <line num="40" count="250" type="stmt"/>
            <line num="41" count="250" type="stmt"/>
            <line num="42" count="250" type="stmt"/>
            <line num="43" count="250" type="stmt"/>
            <line num="44" count="250" type="stmt"/>
            <line num="45" count="250" type="stmt"/>
            <line num="46" count="250" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="62" count="251" type="method"/>
            <line num="63" count="251" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="69" count="494" type="method"/>
            <line num="70" count="493" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="76" count="493" type="method"/>
            <line num="77" count="494" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="83" count="494" type="method"/>
            <line num="84" count="494" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="90" count="252" type="method"/>
            <line num="91" count="252" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : Double" num="97" count="252" type="method"/>
            <line num="98" count="252" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKappa() : Double" num="104" count="252" type="method"/>
            <line num="105" count="252" type="stmt"/>
            <line complexity="1" visibility="public" signature="getXi() : Double" num="111" count="252" type="method"/>
            <line num="112" count="252" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRho() : Double" num="118" count="252" type="method"/>
            <line num="119" count="252" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateModelDescriptor.java" name="InterestRateModelDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateModelDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwapLegProductDescriptor.java" name="InterestRateSwapLegProductDescriptor.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="10" loc="142" coveredmethods="7" methods="10" elements="36" classes="1" ncloc="60" statements="26" conditionals="0" coveredstatements="17"/>
            <class name="InterestRateSwapLegProductDescriptor">
               <metrics coveredelements="24" coveredconditionals="0" complexity="10" coveredmethods="7" methods="10" elements="36" statements="26" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwapLegProductDescriptor(String,String,ScheduleDescriptor,double,double,boolean)" num="38" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="InterestRateSwapLegProductDescriptor(String,String,ScheduleDescriptor,double[],double[],boolean)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="83" count="8" type="method"/>
            <line num="84" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="92" count="4" type="method"/>
            <line num="93" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegScheduleDescriptor() : ScheduleDescriptor" num="101" count="12" type="method"/>
            <line num="102" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionals() : double[]" num="110" count="8" type="method"/>
            <line num="111" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSpreads() : double[]" num="119" count="8" type="method"/>
            <line num="120" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotionalExchanged() : boolean" num="128" count="8" type="method"/>
            <line num="129" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwapProductDescriptor.java" name="InterestRateSwapProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="61" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="27" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateSwapProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwapProductDescriptor(InterestRateProductDescriptor,InterestRateProductDescriptor)" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegReceiver() : InterestRateProductDescriptor" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLegPayer() : InterestRateProductDescriptor" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/InterestRateSwaptionProductDescriptor.java" name="InterestRateSwaptionProductDescriptor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="74" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="33" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="InterestRateSwaptionProductDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InterestRateSwaptionProductDescriptor(InterestRateSwapProductDescriptor,LocalDate,double)" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingSwap() : InterestRateSwapProductDescriptor" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExcerciseDate() : LocalDate" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikeRate() : double" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/MertonModelDescriptor.java" name="MertonModelDescriptor.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="11" loc="108" coveredmethods="9" methods="11" elements="30" classes="1" ncloc="58" statements="19" conditionals="0" coveredstatements="17"/>
            <class name="MertonModelDescriptor">
               <metrics coveredelements="26" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="30" statements="19" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,Double,Double,Double,Double)" num="28" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="4" type="method"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="62" count="4" type="method"/>
            <line num="63" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="69" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="76" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : Double" num="83" count="4" type="method"/>
            <line num="84" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : Double" num="90" count="4" type="method"/>
            <line num="91" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : Double" num="97" count="4" type="method"/>
            <line num="98" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStdDev() : Double" num="104" count="4" type="method"/>
            <line num="105" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/ScheduleDescriptor.java" name="ScheduleDescriptor.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="13" loc="224" coveredmethods="5" methods="13" elements="41" classes="4" ncloc="107" statements="28" conditionals="0" coveredstatements="8"/>
            <class name="ScheduleDescriptor">
               <metrics coveredelements="7" coveredconditionals="0" complexity="7" coveredmethods="3" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ScheduleDescriptor.InternalScheduleDescriptor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ScheduleDescriptor.ScheduleDescriptorFromPeriods">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ScheduleDescriptor.ScheduleDescriptorFromGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(List&lt;Period&gt;,DayCountConvention)" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(Schedule)" num="47" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="66" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ScheduleDescriptor(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,AbstractBusinessdayCalendar,int,int)" num="88" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="102" count="12" type="method"/>
            <line num="103" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPeriods() : int" num="111" count="8" type="method"/>
            <line num="113" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleDescriptorFromPeriods(List&lt;Period&gt;,DayCountConvention)" num="156" count="4" type="method"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="163" count="20" type="method"/>
            <line num="165" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeriods() : List&lt;Period&gt;" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ScheduleDescriptorFromGenerator(LocalDate,LocalDate,Frequency,DaycountConvention,ShortPeriodConvention,DateRollConvention,BusinessdayCalendar,int,int,boolean)" num="198" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSchedule(LocalDate) : Schedule" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/SingleAssetDigitalOptionProductDescriptor.java" name="SingleAssetDigitalOptionProductDescriptor.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="51" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="32" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="SingleAssetDigitalOptionProductDescriptor">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetDigitalOptionProductDescriptor(String,LocalDate,double)" num="22" count="4" type="method"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line num="25" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : LocalDate" num="39" count="10" type="method"/>
            <line num="40" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="43" count="10" type="method"/>
            <line num="44" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNameOfUnderlying() : String" num="47" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/SingleAssetEuropeanOptionProductDescriptor.java" name="SingleAssetEuropeanOptionProductDescriptor.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="64" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="32" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="SingleAssetEuropeanOptionProductDescriptor">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleAssetEuropeanOptionProductDescriptor(String,LocalDate,double)" num="27" count="8" type="method"/>
            <line num="28" count="8" type="stmt"/>
            <line num="29" count="8" type="stmt"/>
            <line num="30" count="8" type="stmt"/>
            <line num="31" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingName() : String" num="47" count="16" type="method"/>
            <line num="48" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : LocalDate" num="54" count="20" type="method"/>
            <line num="55" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : Double" num="61" count="20" type="method"/>
            <line num="62" count="20" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/modelling/descriptor/VarianceGammaModelDescriptor.java" name="VarianceGammaModelDescriptor.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="10" loc="106" coveredmethods="8" methods="10" elements="27" classes="1" ncloc="53" statements="17" conditionals="0" coveredstatements="15"/>
            <class name="VarianceGammaModelDescriptor">
               <metrics coveredelements="23" coveredconditionals="0" complexity="10" coveredmethods="8" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaModelDescriptor(LocalDate,Double,DiscountCurve,DiscountCurve,double,double,double)" num="34" count="264" type="method"/>
            <line num="37" count="266" type="stmt"/>
            <line num="38" count="265" type="stmt"/>
            <line num="39" count="266" type="stmt"/>
            <line num="40" count="266" type="stmt"/>
            <line num="41" count="266" type="stmt"/>
            <line num="42" count="266" type="stmt"/>
            <line num="43" count="266" type="stmt"/>
            <line num="44" count="266" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Integer" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="60" count="266" type="method"/>
            <line num="61" count="266" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : Double" num="67" count="525" type="method"/>
            <line num="68" count="526" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForForwardRate() : DiscountCurve" num="74" count="525" type="method"/>
            <line num="75" count="525" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveForDiscountRate() : DiscountCurve" num="81" count="526" type="method"/>
            <line num="82" count="526" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="88" count="266" type="method"/>
            <line num="89" count="266" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="95" count="266" type="method"/>
            <line num="96" count="266" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="102" count="266" type="method"/>
            <line num="103" count="266" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation">
         <metrics coveredelements="106" complexity="137" loc="1284" methods="93" classes="6" statements="229" coveredconditionals="5" coveredmethods="36" elements="402" ncloc="715" files="6" conditionals="80" coveredstatements="65"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/AssetModelMonteCarloSimulationModel.java" name="AssetModelMonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="90" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetModelMonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloAssetModel.java" name="MonteCarloAssetModel.java">
            <metrics coveredelements="55" coveredconditionals="3" complexity="26" loc="209" coveredmethods="18" methods="21" elements="67" classes="1" ncloc="123" statements="40" conditionals="6" coveredstatements="34"/>
            <class name="MonteCarloAssetModel">
               <metrics coveredelements="55" coveredconditionals="3" complexity="26" coveredmethods="18" methods="21" elements="67" statements="40" conditionals="6" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(MonteCarloProcess)" num="41" count="1450" type="method"/>
            <line num="42" count="1450" type="stmt"/>
            <line num="44" count="1450" type="stmt"/>
            <line num="45" count="1450" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(ProcessModel,IndependentIncrements)" num="54" count="14" type="method"/>
            <line num="55" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloAssetModel(ProcessModel,MonteCarloProcess)" num="65" count="138" type="method"/>
            <line num="69" count="138" type="stmt"/>
            <line num="71" count="138" type="stmt"/>
            <line num="72" count="138" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="75" count="15030" type="method"/>
            <line num="77" count="15030" type="stmt"/>
            <line num="78" count="15030" type="stmt"/>
            <line falsecount="15030" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="15030" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="85" count="17458" type="method"/>
            <line num="87" count="17458" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="90" count="2408" type="method"/>
            <line num="92" count="2408" type="stmt"/>
            <line num="95" count="2408" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="98" count="16306" type="method"/>
            <line num="102" count="16306" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="105" count="13068" type="method"/>
            <line num="107" count="13068" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloAssetModel" num="115" count="1344" type="method"/>
            <line num="117" count="1344" type="stmt"/>
            <line num="119" count="1344" type="stmt"/>
            <line num="120" count="1344" type="stmt"/>
            <line num="121" count="1344" type="stmt"/>
            <line num="122" count="1344" type="stmt"/>
            <line num="123" count="1344" type="stmt"/>
            <line falsecount="0" truecount="1344" num="123" type="cond"/>
            <line num="124" count="1344" type="stmt"/>
            <line num="126" count="1344" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="1344" type="stmt"/>
            <line falsecount="1344" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="1344" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="152" count="2000002" type="method"/>
            <line num="154" count="2000002" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="162" count="20" type="method"/>
            <line num="164" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="167" count="2822" type="method"/>
            <line num="169" count="2822" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="172" count="28130" type="method"/>
            <line num="174" count="28130" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="177" count="2272" type="method"/>
            <line num="179" count="2272" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="182" count="13068" type="method"/>
            <line num="184" count="13068" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : ProcessModel" num="192" count="1632078" type="method"/>
            <line num="193" count="1632078" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="201" count="8" type="method"/>
            <line num="202" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="205" count="8" type="method"/>
            <line num="207" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModel.java" name="MonteCarloBlackScholesModel.java">
            <metrics coveredelements="11" coveredconditionals="1" complexity="12" loc="165" coveredmethods="4" methods="7" elements="41" classes="1" ncloc="74" statements="24" conditionals="10" coveredstatements="6"/>
            <class name="MonteCarloBlackScholesModel">
               <metrics coveredelements="11" coveredconditionals="1" complexity="12" coveredmethods="4" methods="7" elements="41" statements="24" conditionals="10" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel(double,double,double,BrownianMotion)" num="60" count="6" type="method"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModel(TimeDiscretization,int,double,double,double)" num="77" count="4" type="method"/>
            <line num="83" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="MonteCarloBlackScholesModel(BlackScholesModel,MonteCarloProcess)" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="101" count="26" type="method"/>
            <line num="103" count="26" type="stmt"/>
            <line num="104" count="26" type="stmt"/>
            <line falsecount="26" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="26" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloBlackScholesModel" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="150" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : BlackScholesModel" num="162" count="1631732" type="method"/>
            <line num="163" count="1631732" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloMertonModel.java" name="MonteCarloMertonModel.java">
            <metrics coveredelements="22" coveredconditionals="1" complexity="26" loc="237" coveredmethods="7" methods="17" elements="77" classes="1" ncloc="133" statements="42" conditionals="18" coveredstatements="14"/>
            <class name="MonteCarloMertonModel">
               <metrics coveredelements="22" coveredconditionals="1" complexity="26" coveredmethods="7" methods="17" elements="77" statements="42" conditionals="18" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloMertonModel(TimeDiscretization,int,int,double,double,double,double,double,double,RandomVariableFactory)" num="70" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMertonModel(TimeDiscretization,int,int,double,double,double,double,double,double)" num="112" count="6" type="method"/>
            <line num="123" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line num="126" count="6" type="stmt"/>
            <line num="129" count="6" type="stmt"/>
            <line num="132" count="6" type="stmt"/>
            <line num="135" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="143" count="100" type="method"/>
            <line num="145" count="100" type="stmt"/>
            <line num="146" count="100" type="stmt"/>
            <line falsecount="100" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="153" count="100" type="method"/>
            <line num="155" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="165" count="180" type="method"/>
            <line num="167" count="180" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="170" count="160" type="method"/>
            <line num="172" count="160" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="183" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="223" count="260" type="method"/>
            <line num="225" count="260" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="233" count="160" type="method"/>
            <line num="235" count="160" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloMultiAssetBlackScholesModel.java" name="MonteCarloMultiAssetBlackScholesModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="50" loc="430" coveredmethods="0" methods="32" elements="157" classes="1" ncloc="267" statements="93" conditionals="32" coveredstatements="0"/>
            <class name="MonteCarloMultiAssetBlackScholesModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="50" coveredmethods="0" methods="32" elements="157" statements="93" conditionals="32" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(RandomVariableFactory,BrownianMotion,double[],double,double[][])" num="78" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(BrownianMotion,double[],double,double[],double[][])" num="128" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getFactorLoadingsFromVolatilityAnCorrelation(double[],double[][]) : double[][]" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(TimeDiscretization,int,double[],double,double[],double[][])" num="159" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloMultiAssetBlackScholesModel(TimeDiscretization,int,int,double[],double,double[],double[][])" num="188" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="244" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadings() : double[][]" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatilities() : double[]" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCorrelations() : double[][]" num="327" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : MonteCarloMultiAssetBlackScholesModel" num="362" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="426" count="0" type="method"/>
            <line num="428" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloVarianceGammaModel.java" name="MonteCarloVarianceGammaModel.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="23" loc="153" coveredmethods="7" methods="16" elements="60" classes="1" ncloc="103" statements="30" conditionals="14" coveredstatements="11"/>
            <class name="MonteCarloVarianceGammaModel">
               <metrics coveredelements="18" coveredconditionals="0" complexity="23" coveredmethods="7" methods="16" elements="60" statements="30" conditionals="14" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="MonteCarloVarianceGammaModel(TimeDiscretization,int,int,double,double,double,double,double)" num="42" count="6" type="method"/>
            <line num="51" count="6" type="stmt"/>
            <line num="53" count="6" type="stmt"/>
            <line num="54" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(double,int) : RandomVariable" num="69" count="74" type="method"/>
            <line num="71" count="74" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssetValue(int,int) : RandomVariable" num="74" count="74" type="method"/>
            <line num="76" count="74" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(int) : RandomVariable" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="86" count="128" type="method"/>
            <line num="88" count="128" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="91" count="108" type="method"/>
            <line num="93" count="108" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfAssets() : int" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AssetModelMonteCarloSimulationModel" num="101" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : AssetModelMonteCarloSimulationModel" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="139" count="182" type="method"/>
            <line num="141" count="182" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="149" count="108" type="method"/>
            <line num="151" count="108" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatilities">
         <metrics coveredelements="409" complexity="246" loc="2398" methods="132" classes="16" statements="581" coveredconditionals="66" coveredmethods="67" elements="891" ncloc="1280" files="13" conditionals="178" coveredstatements="276"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/AbstractVolatilitySurface.java" name="AbstractVolatilitySurface.java">
            <metrics coveredelements="56" coveredconditionals="13" complexity="24" loc="158" coveredmethods="9" methods="12" elements="72" classes="1" ncloc="101" statements="44" conditionals="16" coveredstatements="34"/>
            <class name="AbstractVolatilitySurface">
               <metrics coveredelements="56" coveredconditionals="13" complexity="24" coveredmethods="9" methods="12" elements="72" statements="44" conditionals="16" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="33" count="6455636" type="method"/>
            <line num="35" count="6455247" type="stmt"/>
            <line num="36" count="6455961" type="stmt"/>
            <line num="37" count="6456302" type="stmt"/>
            <line num="38" count="6456448" type="stmt"/>
            <line num="39" count="6456767" type="stmt"/>
            <line num="40" count="6457047" type="stmt"/>
            <line num="41" count="6457589" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="50" count="12916280" type="method"/>
            <line num="52" count="12918929" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="12905995" type="method"/>
            <line num="57" count="12906977" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="70" count="201454168" type="method"/>
            <line num="72" count="201604063" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="86" count="99439480" type="method"/>
            <line num="88" count="99453449" type="stmt"/>
            <line falsecount="1915774" truecount="97561176" num="88" type="cond"/>
            <line num="89" count="97585240" type="stmt"/>
            <line num="92" count="1915837" type="stmt"/>
            <line falsecount="1915024" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="1915152" type="stmt"/>
            <line falsecount="1914313" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="1914394" type="stmt"/>
            <line num="100" count="1914469" type="stmt"/>
            <line num="102" count="1912904" type="stmt"/>
            <line num="104" count="1914920" type="stmt"/>
            <line num="105" count="1915320" type="stmt"/>
            <line falsecount="1914414" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="1914514" type="stmt"/>
            <line num="114" count="1912588" type="stmt"/>
            <line num="116" count="1915144" type="stmt"/>
            <line falsecount="1277332" truecount="638479" num="116" type="cond"/>
            <line num="117" count="638497" type="stmt"/>
            <line num="119" count="1277350" type="stmt"/>
            <line falsecount="1277108" truecount="288" num="119" type="cond"/>
            <line num="120" count="288" type="stmt"/>
            <line num="122" count="1277162" type="stmt"/>
            <line falsecount="1276900" truecount="288" num="122" type="cond"/>
            <line num="123" count="288" type="stmt"/>
            <line num="125" count="1276938" type="stmt"/>
            <line falsecount="638541" truecount="638524" num="125" type="cond"/>
            <line num="126" count="638532" type="stmt"/>
            <line num="129" count="638547" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="143" count="864" type="method"/>
            <line num="144" count="864" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="147" count="189910776" type="method"/>
            <line num="148" count="190080290" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="151" count="3832219" type="method"/>
            <line num="152" count="3832598" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="155" count="1915339" type="method"/>
            <line num="156" count="1915453" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/AbstractVolatilitySurfaceParametric.java" name="AbstractVolatilitySurfaceParametric.java">
            <metrics coveredelements="27" coveredconditionals="5" complexity="10" loc="111" coveredmethods="4" methods="5" elements="37" classes="1" ncloc="60" statements="22" conditionals="10" coveredstatements="18"/>
            <class name="AbstractVolatilitySurfaceParametric">
               <metrics coveredelements="27" coveredconditionals="5" complexity="10" coveredmethods="4" methods="5" elements="37" statements="22" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurfaceParametric(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="42" count="5452" type="method"/>
            <line num="43" count="5459" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurfaceParametric(String,LocalDate)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;) : AbstractVolatilitySurfaceParametric" num="60" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;,ParameterTransformation) : AbstractVolatilitySurfaceParametric" num="64" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneCalibrated(AnalyticModel,Vector&lt;AnalyticProduct&gt;,List&lt;Double&gt;,Map&lt;String,Object&gt;,ParameterTransformation,OptimizerFactory) : AbstractVolatilitySurfaceParametric" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="82" type="cond"/>
            <line num="83" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="90" type="cond"/>
            <line num="91" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="91" type="cond"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="92" type="cond"/>
            <line num="94" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilities.java" name="CapletVolatilities.java">
            <metrics coveredelements="48" coveredconditionals="13" complexity="24" loc="202" coveredmethods="3" methods="7" elements="88" classes="1" ncloc="125" statements="59" conditionals="22" coveredstatements="32"/>
            <class name="CapletVolatilities">
               <metrics coveredelements="48" coveredconditionals="13" complexity="24" coveredmethods="3" methods="7" elements="88" statements="59" conditionals="22" coveredstatements="32"/>
            </class>
            <line complexity="4" visibility="public" signature="CapletVolatilities(String,LocalDate,ForwardCurve,double[],double[],double[],QuotingConvention,DiscountCurve)" num="59" count="6451952" type="method"/>
            <line num="65" count="6451380" type="stmt"/>
            <line num="67" count="6452158" type="stmt"/>
            <line falsecount="6452352" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="6452642" type="stmt"/>
            <line falsecount="6456376" truecount="6452977" num="71" type="cond"/>
            <line num="72" count="6453291" type="stmt"/>
            <line num="73" count="6453957" type="stmt"/>
            <line num="74" count="6454216" type="stmt"/>
            <line num="75" count="6454538" type="stmt"/>
            <line complexity="1" visibility="private" signature="CapletVolatilities(String,LocalDate)" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="add(double,double,double) : void" num="94" count="6455111" type="method"/>
            <line num="95" count="6455760" type="stmt"/>
            <line num="96" count="6456468" type="stmt"/>
            <line num="97" count="6456766" type="stmt"/>
            <line falsecount="0" truecount="6457009" num="97" type="cond"/>
            <line num="98" count="6457366" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="6454308" type="stmt"/>
            <line num="106" count="6458949" type="stmt"/>
            <line num="107" count="6458145" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,VolatilitySurface.QuotingConvention) : double" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,VolatilitySurface.QuotingConvention) : double" num="116" count="102404167" type="method"/>
            <line num="118" count="102435966" type="stmt"/>
            <line falsecount="96065802" truecount="6451887" num="118" type="cond"/>
            <line num="119" count="6452249" type="stmt"/>
            <line num="122" count="96075763" type="stmt"/>
            <line num="123" count="96089074" type="stmt"/>
            <line falsecount="90124699" truecount="6040263" num="123" type="cond"/>
            <line num="124" count="6040487" type="stmt"/>
            <line num="127" count="90143658" type="stmt"/>
            <line num="128" count="90489300" type="stmt"/>
            <line falsecount="84029953" truecount="6459399" num="128" type="cond"/>
            <line num="129" count="6459393" type="stmt"/>
            <line num="131" count="90488614" type="stmt"/>
            <line num="134" count="90509642" type="stmt"/>
            <line num="135" count="90503007" type="stmt"/>
            <line falsecount="0" truecount="90496911" num="135" type="cond"/>
            <line num="136" count="90493822" type="stmt"/>
            <line num="138" count="90492521" type="stmt"/>
            <line falsecount="6459333" truecount="84034844" num="138" type="cond"/>
            <line num="139" count="84033795" type="stmt"/>
            <line num="142" count="90487320" type="stmt"/>
            <line num="146" count="90482741" type="stmt"/>
            <line num="148" count="90251429" type="stmt"/>
            <line num="151" count="96380776" type="stmt"/>
            <line complexity="8" visibility="public" signature="fromFile(File) : AbstractVolatilitySurface" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametric.java" name="CapletVolatilitiesParametric.java">
            <metrics coveredelements="52" coveredconditionals="4" complexity="11" loc="200" coveredmethods="8" methods="9" elements="54" classes="1" ncloc="92" statements="41" conditionals="4" coveredstatements="40"/>
            <class name="CapletVolatilitiesParametric">
               <metrics coveredelements="52" coveredconditionals="4" complexity="11" coveredmethods="8" methods="9" elements="54" statements="41" conditionals="4" coveredstatements="40"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,ForwardCurve,DiscountCurve,double,double,double,double,double,QuotingConvention)" num="49" count="5275" type="method"/>
            <line num="55" count="5275" type="stmt"/>
            <line num="56" count="5274" type="stmt"/>
            <line num="57" count="5274" type="stmt"/>
            <line num="58" count="5272" type="stmt"/>
            <line num="59" count="5266" type="stmt"/>
            <line num="60" count="5285" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,ForwardCurve,DiscountCurve,double,double,double,double,double)" num="76" count="172" type="method"/>
            <line num="80" count="172" type="stmt"/>
            <line num="81" count="172" type="stmt"/>
            <line num="82" count="172" type="stmt"/>
            <line num="83" count="172" type="stmt"/>
            <line num="84" count="172" type="stmt"/>
            <line num="85" count="172" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,double,double,double,double,double)" num="99" count="12" type="method"/>
            <line num="101" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametric(String,LocalDate,double,double,double,double)" num="114" count="12" type="method"/>
            <line num="115" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="121" count="8006" type="method"/>
            <line num="123" count="8006" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="129" count="2179169" type="method"/>
            <line num="131" count="2179240" type="stmt"/>
            <line falsecount="2041378" truecount="137965" num="131" type="cond"/>
            <line num="132" count="137974" type="stmt"/>
            <line num="135" count="2041405" type="stmt"/>
            <line num="141" count="2041420" type="stmt"/>
            <line num="142" count="2041442" type="stmt"/>
            <line falsecount="8588" truecount="2032886" num="142" type="cond"/>
            <line num="143" count="2032915" type="stmt"/>
            <line num="144" count="2032956" type="stmt"/>
            <line num="146" count="2033009" type="stmt"/>
            <line num="147" count="2033017" type="stmt"/>
            <line num="149" count="2033029" type="stmt"/>
            <line num="150" count="2033065" type="stmt"/>
            <line num="151" count="2033073" type="stmt"/>
            <line num="152" count="2033081" type="stmt"/>
            <line num="153" count="2033114" type="stmt"/>
            <line num="159" count="2033144" type="stmt"/>
            <line num="172" count="8588" type="stmt"/>
            <line num="175" count="2041756" type="stmt"/>
            <line num="176" count="2041766" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="179" count="5301" type="method"/>
            <line num="181" count="5301" type="stmt"/>
            <line num="182" count="5298" type="stmt"/>
            <line num="183" count="5296" type="stmt"/>
            <line num="184" count="5300" type="stmt"/>
            <line num="185" count="5301" type="stmt"/>
            <line num="187" count="5301" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="195" count="5284" type="method"/>
            <line num="197" count="5285" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricDisplacedFourParameterAnalytic.java" name="CapletVolatilitiesParametricDisplacedFourParameterAnalytic.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="175" coveredmethods="0" methods="6" elements="72" classes="1" ncloc="105" statements="52" conditionals="14" coveredstatements="0"/>
            <class name="CapletVolatilitiesParametricDisplacedFourParameterAnalytic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="6" elements="72" statements="52" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricDisplacedFourParameterAnalytic(String,LocalDate,ForwardCurve,DiscountCurve,double,boolean,double,double,double,double,double)" num="53" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricFourParameterPicewiseConstant.java" name="CapletVolatilitiesParametricFourParameterPicewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="110" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="55" statements="27" conditionals="6" coveredstatements="0"/>
            <class name="CapletVolatilitiesParametricFourParameterPicewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="39" statements="27" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricFourParameterPicewiseConstant(String,LocalDate,double,double,double,double,TimeDiscretization)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : double[]" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParameter(double[]) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneForParameter(double[]) : AbstractVolatilitySurfaceParametric" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/OptionData.java" name="OptionData.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="8" loc="61" coveredmethods="3" methods="8" elements="22" classes="1" ncloc="43" statements="14" conditionals="0" coveredstatements="9"/>
            <class name="OptionData">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="3" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="OptionData(String,LocalDate,double,double,double,QuotingConvention)" num="22" count="80" type="method"/>
            <line num="23" count="80" type="stmt"/>
            <line num="24" count="80" type="stmt"/>
            <line num="25" count="80" type="stmt"/>
            <line num="26" count="80" type="stmt"/>
            <line num="27" count="80" type="stmt"/>
            <line num="28" count="80" type="stmt"/>
            <line num="29" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlying() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : double" num="48" count="160" type="method"/>
            <line num="49" count="160" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConvention() : QuotingConvention" num="52" count="12" type="method"/>
            <line num="53" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/OptionSmileData.java" name="OptionSmileData.java">
            <metrics coveredelements="25" coveredconditionals="3" complexity="10" loc="70" coveredmethods="7" methods="8" elements="29" classes="1" ncloc="50" statements="17" conditionals="4" coveredstatements="15"/>
            <class name="OptionSmileData">
               <metrics coveredelements="25" coveredconditionals="3" complexity="10" coveredmethods="7" methods="8" elements="29" statements="17" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="3" visibility="public" signature="OptionSmileData(String,LocalDate,double[],double,double[],QuotingConvention)" num="24" count="8" type="method"/>
            <line num="25" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="8" type="stmt"/>
            <line num="29" count="8" type="stmt"/>
            <line num="30" count="8" type="stmt"/>
            <line falsecount="8" truecount="80" num="30" type="cond"/>
            <line num="31" count="80" type="stmt"/>
            <line num="33" count="8" type="stmt"/>
            <line num="34" count="8" type="stmt"/>
            <line num="35" count="8" type="stmt"/>
            <line num="36" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlying() : String" num="40" count="12" type="method"/>
            <line num="41" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="44" count="12" type="method"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="48" count="1024" type="method"/>
            <line num="49" count="1024" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="52" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSmile() : HashMap&lt;Double, OptionData&gt;" num="56" count="92" type="method"/>
            <line num="57" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOption(double) : OptionData" num="60" count="80" type="method"/>
            <line num="61" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/OptionSurfaceData.java" name="OptionSurfaceData.java">
            <metrics coveredelements="39" coveredconditionals="5" complexity="26" loc="193" coveredmethods="7" methods="13" elements="98" classes="1" ncloc="121" statements="65" conditionals="20" coveredstatements="27"/>
            <class name="OptionSurfaceData">
               <metrics coveredelements="39" coveredconditionals="5" complexity="26" coveredmethods="7" methods="13" elements="98" statements="65" conditionals="20" coveredstatements="27"/>
            </class>
            <line complexity="5" visibility="public" signature="OptionSurfaceData(String,LocalDate,double[],double[],double[][],QuotingConvention,DiscountCurve,DiscountCurve)" num="45" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="OptionSurfaceData(OptionSmileData[],DiscountCurve,DiscountCurve)" num="83" count="4" type="method"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="94" type="cond"/>
            <line num="95" count="8" type="stmt"/>
            <line num="96" count="8" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line num="107" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="8" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="123" count="10039" type="method"/>
            <line num="124" count="10037" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEquityForwardCurve() : DiscountCurve" num="127" count="10040" type="method"/>
            <line num="128" count="10040" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="140" count="502" type="method"/>
            <line num="141" count="502" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSurface() : HashMap&lt;Double, OptionSmileData&gt;" num="144" count="16" type="method"/>
            <line num="145" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : double[]" num="148" count="1011" type="method"/>
            <line num="149" count="1012" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double) : double" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,QuotingConvention) : double" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(AnalyticModel,double,double,QuotingConvention) : double" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSmile(double) : OptionSmileData" num="190" count="1004" type="method"/>
            <line num="191" count="1004" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionATMMarketDataFromArray.java" name="SwaptionATMMarketDataFromArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="116" coveredmethods="0" methods="9" elements="56" classes="1" ncloc="79" statements="39" conditionals="8" coveredstatements="0"/>
            <class name="SwaptionATMMarketDataFromArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="9" elements="56" statements="39" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(double[],double[],double,double[][])" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(ForwardCurve,DiscountCurve,double[],double[],double,double[][])" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SwaptionATMMarketDataFromArray(ForwardCurve,DiscountCurve,TimeDiscretization,TimeDiscretization,double,double[][])" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOptionMaturities() : TimeDiscretization" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenor() : TimeDiscretization" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSwapPeriodLength() : double" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,double) : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatility(double,double) : double" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVolatility(double,double,double,double) : double" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionDataLattice.java" name="SwaptionDataLattice.java">
            <metrics coveredelements="150" coveredconditionals="23" complexity="98" loc="883" coveredmethods="26" methods="49" elements="324" classes="3" ncloc="425" statements="201" conditionals="74" coveredstatements="101"/>
            <class name="SwaptionDataLattice">
               <metrics coveredelements="135" coveredconditionals="20" complexity="84" coveredmethods="23" methods="44" elements="284" statements="180" conditionals="60" coveredstatements="92"/>
            </class>
            <class name="SwaptionDataLattice.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SwaptionDataLattice.DataKey">
               <metrics coveredelements="15" coveredconditionals="3" complexity="14" coveredmethods="3" methods="5" elements="40" statements="21" conditionals="14" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,double[],double[],double[],double[])" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,int[],int[],int[],double[])" num="113" count="24" type="method"/>
            <line num="116" count="24" type="stmt"/>
            <line num="118" count="24" type="stmt"/>
            <line falsecount="24" truecount="2688" num="118" type="cond"/>
            <line num="119" count="2688" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,String,String,SchedulePrototype,SchedulePrototype,String[],int[],double[])" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,int[],int[],int[],double[])" num="161" count="28" type="method"/>
            <line num="163" count="28" type="stmt"/>
            <line num="165" count="28" type="stmt"/>
            <line falsecount="28" truecount="700" num="165" type="cond"/>
            <line num="166" count="700" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,double[],double[],double[],double[])" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype,String[],int[],double[])" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="SwaptionDataLattice(LocalDate,QuotingConvention,double,String,String,SchedulePrototype,SchedulePrototype)" num="228" count="64" type="method"/>
            <line num="230" count="64" type="stmt"/>
            <line num="231" count="64" type="stmt"/>
            <line num="232" count="64" type="stmt"/>
            <line num="233" count="64" type="stmt"/>
            <line num="234" count="64" type="stmt"/>
            <line num="235" count="64" type="stmt"/>
            <line num="236" count="64" type="stmt"/>
            <line num="237" count="64" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertLattice(QuotingConvention,AnalyticModel) : SwaptionDataLattice" num="249" count="28" type="method"/>
            <line num="250" count="28" type="stmt"/>
            <line complexity="4" visibility="public" signature="convertLattice(QuotingConvention,double,AnalyticModel) : SwaptionDataLattice" num="263" count="28" type="method"/>
            <line num="265" count="28" type="stmt"/>
            <line falsecount="28" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="270" count="28" type="stmt"/>
            <line falsecount="28" truecount="0" num="270" type="cond"/>
            <line num="272" count="28" type="stmt"/>
            <line num="273" count="28" type="stmt"/>
            <line num="274" count="28" type="stmt"/>
            <line num="275" count="28" type="stmt"/>
            <line num="277" count="28" type="stmt"/>
            <line num="278" count="700" type="stmt"/>
            <line num="279" count="700" type="stmt"/>
            <line num="280" count="700" type="stmt"/>
            <line num="281" count="700" type="stmt"/>
            <line num="284" count="28" type="stmt"/>
            <line complexity="3" visibility="public" signature="append(SwaptionDataLattice,AnalyticModel) : SwaptionDataLattice" num="302" count="12" type="method"/>
            <line num="304" count="12" type="stmt"/>
            <line num="306" count="12" type="stmt"/>
            <line num="308" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="308" type="cond"/>
            <line num="309" count="12" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="315" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="getGridNodesPerMoneyness() : Map&lt;Integer, int[][]&gt;" num="327" count="2418" type="method"/>
            <line num="330" count="2418" type="stmt"/>
            <line falsecount="86" truecount="2332" num="330" type="cond"/>
            <line num="331" count="2332" type="stmt"/>
            <line num="335" count="86" type="stmt"/>
            <line num="337" count="86" type="stmt"/>
            <line num="338" count="8120" type="stmt"/>
            <line falsecount="7794" truecount="326" num="338" type="cond"/>
            <line num="339" count="326" type="stmt"/>
            <line num="340" count="326" type="stmt"/>
            <line num="341" count="326" type="stmt"/>
            <line num="343" count="8120" type="stmt"/>
            <line num="344" count="8120" type="stmt"/>
            <line num="347" count="86" type="stmt"/>
            <line num="348" count="86" type="stmt"/>
            <line num="349" count="326" type="stmt"/>
            <line num="351" count="326" type="stmt"/>
            <line num="352" count="326" type="stmt"/>
            <line num="354" count="326" type="stmt"/>
            <line num="356" count="86" type="stmt"/>
            <line num="357" count="86" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMoneynessPerGridNode() : Map&lt;Pair&lt;Integer, Integer&gt;, int[]&gt;" num="367" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMoneyness() : int[]" num="400" count="64" type="method"/>
            <line num="401" count="64" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMoneynessAsOffsets() : double[]" num="410" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturities() : int[]" num="442" count="32" type="method"/>
            <line num="443" count="32" type="stmt"/>
            <line num="445" count="32" type="stmt"/>
            <line num="446" count="104" type="stmt"/>
            <line num="448" count="32" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMaturities(int) : int[]" num="457" count="330" type="method"/>
            <line num="458" count="330" type="stmt"/>
            <line num="459" count="330" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMaturities(double) : double[]" num="472" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTenors() : int[]" num="487" count="20" type="method"/>
            <line num="488" count="20" type="stmt"/>
            <line num="490" count="20" type="stmt"/>
            <line num="491" count="124" type="stmt"/>
            <line num="493" count="20" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTenors(int,int) : int[]" num="503" count="1860" type="method"/>
            <line num="505" count="1860" type="stmt"/>
            <line num="506" count="1860" type="stmt"/>
            <line num="507" count="1860" type="stmt"/>
            <line num="508" count="9300" type="stmt"/>
            <line falsecount="30" truecount="9270" num="508" type="cond"/>
            <line num="509" count="9270" type="stmt"/>
            <line num="512" count="1860" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTenors(double,double) : double[]" num="526" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="531" type="cond"/>
            <line num="532" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="convertMoneyness(double) : int" num="544" count="0" type="method"/>
            <line num="545" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="545" type="cond"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="547" type="cond"/>
            <line num="548" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertMaturity(int) : double" num="560" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertTenor(int,int) : double" num="572" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsEntryFor(int,int,int) : boolean" num="585" count="22024" type="method"/>
            <line num="586" count="22024" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double) : double" num="598" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int,int) : double" num="611" count="16372" type="method"/>
            <line num="612" count="16372" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String,int) : double" num="623" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValue(DataKey) : double" num="633" count="17072" type="method"/>
            <line num="634" count="17072" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,double,double,QuotingConvention,double,AnalyticModel) : double" num="650" count="0" type="method"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int,int,int,QuotingConvention,double,AnalyticModel) : double" num="668" count="700" type="method"/>
            <line num="669" count="700" type="stmt"/>
            <line num="670" count="700" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(String,int,QuotingConvention,double,AnalyticModel) : double" num="685" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="17" visibility="private" signature="convertToConvention(double,DataKey,QuotingConvention,double,QuotingConvention,double,AnalyticModel) : double" num="704" count="700" type="method"/>
            <line num="707" count="700" type="stmt"/>
            <line falsecount="700" truecount="0" num="707" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="708" type="cond"/>
            <line num="709" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="711" type="cond"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="720" count="700" type="stmt"/>
            <line num="721" count="700" type="stmt"/>
            <line num="723" count="700" type="stmt"/>
            <line num="724" count="700" type="stmt"/>
            <line num="725" count="699" type="stmt"/>
            <line num="726" count="699" type="stmt"/>
            <line falsecount="699" truecount="0" num="726" type="cond"/>
            <line num="727" count="699" type="stmt"/>
            <line num="729" count="700" type="stmt"/>
            <line falsecount="700" truecount="0" num="729" type="cond"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="700" type="stmt"/>
            <line falsecount="700" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="735" count="700" type="stmt"/>
            <line falsecount="700" truecount="0" num="735" type="cond"/>
            <line num="736" count="0" type="stmt"/>
            <line num="738" count="700" type="stmt"/>
            <line falsecount="700" truecount="0" num="738" type="cond"/>
            <line num="739" count="0" type="stmt"/>
            <line num="741" count="700" type="stmt"/>
            <line falsecount="0" truecount="700" num="741" type="cond"/>
            <line num="742" count="700" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="744" type="cond"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="756" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="763" count="1424" type="method"/>
            <line num="764" count="1424" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="770" count="30" type="method"/>
            <line num="771" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : double" num="777" count="0" type="method"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurveName() : String" num="784" count="1546" type="method"/>
            <line num="785" count="1546" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurveName() : String" num="791" count="52" type="method"/>
            <line num="792" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatMetaSchedule() : SchedulePrototype" num="798" count="1334" type="method"/>
            <line num="799" count="1334" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFixMetaSchedule() : SchedulePrototype" num="805" count="1331" type="method"/>
            <line num="806" count="1331" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="809" count="0" type="method"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(int,int,int)" num="840" count="42484" type="method"/>
            <line num="841" count="42484" type="stmt"/>
            <line num="842" count="42484" type="stmt"/>
            <line num="843" count="42484" type="stmt"/>
            <line num="844" count="42484" type="stmt"/>
            <line complexity="1" visibility="package" signature="DataKey(double,double,double)" num="847" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line complexity="5" visibility="package" signature="DataKey(String,int)" num="854" count="0" type="method"/>
            <line num="855" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line num="859" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="equals(Object) : boolean" num="862" count="39020" type="method"/>
            <line num="864" count="39020" type="stmt"/>
            <line falsecount="39020" truecount="0" num="864" type="cond"/>
            <line num="865" count="0" type="stmt"/>
            <line num="868" count="39020" type="stmt"/>
            <line falsecount="39020" truecount="0" num="868" type="cond"/>
            <line num="869" count="0" type="stmt"/>
            <line num="872" count="39020" type="stmt"/>
            <line falsecount="39020" truecount="0" num="872" type="cond"/>
            <line num="873" count="0" type="stmt"/>
            <line num="875" count="39019" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="878" count="49510" type="method"/>
            <line num="880" count="49510" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/SwaptionMarketData.java" name="SwaptionMarketData.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SwaptionMarketData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatilities/VolatilitySurface.java" name="VolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatilitySurface.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.products">
         <metrics coveredelements="445" complexity="196" loc="3642" methods="110" classes="34" statements="927" coveredconditionals="38" coveredmethods="45" elements="1167" ncloc="1790" files="28" conditionals="130" coveredstatements="362"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AbstractAssetMonteCarloProduct.java" name="AbstractAssetMonteCarloProduct.java">
            <metrics coveredelements="6" coveredconditionals="1" complexity="3" loc="44" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="24" statements="4" conditionals="2" coveredstatements="3"/>
            <class name="AbstractAssetMonteCarloProduct">
               <metrics coveredelements="6" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractAssetMonteCarloProduct()" num="25" count="3302" type="method"/>
            <line num="26" count="3302" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,MonteCarloSimulationModel) : RandomVariable" num="32" count="5810" type="method"/>
            <line num="35" count="5810" type="stmt"/>
            <line falsecount="0" truecount="5810" num="35" type="cond"/>
            <line num="36" count="5810" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AsianOption.java" name="AsianOption.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="7" loc="136" coveredmethods="3" methods="7" elements="30" classes="1" ncloc="50" statements="23" conditionals="0" coveredstatements="19"/>
            <class name="AsianOption">
               <metrics coveredelements="22" coveredconditionals="0" complexity="7" coveredmethods="3" methods="7" elements="30" statements="23" conditionals="0" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="AsianOption(double,double,TimeDiscretization,Integer)" num="45" count="30" type="method"/>
            <line num="46" count="30" type="stmt"/>
            <line num="47" count="30" type="stmt"/>
            <line num="48" count="30" type="stmt"/>
            <line num="49" count="30" type="stmt"/>
            <line num="50" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsianOption(double,double,TimeDiscretization)" num="61" count="30" type="method"/>
            <line num="62" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="75" count="42" type="method"/>
            <line num="78" count="42" type="stmt"/>
            <line num="79" count="42" type="stmt"/>
            <line num="80" count="3338" type="stmt"/>
            <line num="81" count="3338" type="stmt"/>
            <line num="83" count="42" type="stmt"/>
            <line num="86" count="42" type="stmt"/>
            <line num="89" count="42" type="stmt"/>
            <line num="90" count="42" type="stmt"/>
            <line num="91" count="42" type="stmt"/>
            <line num="94" count="42" type="stmt"/>
            <line num="95" count="42" type="stmt"/>
            <line num="96" count="42" type="stmt"/>
            <line num="98" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimesForAveraging() : TimeDiscretization" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingIndex() : Integer" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/AssetMonteCarloProduct.java" name="AssetMonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssetMonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BasketOption.java" name="BasketOption.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="86" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="33" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="BasketOption">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="21" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BasketOption(double,double,double[])" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BermudanDigitalOption.java" name="BermudanDigitalOption.java">
            <metrics coveredelements="48" coveredconditionals="4" complexity="10" loc="211" coveredmethods="4" methods="4" elements="63" classes="2" ncloc="95" statements="51" conditionals="8" coveredstatements="40"/>
            <class name="BermudanDigitalOption">
               <metrics coveredelements="48" coveredconditionals="4" complexity="10" coveredmethods="4" methods="4" elements="63" statements="51" conditionals="8" coveredstatements="40"/>
            </class>
            <class name="BermudanDigitalOption.ExerciseMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanDigitalOption(double[],double[],double[],ExerciseMethod,Map&lt;String, Object&gt;)" num="71" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="96" count="10" type="method"/>
            <line num="98" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="10" type="stmt"/>
            <line complexity="4" visibility="private" signature="getValues(double,AssetModelMonteCarloSimulationModel,double) : RandomVariable" num="113" count="10" type="method"/>
            <line num="121" count="10" type="stmt"/>
            <line num="123" count="10" type="stmt"/>
            <line num="125" count="10" type="stmt"/>
            <line num="127" count="10" type="stmt"/>
            <line falsecount="10" truecount="40" num="127" type="cond"/>
            <line num="129" count="40" type="stmt"/>
            <line num="130" count="40" type="stmt"/>
            <line num="131" count="40" type="stmt"/>
            <line num="134" count="40" type="stmt"/>
            <line num="135" count="40" type="stmt"/>
            <line num="136" count="40" type="stmt"/>
            <line num="139" count="40" type="stmt"/>
            <line num="142" count="40" type="stmt"/>
            <line num="144" count="40" type="stmt"/>
            <line num="145" count="40" type="stmt"/>
            <line num="148" count="40" type="stmt"/>
            <line num="149" count="40" type="stmt"/>
            <line num="151" count="40" type="stmt"/>
            <line num="153" count="40" type="stmt"/>
            <line num="154" count="40" type="stmt"/>
            <line num="155" count="40" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="40" type="stmt"/>
            <line num="176" count="40" type="stmt"/>
            <line num="190" count="10" type="stmt"/>
            <line num="191" count="10" type="stmt"/>
            <line num="192" count="10" type="stmt"/>
            <line num="194" count="10" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable) : RandomVariable[]" num="198" count="40" type="method"/>
            <line num="199" count="40" type="stmt"/>
            <line num="202" count="40" type="stmt"/>
            <line num="203" count="40" type="stmt"/>
            <line num="204" count="40" type="stmt"/>
            <line num="205" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="40" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BermudanOption.java" name="BermudanOption.java">
            <metrics coveredelements="76" coveredconditionals="11" complexity="19" loc="252" coveredmethods="7" methods="10" elements="97" classes="2" ncloc="137" statements="73" conditionals="14" coveredstatements="58"/>
            <class name="BermudanOption">
               <metrics coveredelements="76" coveredconditionals="11" complexity="19" coveredmethods="7" methods="10" elements="97" statements="73" conditionals="14" coveredstatements="58"/>
            </class>
            <class name="BermudanOption.ExerciseMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BermudanOption(double[],double[],double[],ExerciseMethod)" num="71" count="38" type="method"/>
            <line num="76" count="38" type="stmt"/>
            <line num="77" count="38" type="stmt"/>
            <line num="78" count="38" type="stmt"/>
            <line num="79" count="38" type="stmt"/>
            <line num="80" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="BermudanOption(double[],double[],double[])" num="95" count="22" type="method"/>
            <line num="99" count="22" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="113" count="44" type="method"/>
            <line num="115" count="44" type="stmt"/>
            <line falsecount="36" truecount="8" num="115" type="cond"/>
            <line num="117" count="8" type="stmt"/>
            <line num="118" count="8" type="stmt"/>
            <line falsecount="8" truecount="1052" num="118" type="cond"/>
            <line num="119" count="1052" type="stmt"/>
            <line num="120" count="1052" type="stmt"/>
            <line num="121" count="1052" type="stmt"/>
            <line num="123" count="8" type="stmt"/>
            <line num="126" count="36" type="stmt"/>
            <line complexity="6" visibility="private" signature="getValues(double,AssetModelMonteCarloSimulationModel,double) : RandomVariable" num="130" count="1096" type="method"/>
            <line num="138" count="1096" type="stmt"/>
            <line num="140" count="1096" type="stmt"/>
            <line num="142" count="1096" type="stmt"/>
            <line falsecount="1096" truecount="4052" num="142" type="cond"/>
            <line num="144" count="4052" type="stmt"/>
            <line num="145" count="4052" type="stmt"/>
            <line num="146" count="4052" type="stmt"/>
            <line num="149" count="4052" type="stmt"/>
            <line num="150" count="4052" type="stmt"/>
            <line num="151" count="4052" type="stmt"/>
            <line num="154" count="4052" type="stmt"/>
            <line num="159" count="4052" type="stmt"/>
            <line num="160" count="4052" type="stmt"/>
            <line num="161" count="4052" type="stmt"/>
            <line num="162" count="872" type="stmt"/>
            <line num="164" count="872" type="stmt"/>
            <line num="165" count="872" type="stmt"/>
            <line falsecount="872" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="872" type="stmt"/>
            <line num="170" count="872" type="stmt"/>
            <line num="173" count="872" type="stmt"/>
            <line num="175" count="872" type="stmt"/>
            <line num="176" count="872" type="stmt"/>
            <line num="177" count="872" type="stmt"/>
            <line num="178" count="3180" type="stmt"/>
            <line num="179" count="3180" type="stmt"/>
            <line num="181" count="3180" type="stmt"/>
            <line num="184" count="3180" type="stmt"/>
            <line falsecount="2120" truecount="1060" num="184" type="cond"/>
            <line num="185" count="1060" type="stmt"/>
            <line num="188" count="3180" type="stmt"/>
            <line num="189" count="3180" type="stmt"/>
            <line num="190" count="3180" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="4052" type="stmt"/>
            <line num="197" count="4052" type="stmt"/>
            <line num="199" count="1096" type="stmt"/>
            <line num="202" count="1096" type="stmt"/>
            <line num="203" count="1096" type="stmt"/>
            <line num="204" count="1096" type="stmt"/>
            <line num="206" count="1096" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastValuationExerciseTime() : RandomVariable" num="209" count="4" type="method"/>
            <line num="210" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExerciseDates() : double[]" num="213" count="2" type="method"/>
            <line num="214" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotionals() : double[]" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrikes() : double[]" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="225" count="872" type="method"/>
            <line num="226" count="872" type="stmt"/>
            <line num="227" count="872" type="stmt"/>
            <line num="230" count="872" type="stmt"/>
            <line falsecount="872" truecount="4360" num="230" type="cond"/>
            <line num="231" count="4360" type="stmt"/>
            <line num="234" count="872" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctionsBinning(RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesDeltaHedgedPortfolio.java" name="BlackScholesDeltaHedgedPortfolio.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="3" loc="117" coveredmethods="2" methods="2" elements="29" classes="1" ncloc="54" statements="25" conditionals="2" coveredstatements="25"/>
            <class name="BlackScholesDeltaHedgedPortfolio">
               <metrics coveredelements="29" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="29" statements="25" conditionals="2" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesDeltaHedgedPortfolio(double,double,double,double)" num="42" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="50" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="74" type="cond"/>
            <line num="76" count="200" type="stmt"/>
            <line num="77" count="200" type="stmt"/>
            <line num="80" count="200" type="stmt"/>
            <line num="92" count="200" type="stmt"/>
            <line num="93" count="200" type="stmt"/>
            <line num="96" count="200" type="stmt"/>
            <line num="97" count="200" type="stmt"/>
            <line num="100" count="200" type="stmt"/>
            <line num="101" count="200" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesHedgedPortfolio.java" name="BlackScholesHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="254" coveredmethods="0" methods="3" elements="70" classes="2" ncloc="141" statements="59" conditionals="8" coveredstatements="0"/>
            <class name="BlackScholesHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="70" statements="59" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="BlackScholesHedgedPortfolio.HedgeStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesHedgedPortfolio(double,double,double,double,double,double,HedgeStrategy)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesHedgedPortfolio(double,double,double,double)" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="92" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DeltaHedgedPortfolioWithAAD.java" name="DeltaHedgedPortfolioWithAAD.java">
            <metrics coveredelements="71" coveredconditionals="12" complexity="15" loc="207" coveredmethods="5" methods="7" elements="86" classes="1" ncloc="106" statements="63" conditionals="16" coveredstatements="54"/>
            <class name="DeltaHedgedPortfolioWithAAD">
               <metrics coveredelements="71" coveredconditionals="12" complexity="15" coveredmethods="5" methods="7" elements="86" statements="63" conditionals="16" coveredstatements="54"/>
            </class>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAAD(AssetMonteCarloProduct,int)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAAD(AssetMonteCarloProduct)" num="66" count="4" type="method"/>
            <line num="67" count="4" type="stmt"/>
            <line num="68" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="71" count="4" type="method"/>
            <line num="75" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="89" type="cond"/>
            <line num="90" count="2" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line num="110" count="4" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="113" type="cond"/>
            <line num="115" count="400" type="stmt"/>
            <line num="116" count="400" type="stmt"/>
            <line num="119" count="400" type="stmt"/>
            <line num="120" count="400" type="stmt"/>
            <line falsecount="400" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="400" type="stmt"/>
            <line num="126" count="400" type="stmt"/>
            <line num="127" count="400" type="stmt"/>
            <line falsecount="200" truecount="200" num="127" type="cond"/>
            <line num="128" count="200" type="stmt"/>
            <line num="132" count="400" type="stmt"/>
            <line num="135" count="400" type="stmt"/>
            <line num="137" count="400" type="stmt"/>
            <line num="144" count="400" type="stmt"/>
            <line num="145" count="400" type="stmt"/>
            <line num="148" count="400" type="stmt"/>
            <line num="149" count="400" type="stmt"/>
            <line num="152" count="400" type="stmt"/>
            <line num="153" count="400" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line num="162" count="4" type="stmt"/>
            <line num="164" count="4" type="stmt"/>
            <line num="167" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastOperationTimingValuation() : double" num="170" count="4" type="method"/>
            <line num="171" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastOperationTimingDerivative() : double" num="174" count="4" type="method"/>
            <line num="175" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="getRegressionBasisFunctions(RandomVariable,RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctionsBinning(RandomVariable,RandomVariable) : ArrayList&lt;RandomVariable&gt;" num="189" count="400" type="method"/>
            <line num="190" count="400" type="stmt"/>
            <line num="192" count="400" type="stmt"/>
            <line falsecount="396" truecount="4" num="192" type="cond"/>
            <line num="193" count="4" type="stmt"/>
            <line num="196" count="396" type="stmt"/>
            <line num="197" count="396" type="stmt"/>
            <line num="198" count="396" type="stmt"/>
            <line falsecount="396" truecount="7920" num="198" type="cond"/>
            <line num="199" count="7920" type="stmt"/>
            <line num="200" count="7920" type="stmt"/>
            <line num="201" count="7920" type="stmt"/>
            <line num="205" count="400" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DigitalOption.java" name="DigitalOption.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="9" loc="143" coveredmethods="4" methods="9" elements="34" classes="1" ncloc="57" statements="25" conditionals="0" coveredstatements="20"/>
            <class name="DigitalOption">
               <metrics coveredelements="24" coveredconditionals="0" complexity="9" coveredmethods="4" methods="9" elements="34" statements="25" conditionals="0" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double,int)" num="44" count="8" type="method"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOption(double,double)" num="57" count="6" type="method"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="DigitalOption(String,double,double)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="79" count="30" type="method"/>
            <line num="84" count="30" type="stmt"/>
            <line num="87" count="30" type="stmt"/>
            <line num="90" count="30" type="stmt"/>
            <line num="91" count="30" type="stmt"/>
            <line num="92" count="30" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line num="96" count="30" type="stmt"/>
            <line num="97" count="30" type="stmt"/>
            <line num="99" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingIndex() : Integer" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNameOfUnderlying() : String" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/DigitalOptionDeltaLikelihood.java" name="DigitalOptionDeltaLikelihood.java">
            <metrics coveredelements="25" coveredconditionals="2" complexity="6" loc="93" coveredmethods="2" methods="2" elements="32" classes="1" ncloc="46" statements="24" conditionals="6" coveredstatements="21"/>
            <class name="DigitalOptionDeltaLikelihood">
               <metrics coveredelements="25" coveredconditionals="2" complexity="6" coveredmethods="2" methods="2" elements="32" statements="24" conditionals="6" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="DigitalOptionDeltaLikelihood(double,double)" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="51" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="58" type="cond"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOption.java" name="EuropeanOption.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="11" loc="145" coveredmethods="6" methods="10" elements="41" classes="1" ncloc="70" statements="31" conditionals="0" coveredstatements="26"/>
            <class name="EuropeanOption">
               <metrics coveredelements="32" coveredconditionals="0" complexity="11" coveredmethods="6" methods="10" elements="41" statements="31" conditionals="0" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOption(String,double,double)" num="46" count="8" type="method"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line num="51" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double,int)" num="60" count="2906" type="method"/>
            <line num="61" count="2906" type="stmt"/>
            <line num="62" count="2906" type="stmt"/>
            <line num="63" count="2906" type="stmt"/>
            <line num="64" count="2906" type="stmt"/>
            <line num="65" count="2906" type="stmt"/>
            <line complexity="1" visibility="public" signature="EuropeanOption(double,double)" num="73" count="2902" type="method"/>
            <line num="74" count="2902" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="87" count="5502" type="method"/>
            <line num="92" count="5502" type="stmt"/>
            <line num="95" count="5502" type="stmt"/>
            <line num="98" count="5502" type="stmt"/>
            <line num="99" count="5502" type="stmt"/>
            <line num="100" count="5502" type="stmt"/>
            <line num="103" count="5502" type="stmt"/>
            <line num="104" count="5502" type="stmt"/>
            <line num="105" count="5502" type="stmt"/>
            <line num="107" count="5502" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="110" count="8" type="method"/>
            <line num="112" count="8" type="stmt"/>
            <line num="114" count="8" type="stmt"/>
            <line num="115" count="8" type="stmt"/>
            <line num="116" count="8" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="124" count="4" type="method"/>
            <line num="126" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaturity() : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStrike() : double" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnderlyingIndex() : Integer" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNameOfUnderliyng() : String" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaLikelihood.java" name="EuropeanOptionDeltaLikelihood.java">
            <metrics coveredelements="30" coveredconditionals="1" complexity="4" loc="110" coveredmethods="2" methods="2" elements="34" classes="1" ncloc="52" statements="30" conditionals="2" coveredstatements="27"/>
            <class name="EuropeanOptionDeltaLikelihood">
               <metrics coveredelements="30" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="34" statements="30" conditionals="2" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaLikelihood(double,double)" num="35" count="144" type="method"/>
            <line num="36" count="144" type="stmt"/>
            <line num="37" count="144" type="stmt"/>
            <line num="38" count="144" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="51" count="144" type="method"/>
            <line num="54" count="144" type="stmt"/>
            <line num="55" count="144" type="stmt"/>
            <line num="56" count="144" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="144" type="stmt"/>
            <line num="64" count="144" type="stmt"/>
            <line num="66" count="144" type="stmt"/>
            <line num="67" count="144" type="stmt"/>
            <line num="68" count="144" type="stmt"/>
            <line num="73" count="144" type="stmt"/>
            <line num="74" count="144" type="stmt"/>
            <line falsecount="0" truecount="144" num="74" type="cond"/>
            <line num="78" count="144" type="stmt"/>
            <line num="80" count="144" type="stmt"/>
            <line num="81" count="144" type="stmt"/>
            <line num="83" count="144" type="stmt"/>
            <line num="84" count="144" type="stmt"/>
            <line num="86" count="144" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="144" type="stmt"/>
            <line num="99" count="144" type="stmt"/>
            <line num="100" count="144" type="stmt"/>
            <line num="101" count="144" type="stmt"/>
            <line num="104" count="144" type="stmt"/>
            <line num="105" count="144" type="stmt"/>
            <line num="106" count="144" type="stmt"/>
            <line num="108" count="144" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaPathwise.java" name="EuropeanOptionDeltaPathwise.java">
            <metrics coveredelements="18" coveredconditionals="1" complexity="5" loc="82" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="36" statements="16" conditionals="2" coveredstatements="15"/>
            <class name="EuropeanOptionDeltaPathwise">
               <metrics coveredelements="18" coveredconditionals="1" complexity="5" coveredmethods="2" methods="2" elements="20" statements="16" conditionals="2" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaPathwise(double,double)" num="39" count="144" type="method"/>
            <line num="40" count="144" type="stmt"/>
            <line num="41" count="144" type="stmt"/>
            <line num="42" count="144" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="55" count="144" type="method"/>
            <line num="57" count="144" type="stmt"/>
            <line falsecount="144" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="144" type="stmt"/>
            <line num="64" count="144" type="stmt"/>
            <line num="67" count="144" type="stmt"/>
            <line num="68" count="144" type="stmt"/>
            <line num="71" count="144" type="stmt"/>
            <line num="72" count="144" type="stmt"/>
            <line num="73" count="144" type="stmt"/>
            <line num="76" count="144" type="stmt"/>
            <line num="77" count="144" type="stmt"/>
            <line num="78" count="144" type="stmt"/>
            <line num="80" count="144" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionDeltaPathwiseForGeometricModel.java" name="EuropeanOptionDeltaPathwiseForGeometricModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="88" coveredmethods="0" methods="2" elements="20" classes="1" ncloc="33" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="EuropeanOptionDeltaPathwiseForGeometricModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="20" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionDeltaPathwiseForGeometricModel(double,double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionGammaLikelihood.java" name="EuropeanOptionGammaLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="121" coveredmethods="0" methods="3" elements="49" classes="1" ncloc="70" statements="40" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionGammaLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="49" statements="40" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionGammaLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionGammaPathwise.java" name="EuropeanOptionGammaPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="95" coveredmethods="0" methods="3" elements="28" classes="1" ncloc="46" statements="23" conditionals="2" coveredstatements="0"/>
            <class name="EuropeanOptionGammaPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="28" statements="23" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionGammaPathwise(double,double)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionRhoLikelihood.java" name="EuropeanOptionRhoLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="117" coveredmethods="0" methods="3" elements="45" classes="1" ncloc="65" statements="36" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionRhoLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="45" statements="36" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionRhoLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionRhoPathwise.java" name="EuropeanOptionRhoPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="91" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="47" statements="22" conditionals="4" coveredstatements="0"/>
            <class name="EuropeanOptionRhoPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="29" statements="22" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionRhoPathwise(double,double)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionThetaPathwise.java" name="EuropeanOptionThetaPathwise.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="93" coveredmethods="0" methods="3" elements="32" classes="1" ncloc="49" statements="25" conditionals="4" coveredstatements="0"/>
            <class name="EuropeanOptionThetaPathwise">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="32" statements="25" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionThetaPathwise(double,double)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaLikelihood.java" name="EuropeanOptionVegaLikelihood.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="118" coveredmethods="0" methods="3" elements="46" classes="1" ncloc="66" statements="37" conditionals="6" coveredstatements="0"/>
            <class name="EuropeanOptionVegaLikelihood">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="46" statements="37" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionVegaLikelihood(double,double)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariableAccumulator" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaPathwise.java" name="EuropeanOptionVegaPathwise.java">
            <metrics coveredelements="29" coveredconditionals="4" complexity="6" loc="96" coveredmethods="2" methods="3" elements="32" classes="1" ncloc="49" statements="25" conditionals="4" coveredstatements="23"/>
            <class name="EuropeanOptionVegaPathwise">
               <metrics coveredelements="29" coveredconditionals="4" complexity="6" coveredmethods="2" methods="3" elements="32" statements="25" conditionals="4" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionVegaPathwise(double,double)" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(AssetModelMonteCarloSimulationModel) : double" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000000" num="70" type="cond"/>
            <line num="72" count="2000000" type="stmt"/>
            <line falsecount="1184134" truecount="815866" num="72" type="cond"/>
            <line num="75" count="815866" type="stmt"/>
            <line num="76" count="815866" type="stmt"/>
            <line num="77" count="815866" type="stmt"/>
            <line num="78" count="815866" type="stmt"/>
            <line num="80" count="815866" type="stmt"/>
            <line num="81" count="815866" type="stmt"/>
            <line num="83" count="815866" type="stmt"/>
            <line num="85" count="815866" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionWithBoundary.java" name="EuropeanOptionWithBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="264" coveredmethods="0" methods="8" elements="127" classes="3" ncloc="153" statements="95" conditionals="24" coveredstatements="0"/>
            <class name="EuropeanOptionWithBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="4" elements="96" statements="74" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="EuropeanOptionWithBoundary.BoundaryAdjustmentType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EuropeanOptionWithBoundary.ConstantBarrier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="31" statements="21" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EuropeanOptionWithBoundary(double,double)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getBoundaryAdjustment(double,double,AssetModelMonteCarloSimulationModel,RandomVariable) : RandomVariable" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRegressionBasisFunctions(double,AssetModelMonteCarloSimulationModel,RandomVariable) : RandomVariable[]" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantBarrier(AssetModelMonteCarloSimulationModel)" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBarrierDirection(int,RandomVariable[]) : RandomVariableFromDoubleArray[]" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBarrierLevel(int,RandomVariable[]) : RandomVariableFromDoubleArray" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUpperBarrier() : boolean" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/FiniteDifferenceDeltaHedgedPortfolio.java" name="FiniteDifferenceDeltaHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="134" coveredmethods="0" methods="2" elements="50" classes="1" ncloc="70" statements="42" conditionals="6" coveredstatements="0"/>
            <class name="FiniteDifferenceDeltaHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="50" statements="42" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FiniteDifferenceDeltaHedgedPortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="48" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/FiniteDifferenceHedgedPortfolio.java" name="FiniteDifferenceHedgedPortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="95" coveredmethods="0" methods="2" elements="14" classes="2" ncloc="37" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="FiniteDifferenceHedgedPortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FiniteDifferenceHedgedPortfolio.HedgeStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FiniteDifferenceHedgedPortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel,ArrayList&lt;AbstractAssetMonteCarloProduct&gt;,HedgeStrategy)" num="58" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="71" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/ForwardAgreement.java" name="ForwardAgreement.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="6" loc="124" coveredmethods="2" methods="5" elements="31" classes="1" ncloc="53" statements="26" conditionals="0" coveredstatements="14"/>
            <class name="ForwardAgreement">
               <metrics coveredelements="16" coveredconditionals="0" complexity="6" coveredmethods="2" methods="5" elements="31" statements="26" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardAgreement(String,double,double)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreement(double,double,int)" num="60" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreement(double,double)" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="87" count="2" type="method"/>
            <line num="92" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/ForwardAgreementWithFundingRequirement.java" name="ForwardAgreementWithFundingRequirement.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="136" coveredmethods="2" methods="5" elements="35" classes="1" ncloc="59" statements="30" conditionals="0" coveredstatements="17"/>
            <class name="ForwardAgreementWithFundingRequirement">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="2" methods="5" elements="35" statements="30" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="ForwardAgreementWithFundingRequirement(String,double,double,FundingCapacity)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreementWithFundingRequirement(double,double,int,FundingCapacity)" num="67" count="4" type="method"/>
            <line num="68" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="ForwardAgreementWithFundingRequirement(double,double)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="96" count="4" type="method"/>
            <line num="101" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line num="110" count="4" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="112" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/assetderivativevaluation/products/LocalRiskMinimizingHedgePortfolio.java" name="LocalRiskMinimizingHedgePortfolio.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="168" coveredmethods="0" methods="3" elements="64" classes="1" ncloc="85" statements="57" conditionals="4" coveredstatements="0"/>
            <class name="LocalRiskMinimizingHedgePortfolio">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="64" statements="57" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LocalRiskMinimizingHedgePortfolio(AbstractAssetMonteCarloProduct,AssetModelMonteCarloSimulationModel,TimeDiscretization,int)" num="49" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,AssetModelMonteCarloSimulationModel) : RandomVariable" num="60" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBasisFunctions(RandomVariable) : RandomVariable[]" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration.models">
         <metrics coveredelements="105" complexity="67" loc="502" methods="29" classes="4" statements="124" coveredconditionals="25" coveredmethods="16" elements="227" ncloc="286" files="4" conditionals="74" coveredstatements="64"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableHestonModel.java" name="CalibratableHestonModel.java">
            <metrics coveredelements="61" coveredconditionals="16" complexity="27" loc="168" coveredmethods="8" methods="10" elements="91" classes="1" ncloc="105" statements="49" conditionals="32" coveredstatements="37"/>
            <class name="CalibratableHestonModel">
               <metrics coveredelements="61" coveredconditionals="16" complexity="27" coveredmethods="8" methods="10" elements="91" statements="49" conditionals="32" coveredstatements="37"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableHestonModel(HestonModelDescriptor)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableHestonModel(HestonModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,boolean)" num="74" count="246" type="method"/>
            <line num="77" count="246" type="stmt"/>
            <line num="78" count="246" type="stmt"/>
            <line num="79" count="246" type="stmt"/>
            <line num="80" count="246" type="stmt"/>
            <line num="81" count="246" type="stmt"/>
            <line num="82" count="246" type="stmt"/>
            <line num="83" count="246" type="stmt"/>
            <line num="84" count="246" type="stmt"/>
            <line num="85" count="246" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableHestonModel" num="88" count="244" type="method"/>
            <line num="92" count="244" type="stmt"/>
            <line falsecount="0" truecount="244" num="92" type="cond"/>
            <line num="93" count="244" type="stmt"/>
            <line falsecount="0" truecount="244" num="93" type="cond"/>
            <line num="94" count="244" type="stmt"/>
            <line falsecount="0" truecount="244" num="94" type="cond"/>
            <line num="95" count="244" type="stmt"/>
            <line falsecount="0" truecount="244" num="95" type="cond"/>
            <line num="96" count="244" type="stmt"/>
            <line falsecount="0" truecount="244" num="96" type="cond"/>
            <line num="98" count="244" type="stmt"/>
            <line falsecount="244" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="244" type="stmt"/>
            <line num="107" count="244" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="110" count="2" type="method"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : HestonModel" num="115" count="242" type="method"/>
            <line num="117" count="242" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="122" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="127" count="2" type="method"/>
            <line num="129" count="2" type="stmt"/>
            <line complexity="6" visibility="private" signature="extractUpperBounds() : double[]" num="132" count="246" type="method"/>
            <line num="133" count="246" type="stmt"/>
            <line num="134" count="246" type="stmt"/>
            <line num="135" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="135" type="cond"/>
            <line num="136" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="136" type="cond"/>
            <line num="137" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="137" type="cond"/>
            <line num="138" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="138" type="cond"/>
            <line num="139" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="139" type="cond"/>
            <line num="141" count="246" type="stmt"/>
            <line complexity="6" visibility="private" signature="extractLowerBounds() : double[]" num="144" count="246" type="method"/>
            <line num="145" count="246" type="stmt"/>
            <line num="146" count="246" type="stmt"/>
            <line num="147" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="147" type="cond"/>
            <line num="148" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="148" type="cond"/>
            <line num="149" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="149" type="cond"/>
            <line num="150" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="150" type="cond"/>
            <line num="151" count="246" type="stmt"/>
            <line falsecount="246" truecount="0" num="151" type="cond"/>
            <line num="153" count="246" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableMertonModel.java" name="CalibratableMertonModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="152" coveredmethods="0" methods="10" elements="75" classes="1" ncloc="94" statements="41" conditionals="24" coveredstatements="0"/>
            <class name="CalibratableMertonModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="10" elements="75" statements="41" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableMertonModel(MertonModelDescriptor)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableMertonModel(MertonModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation)" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableProcess" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : MertonModel" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="extractUpperBounds() : double[]" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="extractLowerBounds() : double[]" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableProcess.java" name="CalibratableProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CalibratableProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/fouriermethod/calibration/models/CalibratableVarianceGammaModel.java" name="CalibratableVarianceGammaModel.java">
            <metrics coveredelements="44" coveredconditionals="9" complexity="18" loc="123" coveredmethods="8" methods="9" elements="61" classes="1" ncloc="77" statements="34" conditionals="18" coveredstatements="27"/>
            <class name="CalibratableVarianceGammaModel">
               <metrics coveredelements="44" coveredconditionals="9" complexity="18" coveredmethods="8" methods="9" elements="61" statements="34" conditionals="18" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibratableVarianceGammaModel(VarianceGammaModelDescriptor)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CalibratableVarianceGammaModel(VarianceGammaModelDescriptor,ScalarParameterInformation,ScalarParameterInformation,ScalarParameterInformation)" num="58" count="263" type="method"/>
            <line num="60" count="263" type="stmt"/>
            <line num="61" count="264" type="stmt"/>
            <line num="62" count="264" type="stmt"/>
            <line num="63" count="263" type="stmt"/>
            <line num="64" count="264" type="stmt"/>
            <line num="65" count="264" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneForModifiedParameters(double[]) : CalibratableProcess" num="68" count="262" type="method"/>
            <line num="72" count="261" type="stmt"/>
            <line falsecount="0" truecount="262" num="72" type="cond"/>
            <line num="73" count="262" type="stmt"/>
            <line falsecount="0" truecount="262" num="73" type="cond"/>
            <line num="74" count="262" type="stmt"/>
            <line falsecount="0" truecount="262" num="74" type="cond"/>
            <line num="76" count="262" type="stmt"/>
            <line num="80" count="262" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelDescriptor() : ModelDescriptor" num="83" count="2" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunctionModel() : CharacteristicFunctionModel" num="88" count="260" type="method"/>
            <line num="90" count="260" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterLowerBounds() : double[]" num="94" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterUpperBounds() : double[]" num="99" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractUpperBounds() : double[]" num="104" count="263" type="method"/>
            <line num="105" count="264" type="stmt"/>
            <line num="106" count="264" type="stmt"/>
            <line num="107" count="264" type="stmt"/>
            <line falsecount="264" truecount="0" num="107" type="cond"/>
            <line num="108" count="264" type="stmt"/>
            <line falsecount="263" truecount="0" num="108" type="cond"/>
            <line num="109" count="264" type="stmt"/>
            <line falsecount="264" truecount="0" num="109" type="cond"/>
            <line num="111" count="264" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractLowerBounds() : double[]" num="114" count="264" type="method"/>
            <line num="115" count="264" type="stmt"/>
            <line num="116" count="264" type="stmt"/>
            <line num="117" count="264" type="stmt"/>
            <line falsecount="263" truecount="0" num="117" type="cond"/>
            <line num="118" count="264" type="stmt"/>
            <line falsecount="264" truecount="0" num="118" type="cond"/>
            <line num="119" count="264" type="stmt"/>
            <line falsecount="264" truecount="0" num="119" type="cond"/>
            <line num="121" count="264" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo">
         <metrics coveredelements="1585" complexity="1108" loc="7408" methods="474" classes="25" statements="2157" coveredconditionals="455" coveredmethods="208" elements="3725" ncloc="4792" files="25" conditionals="1094" coveredstatements="922"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/AbstractMonteCarloProduct.java" name="AbstractMonteCarloProduct.java">
            <metrics coveredelements="36" coveredconditionals="3" complexity="18" loc="167" coveredmethods="9" methods="13" elements="57" classes="1" ncloc="107" statements="38" conditionals="6" coveredstatements="24"/>
            <class name="AbstractMonteCarloProduct">
               <metrics coveredelements="36" coveredconditionals="3" complexity="18" coveredmethods="9" methods="13" elements="57" statements="38" conditionals="6" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractMonteCarloProduct(String)" num="25" count="306241" type="method"/>
            <line num="26" count="306236" type="stmt"/>
            <line num="27" count="306244" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractMonteCarloProduct()" num="30" count="3316" type="method"/>
            <line num="31" count="3316" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValue(double,Model) : Object" num="37" count="4" type="method"/>
            <line num="39" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="39" type="cond"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getValues(double,Model) : Map&lt;String, Object&gt;" num="56" count="6" type="method"/>
            <line num="58" count="6" type="stmt"/>
            <line num="59" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="59" type="cond"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(MonteCarloSimulationModel) : double" num="81" count="19328" type="method"/>
            <line num="83" count="19328" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValues(double,MonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="86" count="1304" type="method"/>
            <line num="89" count="1304" type="stmt"/>
            <line num="91" count="1304" type="stmt"/>
            <line falsecount="1304" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="96" count="1304" type="stmt"/>
            <line num="97" count="1304" type="stmt"/>
            <line num="99" count="1304" type="stmt"/>
            <line num="100" count="1304" type="stmt"/>
            <line num="101" count="1304" type="stmt"/>
            <line num="103" count="1304" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(double,MonteCarloSimulationModel,Map&lt;String,Object&gt;) : Map&lt;String, Object&gt;" num="109" count="1296" type="method"/>
            <line num="112" count="1296" type="stmt"/>
            <line num="114" count="1296" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(double,MonteCarloSimulationModel,String,Object) : Map&lt;String, Object&gt;" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues(MonteCarloSimulationModel) : Map&lt;String, Object&gt;" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(MonteCarloSimulationModel,Map&lt;String,Object&gt;) : Map&lt;String, Object&gt;" num="140" count="1296" type="method"/>
            <line num="143" count="1296" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValuesForModifiedData(MonteCarloSimulationModel,String,Object) : Map&lt;String, Object&gt;" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrency() : String" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="163" count="4" type="method"/>
            <line num="165" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/AbstractRandomVariableFactory.java" name="AbstractRandomVariableFactory.java">
            <metrics coveredelements="20" coveredconditionals="6" complexity="6" loc="52" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="33" statements="11" conditionals="6" coveredstatements="11"/>
            <class name="AbstractRandomVariableFactory">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariable" num="21" count="2" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="createRandomVariableArray(double[]) : RandomVariable[]" num="32" count="58" type="method"/>
            <line num="34" count="58" type="stmt"/>
            <line num="35" count="58" type="stmt"/>
            <line falsecount="58" truecount="464" num="35" type="cond"/>
            <line num="36" count="464" type="stmt"/>
            <line num="38" count="58" type="stmt"/>
            <line complexity="3" visibility="public" signature="createRandomVariableMatrix(double[][]) : RandomVariable[][]" num="41" count="210" type="method"/>
            <line num="43" count="210" type="stmt"/>
            <line num="44" count="210" type="stmt"/>
            <line falsecount="210" truecount="9920" num="44" type="cond"/>
            <line num="45" count="9920" type="stmt"/>
            <line num="46" count="9920" type="stmt"/>
            <line falsecount="9920" truecount="489600" num="46" type="cond"/>
            <line num="47" count="489600" type="stmt"/>
            <line num="50" count="210" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianBridge.java" name="BrownianBridge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="226" coveredmethods="0" methods="14" elements="65" classes="1" ncloc="107" statements="41" conditionals="10" coveredstatements="0"/>
            <class name="BrownianBridge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="14" elements="65" statements="41" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianBridge(TimeDiscretization,int,int,RandomVariable[],RandomVariable[])" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianBridge(TimeDiscretization,int,int,RandomVariable,RandomVariable)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="doGenerateBrownianMotion() : void" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int) : RandomVariable[]" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotion.java" name="BrownianMotion.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="113" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BrownianMotion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getBrownianIncrement(double,int) : RandomVariable" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionFromMersenneRandomNumbers.java" name="BrownianMotionFromMersenneRandomNumbers.java">
            <metrics coveredelements="63" coveredconditionals="15" complexity="30" loc="259" coveredmethods="10" methods="16" elements="102" classes="1" ncloc="146" statements="60" conditionals="26" coveredstatements="38"/>
            <class name="BrownianMotionFromMersenneRandomNumbers">
               <metrics coveredelements="63" coveredconditionals="15" complexity="30" coveredmethods="10" methods="16" elements="102" statements="60" conditionals="26" coveredstatements="38"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionFromMersenneRandomNumbers(TimeDiscretization,int,int,int,RandomVariableFactory)" num="69" count="812" type="method"/>
            <line num="75" count="812" type="stmt"/>
            <line num="76" count="812" type="stmt"/>
            <line num="77" count="812" type="stmt"/>
            <line num="79" count="812" type="stmt"/>
            <line num="80" count="812" type="stmt"/>
            <line num="81" count="812" type="stmt"/>
            <line num="82" count="812" type="stmt"/>
            <line num="84" count="812" type="stmt"/>
            <line num="86" count="812" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionFromMersenneRandomNumbers(TimeDiscretization,int,int,int)" num="97" count="294" type="method"/>
            <line num="102" count="294" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="116" count="954871" type="method"/>
            <line num="118" count="954869" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="121" count="1126993" type="method"/>
            <line num="125" count="1126991" type="stmt"/>
            <line num="126" count="1127108" type="stmt"/>
            <line falsecount="1126350" truecount="758" num="126" type="cond"/>
            <line num="127" count="758" type="stmt"/>
            <line num="134" count="1127107" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateBrownianMotion() : void" num="140" count="758" type="method"/>
            <line num="141" count="758" type="stmt"/>
            <line falsecount="758" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="758" type="stmt"/>
            <line num="149" count="758" type="stmt"/>
            <line num="152" count="758" type="stmt"/>
            <line num="153" count="758" type="stmt"/>
            <line falsecount="758" truecount="97062" num="153" type="cond"/>
            <line num="154" count="97062" type="stmt"/>
            <line num="164" count="758" type="stmt"/>
            <line falsecount="758" truecount="1024616400" num="164" type="cond"/>
            <line num="165" count="1024616400" type="stmt"/>
            <line falsecount="1024616400" truecount="1052204704" num="165" type="cond"/>
            <line num="166" count="1052204704" type="stmt"/>
            <line num="168" count="1052204704" type="stmt"/>
            <line falsecount="1052204704" truecount="2147483647" num="168" type="cond"/>
            <line num="169" count="2147483647" type="stmt"/>
            <line num="170" count="2147483647" type="stmt"/>
            <line num="176" count="758" type="stmt"/>
            <line num="179" count="758" type="stmt"/>
            <line falsecount="758" truecount="97062" num="179" type="cond"/>
            <line num="180" count="97062" type="stmt"/>
            <line num="181" count="97062" type="stmt"/>
            <line falsecount="97062" truecount="186122" num="181" type="cond"/>
            <line num="182" count="186122" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="188" count="8526" type="method"/>
            <line num="190" count="8526" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="193" count="3102422" type="method"/>
            <line num="195" count="3102423" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="198" count="2008039" type="method"/>
            <line num="200" count="2008039" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="203" count="7821" type="method"/>
            <line num="205" count="7821" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="254" count="8" type="method"/>
            <line num="255" count="8" type="stmt"/>
            <line num="257" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionFromRandomNumberGenerator.java" name="BrownianMotionFromRandomNumberGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="253" coveredmethods="0" methods="15" elements="102" classes="1" ncloc="147" statements="61" conditionals="26" coveredstatements="0"/>
            <class name="BrownianMotionFromRandomNumberGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="15" elements="102" statements="61" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionFromRandomNumberGenerator(TimeDiscretization,int,int,RandomNumberGenerator,RandomVariableFactory)" num="69" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionFromRandomNumberGenerator(TimeDiscretization,int,int,RandomNumberGenerator)" num="99" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="118" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateBrownianMotion() : void" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionLazyInit.java" name="BrownianMotionLazyInit.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="77" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="BrownianMotionLazyInit">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionLazyInit(TimeDiscretization,int,int,int,RandomVariableFactory)" num="53" count="334" type="method"/>
            <line num="59" count="334" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionLazyInit(TimeDiscretization,int,int,int)" num="70" count="334" type="method"/>
            <line num="75" count="334" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionView.java" name="BrownianMotionView.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="9" loc="87" coveredmethods="7" methods="9" elements="20" classes="1" ncloc="44" statements="11" conditionals="0" coveredstatements="9"/>
            <class name="BrownianMotionView">
               <metrics coveredelements="16" coveredconditionals="0" complexity="9" coveredmethods="7" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionView(BrownianMotion,Integer[])" num="42" count="52" type="method"/>
            <line num="43" count="52" type="stmt"/>
            <line num="44" count="52" type="stmt"/>
            <line num="45" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="48" count="105075" type="method"/>
            <line num="50" count="105074" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="53" count="800" type="method"/>
            <line num="55" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="58" count="184430" type="method"/>
            <line num="60" count="184431" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="63" count="778" type="method"/>
            <line num="65" count="778" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="68" count="1146" type="method"/>
            <line num="70" count="1146" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="83" count="105077" type="method"/>
            <line num="85" count="105076" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/BrownianMotionWithControlVariate.java" name="BrownianMotionWithControlVariate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="99" coveredmethods="0" methods="9" elements="34" classes="1" ncloc="57" statements="21" conditionals="4" coveredstatements="0"/>
            <class name="BrownianMotionWithControlVariate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="9" elements="34" statements="21" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BrownianMotionWithControlVariate(BrownianMotion)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/CorrelatedBrownianMotion.java" name="CorrelatedBrownianMotion.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="123" coveredmethods="0" methods="9" elements="29" classes="1" ncloc="52" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="CorrelatedBrownianMotion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="29" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CorrelatedBrownianMotion(BrownianMotion,double[][])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBrownianIncrement(int,int) : RandomVariable" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : BrownianMotion" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : BrownianMotion" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/GammaProcess.java" name="GammaProcess.java">
            <metrics coveredelements="48" coveredconditionals="15" complexity="28" loc="254" coveredmethods="3" methods="14" elements="98" classes="1" ncloc="144" statements="58" conditionals="26" coveredstatements="30"/>
            <class name="GammaProcess">
               <metrics coveredelements="48" coveredconditionals="15" complexity="28" coveredmethods="3" methods="14" elements="98" statements="58" conditionals="26" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="GammaProcess(TimeDiscretization,int,int,int,double,double)" num="70" count="14" type="method"/>
            <line num="77" count="14" type="stmt"/>
            <line num="78" count="14" type="stmt"/>
            <line num="79" count="14" type="stmt"/>
            <line num="80" count="14" type="stmt"/>
            <line num="81" count="14" type="stmt"/>
            <line num="82" count="14" type="stmt"/>
            <line num="83" count="14" type="stmt"/>
            <line num="85" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="GammaProcess(TimeDiscretization,int,int,int,double)" num="97" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="117" count="2004" type="method"/>
            <line num="120" count="2004" type="stmt"/>
            <line num="121" count="2004" type="stmt"/>
            <line falsecount="1990" truecount="14" num="121" type="cond"/>
            <line num="122" count="14" type="stmt"/>
            <line num="130" count="2004" type="stmt"/>
            <line complexity="8" visibility="private" signature="doGenerateGammaIncrements() : void" num="136" count="14" type="method"/>
            <line num="137" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="14" type="stmt"/>
            <line num="145" count="14" type="stmt"/>
            <line num="148" count="14" type="stmt"/>
            <line num="149" count="14" type="stmt"/>
            <line falsecount="14" truecount="1400" num="149" type="cond"/>
            <line num="150" count="1400" type="stmt"/>
            <line num="151" count="1400" type="stmt"/>
            <line num="161" count="14" type="stmt"/>
            <line falsecount="14" truecount="320000" num="161" type="cond"/>
            <line num="162" count="320000" type="stmt"/>
            <line falsecount="320000" truecount="32000000" num="162" type="cond"/>
            <line num="163" count="32000000" type="stmt"/>
            <line num="165" count="32000000" type="stmt"/>
            <line falsecount="32000000" truecount="32000000" num="165" type="cond"/>
            <line num="166" count="32000000" type="stmt"/>
            <line num="167" count="32000000" type="stmt"/>
            <line num="173" count="14" type="stmt"/>
            <line num="176" count="14" type="stmt"/>
            <line falsecount="14" truecount="1400" num="176" type="cond"/>
            <line num="177" count="1400" type="stmt"/>
            <line num="178" count="1400" type="stmt"/>
            <line falsecount="1400" truecount="1400" num="178" type="cond"/>
            <line num="179" count="1400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="208" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/IndependentIncrements.java" name="IndependentIncrements.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="2" loc="112" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="20" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="IndependentIncrements">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="package" signature="getIncrement(int) : RandomVariable[]" num="36" count="757428" type="method"/>
            <line num="38" count="757423" type="stmt"/>
            <line num="39" count="757409" type="stmt"/>
            <line falsecount="757447" truecount="1063154" num="39" type="cond"/>
            <line num="40" count="1063140" type="stmt"/>
            <line num="42" count="757445" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/IndependentIncrementsFromICDF.java" name="IndependentIncrementsFromICDF.java">
            <metrics coveredelements="57" coveredconditionals="17" complexity="30" loc="295" coveredmethods="7" methods="15" elements="101" classes="1" ncloc="148" statements="58" conditionals="28" coveredstatements="33"/>
            <class name="IndependentIncrementsFromICDF">
               <metrics coveredelements="57" coveredconditionals="17" complexity="30" coveredmethods="7" methods="15" elements="101" statements="58" conditionals="28" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="IndependentIncrementsFromICDF(TimeDiscretization,int,int,int,IntFunction&lt;IntFunction&lt;DoubleUnaryOperator&gt;&gt;,RandomVariableFactory)" num="92" count="8" type="method"/>
            <line num="99" count="8" type="stmt"/>
            <line num="100" count="8" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line num="103" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="IndependentIncrementsFromICDF(TimeDiscretization,int,int,int,IntFunction&lt;IntFunction&lt;DoubleUnaryOperator&gt;&gt;)" num="135" count="8" type="method"/>
            <line num="141" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="154" count="3200" type="method"/>
            <line num="158" count="3200" type="stmt"/>
            <line num="159" count="3200" type="stmt"/>
            <line falsecount="3192" truecount="8" num="159" type="cond"/>
            <line num="160" count="8" type="stmt"/>
            <line num="167" count="3200" type="stmt"/>
            <line complexity="9" visibility="private" signature="doGenerateIncrements() : void" num="173" count="8" type="method"/>
            <line num="174" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="179" count="8" type="stmt"/>
            <line num="182" count="8" type="stmt"/>
            <line num="185" count="8" type="stmt"/>
            <line num="186" count="8" type="stmt"/>
            <line falsecount="8" truecount="800" num="186" type="cond"/>
            <line num="187" count="800" type="stmt"/>
            <line falsecount="800" truecount="2400" num="187" type="cond"/>
            <line num="188" count="2400" type="stmt"/>
            <line num="199" count="8" type="stmt"/>
            <line falsecount="8" truecount="2600000" num="199" type="cond"/>
            <line num="200" count="2600000" type="stmt"/>
            <line falsecount="2600000" truecount="260000000" num="200" type="cond"/>
            <line num="202" count="260000000" type="stmt"/>
            <line falsecount="260000000" truecount="780000000" num="202" type="cond"/>
            <line num="203" count="780000000" type="stmt"/>
            <line num="204" count="780000000" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="213" count="8" type="stmt"/>
            <line falsecount="8" truecount="800" num="213" type="cond"/>
            <line num="214" count="800" type="stmt"/>
            <line num="215" count="800" type="stmt"/>
            <line falsecount="800" truecount="2400" num="215" type="cond"/>
            <line num="216" count="2400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="222" count="8" type="method"/>
            <line num="224" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="227" count="4008" type="method"/>
            <line num="229" count="4008" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="232" count="8" type="method"/>
            <line num="234" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/JumpProcessIncrements.java" name="JumpProcessIncrements.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="219" coveredmethods="0" methods="13" elements="72" classes="1" ncloc="115" statements="41" conditionals="18" coveredstatements="0"/>
            <class name="JumpProcessIncrements">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="13" elements="72" statements="41" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JumpProcessIncrements(TimeDiscretization,double[],int,int,RandomVariableFactory)" num="66" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="JumpProcessIncrements(TimeDiscretization,double[],int,int)" num="91" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : JumpProcessIncrements" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : JumpProcessIncrements" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="110" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="doGenerateIncrements() : void" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSeed() : int" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(java.io.ObjectInputStream) : void" num="214" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/MertonJumpProcess.java" name="MertonJumpProcess.java">
            <metrics coveredelements="50" coveredconditionals="7" complexity="21" loc="168" coveredmethods="12" methods="17" elements="62" classes="1" ncloc="117" statements="37" conditionals="8" coveredstatements="31"/>
            <class name="MertonJumpProcess">
               <metrics coveredelements="50" coveredconditionals="7" complexity="21" coveredmethods="12" methods="17" elements="62" statements="37" conditionals="8" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="MertonJumpProcess(double,double,double,TimeDiscretization,int,int)" num="38" count="8" type="method"/>
            <line num="41" count="8" type="stmt"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int) : IntFunction&lt;DoubleUnaryOperator&gt;" num="49" count="2400" type="method"/>
            <line num="51" count="2400" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(int) : DoubleUnaryOperator" num="52" count="2400" type="method"/>
            <line num="54" count="2400" type="stmt"/>
            <line falsecount="1600" truecount="800" num="54" type="cond"/>
            <line num="56" count="800" type="stmt"/>
            <line num="57" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="58" count="260000000" type="method"/>
            <line num="60" count="260000000" type="stmt"/>
            <line num="64" count="1600" type="stmt"/>
            <line falsecount="800" truecount="800" num="64" type="cond"/>
            <line num="66" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="67" count="260000000" type="method"/>
            <line num="69" count="260000000" type="stmt"/>
            <line num="73" count="800" type="stmt"/>
            <line falsecount="0" truecount="800" num="73" type="cond"/>
            <line num="75" count="800" type="stmt"/>
            <line num="76" count="800" type="stmt"/>
            <line num="77" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="78" count="260000000" type="method"/>
            <line num="80" count="260000000" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="95" count="2400" type="method"/>
            <line num="97" count="2400" type="stmt"/>
            <line falsecount="1600" truecount="800" num="97" type="cond"/>
            <line num="98" count="800" type="stmt"/>
            <line num="99" count="800" type="stmt"/>
            <line num="100" count="800" type="stmt"/>
            <line num="103" count="1600" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="111" count="2400" type="method"/>
            <line num="113" count="2400" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="116" count="8" type="method"/>
            <line num="118" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="121" count="4008" type="method"/>
            <line num="123" count="4008" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="126" count="8" type="method"/>
            <line num="128" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="131" count="8" type="method"/>
            <line num="133" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpIntensity() : double" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeMean() : double" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJumpSizeStDev() : double" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/MonteCarloProduct.java" name="MonteCarloProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="143" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="25" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/MonteCarloSimulationModel.java" name="MonteCarloSimulationModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="104" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MonteCarloSimulationModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getReferenceDate() : LocalDateTime" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFactory.java" name="RandomVariableFactory.java">
            <metrics coveredelements="12" coveredconditionals="5" complexity="5" loc="86" coveredmethods="1" methods="1" elements="18" classes="1" ncloc="26" statements="9" conditionals="8" coveredstatements="6"/>
            <class name="RandomVariableFactory">
               <metrics coveredelements="12" coveredconditionals="5" complexity="5" coveredmethods="1" methods="1" elements="18" statements="9" conditionals="8" coveredstatements="6"/>
            </class>
            <line complexity="5" visibility="package" signature="getRandomVariableOrDefault(RandomVariableFactory,Object,RandomVariable) : RandomVariable" num="27" count="2160" type="method"/>
            <line num="28" count="2160" type="stmt"/>
            <line falsecount="720" truecount="1440" num="28" type="cond"/>
            <line num="29" count="1440" type="stmt"/>
            <line num="31" count="720" type="stmt"/>
            <line falsecount="720" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="720" type="stmt"/>
            <line falsecount="0" truecount="720" num="34" type="cond"/>
            <line num="35" count="720" type="stmt"/>
            <line falsecount="720" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="720" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFloatFactory.java" name="RandomVariableFloatFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="32" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="RandomVariableFloatFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableFloatFactory()" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFromArrayFactory.java" name="RandomVariableFromArrayFactory.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="7" loc="67" coveredmethods="6" methods="6" elements="18" classes="1" ncloc="36" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="RandomVariableFromArrayFactory">
               <metrics coveredelements="18" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="18" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomVariableFromArrayFactory()" num="26" count="12550" type="method"/>
            <line num="27" count="12550" type="stmt"/>
            <line num="28" count="12551" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromArrayFactory(boolean)" num="31" count="104" type="method"/>
            <line num="32" count="104" type="stmt"/>
            <line num="33" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double) : RandomVariable" num="36" count="53616349" type="method"/>
            <line num="38" count="53616427" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="41" count="10205877" type="method"/>
            <line num="43" count="10205877" type="stmt"/>
            <line complexity="2" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="53" count="192202" type="method"/>
            <line num="55" count="192202" type="stmt"/>
            <line falsecount="17162" truecount="175040" num="55" type="cond"/>
            <line num="56" count="175040" type="stmt"/>
            <line num="58" count="17162" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="62" count="96" type="method"/>
            <line num="64" count="96" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFromDoubleArray.java" name="RandomVariableFromDoubleArray.java">
            <metrics coveredelements="662" coveredconditionals="228" complexity="307" loc="1503" coveredmethods="55" methods="86" elements="1097" classes="1" ncloc="1180" statements="631" conditionals="380" coveredstatements="379"/>
            <class name="RandomVariableFromDoubleArray">
               <metrics coveredelements="662" coveredconditionals="228" complexity="307" coveredmethods="55" methods="86" elements="1097" statements="631" conditionals="380" coveredstatements="379"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableFromDoubleArray(RandomVariable)" num="60" count="1016" type="method"/>
            <line num="61" count="1016" type="stmt"/>
            <line num="62" count="1016" type="stmt"/>
            <line num="63" count="1016" type="stmt"/>
            <line falsecount="400" truecount="616" num="63" type="cond"/>
            <line num="64" count="1016" type="stmt"/>
            <line falsecount="400" truecount="616" num="64" type="cond"/>
            <line num="65" count="1016" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double)" num="73" count="1372357" type="method"/>
            <line num="74" count="1372101" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableFromDoubleArray(RandomVariable,DoubleUnaryOperator)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double,int)" num="99" count="20452107" type="method"/>
            <line num="100" count="20451464" type="stmt"/>
            <line num="101" count="20452478" type="stmt"/>
            <line num="102" count="20452832" type="stmt"/>
            <line num="103" count="20452977" type="stmt"/>
            <line num="104" count="20453190" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double)" num="113" count="19080081" type="method"/>
            <line num="114" count="19079845" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,int,double)" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double[],int)" num="145" count="992825299" type="method"/>
            <line num="146" count="991915985" type="stmt"/>
            <line num="147" count="993873730" type="stmt"/>
            <line num="148" count="994280968" type="stmt"/>
            <line num="149" count="994797662" type="stmt"/>
            <line num="150" count="995211330" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,double[])" num="166" count="992717737" type="method"/>
            <line num="167" count="992361526" type="stmt"/>
            <line complexity="4" visibility="public" signature="RandomVariableFromDoubleArray(double,IntToDoubleFunction,int,int)" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(int) : void" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromDoubleArray(double,IntToDoubleFunction,int)" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="206" count="70" type="method"/>
            <line num="208" count="70" type="stmt"/>
            <line falsecount="70" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="70" type="stmt"/>
            <line falsecount="38" truecount="32" num="211" type="cond"/>
            <line num="212" count="32" type="stmt"/>
            <line num="215" count="38" type="stmt"/>
            <line falsecount="38" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="38" type="stmt"/>
            <line falsecount="38" truecount="60160" num="219" type="cond"/>
            <line num="220" count="60160" type="stmt"/>
            <line falsecount="60160" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="225" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="228" count="582758190" type="method"/>
            <line num="230" count="583042567" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="233" count="1403596059" type="method"/>
            <line num="235" count="1404748358" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="238" count="604255621" type="method"/>
            <line num="240" count="1700509495" type="stmt"/>
            <line falsecount="2147483647" truecount="531144474" num="240" type="cond"/>
            <line num="241" count="531548761" type="stmt"/>
            <line num="243" count="1104973456" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="247" count="849583416" type="method"/>
            <line num="249" count="850540052" type="stmt"/>
            <line falsecount="842248982" truecount="7111990" num="249" type="cond"/>
            <line num="250" count="7111989" type="stmt"/>
            <line num="252" count="842996818" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMin() : double" num="256" count="6" type="method"/>
            <line num="258" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="6" type="stmt"/>
            <line num="262" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="262" type="cond"/>
            <line num="263" count="6" type="stmt"/>
            <line num="265" count="6" type="stmt"/>
            <line falsecount="6" truecount="60000000" num="265" type="cond"/>
            <line num="266" count="60000000" type="stmt"/>
            <line num="268" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMax() : double" num="271" count="1942" type="method"/>
            <line num="273" count="1942" type="stmt"/>
            <line falsecount="0" truecount="1942" num="273" type="cond"/>
            <line num="274" count="1942" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage() : double" num="286" count="8556646" type="method"/>
            <line num="288" count="8556720" type="stmt"/>
            <line falsecount="1472264" truecount="7084118" num="288" type="cond"/>
            <line num="289" count="7084118" type="stmt"/>
            <line num="291" count="1472355" type="stmt"/>
            <line falsecount="1471695" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="298" count="1471836" type="stmt"/>
            <line num="299" count="1471915" type="stmt"/>
            <line num="300" count="1472021" type="stmt"/>
            <line falsecount="1472820" truecount="2147483647" num="300" type="cond"/>
            <line num="301" count="2147483647" type="stmt"/>
            <line num="302" count="2147483647" type="stmt"/>
            <line num="303" count="2147483647" type="stmt"/>
            <line num="304" count="2147483647" type="stmt"/>
            <line num="306" count="1472845" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage(RandomVariable) : double" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVariance() : double" num="332" count="4006" type="method"/>
            <line num="334" count="4006" type="stmt"/>
            <line falsecount="3952" truecount="54" num="334" type="cond"/>
            <line num="335" count="54" type="stmt"/>
            <line num="337" count="3952" type="stmt"/>
            <line falsecount="3952" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="3952" type="stmt"/>
            <line num="346" count="3952" type="stmt"/>
            <line num="347" count="3952" type="stmt"/>
            <line num="348" count="3952" type="stmt"/>
            <line falsecount="3952" truecount="933006450" num="348" type="cond"/>
            <line num="349" count="933006450" type="stmt"/>
            <line num="350" count="933006450" type="stmt"/>
            <line num="351" count="933006450" type="stmt"/>
            <line num="352" count="933006450" type="stmt"/>
            <line num="354" count="3952" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="394" count="3742" type="method"/>
            <line num="396" count="3742" type="stmt"/>
            <line falsecount="3688" truecount="54" num="396" type="cond"/>
            <line num="397" count="54" type="stmt"/>
            <line num="399" count="3688" type="stmt"/>
            <line falsecount="3688" truecount="0" num="399" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line num="403" count="3688" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="418" count="1600" type="method"/>
            <line num="420" count="1600" type="stmt"/>
            <line falsecount="1596" truecount="4" num="420" type="cond"/>
            <line num="421" count="4" type="stmt"/>
            <line num="423" count="1596" type="stmt"/>
            <line falsecount="1596" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="1596" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="445" count="270" type="method"/>
            <line num="447" count="270" type="stmt"/>
            <line falsecount="190" truecount="80" num="447" type="cond"/>
            <line num="448" count="80" type="stmt"/>
            <line num="450" count="190" type="stmt"/>
            <line falsecount="190" truecount="0" num="450" type="cond"/>
            <line num="451" count="0" type="stmt"/>
            <line num="454" count="190" type="stmt"/>
            <line num="455" count="190" type="stmt"/>
            <line num="457" count="190" type="stmt"/>
            <line num="459" count="190" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="462" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="465" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="501" count="66" type="method"/>
            <line num="504" count="66" type="stmt"/>
            <line num="506" count="66" type="stmt"/>
            <line falsecount="66" truecount="0" num="506" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="512" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="514" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="528" count="66" type="stmt"/>
            <line num="529" count="66" type="stmt"/>
            <line num="531" count="66" type="stmt"/>
            <line num="532" count="66" type="stmt"/>
            <line falsecount="66" truecount="6536" num="532" type="cond"/>
            <line num="534" count="6536" type="stmt"/>
            <line num="535" count="6536" type="stmt"/>
            <line falsecount="6536" truecount="456920172" num="535" type="cond"/>
            <line num="538" count="456920172" type="stmt"/>
            <line num="539" count="456920172" type="stmt"/>
            <line num="541" count="6536" type="stmt"/>
            <line num="543" count="66" type="stmt"/>
            <line num="546" count="66" type="stmt"/>
            <line falsecount="0" truecount="66" num="546" type="cond"/>
            <line num="547" count="66" type="stmt"/>
            <line falsecount="66" truecount="6602" num="547" type="cond"/>
            <line num="548" count="6602" type="stmt"/>
            <line num="553" count="66" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="556" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="563" type="cond"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="577" count="2147483647" type="method"/>
            <line num="579" count="923106167" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="582" count="50907193" type="method"/>
            <line num="584" count="50907200" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="587" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="591" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="602" count="1716" type="method"/>
            <line num="604" count="1716" type="stmt"/>
            <line falsecount="1716" truecount="0" num="604" type="cond"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="609" count="1716" type="stmt"/>
            <line complexity="3" visibility="public" signature="doubleValue() : Double" num="613" count="23556347" type="method"/>
            <line num="615" count="23556346" type="stmt"/>
            <line falsecount="0" truecount="23556340" num="615" type="cond"/>
            <line num="616" count="23556348" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="618" type="cond"/>
            <line num="619" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getOperator() : IntToDoubleFunction" num="626" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="628" type="cond"/>
            <line num="629" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="630" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="638" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="646" count="1430" type="method"/>
            <line num="648" count="1430" type="stmt"/>
            <line falsecount="198" truecount="1232" num="648" type="cond"/>
            <line num="649" count="1232" type="stmt"/>
            <line num="654" count="198" type="stmt"/>
            <line num="655" count="198" type="stmt"/>
            <line falsecount="198" truecount="9900000" num="655" type="cond"/>
            <line num="656" count="9900000" type="stmt"/>
            <line num="658" count="198" type="stmt"/>
            <line complexity="12" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="662" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="666" type="cond"/>
            <line num="667" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="669" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="672" type="cond"/>
            <line num="673" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="677" type="cond"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="680" type="cond"/>
            <line num="681" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="685" type="cond"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="688" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="702" count="0" type="method"/>
            <line num="704" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="711" count="0" type="method"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="722" count="0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleBinaryOperator,DoubleBinaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="731" count="0" type="method"/>
            <line num="733" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double,double) : double" num="734" count="0" type="method"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cap(double) : RandomVariable" num="741" count="49431292" type="method"/>
            <line num="743" count="49472175" type="stmt"/>
            <line falsecount="49434752" truecount="0" num="743" type="cond"/>
            <line num="744" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="49471872" type="stmt"/>
            <line num="749" count="49678109" type="stmt"/>
            <line falsecount="49669968" truecount="2147483647" num="749" type="cond"/>
            <line num="750" count="2147483647" type="stmt"/>
            <line num="752" count="49673774" type="stmt"/>
            <line complexity="3" visibility="public" signature="floor(double) : RandomVariable" num="756" count="596429" type="method"/>
            <line num="758" count="596436" type="stmt"/>
            <line falsecount="595283" truecount="1144" num="758" type="cond"/>
            <line num="759" count="1144" type="stmt"/>
            <line num="760" count="1144" type="stmt"/>
            <line num="763" count="595280" type="stmt"/>
            <line num="764" count="595299" type="stmt"/>
            <line falsecount="595302" truecount="927254109" num="764" type="cond"/>
            <line num="765" count="927311580" type="stmt"/>
            <line num="767" count="595303" type="stmt"/>
            <line complexity="3" visibility="public" signature="add(double) : RandomVariable" num="771" count="206567505" type="method"/>
            <line num="773" count="206681494" type="stmt"/>
            <line falsecount="205962587" truecount="640612" num="773" type="cond"/>
            <line num="774" count="640612" type="stmt"/>
            <line num="775" count="640612" type="stmt"/>
            <line num="778" count="206070598" type="stmt"/>
            <line num="779" count="207147748" type="stmt"/>
            <line falsecount="207234099" truecount="2147483647" num="779" type="cond"/>
            <line num="780" count="2147483647" type="stmt"/>
            <line num="782" count="207237119" type="stmt"/>
            <line complexity="3" visibility="public" signature="sub(double) : RandomVariable" num="786" count="28116602" type="method"/>
            <line num="788" count="28131485" type="stmt"/>
            <line falsecount="28106315" truecount="18674" num="788" type="cond"/>
            <line num="789" count="18674" type="stmt"/>
            <line num="790" count="18674" type="stmt"/>
            <line num="793" count="28113066" type="stmt"/>
            <line num="794" count="28180166" type="stmt"/>
            <line falsecount="28179078" truecount="2147483647" num="794" type="cond"/>
            <line num="795" count="2147483647" type="stmt"/>
            <line num="797" count="28179512" type="stmt"/>
            <line complexity="3" visibility="public" signature="bus(double) : RandomVariable" num="801" count="0" type="method"/>
            <line num="803" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="803" type="cond"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="mult(double) : RandomVariable" num="816" count="264766797" type="method"/>
            <line num="818" count="264858702" type="stmt"/>
            <line falsecount="255739231" truecount="8898427" num="818" type="cond"/>
            <line num="819" count="8898536" type="stmt"/>
            <line num="820" count="8898591" type="stmt"/>
            <line num="823" count="255832562" type="stmt"/>
            <line num="824" count="256234174" type="stmt"/>
            <line falsecount="256292173" truecount="305180289" num="824" type="cond"/>
            <line num="825" count="753921103" type="stmt"/>
            <line num="827" count="256301387" type="stmt"/>
            <line complexity="3" visibility="public" signature="div(double) : RandomVariable" num="831" count="10458703" type="method"/>
            <line num="833" count="10461604" type="stmt"/>
            <line falsecount="10447538" truecount="10222" num="833" type="cond"/>
            <line num="834" count="10222" type="stmt"/>
            <line num="835" count="10222" type="stmt"/>
            <line num="838" count="10449291" type="stmt"/>
            <line num="839" count="10458483" type="stmt"/>
            <line falsecount="10458460" truecount="1240904721" num="839" type="cond"/>
            <line num="840" count="1246673423" type="stmt"/>
            <line num="842" count="10458543" type="stmt"/>
            <line complexity="3" visibility="public" signature="vid(double) : RandomVariable" num="846" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="848" type="cond"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="854" type="cond"/>
            <line num="855" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="pow(double) : RandomVariable" num="861" count="24976" type="method"/>
            <line num="863" count="24976" type="stmt"/>
            <line falsecount="23268" truecount="1708" num="863" type="cond"/>
            <line num="864" count="1708" type="stmt"/>
            <line num="865" count="1708" type="stmt"/>
            <line num="868" count="23268" type="stmt"/>
            <line num="869" count="23268" type="stmt"/>
            <line falsecount="23268" truecount="865640520" num="869" type="cond"/>
            <line num="870" count="865640520" type="stmt"/>
            <line num="872" count="23268" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="876" count="308366" type="method"/>
            <line num="878" count="308335" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="881" count="2324" type="method"/>
            <line num="884" count="2324" type="stmt"/>
            <line complexity="3" visibility="public" signature="squared() : RandomVariable" num="887" count="7479328" type="method"/>
            <line num="889" count="7479328" type="stmt"/>
            <line falsecount="7160256" truecount="319072" num="889" type="cond"/>
            <line num="890" count="319072" type="stmt"/>
            <line num="891" count="319072" type="stmt"/>
            <line num="894" count="7160256" type="stmt"/>
            <line num="895" count="7160256" type="stmt"/>
            <line falsecount="7160256" truecount="1993169090" num="895" type="cond"/>
            <line num="896" count="1993169090" type="stmt"/>
            <line num="898" count="7160256" type="stmt"/>
            <line complexity="3" visibility="public" signature="sqrt() : RandomVariable" num="902" count="7322" type="method"/>
            <line num="904" count="7322" type="stmt"/>
            <line falsecount="3430" truecount="3892" num="904" type="cond"/>
            <line num="905" count="3892" type="stmt"/>
            <line num="906" count="3892" type="stmt"/>
            <line num="909" count="3430" type="stmt"/>
            <line num="910" count="3430" type="stmt"/>
            <line falsecount="3430" truecount="478190861" num="910" type="cond"/>
            <line num="911" count="478204517" type="stmt"/>
            <line num="913" count="3430" type="stmt"/>
            <line complexity="3" visibility="public" signature="invert() : RandomVariable" num="917" count="58416934" type="method"/>
            <line num="919" count="58416906" type="stmt"/>
            <line falsecount="58111050" truecount="305688" num="919" type="cond"/>
            <line num="920" count="305688" type="stmt"/>
            <line num="921" count="305688" type="stmt"/>
            <line num="924" count="58111050" type="stmt"/>
            <line num="925" count="58110986" type="stmt"/>
            <line falsecount="58111228" truecount="2147483647" num="925" type="cond"/>
            <line num="926" count="2147483647" type="stmt"/>
            <line num="928" count="58111211" type="stmt"/>
            <line complexity="3" visibility="public" signature="abs() : RandomVariable" num="932" count="40348" type="method"/>
            <line num="934" count="40348" type="stmt"/>
            <line falsecount="39796" truecount="552" num="934" type="cond"/>
            <line num="935" count="552" type="stmt"/>
            <line num="936" count="552" type="stmt"/>
            <line num="939" count="39796" type="stmt"/>
            <line num="940" count="39796" type="stmt"/>
            <line falsecount="39796" truecount="2147483647" num="940" type="cond"/>
            <line num="941" count="2147483647" type="stmt"/>
            <line num="943" count="39796" type="stmt"/>
            <line complexity="3" visibility="public" signature="exp() : RandomVariableFromDoubleArray" num="947" count="1273416" type="method"/>
            <line num="949" count="1273491" type="stmt"/>
            <line falsecount="1268389" truecount="4992" num="949" type="cond"/>
            <line num="950" count="4992" type="stmt"/>
            <line num="951" count="4992" type="stmt"/>
            <line num="954" count="1268446" type="stmt"/>
            <line num="955" count="1269009" type="stmt"/>
            <line falsecount="1268911" truecount="2147483647" num="955" type="cond"/>
            <line num="956" count="2147483647" type="stmt"/>
            <line num="958" count="1268934" type="stmt"/>
            <line complexity="3" visibility="public" signature="expm1() : RandomVariableFromDoubleArray" num="962" count="0" type="method"/>
            <line num="964" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="964" type="cond"/>
            <line num="965" count="0" type="stmt"/>
            <line num="966" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line num="970" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="970" type="cond"/>
            <line num="971" count="0" type="stmt"/>
            <line num="973" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="log() : RandomVariableFromDoubleArray" num="977" count="872468" type="method"/>
            <line num="979" count="871782" type="stmt"/>
            <line falsecount="862786" truecount="1062" num="979" type="cond"/>
            <line num="980" count="1062" type="stmt"/>
            <line num="981" count="1062" type="stmt"/>
            <line num="984" count="864076" type="stmt"/>
            <line num="985" count="872362" type="stmt"/>
            <line falsecount="878961" truecount="2147483647" num="985" type="cond"/>
            <line num="986" count="2147483647" type="stmt"/>
            <line num="988" count="879037" type="stmt"/>
            <line complexity="3" visibility="public" signature="sin() : RandomVariable" num="992" count="0" type="method"/>
            <line num="994" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="994" type="cond"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1000" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1000" type="cond"/>
            <line num="1001" count="0" type="stmt"/>
            <line num="1003" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cos() : RandomVariable" num="1007" count="0" type="method"/>
            <line num="1009" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1009" type="cond"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1015" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1015" type="cond"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1018" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1026" count="88049388" type="method"/>
            <line num="1028" count="88149091" type="stmt"/>
            <line falsecount="87882578" truecount="0" num="1028" type="cond"/>
            <line num="1030" count="0" type="stmt"/>
            <line num="1034" count="87942739" type="stmt"/>
            <line num="1036" count="87812432" type="stmt"/>
            <line falsecount="87669329" truecount="120224" num="1036" type="cond"/>
            <line num="1037" count="120224" type="stmt"/>
            <line num="1038" count="120224" type="stmt"/>
            <line num="1040" count="87765695" type="stmt"/>
            <line falsecount="87613957" truecount="1396" num="1040" type="cond"/>
            <line num="1041" count="1396" type="stmt"/>
            <line num="1042" count="1396" type="stmt"/>
            <line falsecount="1396" truecount="13960000" num="1042" type="cond"/>
            <line num="1043" count="13960000" type="stmt"/>
            <line num="1045" count="1396" type="stmt"/>
            <line num="1047" count="87689096" type="stmt"/>
            <line falsecount="10394566" truecount="77185504" num="1047" type="cond"/>
            <line num="1048" count="77234483" type="stmt"/>
            <line num="1051" count="10396368" type="stmt"/>
            <line num="1052" count="10419989" type="stmt"/>
            <line falsecount="10371055" truecount="1734906361" num="1052" type="cond"/>
            <line num="1053" count="1749187534" type="stmt"/>
            <line num="1055" count="10382013" type="stmt"/>
            <line complexity="8" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1059" count="8689201" type="method"/>
            <line num="1061" count="8689308" type="stmt"/>
            <line falsecount="8637953" truecount="50654" num="1061" type="cond"/>
            <line num="1063" count="50654" type="stmt"/>
            <line num="1067" count="8638228" type="stmt"/>
            <line num="1069" count="8637952" type="stmt"/>
            <line falsecount="7811689" truecount="825962" num="1069" type="cond"/>
            <line num="1070" count="826009" type="stmt"/>
            <line num="1071" count="825956" type="stmt"/>
            <line num="1073" count="7811786" type="stmt"/>
            <line falsecount="7811173" truecount="160" num="1073" type="cond"/>
            <line num="1074" count="160" type="stmt"/>
            <line num="1075" count="160" type="stmt"/>
            <line falsecount="160" truecount="1640000" num="1075" type="cond"/>
            <line num="1076" count="1640000" type="stmt"/>
            <line num="1078" count="160" type="stmt"/>
            <line num="1080" count="7811262" type="stmt"/>
            <line falsecount="683682" truecount="7127215" num="1080" type="cond"/>
            <line num="1081" count="7127223" type="stmt"/>
            <line num="1084" count="683823" type="stmt"/>
            <line num="1085" count="685548" type="stmt"/>
            <line falsecount="683493" truecount="802546578" num="1085" type="cond"/>
            <line num="1086" count="806548819" type="stmt"/>
            <line num="1088" count="683580" type="stmt"/>
            <line complexity="7" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1092" count="50654" type="method"/>
            <line num="1094" count="50654" type="stmt"/>
            <line falsecount="50654" truecount="0" num="1094" type="cond"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1100" count="50654" type="stmt"/>
            <line num="1102" count="50654" type="stmt"/>
            <line falsecount="16" truecount="50638" num="1102" type="cond"/>
            <line num="1103" count="50638" type="stmt"/>
            <line num="1104" count="50638" type="stmt"/>
            <line num="1106" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="1106" type="cond"/>
            <line num="1107" count="0" type="stmt"/>
            <line num="1108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1108" type="cond"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1111" count="0" type="stmt"/>
            <line num="1114" count="16" type="stmt"/>
            <line num="1115" count="16" type="stmt"/>
            <line falsecount="16" truecount="1880000" num="1115" type="cond"/>
            <line num="1116" count="1880000" type="stmt"/>
            <line num="1118" count="16" type="stmt"/>
            <line complexity="8" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1122" count="174644015" type="method"/>
            <line num="1124" count="174644134" type="stmt"/>
            <line falsecount="174631434" truecount="10176" num="1124" type="cond"/>
            <line num="1126" count="10176" type="stmt"/>
            <line num="1130" count="174631671" type="stmt"/>
            <line num="1132" count="174631961" type="stmt"/>
            <line falsecount="167387249" truecount="7242339" num="1132" type="cond"/>
            <line num="1133" count="7242342" type="stmt"/>
            <line num="1134" count="7242334" type="stmt"/>
            <line num="1136" count="167387898" type="stmt"/>
            <line falsecount="93287571" truecount="74099297" num="1136" type="cond"/>
            <line num="1137" count="74099553" type="stmt"/>
            <line num="1139" count="93287681" type="stmt"/>
            <line falsecount="93282847" truecount="4474" num="1139" type="cond"/>
            <line num="1140" count="4474" type="stmt"/>
            <line num="1141" count="4474" type="stmt"/>
            <line falsecount="4474" truecount="76160080" num="1141" type="cond"/>
            <line num="1142" count="76160080" type="stmt"/>
            <line num="1144" count="4474" type="stmt"/>
            <line num="1147" count="93282926" type="stmt"/>
            <line num="1148" count="93284271" type="stmt"/>
            <line falsecount="93280117" truecount="303513462" num="1148" type="cond"/>
            <line num="1149" count="311293840" type="stmt"/>
            <line num="1151" count="93280411" type="stmt"/>
            <line complexity="7" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1155" count="9692964" type="method"/>
            <line num="1157" count="9693160" type="stmt"/>
            <line falsecount="9692242" truecount="0" num="1157" type="cond"/>
            <line num="1159" count="0" type="stmt"/>
            <line num="1163" count="9692546" type="stmt"/>
            <line num="1165" count="9692006" type="stmt"/>
            <line falsecount="9086183" truecount="605462" num="1165" type="cond"/>
            <line num="1166" count="605462" type="stmt"/>
            <line num="1167" count="605462" type="stmt"/>
            <line num="1169" count="9086353" type="stmt"/>
            <line falsecount="1989697" truecount="7096103" num="1169" type="cond"/>
            <line num="1170" count="7096104" type="stmt"/>
            <line num="1171" count="7096118" type="stmt"/>
            <line falsecount="7096107" truecount="1742028224" num="1171" type="cond"/>
            <line num="1172" count="1742211032" type="stmt"/>
            <line num="1174" count="7096107" type="stmt"/>
            <line num="1177" count="1989972" type="stmt"/>
            <line num="1178" count="1991846" type="stmt"/>
            <line falsecount="1988654" truecount="2147483647" num="1178" type="cond"/>
            <line num="1179" count="2147483647" type="stmt"/>
            <line num="1181" count="1989096" type="stmt"/>
            <line complexity="7" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1185" count="0" type="method"/>
            <line num="1187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1187" type="cond"/>
            <line num="1189" count="0" type="stmt"/>
            <line num="1193" count="0" type="stmt"/>
            <line num="1195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1195" type="cond"/>
            <line num="1196" count="0" type="stmt"/>
            <line num="1197" count="0" type="stmt"/>
            <line num="1199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1199" type="cond"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1201" type="cond"/>
            <line num="1202" count="0" type="stmt"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1208" type="cond"/>
            <line num="1209" count="0" type="stmt"/>
            <line num="1211" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1215" count="3960" type="method"/>
            <line num="1217" count="3960" type="stmt"/>
            <line falsecount="3960" truecount="0" num="1217" type="cond"/>
            <line num="1219" count="0" type="stmt"/>
            <line num="1223" count="3960" type="stmt"/>
            <line num="1225" count="3960" type="stmt"/>
            <line falsecount="2018" truecount="1942" num="1225" type="cond"/>
            <line num="1226" count="1942" type="stmt"/>
            <line num="1227" count="1942" type="stmt"/>
            <line num="1229" count="2018" type="stmt"/>
            <line falsecount="2018" truecount="0" num="1229" type="cond"/>
            <line num="1230" count="0" type="stmt"/>
            <line num="1231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1231" type="cond"/>
            <line num="1232" count="0" type="stmt"/>
            <line num="1234" count="0" type="stmt"/>
            <line num="1236" count="2018" type="stmt"/>
            <line num="1237" count="2018" type="stmt"/>
            <line falsecount="2018" truecount="169600030" num="1237" type="cond"/>
            <line num="1238" count="169600030" type="stmt"/>
            <line num="1240" count="2018" type="stmt"/>
            <line complexity="8" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1244" count="406" type="method"/>
            <line num="1246" count="406" type="stmt"/>
            <line falsecount="406" truecount="0" num="1246" type="cond"/>
            <line num="1248" count="0" type="stmt"/>
            <line num="1252" count="406" type="stmt"/>
            <line num="1254" count="406" type="stmt"/>
            <line falsecount="406" truecount="0" num="1254" type="cond"/>
            <line num="1255" count="0" type="stmt"/>
            <line num="1256" count="0" type="stmt"/>
            <line num="1258" count="406" type="stmt"/>
            <line falsecount="406" truecount="0" num="1258" type="cond"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1260" type="cond"/>
            <line num="1261" count="0" type="stmt"/>
            <line num="1263" count="0" type="stmt"/>
            <line num="1265" count="406" type="stmt"/>
            <line falsecount="6" truecount="400" num="1265" type="cond"/>
            <line num="1266" count="400" type="stmt"/>
            <line num="1269" count="6" type="stmt"/>
            <line num="1270" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="1270" type="cond"/>
            <line num="1271" count="30" type="stmt"/>
            <line num="1273" count="6" type="stmt"/>
            <line complexity="7" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1277" count="10819670" type="method"/>
            <line num="1279" count="10820587" type="stmt"/>
            <line falsecount="10807520" truecount="0" num="1279" type="cond"/>
            <line num="1281" count="0" type="stmt"/>
            <line num="1285" count="10808613" type="stmt"/>
            <line num="1287" count="10803430" type="stmt"/>
            <line falsecount="10802312" truecount="0" num="1287" type="cond"/>
            <line num="1288" count="0" type="stmt"/>
            <line num="1290" count="10804348" type="stmt"/>
            <line falsecount="10797810" truecount="0" num="1290" type="cond"/>
            <line num="1291" count="0" type="stmt"/>
            <line num="1292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1292" type="cond"/>
            <line num="1293" count="0" type="stmt"/>
            <line num="1295" count="0" type="stmt"/>
            <line num="1298" count="10800000" type="stmt"/>
            <line num="1299" count="10822054" type="stmt"/>
            <line falsecount="10763106" truecount="193461029" num="1299" type="cond"/>
            <line num="1300" count="200626924" type="stmt"/>
            <line num="1302" count="10766517" type="stmt"/>
            <line complexity="7" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1306" count="10698746" type="method"/>
            <line num="1308" count="10704839" type="stmt"/>
            <line falsecount="10700230" truecount="0" num="1308" type="cond"/>
            <line num="1310" count="0" type="stmt"/>
            <line num="1314" count="10702810" type="stmt"/>
            <line num="1316" count="10699621" type="stmt"/>
            <line falsecount="10699761" truecount="2" num="1316" type="cond"/>
            <line num="1317" count="2" type="stmt"/>
            <line num="1319" count="10702210" type="stmt"/>
            <line falsecount="10697272" truecount="6" num="1319" type="cond"/>
            <line num="1320" count="6" type="stmt"/>
            <line num="1321" count="6" type="stmt"/>
            <line falsecount="6" truecount="60000" num="1321" type="cond"/>
            <line num="1322" count="60000" type="stmt"/>
            <line num="1324" count="6" type="stmt"/>
            <line num="1327" count="10698832" type="stmt"/>
            <line num="1328" count="10726607" type="stmt"/>
            <line falsecount="10677248" truecount="49982002" num="1328" type="cond"/>
            <line num="1329" count="61596040" type="stmt"/>
            <line num="1331" count="10680471" type="stmt"/>
            <line complexity="5" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1340" count="7134844" type="method"/>
            <line num="1343" count="7134844" type="stmt"/>
            <line num="1344" count="7134844" type="stmt"/>
            <line num="1345" count="7134844" type="stmt"/>
            <line num="1347" count="7134844" type="stmt"/>
            <line falsecount="7122806" truecount="12038" num="1347" type="cond"/>
            <line num="1348" count="12038" type="stmt"/>
            <line falsecount="3200" truecount="8838" num="1348" type="cond"/>
            <line num="1349" count="8838" type="stmt"/>
            <line num="1351" count="3200" type="stmt"/>
            <line num="1355" count="7122806" type="stmt"/>
            <line num="1356" count="7122806" type="stmt"/>
            <line num="1357" count="7122806" type="stmt"/>
            <line falsecount="7122806" truecount="1807048800" num="1357" type="cond"/>
            <line num="1358" count="1807048800" type="stmt"/>
            <line falsecount="1126823050" truecount="680225750" num="1358" type="cond"/>
            <line num="1360" count="7122806" type="stmt"/>
            <line complexity="7" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1364" count="137521010" type="method"/>
            <line num="1366" count="137603347" type="stmt"/>
            <line falsecount="137218015" truecount="256" num="1366" type="cond"/>
            <line num="1368" count="256" type="stmt"/>
            <line num="1372" count="137286068" type="stmt"/>
            <line num="1374" count="137141495" type="stmt"/>
            <line falsecount="136036365" truecount="1090559" num="1374" type="cond"/>
            <line num="1375" count="1090560" type="stmt"/>
            <line num="1377" count="136166568" type="stmt"/>
            <line falsecount="135934289" truecount="920" num="1377" type="cond"/>
            <line num="1378" count="920" type="stmt"/>
            <line num="1379" count="920" type="stmt"/>
            <line falsecount="920" truecount="19800040" num="1379" type="cond"/>
            <line num="1380" count="19800040" type="stmt"/>
            <line num="1382" count="920" type="stmt"/>
            <line num="1385" count="136003947" type="stmt"/>
            <line num="1386" count="136732236" type="stmt"/>
            <line falsecount="135409962" truecount="1554629678" num="1386" type="cond"/>
            <line num="1387" count="2147483647" type="stmt"/>
            <line num="1389" count="135508385" type="stmt"/>
            <line complexity="14" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1393" count="188466389" type="method"/>
            <line num="1395" count="188541440" type="stmt"/>
            <line falsecount="188320326" truecount="508" num="1395" type="cond"/>
            <line num="1397" count="508" type="stmt"/>
            <line num="1401" count="188376422" type="stmt"/>
            <line num="1403" count="188246896" type="stmt"/>
            <line falsecount="188242837" truecount="21234" num="1403" type="cond"/>
            <line num="1404" count="21234" type="stmt"/>
            <line num="1405" count="21234" type="stmt"/>
            <line num="1407" count="188312730" type="stmt"/>
            <line falsecount="188166961" truecount="5932" num="1407" type="cond"/>
            <line num="1408" count="5932" type="stmt"/>
            <line num="1410" count="188217745" type="stmt"/>
            <line falsecount="167792857" truecount="20330227" num="1410" type="cond"/>
            <line num="1411" count="20330346" type="stmt"/>
            <line num="1413" count="167839463" type="stmt"/>
            <line falsecount="101526588" truecount="66221244" num="1413" type="cond"/>
            <line num="1414" count="66233248" type="stmt"/>
            <line num="1416" count="101594443" type="stmt"/>
            <line falsecount="156" truecount="101465499" num="1416" type="cond"/>
            <line num="1417" count="101528683" type="stmt"/>
            <line num="1418" count="102217901" type="stmt"/>
            <line falsecount="101093774" truecount="1881681065" num="1418" type="cond"/>
            <line num="1419" count="1973751305" type="stmt"/>
            <line num="1421" count="101202151" type="stmt"/>
            <line num="1424" count="156" type="stmt"/>
            <line complexity="2" visibility="public" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="1428" count="0" type="method"/>
            <line num="1431" count="0" type="stmt"/>
            <line num="1432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1432" type="cond"/>
            <line num="1433" count="0" type="stmt"/>
            <line num="1435" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1438" count="1440" type="method"/>
            <line num="1440" count="1440" type="stmt"/>
            <line falsecount="1440" truecount="0" num="1440" type="cond"/>
            <line num="1442" count="0" type="stmt"/>
            <line num="1446" count="1440" type="stmt"/>
            <line num="1448" count="1440" type="stmt"/>
            <line falsecount="1440" truecount="0" num="1448" type="cond"/>
            <line num="1449" count="0" type="stmt"/>
            <line num="1450" count="0" type="stmt"/>
            <line num="1453" count="1440" type="stmt"/>
            <line num="1454" count="1440" type="stmt"/>
            <line falsecount="1438" truecount="28620194" num="1454" type="cond"/>
            <line num="1455" count="28783042" type="stmt"/>
            <line num="1457" count="1438" type="stmt"/>
            <line complexity="7" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1461" count="1319" type="method"/>
            <line num="1463" count="1319" type="stmt"/>
            <line falsecount="1320" truecount="0" num="1463" type="cond"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1469" count="1320" type="stmt"/>
            <line num="1471" count="1320" type="stmt"/>
            <line falsecount="1320" truecount="0" num="1471" type="cond"/>
            <line num="1472" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line num="1476" count="1320" type="stmt"/>
            <line num="1477" count="1320" type="stmt"/>
            <line falsecount="1320" truecount="28153622" num="1477" type="cond"/>
            <line num="1478" count="28359971" type="stmt"/>
            <line num="1480" count="1320" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1484" count="3580" type="method"/>
            <line num="1486" count="3580" type="stmt"/>
            <line falsecount="444" truecount="3136" num="1486" type="cond"/>
            <line num="1487" count="3136" type="stmt"/>
            <line falsecount="3136" truecount="0" num="1487" type="cond"/>
            <line num="1490" count="444" type="stmt"/>
            <line num="1491" count="444" type="stmt"/>
            <line falsecount="444" truecount="9000000" num="1491" type="cond"/>
            <line num="1492" count="9000000" type="stmt"/>
            <line falsecount="9000000" truecount="0" num="1492" type="cond"/>
            <line num="1494" count="444" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="1498" count="156" type="method"/>
            <line num="1500" count="156" type="stmt"/>
            <line falsecount="0" truecount="156" num="1501" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableFromFloatArray.java" name="RandomVariableFromFloatArray.java">
            <metrics coveredelements="392" coveredconditionals="127" complexity="308" loc="1495" coveredmethods="40" methods="86" elements="1099" classes="1" ncloc="1166" statements="633" conditionals="380" coveredstatements="225"/>
            <class name="RandomVariableFromFloatArray">
               <metrics coveredelements="392" coveredconditionals="127" complexity="308" coveredmethods="40" methods="86" elements="1099" statements="633" conditionals="380" coveredstatements="225"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableFromFloatArray(RandomVariable)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableFromFloatArray(RandomVariable,DoubleUnaryOperator)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double,int)" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double)" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,float[])" num="124" count="81496" type="method"/>
            <line num="125" count="81496" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,int,double)" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,float[],int)" num="156" count="98658" type="method"/>
            <line num="157" count="98658" type="stmt"/>
            <line num="158" count="98658" type="stmt"/>
            <line num="159" count="98658" type="stmt"/>
            <line num="160" count="98658" type="stmt"/>
            <line num="161" count="98658" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,double[])" num="174" count="17162" type="method"/>
            <line num="175" count="17162" type="stmt"/>
            <line complexity="4" visibility="public" signature="RandomVariableFromFloatArray(double,IntToDoubleFunction,int,int)" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(int) : void" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableFromFloatArray(double,IntToDoubleFunction,int)" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFloatArray(double[]) : float[]" num="214" count="17162" type="method"/>
            <line num="215" count="17162" type="stmt"/>
            <line num="216" count="17162" type="stmt"/>
            <line falsecount="17162" truecount="688942278" num="216" type="cond"/>
            <line num="217" count="688942278" type="stmt"/>
            <line num="219" count="17162" type="stmt"/>
            <line complexity="2" visibility="private" signature="getDoubleArray(float[]) : double[]" num="222" count="206" type="method"/>
            <line num="223" count="206" type="stmt"/>
            <line num="224" count="206" type="stmt"/>
            <line falsecount="206" truecount="20120000" num="224" type="cond"/>
            <line num="225" count="20120000" type="stmt"/>
            <line num="227" count="206" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="230" count="2" type="method"/>
            <line num="232" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line falsecount="2" truecount="20000" num="243" type="cond"/>
            <line num="244" count="20000" type="stmt"/>
            <line falsecount="20000" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="252" count="51342" type="method"/>
            <line num="254" count="51342" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="257" count="114712" type="method"/>
            <line num="259" count="114712" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="262" count="1207284656" type="method"/>
            <line num="264" count="1207284656" type="stmt"/>
            <line falsecount="1207284656" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="1207284656" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="271" count="109484" type="method"/>
            <line num="273" count="109484" type="stmt"/>
            <line falsecount="109484" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="109484" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMin() : double" num="280" count="2" type="method"/>
            <line num="282" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="286" type="cond"/>
            <line num="287" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line falsecount="2" truecount="20000000" num="289" type="cond"/>
            <line num="290" count="20000000" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMax() : double" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage() : double" num="310" count="3970" type="method"/>
            <line num="312" count="3970" type="stmt"/>
            <line falsecount="3970" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="3970" type="stmt"/>
            <line falsecount="3970" truecount="0" num="315" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="322" count="3970" type="stmt"/>
            <line num="323" count="3970" type="stmt"/>
            <line num="324" count="3970" type="stmt"/>
            <line falsecount="3970" truecount="705124376" num="324" type="cond"/>
            <line num="325" count="705124376" type="stmt"/>
            <line num="326" count="705124376" type="stmt"/>
            <line num="327" count="705124376" type="stmt"/>
            <line num="328" count="705124376" type="stmt"/>
            <line num="330" count="3970" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAverage(RandomVariable) : double" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVariance() : double" num="356" count="904" type="method"/>
            <line num="358" count="904" type="stmt"/>
            <line falsecount="904" truecount="0" num="358" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="904" type="stmt"/>
            <line falsecount="904" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="365" count="904" type="stmt"/>
            <line num="370" count="904" type="stmt"/>
            <line num="371" count="904" type="stmt"/>
            <line num="372" count="904" type="stmt"/>
            <line falsecount="904" truecount="292342224" num="372" type="cond"/>
            <line num="373" count="292342224" type="stmt"/>
            <line num="374" count="292342224" type="stmt"/>
            <line num="375" count="292342224" type="stmt"/>
            <line num="376" count="292342224" type="stmt"/>
            <line num="378" count="904" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="418" count="814" type="method"/>
            <line num="420" count="814" type="stmt"/>
            <line falsecount="814" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="814" type="stmt"/>
            <line falsecount="814" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="814" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="442" count="328" type="method"/>
            <line num="444" count="328" type="stmt"/>
            <line falsecount="328" truecount="0" num="444" type="cond"/>
            <line num="445" count="0" type="stmt"/>
            <line num="447" count="328" type="stmt"/>
            <line falsecount="328" truecount="0" num="447" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="328" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="457" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="459" type="cond"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="469" count="10" type="method"/>
            <line num="471" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="474" type="cond"/>
            <line num="475" count="0" type="stmt"/>
            <line num="478" count="10" type="stmt"/>
            <line num="479" count="10" type="stmt"/>
            <line num="481" count="10" type="stmt"/>
            <line num="483" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="486" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="517" type="cond"/>
            <line num="518" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="525" count="18" type="method"/>
            <line num="528" count="18" type="stmt"/>
            <line num="530" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="530" type="cond"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="538" type="cond"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="552" count="18" type="stmt"/>
            <line num="553" count="18" type="stmt"/>
            <line num="555" count="18" type="stmt"/>
            <line num="556" count="18" type="stmt"/>
            <line falsecount="18" truecount="1836" num="556" type="cond"/>
            <line num="558" count="1836" type="stmt"/>
            <line num="559" count="1836" type="stmt"/>
            <line falsecount="1836" truecount="150858568" num="559" type="cond"/>
            <line num="562" count="150858568" type="stmt"/>
            <line num="563" count="150858568" type="stmt"/>
            <line num="565" count="1836" type="stmt"/>
            <line num="567" count="18" type="stmt"/>
            <line num="570" count="18" type="stmt"/>
            <line falsecount="0" truecount="18" num="570" type="cond"/>
            <line num="571" count="18" type="stmt"/>
            <line falsecount="18" truecount="1854" num="571" type="cond"/>
            <line num="572" count="1854" type="stmt"/>
            <line num="577" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="580" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="587" type="cond"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="601" count="1207563974" type="method"/>
            <line num="603" count="1207563974" type="stmt"/>
            <line complexity="1" visibility="public" signature="cache() : RandomVariable" num="606" count="3060" type="method"/>
            <line num="608" count="3060" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="611" count="0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="613" type="cond"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="615" count="0" type="method"/>
            <line num="617" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="625" count="206" type="method"/>
            <line num="627" count="206" type="stmt"/>
            <line falsecount="206" truecount="0" num="627" type="cond"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="631" count="206" type="stmt"/>
            <line complexity="3" visibility="public" signature="doubleValue() : Double" num="635" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="637" type="cond"/>
            <line num="638" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="640" type="cond"/>
            <line num="641" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getOperator() : IntToDoubleFunction" num="648" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="650" type="cond"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="652" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="660" count="0" type="method"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="668" count="0" type="method"/>
            <line num="670" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="670" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="676" type="cond"/>
            <line num="677" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="683" count="0" type="method"/>
            <line num="686" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="688" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="690" type="cond"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="693" type="cond"/>
            <line num="694" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="698" type="cond"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="701" type="cond"/>
            <line num="702" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="709" type="cond"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="723" count="0" type="method"/>
            <line num="725" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="732" count="0" type="method"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line num="742" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="743" count="0" type="method"/>
            <line num="745" count="0" type="stmt"/>
            <line num="749" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cap(double) : RandomVariable" num="752" count="0" type="method"/>
            <line num="754" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="754" type="cond"/>
            <line num="755" count="0" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="760" type="cond"/>
            <line num="761" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="floor(double) : RandomVariable" num="767" count="384" type="method"/>
            <line num="769" count="384" type="stmt"/>
            <line falsecount="384" truecount="0" num="769" type="cond"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="774" count="384" type="stmt"/>
            <line num="775" count="384" type="stmt"/>
            <line falsecount="384" truecount="20800000" num="775" type="cond"/>
            <line num="776" count="20800000" type="stmt"/>
            <line num="778" count="384" type="stmt"/>
            <line complexity="3" visibility="public" signature="add(double) : RandomVariable" num="782" count="3092" type="method"/>
            <line num="784" count="3092" type="stmt"/>
            <line falsecount="3092" truecount="0" num="784" type="cond"/>
            <line num="785" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line num="789" count="3092" type="stmt"/>
            <line num="790" count="3092" type="stmt"/>
            <line falsecount="3092" truecount="186000050" num="790" type="cond"/>
            <line num="791" count="186000050" type="stmt"/>
            <line num="793" count="3092" type="stmt"/>
            <line complexity="3" visibility="public" signature="sub(double) : RandomVariable" num="797" count="3346" type="method"/>
            <line num="799" count="3346" type="stmt"/>
            <line falsecount="3346" truecount="0" num="799" type="cond"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="804" count="3346" type="stmt"/>
            <line num="805" count="3346" type="stmt"/>
            <line falsecount="3346" truecount="156840000" num="805" type="cond"/>
            <line num="806" count="156840000" type="stmt"/>
            <line num="808" count="3346" type="stmt"/>
            <line complexity="3" visibility="public" signature="bus(double) : RandomVariable" num="812" count="0" type="method"/>
            <line num="814" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="814" type="cond"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="819" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="820" type="cond"/>
            <line num="821" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="mult(double) : RandomVariable" num="827" count="5858" type="method"/>
            <line num="829" count="5858" type="stmt"/>
            <line falsecount="5858" truecount="0" num="829" type="cond"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="834" count="5858" type="stmt"/>
            <line num="835" count="5858" type="stmt"/>
            <line falsecount="5858" truecount="283400080" num="835" type="cond"/>
            <line num="836" count="283400080" type="stmt"/>
            <line num="838" count="5858" type="stmt"/>
            <line complexity="3" visibility="public" signature="div(double) : RandomVariable" num="842" count="332" type="method"/>
            <line num="844" count="332" type="stmt"/>
            <line falsecount="332" truecount="0" num="844" type="cond"/>
            <line num="845" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line num="849" count="332" type="stmt"/>
            <line num="850" count="332" type="stmt"/>
            <line falsecount="332" truecount="6520030" num="850" type="cond"/>
            <line num="851" count="6520030" type="stmt"/>
            <line num="853" count="332" type="stmt"/>
            <line complexity="3" visibility="public" signature="vid(double) : RandomVariable" num="857" count="0" type="method"/>
            <line num="859" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="859" type="cond"/>
            <line num="860" count="0" type="stmt"/>
            <line num="861" count="0" type="stmt"/>
            <line num="864" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="865" type="cond"/>
            <line num="866" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="pow(double) : RandomVariable" num="872" count="972" type="method"/>
            <line num="874" count="972" type="stmt"/>
            <line falsecount="972" truecount="0" num="874" type="cond"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="879" count="972" type="stmt"/>
            <line num="880" count="972" type="stmt"/>
            <line falsecount="972" truecount="96000072" num="880" type="cond"/>
            <line num="881" count="96000072" type="stmt"/>
            <line num="883" count="972" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="887" count="0" type="method"/>
            <line num="889" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConditionalExpectation(ConditionalExpectationEstimator) : RandomVariable" num="892" count="0" type="method"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="squared() : RandomVariable" num="898" count="8078" type="method"/>
            <line num="900" count="8078" type="stmt"/>
            <line falsecount="8078" truecount="0" num="900" type="cond"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line num="905" count="8078" type="stmt"/>
            <line num="906" count="8078" type="stmt"/>
            <line falsecount="8078" truecount="81440036" num="906" type="cond"/>
            <line num="907" count="81440036" type="stmt"/>
            <line num="909" count="8078" type="stmt"/>
            <line complexity="3" visibility="public" signature="sqrt() : RandomVariable" num="913" count="6" type="method"/>
            <line num="915" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="915" type="cond"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line num="920" count="6" type="stmt"/>
            <line num="921" count="6" type="stmt"/>
            <line falsecount="6" truecount="36" num="921" type="cond"/>
            <line num="922" count="36" type="stmt"/>
            <line num="924" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="invert() : RandomVariable" num="928" count="0" type="method"/>
            <line num="930" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="930" type="cond"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="936" type="cond"/>
            <line num="937" count="0" type="stmt"/>
            <line num="939" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="abs() : RandomVariable" num="943" count="196" type="method"/>
            <line num="945" count="196" type="stmt"/>
            <line falsecount="196" truecount="0" num="945" type="cond"/>
            <line num="946" count="0" type="stmt"/>
            <line num="947" count="0" type="stmt"/>
            <line num="950" count="196" type="stmt"/>
            <line num="951" count="196" type="stmt"/>
            <line falsecount="196" truecount="19600000" num="951" type="cond"/>
            <line num="952" count="19600000" type="stmt"/>
            <line num="954" count="196" type="stmt"/>
            <line complexity="3" visibility="public" signature="exp() : RandomVariableFromFloatArray" num="958" count="2024" type="method"/>
            <line num="960" count="2024" type="stmt"/>
            <line falsecount="2024" truecount="0" num="960" type="cond"/>
            <line num="961" count="0" type="stmt"/>
            <line num="962" count="0" type="stmt"/>
            <line num="965" count="2024" type="stmt"/>
            <line num="966" count="2024" type="stmt"/>
            <line falsecount="2024" truecount="71840000" num="966" type="cond"/>
            <line num="967" count="71840000" type="stmt"/>
            <line num="969" count="2024" type="stmt"/>
            <line complexity="3" visibility="public" signature="log() : RandomVariableFromFloatArray" num="973" count="1548" type="method"/>
            <line num="975" count="1548" type="stmt"/>
            <line falsecount="1548" truecount="0" num="975" type="cond"/>
            <line num="976" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line num="980" count="1548" type="stmt"/>
            <line num="981" count="1548" type="stmt"/>
            <line falsecount="1548" truecount="30960000" num="981" type="cond"/>
            <line num="982" count="30960000" type="stmt"/>
            <line num="984" count="1548" type="stmt"/>
            <line complexity="3" visibility="public" signature="sin() : RandomVariable" num="988" count="0" type="method"/>
            <line num="990" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="990" type="cond"/>
            <line num="991" count="0" type="stmt"/>
            <line num="992" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="996" type="cond"/>
            <line num="997" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cos() : RandomVariable" num="1003" count="0" type="method"/>
            <line num="1005" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1005" type="cond"/>
            <line num="1006" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1011" type="cond"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1022" count="36028" type="method"/>
            <line num="1024" count="36028" type="stmt"/>
            <line falsecount="36028" truecount="0" num="1024" type="cond"/>
            <line num="1026" count="0" type="stmt"/>
            <line num="1030" count="36028" type="stmt"/>
            <line num="1032" count="36028" type="stmt"/>
            <line falsecount="36028" truecount="0" num="1032" type="cond"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1034" count="0" type="stmt"/>
            <line num="1036" count="36028" type="stmt"/>
            <line falsecount="36028" truecount="0" num="1036" type="cond"/>
            <line num="1037" count="0" type="stmt"/>
            <line num="1038" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1038" type="cond"/>
            <line num="1039" count="0" type="stmt"/>
            <line num="1041" count="0" type="stmt"/>
            <line num="1043" count="36028" type="stmt"/>
            <line num="1044" count="36028" type="stmt"/>
            <line falsecount="36028" truecount="920832794" num="1044" type="cond"/>
            <line num="1045" count="920832794" type="stmt"/>
            <line num="1047" count="36028" type="stmt"/>
            <line complexity="7" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1051" count="1816" type="method"/>
            <line num="1053" count="1816" type="stmt"/>
            <line falsecount="1816" truecount="0" num="1053" type="cond"/>
            <line num="1055" count="0" type="stmt"/>
            <line num="1059" count="1816" type="stmt"/>
            <line num="1061" count="1816" type="stmt"/>
            <line falsecount="1816" truecount="0" num="1061" type="cond"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1065" count="1816" type="stmt"/>
            <line falsecount="1816" truecount="0" num="1065" type="cond"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1067" type="cond"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1070" count="0" type="stmt"/>
            <line num="1073" count="1816" type="stmt"/>
            <line num="1074" count="1816" type="stmt"/>
            <line falsecount="1816" truecount="37360072" num="1074" type="cond"/>
            <line num="1075" count="37360072" type="stmt"/>
            <line num="1077" count="1816" type="stmt"/>
            <line complexity="7" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1081" count="0" type="method"/>
            <line num="1083" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1083" type="cond"/>
            <line num="1085" count="0" type="stmt"/>
            <line num="1089" count="0" type="stmt"/>
            <line num="1091" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1091" type="cond"/>
            <line num="1092" count="0" type="stmt"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1095" type="cond"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1097" type="cond"/>
            <line num="1098" count="0" type="stmt"/>
            <line num="1100" count="0" type="stmt"/>
            <line num="1103" count="0" type="stmt"/>
            <line num="1104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1104" type="cond"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1107" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1111" count="11910" type="method"/>
            <line num="1113" count="11910" type="stmt"/>
            <line falsecount="11910" truecount="0" num="1113" type="cond"/>
            <line num="1115" count="0" type="stmt"/>
            <line num="1119" count="11910" type="stmt"/>
            <line num="1121" count="11910" type="stmt"/>
            <line falsecount="11910" truecount="0" num="1121" type="cond"/>
            <line num="1122" count="0" type="stmt"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1125" count="11910" type="stmt"/>
            <line falsecount="8336" truecount="3574" num="1125" type="cond"/>
            <line num="1126" count="3574" type="stmt"/>
            <line num="1127" count="8336" type="stmt"/>
            <line falsecount="8336" truecount="0" num="1127" type="cond"/>
            <line num="1128" count="0" type="stmt"/>
            <line num="1129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1129" type="cond"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1132" count="0" type="stmt"/>
            <line num="1135" count="8336" type="stmt"/>
            <line num="1136" count="8336" type="stmt"/>
            <line falsecount="8336" truecount="109920040" num="1136" type="cond"/>
            <line num="1137" count="109920040" type="stmt"/>
            <line num="1139" count="8336" type="stmt"/>
            <line complexity="7" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1143" count="4482" type="method"/>
            <line num="1145" count="4482" type="stmt"/>
            <line falsecount="4482" truecount="0" num="1145" type="cond"/>
            <line num="1147" count="0" type="stmt"/>
            <line num="1151" count="4482" type="stmt"/>
            <line num="1153" count="4482" type="stmt"/>
            <line falsecount="4482" truecount="0" num="1153" type="cond"/>
            <line num="1154" count="0" type="stmt"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1157" count="4482" type="stmt"/>
            <line falsecount="4482" truecount="0" num="1157" type="cond"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1159" type="cond"/>
            <line num="1160" count="0" type="stmt"/>
            <line num="1162" count="0" type="stmt"/>
            <line num="1165" count="4482" type="stmt"/>
            <line num="1166" count="4482" type="stmt"/>
            <line falsecount="4482" truecount="224040000" num="1166" type="cond"/>
            <line num="1167" count="224040000" type="stmt"/>
            <line num="1169" count="4482" type="stmt"/>
            <line complexity="7" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1173" count="0" type="method"/>
            <line num="1175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1175" type="cond"/>
            <line num="1177" count="0" type="stmt"/>
            <line num="1181" count="0" type="stmt"/>
            <line num="1183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1183" type="cond"/>
            <line num="1184" count="0" type="stmt"/>
            <line num="1185" count="0" type="stmt"/>
            <line num="1187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1187" type="cond"/>
            <line num="1188" count="0" type="stmt"/>
            <line num="1189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1189" type="cond"/>
            <line num="1190" count="0" type="stmt"/>
            <line num="1192" count="0" type="stmt"/>
            <line num="1195" count="0" type="stmt"/>
            <line num="1196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1196" type="cond"/>
            <line num="1197" count="0" type="stmt"/>
            <line num="1199" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1203" count="10" type="method"/>
            <line num="1205" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="1205" type="cond"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1211" count="10" type="stmt"/>
            <line num="1213" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="1213" type="cond"/>
            <line num="1214" count="0" type="stmt"/>
            <line num="1215" count="0" type="stmt"/>
            <line num="1217" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="1217" type="cond"/>
            <line num="1218" count="0" type="stmt"/>
            <line num="1219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1219" type="cond"/>
            <line num="1220" count="0" type="stmt"/>
            <line num="1222" count="0" type="stmt"/>
            <line num="1224" count="10" type="stmt"/>
            <line num="1225" count="10" type="stmt"/>
            <line falsecount="10" truecount="800010" num="1225" type="cond"/>
            <line num="1226" count="800010" type="stmt"/>
            <line num="1228" count="10" type="stmt"/>
            <line complexity="8" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1232" count="2" type="method"/>
            <line num="1234" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="1234" type="cond"/>
            <line num="1236" count="0" type="stmt"/>
            <line num="1240" count="2" type="stmt"/>
            <line num="1242" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="1242" type="cond"/>
            <line num="1243" count="0" type="stmt"/>
            <line num="1244" count="0" type="stmt"/>
            <line num="1246" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="1246" type="cond"/>
            <line num="1247" count="0" type="stmt"/>
            <line num="1248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1248" type="cond"/>
            <line num="1249" count="0" type="stmt"/>
            <line num="1251" count="0" type="stmt"/>
            <line num="1253" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="1253" type="cond"/>
            <line num="1254" count="0" type="stmt"/>
            <line num="1257" count="2" type="stmt"/>
            <line num="1258" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="1258" type="cond"/>
            <line num="1259" count="10" type="stmt"/>
            <line num="1261" count="2" type="stmt"/>
            <line complexity="7" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1265" count="0" type="method"/>
            <line num="1267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1267" type="cond"/>
            <line num="1269" count="0" type="stmt"/>
            <line num="1273" count="0" type="stmt"/>
            <line num="1275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1275" type="cond"/>
            <line num="1276" count="0" type="stmt"/>
            <line num="1277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1277" type="cond"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1279" type="cond"/>
            <line num="1280" count="0" type="stmt"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1285" count="0" type="stmt"/>
            <line num="1286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1286" type="cond"/>
            <line num="1287" count="0" type="stmt"/>
            <line num="1289" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1293" count="0" type="method"/>
            <line num="1295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1295" type="cond"/>
            <line num="1297" count="0" type="stmt"/>
            <line num="1301" count="0" type="stmt"/>
            <line num="1303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1303" type="cond"/>
            <line num="1304" count="0" type="stmt"/>
            <line num="1305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1305" type="cond"/>
            <line num="1306" count="0" type="stmt"/>
            <line num="1307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1307" type="cond"/>
            <line num="1308" count="0" type="stmt"/>
            <line num="1310" count="0" type="stmt"/>
            <line num="1313" count="0" type="stmt"/>
            <line num="1314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1314" type="cond"/>
            <line num="1315" count="0" type="stmt"/>
            <line num="1317" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1326" count="1928" type="method"/>
            <line num="1329" count="1928" type="stmt"/>
            <line num="1330" count="1928" type="stmt"/>
            <line num="1331" count="1928" type="stmt"/>
            <line num="1333" count="1928" type="stmt"/>
            <line falsecount="1928" truecount="0" num="1333" type="cond"/>
            <line num="1334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1334" type="cond"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1337" count="0" type="stmt"/>
            <line num="1341" count="1928" type="stmt"/>
            <line num="1342" count="1928" type="stmt"/>
            <line num="1343" count="1928" type="stmt"/>
            <line falsecount="1928" truecount="55520000" num="1343" type="cond"/>
            <line num="1344" count="55520000" type="stmt"/>
            <line falsecount="10392776" truecount="45127224" num="1344" type="cond"/>
            <line num="1346" count="1928" type="stmt"/>
            <line complexity="10" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1350" count="5516" type="method"/>
            <line num="1352" count="5516" type="stmt"/>
            <line falsecount="5516" truecount="0" num="1352" type="cond"/>
            <line num="1354" count="0" type="stmt"/>
            <line num="1358" count="5516" type="stmt"/>
            <line num="1360" count="5516" type="stmt"/>
            <line falsecount="2762" truecount="2754" num="1360" type="cond"/>
            <line num="1361" count="2754" type="stmt"/>
            <line num="1362" count="2762" type="stmt"/>
            <line falsecount="2762" truecount="0" num="1362" type="cond"/>
            <line num="1363" count="0" type="stmt"/>
            <line num="1364" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1364" type="cond"/>
            <line num="1365" count="0" type="stmt"/>
            <line num="1367" count="0" type="stmt"/>
            <line num="1369" count="2762" type="stmt"/>
            <line falsecount="2762" truecount="0" num="1369" type="cond"/>
            <line num="1370" count="0" type="stmt"/>
            <line num="1371" count="0" type="stmt"/>
            <line num="1372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1372" type="cond"/>
            <line num="1373" count="0" type="stmt"/>
            <line num="1375" count="0" type="stmt"/>
            <line num="1378" count="2762" type="stmt"/>
            <line num="1379" count="2762" type="stmt"/>
            <line falsecount="2762" truecount="163480020" num="1379" type="cond"/>
            <line num="1380" count="163480020" type="stmt"/>
            <line num="1382" count="2762" type="stmt"/>
            <line complexity="14" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1386" count="3058" type="method"/>
            <line num="1388" count="3058" type="stmt"/>
            <line falsecount="3058" truecount="0" num="1388" type="cond"/>
            <line num="1390" count="0" type="stmt"/>
            <line num="1394" count="3058" type="stmt"/>
            <line num="1396" count="3058" type="stmt"/>
            <line falsecount="3058" truecount="0" num="1396" type="cond"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1398" count="0" type="stmt"/>
            <line num="1400" count="3058" type="stmt"/>
            <line falsecount="3058" truecount="0" num="1400" type="cond"/>
            <line num="1401" count="0" type="stmt"/>
            <line num="1403" count="3058" type="stmt"/>
            <line falsecount="3054" truecount="4" num="1403" type="cond"/>
            <line num="1404" count="4" type="stmt"/>
            <line num="1406" count="3054" type="stmt"/>
            <line falsecount="296" truecount="2758" num="1406" type="cond"/>
            <line num="1407" count="2758" type="stmt"/>
            <line num="1409" count="296" type="stmt"/>
            <line falsecount="0" truecount="296" num="1409" type="cond"/>
            <line num="1410" count="296" type="stmt"/>
            <line num="1411" count="296" type="stmt"/>
            <line falsecount="296" truecount="29600000" num="1411" type="cond"/>
            <line num="1412" count="29600000" type="stmt"/>
            <line num="1414" count="296" type="stmt"/>
            <line num="1417" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addSumProduct(List&lt;RandomVariable&gt;,List&lt;RandomVariable&gt;) : RandomVariable" num="1421" count="0" type="method"/>
            <line num="1424" count="0" type="stmt"/>
            <line num="1425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1425" type="cond"/>
            <line num="1426" count="0" type="stmt"/>
            <line num="1428" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1431" count="0" type="method"/>
            <line num="1433" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1433" type="cond"/>
            <line num="1435" count="0" type="stmt"/>
            <line num="1439" count="0" type="stmt"/>
            <line num="1441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1441" type="cond"/>
            <line num="1442" count="0" type="stmt"/>
            <line num="1443" count="0" type="stmt"/>
            <line num="1446" count="0" type="stmt"/>
            <line num="1447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1447" type="cond"/>
            <line num="1448" count="0" type="stmt"/>
            <line num="1450" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1454" count="0" type="method"/>
            <line num="1456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1456" type="cond"/>
            <line num="1458" count="0" type="stmt"/>
            <line num="1462" count="0" type="stmt"/>
            <line num="1464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1464" type="cond"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1466" count="0" type="stmt"/>
            <line num="1469" count="0" type="stmt"/>
            <line num="1470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1470" type="cond"/>
            <line num="1471" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1477" count="0" type="method"/>
            <line num="1479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1479" type="cond"/>
            <line num="1480" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1480" type="cond"/>
            <line num="1482" count="0" type="stmt"/>
            <line num="1483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1483" type="cond"/>
            <line num="1484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1484" type="cond"/>
            <line num="1486" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="1490" count="0" type="method"/>
            <line num="1492" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1493" type="cond"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableLazyEvaluation.java" name="RandomVariableLazyEvaluation.java">
            <metrics coveredelements="152" coveredconditionals="21" complexity="217" loc="1265" coveredmethods="40" methods="124" elements="652" classes="1" ncloc="933" statements="376" conditionals="152" coveredstatements="91"/>
            <class name="RandomVariableLazyEvaluation">
               <metrics coveredelements="152" coveredconditionals="21" complexity="217" coveredmethods="40" methods="124" elements="652" statements="376" conditionals="152" coveredstatements="91"/>
            </class>
            <line complexity="3" visibility="public" signature="RandomVariableLazyEvaluation(RandomVariable)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="RandomVariableLazyEvaluation(RandomVariable,DoubleUnaryOperator)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,double)" num="98" count="12" type="method"/>
            <line num="99" count="12" type="stmt"/>
            <line num="100" count="12" type="stmt"/>
            <line num="101" count="12" type="stmt"/>
            <line num="102" count="12" type="stmt"/>
            <line num="103" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,int,double)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,double[])" num="132" count="22" type="method"/>
            <line num="133" count="22" type="stmt"/>
            <line num="134" count="22" type="stmt"/>
            <line num="135" count="22" type="stmt"/>
            <line num="136" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="137" count="5033160" type="method"/>
            <line num="139" count="5033735" type="stmt"/>
            <line num="142" count="22" type="stmt"/>
            <line num="143" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableLazyEvaluation(double,IntToDoubleFunction,int)" num="153" count="22" type="method"/>
            <line num="154" count="22" type="stmt"/>
            <line num="155" count="22" type="stmt"/>
            <line num="156" count="22" type="stmt"/>
            <line num="157" count="22" type="stmt"/>
            <line num="158" count="22" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(RandomVariable) : boolean" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiltrationTime() : double" num="186" count="12" type="method"/>
            <line num="188" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypePriority() : int" num="191" count="2" type="method"/>
            <line num="193" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : double" num="197" count="10" type="method"/>
            <line num="199" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="10" type="stmt"/>
            <line num="203" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="212" count="174" type="method"/>
            <line num="214" count="174" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : double" num="220" count="2" type="method"/>
            <line num="222" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : double" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAverage() : double" num="242" count="14" type="method"/>
            <line num="244" count="14" type="stmt"/>
            <line falsecount="12" truecount="2" num="244" type="cond"/>
            <line num="245" count="2" type="stmt"/>
            <line num="247" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="getAverage(RandomVariable) : double" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getVariance() : double" num="272" count="18" type="method"/>
            <line num="274" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="274" type="cond"/>
            <line num="275" count="2" type="stmt"/>
            <line num="277" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="16" type="stmt"/>
            <line num="282" count="16" type="stmt"/>
            <line num="283" count="16" type="stmt"/>
            <line num="284" count="88" type="stmt"/>
            <line num="285" count="88" type="stmt"/>
            <line num="287" count="16" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVariance(RandomVariable) : double" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getSampleVariance() : double" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation() : double" num="320" count="2" type="method"/>
            <line num="322" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="325" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardDeviation(RandomVariable) : double" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError() : double" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStandardError(RandomVariable) : double" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double) : double" num="380" count="10" type="method"/>
            <line num="382" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="382" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="385" type="cond"/>
            <line num="386" count="0" type="stmt"/>
            <line num="389" count="10" type="stmt"/>
            <line num="390" count="10" type="stmt"/>
            <line num="392" count="10" type="stmt"/>
            <line num="394" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="getQuantile(double,RandomVariable) : double" num="400" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getQuantileExpectation(double,double) : double" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="434" type="cond"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getHistogram(double[]) : double[]" num="445" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="450" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="458" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="458" type="cond"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="490" type="cond"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getHistogram(int,double) : double[][]" num="503" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDeterministic() : boolean" num="527" count="188" type="method"/>
            <line num="529" count="188" type="stmt"/>
            <line complexity="2" visibility="public" signature="expand(int) : RandomVariable" num="535" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizations() : double[]" num="551" count="36" type="method"/>
            <line num="553" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="553" type="cond"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="559" count="36" type="stmt"/>
            <line num="561" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="doubleValue() : Double" num="565" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOperator() : IntToDoubleFunction" num="577" count="0" type="method"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRandomVariable() : RandomVariableFromDoubleArray" num="582" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="583" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealizationsStream() : DoubleStream" num="593" count="30" type="method"/>
            <line num="595" count="30" type="stmt"/>
            <line falsecount="30" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsDouble() : double" num="597" count="0" type="method"/>
            <line num="599" count="0" type="stmt"/>
            <line num="604" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(DoubleUnaryOperator) : RandomVariable" num="608" count="22" type="method"/>
            <line num="610" count="22" type="stmt"/>
            <line falsecount="12" truecount="10" num="610" type="cond"/>
            <line num="611" count="10" type="stmt"/>
            <line num="615" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="616" count="112" type="method"/>
            <line num="618" count="112" type="stmt"/>
            <line num="621" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="cache() : RandomVariable" num="625" count="46" type="method"/>
            <line num="627" count="46" type="stmt"/>
            <line num="629" count="46" type="stmt"/>
            <line falsecount="30" truecount="16" num="629" type="cond"/>
            <line num="630" count="16" type="stmt"/>
            <line num="631" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="632" count="0" type="method"/>
            <line num="634" count="0" type="stmt"/>
            <line num="639" count="46" type="stmt"/>
            <line complexity="7" visibility="public" signature="apply(DoubleBinaryOperator,RandomVariable) : RandomVariable" num="642" count="10" type="method"/>
            <line num="645" count="10" type="stmt"/>
            <line num="647" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="647" type="cond"/>
            <line num="648" count="0" type="stmt"/>
            <line num="650" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="650" type="cond"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="652" count="0" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="659" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="663" count="0" type="method"/>
            <line num="665" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="673" count="0" type="method"/>
            <line num="675" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="683" count="10" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="686" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="694" count="10" type="stmt"/>
            <line num="695" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="696" count="108" type="method"/>
            <line num="698" count="108" type="stmt"/>
            <line num="701" count="10" type="stmt"/>
            <line complexity="13" visibility="public" signature="apply(DoubleBinaryOperator,DoubleBinaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="707" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="712" type="cond"/>
            <line num="713" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="724" count="0" type="method"/>
            <line num="726" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="732" count="0" type="method"/>
            <line num="734" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="741" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="745" count="0" type="method"/>
            <line num="747" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="751" type="cond"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="754" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="755" count="0" type="method"/>
            <line num="757" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="761" type="cond"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="765" count="0" type="method"/>
            <line num="767" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="775" count="0" type="method"/>
            <line num="777" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="782" type="cond"/>
            <line num="783" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="784" count="0" type="method"/>
            <line num="786" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="792" count="0" type="method"/>
            <line num="794" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="apply(DoubleTernaryOperator,RandomVariable,RandomVariable) : RandomVariable" num="803" count="0" type="method"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="815" type="cond"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="819" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="820" count="0" type="method"/>
            <line num="822" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="828" count="0" type="method"/>
            <line num="830" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="836" type="cond"/>
            <line num="837" count="0" type="stmt"/>
            <line num="838" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="839" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="841" count="0" type="method"/>
            <line num="843" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="849" count="0" type="method"/>
            <line num="851" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="860" type="cond"/>
            <line num="861" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="862" count="0" type="method"/>
            <line num="864" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line num="880" count="0" type="stmt"/>
            <line num="881" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="881" type="cond"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="883" count="0" type="method"/>
            <line num="885" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(int) : double" num="891" count="0" type="method"/>
            <line num="893" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(double) : RandomVariable" num="907" count="0" type="method"/>
            <line num="909" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="910" count="0" type="method"/>
            <line num="912" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(double) : RandomVariable" num="920" count="0" type="method"/>
            <line num="922" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="923" count="0" type="method"/>
            <line num="925" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : RandomVariable" num="933" count="4" type="method"/>
            <line num="935" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="936" count="22" type="method"/>
            <line num="938" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(double) : RandomVariable" num="946" count="2" type="method"/>
            <line num="948" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="949" count="2" type="method"/>
            <line num="951" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(double) : RandomVariable" num="959" count="2" type="method"/>
            <line num="961" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="962" count="2" type="method"/>
            <line num="964" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(double) : RandomVariable" num="972" count="4" type="method"/>
            <line num="974" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="975" count="22" type="method"/>
            <line num="977" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : RandomVariable" num="985" count="4" type="method"/>
            <line num="987" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="988" count="24" type="method"/>
            <line num="990" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="average() : RandomVariable" num="998" count="0" type="method"/>
            <line num="1000" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="squared() : RandomVariable" num="1006" count="4" type="method"/>
            <line num="1008" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="1009" count="26" type="method"/>
            <line num="1011" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : RandomVariable" num="1019" count="2" type="method"/>
            <line num="1021" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : RandomVariable" num="1027" count="0" type="method"/>
            <line num="1029" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : RandomVariable" num="1035" count="0" type="method"/>
            <line num="1037" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sin() : RandomVariable" num="1043" count="0" type="method"/>
            <line num="1045" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cos() : RandomVariable" num="1051" count="0" type="method"/>
            <line num="1053" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(RandomVariable) : RandomVariable" num="1059" count="2" type="method"/>
            <line num="1061" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1062" count="20" type="method"/>
            <line num="1064" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(RandomVariable) : RandomVariable" num="1073" count="4" type="method"/>
            <line num="1075" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1076" count="48" type="method"/>
            <line num="1078" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="bus(RandomVariable) : RandomVariable" num="1083" count="0" type="method"/>
            <line num="1085" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1086" count="0" type="method"/>
            <line num="1088" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mult(RandomVariable) : RandomVariable" num="1096" count="0" type="method"/>
            <line num="1098" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1099" count="0" type="method"/>
            <line num="1101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(RandomVariable) : RandomVariable" num="1106" count="0" type="method"/>
            <line num="1108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1109" count="0" type="method"/>
            <line num="1111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vid(RandomVariable) : RandomVariable" num="1116" count="0" type="method"/>
            <line num="1118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1119" count="0" type="method"/>
            <line num="1121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cap(RandomVariable) : RandomVariable" num="1126" count="2" type="method"/>
            <line num="1128" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="floor(RandomVariable) : RandomVariable" num="1131" count="2" type="method"/>
            <line num="1133" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="accrue(RandomVariable,double) : RandomVariable" num="1136" count="0" type="method"/>
            <line num="1138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1139" count="0" type="method"/>
            <line num="1141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discount(RandomVariable,double) : RandomVariable" num="1146" count="0" type="method"/>
            <line num="1148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1149" count="0" type="method"/>
            <line num="1151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="choose(RandomVariable,RandomVariable) : RandomVariable" num="1156" count="0" type="method"/>
            <line num="1158" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="applyAsDouble(double,double,double) : double" num="1159" count="0" type="method"/>
            <line num="1161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1161" type="cond"/>
            <line complexity="1" visibility="public" signature="invert() : RandomVariable" num="1166" count="0" type="method"/>
            <line num="1168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="1169" count="0" type="method"/>
            <line num="1171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : RandomVariable" num="1179" count="0" type="method"/>
            <line num="1181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,double) : RandomVariable" num="1187" count="0" type="method"/>
            <line num="1189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1190" count="0" type="method"/>
            <line num="1192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addProduct(RandomVariable,RandomVariable) : RandomVariable" num="1201" count="0" type="method"/>
            <line num="1203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1204" count="0" type="method"/>
            <line num="1206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1209" count="0" type="method"/>
            <line num="1211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRatio(RandomVariable,RandomVariable) : RandomVariable" num="1219" count="0" type="method"/>
            <line num="1221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1222" count="0" type="method"/>
            <line num="1224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1227" count="0" type="method"/>
            <line num="1229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subRatio(RandomVariable,RandomVariable) : RandomVariable" num="1237" count="0" type="method"/>
            <line num="1239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1240" count="0" type="method"/>
            <line num="1242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double,double) : double" num="1245" count="0" type="method"/>
            <line num="1247" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="isNaN() : RandomVariable" num="1252" count="0" type="method"/>
            <line num="1254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1254" type="cond"/>
            <line num="1255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1255" type="cond"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1259" type="cond"/>
            <line num="1260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1260" type="cond"/>
            <line num="1262" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/RandomVariableLazyEvaluationFactory.java" name="RandomVariableLazyEvaluationFactory.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="31" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="RandomVariableLazyEvaluationFactory">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double) : RandomVariable" num="22" count="2" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRandomVariable(double,double[]) : RandomVariable" num="27" count="22" type="method"/>
            <line num="29" count="22" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/VarianceGammaProcess.java" name="VarianceGammaProcess.java">
            <metrics coveredelements="44" coveredconditionals="7" complexity="18" loc="178" coveredmethods="10" methods="14" elements="54" classes="1" ncloc="98" statements="32" conditionals="8" coveredstatements="27"/>
            <class name="VarianceGammaProcess">
               <metrics coveredelements="44" coveredconditionals="7" complexity="18" coveredmethods="10" methods="14" elements="54" statements="32" conditionals="8" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="VarianceGammaProcess(double,double,double,TimeDiscretization,int,int,int)" num="46" count="10" type="method"/>
            <line num="49" count="10" type="stmt"/>
            <line num="50" count="10" type="stmt"/>
            <line num="51" count="10" type="stmt"/>
            <line num="52" count="10" type="stmt"/>
            <line num="53" count="10" type="stmt"/>
            <line num="54" count="10" type="stmt"/>
            <line num="55" count="10" type="stmt"/>
            <line num="56" count="10" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIncrement(int,int) : RandomVariable" num="61" count="1000" type="method"/>
            <line num="64" count="1000" type="stmt"/>
            <line num="65" count="1000" type="stmt"/>
            <line falsecount="990" truecount="10" num="65" type="cond"/>
            <line num="66" count="10" type="stmt"/>
            <line num="74" count="1000" type="stmt"/>
            <line complexity="4" visibility="private" signature="doGenerateVarianceGammaIncrements() : void" num="80" count="10" type="method"/>
            <line num="81" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line num="88" count="10" type="stmt"/>
            <line num="91" count="10" type="stmt"/>
            <line num="99" count="10" type="stmt"/>
            <line falsecount="10" truecount="1000" num="99" type="cond"/>
            <line num="102" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="1000" num="102" type="cond"/>
            <line num="103" count="1000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="116" count="198" type="method"/>
            <line num="117" count="198" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNu() : double" num="123" count="198" type="method"/>
            <line num="124" count="198" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : double" num="130" count="198" type="method"/>
            <line num="131" count="198" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGammaProcess() : GammaProcess" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="148" count="8" type="method"/>
            <line num="150" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="153" count="2408" type="method"/>
            <line num="155" count="2408" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="158" count="8" type="method"/>
            <line num="160" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="163" count="8" type="method"/>
            <line num="165" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : IndependentIncrements" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedTimeDiscretization(TimeDiscretization) : IndependentIncrements" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.simple">
         <metrics coveredelements="0" complexity="84" loc="811" methods="38" classes="5" statements="190" coveredconditionals="0" coveredmethods="0" elements="314" ncloc="446" files="3" conditionals="86" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/simple/AbstractLIBORMarketModel.java" name="AbstractLIBORMarketModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="169" coveredmethods="0" methods="11" elements="51" classes="1" ncloc="88" statements="30" conditionals="10" coveredstatements="0"/>
            <class name="AbstractLIBORMarketModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="11" elements="51" statements="30" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORMarketModel(TimeDiscretization,BrownianMotionLazyInit)" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(double) : RandomVariable" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBOR(int,int) : RandomVariable" num="65" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLIBORs(int) : RandomVariable[]" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getForwardRate(double,double,double) : RandomVariable" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloWeights(double) : RandomVariable" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfLibors() : int" num="140" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriod(int) : double" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodIndex(double) : int" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/simple/SimpleLIBORMarketModel.java" name="SimpleLIBORMarketModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="49" loc="463" coveredmethods="0" methods="24" elements="183" classes="3" ncloc="265" statements="113" conditionals="46" coveredstatements="0"/>
            <class name="SimpleLIBORMarketModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="49" coveredmethods="0" methods="24" elements="183" statements="113" conditionals="46" coveredstatements="0"/>
            </class>
            <class name="SimpleLIBORMarketModel.Driftapproximation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SimpleLIBORMarketModel.Measure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,TimeDiscretization,int,double[],LIBORCovarianceModel)" num="50" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,double[],LIBORCovarianceModel,BrownianMotionLazyInit)" num="72" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,TimeDiscretization,int,double[],LIBORVolatilityModel,LIBORCorrelationModel)" num="98" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModel(TimeDiscretization,TimeDiscretization,int,double[],LIBORVolatilityModel)" num="122" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInitialValue() : RandomVariable[]" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue(int) : RandomVariableFromDoubleArray" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int,RandomVariable[]) : RandomVariable" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getDrift(int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="186" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDriftAproximationMethod() : Driftapproximation" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="7" visibility="protected" signature="getLMMTerminasureDriftEuler(int,int,RandomVariable[]) : double[]" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getLMMTerminasureDriftLineIntegral(int,int,RandomVariable[],RandomVariable[]) : double[]" num="275" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeasure() : Measure" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getNumeraire(int) : RandomVariable" num="335" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="371" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDriftAproximationMethod(Driftapproximation) : void" num="387" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMeasure(Measure) : void" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovarianceModel() : LIBORCovarianceModel" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCovarianceModel(LIBORCovarianceModel) : void" num="408" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : SimpleLIBORMarketModel" num="417" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedSeed(int) : Object" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : LIBORMarketModelFromCovarianceModel" num="435" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcess() : MonteCarloProcess" num="444" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="453" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModelParameters() : Map&lt;String, RandomVariable&gt;" num="458" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/simple/SimpleLIBORMarketModelWithWMC.java" name="SimpleLIBORMarketModelWithWMC.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="179" coveredmethods="0" methods="3" elements="80" classes="1" ncloc="93" statements="47" conditionals="30" coveredstatements="0"/>
            <class name="SimpleLIBORMarketModelWithWMC">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="3" elements="80" statements="47" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimpleLIBORMarketModelWithWMC(TimeDiscretizationFromArray,TimeDiscretizationFromArray,int,double[],LIBORVolatilityModel,LIBORCorrelationModel,SimpleLIBORMarketModel)" num="41" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(int,int,RandomVariable[],RandomVariable[]) : RandomVariable" num="66" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="17" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="83" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.model">
         <metrics coveredelements="0" complexity="4" loc="216" methods="3" classes="2" statements="7" coveredconditionals="0" coveredmethods="0" elements="12" ncloc="39" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/model/AbstractProcessModel.java" name="AbstractProcessModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="18" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="AbstractProcessModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="getInitialValue(MonteCarloProcess) : RandomVariable[]" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/model/ProcessModel.java" name="ProcessModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="174" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ProcessModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.functions">
         <metrics coveredelements="667" complexity="289" loc="4030" methods="130" classes="15" statements="772" coveredconditionals="119" coveredmethods="77" elements="1154" ncloc="1857" files="12" conditionals="252" coveredstatements="471"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/AnalyticFormulas.java" name="AnalyticFormulas.java">
            <metrics coveredelements="213" coveredconditionals="33" complexity="120" loc="1787" coveredmethods="31" methods="53" elements="448" classes="1" ncloc="842" statements="299" conditionals="96" coveredstatements="149"/>
            <class name="AnalyticFormulas">
               <metrics coveredelements="213" coveredconditionals="33" complexity="120" coveredmethods="31" methods="53" elements="448" statements="299" conditionals="96" coveredstatements="149"/>
            </class>
            <line complexity="1" visibility="private" signature="AnalyticFormulas()" num="37" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="blackScholesGeneralizedOptionValue(double,double,double,double,double) : double" num="54" count="39792710" type="method"/>
            <line num="61" count="39804324" type="stmt"/>
            <line falsecount="39811260" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="39815677" type="stmt"/>
            <line falsecount="39820535" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="39826204" type="stmt"/>
            <line falsecount="37024739" truecount="2845769" num="68" type="cond"/>
            <line num="71" count="2845968" type="stmt"/>
            <line num="76" count="37031454" type="stmt"/>
            <line num="77" count="37045452" type="stmt"/>
            <line num="79" count="37054955" type="stmt"/>
            <line num="81" count="37120364" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesGeneralizedOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="98" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionValue(double,double,double,double,double) : double" num="129" count="1326" type="method"/>
            <line num="136" count="1326" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionValue(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="155" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionValue(RandomVariable,double,double,double,double) : RandomVariable" num="181" count="2" type="method"/>
            <line num="188" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionValue(double,double,double,double,double,boolean) : double" num="208" count="478" type="method"/>
            <line num="216" count="478" type="stmt"/>
            <line num="217" count="478" type="stmt"/>
            <line falsecount="240" truecount="238" num="217" type="cond"/>
            <line num="218" count="238" type="stmt"/>
            <line num="221" count="240" type="stmt"/>
            <line num="222" count="240" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesATMOptionValue(double,double,double,double) : double" num="235" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="blackScholesOptionDelta(double,double,double,double,double) : double" num="268" count="146" type="method"/>
            <line num="275" count="146" type="stmt"/>
            <line falsecount="146" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="146" type="stmt"/>
            <line falsecount="146" truecount="0" num="278" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="146" type="stmt"/>
            <line falsecount="146" truecount="0" num="282" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="294" count="146" type="stmt"/>
            <line falsecount="146" truecount="0" num="294" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="302" count="146" type="stmt"/>
            <line num="304" count="146" type="stmt"/>
            <line num="306" count="146" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionDelta(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="324" count="200" type="method"/>
            <line num="331" count="200" type="stmt"/>
            <line falsecount="200" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="337" count="200" type="stmt"/>
            <line num="339" count="200" type="stmt"/>
            <line num="341" count="200" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionDelta(RandomVariable,double,double,double,double) : RandomVariable" num="359" count="200" type="method"/>
            <line num="366" count="200" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesOptionDelta(RandomVariable,RandomVariable,RandomVariable,double,RandomVariable) : RandomVariable" num="383" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionGamma(double,double,double,double,double) : double" num="414" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionGamma(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="447" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionGamma(RandomVariable,double,double,double,double) : RandomVariable" num="480" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionVega(double,double,double,double,double) : double" num="504" count="148" type="method"/>
            <line num="511" count="148" type="stmt"/>
            <line falsecount="148" truecount="0" num="511" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line num="519" count="148" type="stmt"/>
            <line num="521" count="148" type="stmt"/>
            <line num="523" count="148" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionVega(RandomVariable,RandomVariable,RandomVariable,double,double) : RandomVariable" num="541" count="0" type="method"/>
            <line num="548" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="548" type="cond"/>
            <line num="551" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackScholesOptionVega(RandomVariable,double,double,double,double) : RandomVariable" num="578" count="0" type="method"/>
            <line num="585" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionTheta(double,double,double,double,double) : double" num="598" count="0" type="method"/>
            <line num="605" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="605" type="cond"/>
            <line num="608" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesOptionRho(double,double,double,double,double) : double" num="632" count="2" type="method"/>
            <line num="639" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="639" type="cond"/>
            <line num="642" count="0" type="stmt"/>
            <line num="647" count="2" type="stmt"/>
            <line num="649" count="2" type="stmt"/>
            <line num="651" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="blackScholesOptionImpliedVolatility(double,double,double,double,double) : double" num="667" count="16411" type="method"/>
            <line num="676" count="16411" type="stmt"/>
            <line num="677" count="16411" type="stmt"/>
            <line num="679" count="16411" type="stmt"/>
            <line falsecount="16405" truecount="6" num="679" type="cond"/>
            <line num="682" count="6" type="stmt"/>
            <line num="687" count="16404" type="stmt"/>
            <line num="688" count="16400" type="stmt"/>
            <line num="690" count="16402" type="stmt"/>
            <line num="691" count="16402" type="stmt"/>
            <line num="694" count="16402" type="stmt"/>
            <line falsecount="14093" truecount="2309" num="694" type="cond"/>
            <line num="695" count="2309" type="stmt"/>
            <line num="699" count="14093" type="stmt"/>
            <line num="700" count="14090" type="stmt"/>
            <line falsecount="14092" truecount="4465667" num="700" type="cond"/>
            <line num="701" count="4468099" type="stmt"/>
            <line num="704" count="4461080" type="stmt"/>
            <line num="705" count="4466343" type="stmt"/>
            <line num="706" count="4471381" type="stmt"/>
            <line num="707" count="4484664" type="stmt"/>
            <line num="709" count="4484130" type="stmt"/>
            <line num="711" count="4484948" type="stmt"/>
            <line num="714" count="14094" type="stmt"/>
            <line complexity="2" visibility="public" signature="blackScholesDigitalOptionValue(double,double,double,double,double) : double" num="728" count="434" type="method"/>
            <line num="735" count="434" type="stmt"/>
            <line falsecount="434" truecount="0" num="735" type="cond"/>
            <line num="738" count="0" type="stmt"/>
            <line num="743" count="434" type="stmt"/>
            <line num="744" count="434" type="stmt"/>
            <line num="746" count="434" type="stmt"/>
            <line num="748" count="434" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionDelta(double,double,double,double,double) : double" num="762" count="8" type="method"/>
            <line num="769" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="769" type="cond"/>
            <line num="772" count="0" type="stmt"/>
            <line num="777" count="8" type="stmt"/>
            <line num="778" count="8" type="stmt"/>
            <line num="780" count="8" type="stmt"/>
            <line num="782" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionVega(double,double,double,double,double) : double" num="796" count="2" type="method"/>
            <line num="803" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="803" type="cond"/>
            <line num="806" count="0" type="stmt"/>
            <line num="811" count="2" type="stmt"/>
            <line num="812" count="2" type="stmt"/>
            <line num="814" count="2" type="stmt"/>
            <line num="816" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesDigitalOptionRho(double,double,double,double,double) : double" num="830" count="2" type="method"/>
            <line num="837" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="837" type="cond"/>
            <line num="840" count="0" type="stmt"/>
            <line num="842" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="842" type="cond"/>
            <line num="843" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line num="850" count="2" type="stmt"/>
            <line num="852" count="2" type="stmt"/>
            <line num="855" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelCapletValue(double,double,double,double,double,double) : double" num="870" count="196" type="method"/>
            <line num="879" count="196" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelCapletImpliedVolatility(double,double,double,double,double,double) : double" num="893" count="0" type="method"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelDigitalCapletValue(double,double,double,double,double,double) : double" num="916" count="428" type="method"/>
            <line num="925" count="428" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelDigitalCapletDelta(double,double,double,double,double,double) : double" num="939" count="2" type="method"/>
            <line num="948" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelDgitialCapletValue(double,double,double,double,double,double) : double" num="964" count="0" type="method"/>
            <line num="972" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackModelSwaptionValue(double,double,double,double,double) : double" num="985" count="1568" type="method"/>
            <line num="993" count="1568" type="stmt"/>
            <line complexity="1" visibility="public" signature="margrabeExchangeOptionValue(double,double,double,double,double,double) : double" num="1011" count="0" type="method"/>
            <line num="1019" count="0" type="stmt"/>
            <line num="1020" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionValue(double,double,double,double,double) : double" num="1046" count="86174243" type="method"/>
            <line num="1053" count="86192155" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="1074" count="616" type="method"/>
            <line num="1081" count="616" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionImpliedVolatility(double,double,double,double,double) : double" num="1102" count="975211" type="method"/>
            <line num="1109" count="975224" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierOptionDelta(double,double,double,double,double) : double" num="1130" count="36104" type="method"/>
            <line num="1137" count="36104" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSOptionValue(double,double,double,double,double,double,double) : double" num="1157" count="2" type="method"/>
            <line num="1166" count="2" type="stmt"/>
            <line num="1167" count="2" type="stmt"/>
            <line num="1168" count="2" type="stmt"/>
            <line num="1170" count="2" type="stmt"/>
            <line num="1171" count="2" type="stmt"/>
            <line num="1173" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSFloorValue(double,double,double,double,double,double,double) : double" num="1189" count="0" type="method"/>
            <line num="1198" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="huntKennedyCMSAdjustedRate(double,double,double,double,double,double) : double" num="1216" count="2" type="method"/>
            <line num="1224" count="2" type="stmt"/>
            <line num="1225" count="2" type="stmt"/>
            <line num="1226" count="2" type="stmt"/>
            <line num="1228" count="2" type="stmt"/>
            <line num="1229" count="2" type="stmt"/>
            <line num="1231" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrHaganLognormalBlackVolatilityApproximation(double,double,double,double,double,double,double) : double" num="1247" count="0" type="method"/>
            <line num="1249" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="sabrHaganLognormalBlackVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1266" count="0" type="method"/>
            <line num="1269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1269" type="cond"/>
            <line num="1270" count="0" type="stmt"/>
            <line num="1273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1273" type="cond"/>
            <line num="1274" count="0" type="stmt"/>
            <line num="1277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1277" type="cond"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1281" type="cond"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1286" count="0" type="stmt"/>
            <line num="1287" count="0" type="stmt"/>
            <line num="1289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1289" type="cond"/>
            <line num="1294" count="0" type="stmt"/>
            <line num="1296" count="0" type="stmt"/>
            <line num="1299" count="0" type="stmt"/>
            <line num="1305" count="0" type="stmt"/>
            <line num="1307" count="0" type="stmt"/>
            <line num="1309" count="0" type="stmt"/>
            <line num="1311" count="0" type="stmt"/>
            <line num="1315" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1315" type="cond"/>
            <line num="1317" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="sabrBerestyckiNormalVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1341" count="25518283" type="method"/>
            <line num="1344" count="25525280" type="stmt"/>
            <line num="1345" count="25529439" type="stmt"/>
            <line num="1347" count="25532385" type="stmt"/>
            <line num="1349" count="25541456" type="stmt"/>
            <line num="1350" count="25547753" type="stmt"/>
            <line falsecount="0" truecount="25554296" num="1350" type="cond"/>
            <line num="1351" count="25557280" type="stmt"/>
            <line num="1353" count="0" type="stmt"/>
            <line num="1356" count="25581781" type="stmt"/>
            <line num="1358" count="25596646" type="stmt"/>
            <line num="1359" count="25597002" type="stmt"/>
            <line falsecount="25447863" truecount="148033" num="1359" type="cond"/>
            <line num="1361" count="148034" type="stmt"/>
            <line num="1363" count="25448467" type="stmt"/>
            <line falsecount="25324164" truecount="135214" num="1363" type="cond"/>
            <line num="1365" count="135214" type="stmt"/>
            <line falsecount="0" truecount="135214" num="1365" type="cond"/>
            <line num="1366" count="135214" type="stmt"/>
            <line num="1368" count="0" type="stmt"/>
            <line num="1372" count="25326574" type="stmt"/>
            <line num="1374" count="25611102" type="stmt"/>
            <line num="1376" count="25625551" type="stmt"/>
            <line complexity="2" visibility="public" signature="sabrNormalVolatilityApproximation(double,double,double,double,double,double,double,double) : double" num="1393" count="0" type="method"/>
            <line num="1396" count="0" type="stmt"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1399" count="0" type="stmt"/>
            <line num="1401" count="0" type="stmt"/>
            <line num="1402" count="0" type="stmt"/>
            <line num="1404" count="0" type="stmt"/>
            <line num="1405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1405" type="cond"/>
            <line num="1407" count="0" type="stmt"/>
            <line num="1410" count="0" type="stmt"/>
            <line num="1411" count="0" type="stmt"/>
            <line num="1414" count="0" type="stmt"/>
            <line num="1416" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="sabrAlphaApproximation(double,double,double,double,double,double,double) : double" num="1432" count="0" type="method"/>
            <line num="1435" count="0" type="stmt"/>
            <line num="1438" count="0" type="stmt"/>
            <line num="1440" count="0" type="stmt"/>
            <line num="1441" count="0" type="stmt"/>
            <line num="1442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1442" type="cond"/>
            <line num="1443" count="0" type="stmt"/>
            <line num="1445" count="0" type="stmt"/>
            <line num="1446" count="0" type="stmt"/>
            <line num="1448" count="0" type="stmt"/>
            <line num="1449" count="0" type="stmt"/>
            <line num="1451" count="0" type="stmt"/>
            <line num="1452" count="0" type="stmt"/>
            <line num="1454" count="0" type="stmt"/>
            <line num="1456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrNormalVolatilitySkewApproximation(double,double,double,double,double,double,double) : double" num="1473" count="6" type="method"/>
            <line num="1475" count="6" type="stmt"/>
            <line num="1478" count="6" type="stmt"/>
            <line num="1480" count="6" type="stmt"/>
            <line num="1481" count="6" type="stmt"/>
            <line num="1483" count="6" type="stmt"/>
            <line num="1496" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrNormalVolatilityCurvatureApproximation(double,double,double,double,double,double,double) : double" num="1513" count="6" type="method"/>
            <line num="1515" count="6" type="stmt"/>
            <line num="1518" count="6" type="stmt"/>
            <line num="1536" count="6" type="stmt"/>
            <line num="1537" count="6" type="stmt"/>
            <line num="1538" count="6" type="stmt"/>
            <line num="1539" count="6" type="stmt"/>
            <line num="1541" count="6" type="stmt"/>
            <line num="1542" count="6" type="stmt"/>
            <line num="1543" count="6" type="stmt"/>
            <line num="1545" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="volatilityConversionLognormalATMtoNormalATM(double,double,double,double) : double" num="1558" count="2" type="method"/>
            <line num="1559" count="2" type="stmt"/>
            <line num="1560" count="2" type="stmt"/>
            <line num="1561" count="2" type="stmt"/>
            <line num="1563" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="volatilityConversionLognormalToNormal(double,double,double,double,double) : double" num="1576" count="2" type="method"/>
            <line num="1577" count="2" type="stmt"/>
            <line num="1578" count="2" type="stmt"/>
            <line num="1580" count="2" type="stmt"/>
            <line num="1582" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="price(java.util.Date,java.util.Date,double,double,double,int) : double" num="1597" count="0" type="method"/>
            <line num="1605" count="0" type="stmt"/>
            <line num="1607" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1607" type="cond"/>
            <line num="1608" count="0" type="stmt"/>
            <line num="1611" count="0" type="stmt"/>
            <line num="1612" count="0" type="stmt"/>
            <line num="1613" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1613" type="cond"/>
            <line num="1614" count="0" type="stmt"/>
            <line num="1617" count="0" type="stmt"/>
            <line num="1618" count="0" type="stmt"/>
            <line num="1621" count="0" type="stmt"/>
            <line num="1622" count="0" type="stmt"/>
            <line num="1625" count="0" type="stmt"/>
            <line num="1626" count="0" type="stmt"/>
            <line num="1627" count="0" type="stmt"/>
            <line num="1629" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="price(double,double,double,double,int) : double" num="1645" count="0" type="method"/>
            <line num="1652" count="0" type="stmt"/>
            <line num="1654" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1654" type="cond"/>
            <line num="1655" count="0" type="stmt"/>
            <line num="1658" count="0" type="stmt"/>
            <line num="1659" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1659" type="cond"/>
            <line num="1660" count="0" type="stmt"/>
            <line num="1663" count="0" type="stmt"/>
            <line num="1664" count="0" type="stmt"/>
            <line num="1668" count="0" type="stmt"/>
            <line num="1669" count="0" type="stmt"/>
            <line num="1670" count="0" type="stmt"/>
            <line num="1672" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierGeneralizedOptionVega(double,double,double,double,double) : double" num="1689" count="0" type="method"/>
            <line num="1696" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1696" type="cond"/>
            <line num="1697" count="0" type="stmt"/>
            <line num="1699" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1699" type="cond"/>
            <line num="1701" count="0" type="stmt"/>
            <line num="1706" count="0" type="stmt"/>
            <line num="1708" count="0" type="stmt"/>
            <line num="1710" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackScholesGeneralizedOptionVega(double,double,double,double,double) : double" num="1728" count="0" type="method"/>
            <line num="1735" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1735" type="cond"/>
            <line num="1738" count="0" type="stmt"/>
            <line num="1743" count="0" type="stmt"/>
            <line num="1745" count="0" type="stmt"/>
            <line num="1747" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="constantElasticityOfVarianceOptionValue(double,double,double,double,double,double,boolean) : double" num="1767" count="636" type="method"/>
            <line num="1775" count="636" type="stmt"/>
            <line num="1776" count="636" type="stmt"/>
            <line num="1777" count="636" type="stmt"/>
            <line num="1778" count="636" type="stmt"/>
            <line num="1779" count="636" type="stmt"/>
            <line num="1780" count="636" type="stmt"/>
            <line num="1781" count="636" type="stmt"/>
            <line falsecount="318" truecount="318" num="1781" type="cond"/>
            <line num="1782" count="318" type="stmt"/>
            <line num="1784" count="318" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/BachelierModel.java" name="BachelierModel.java">
            <metrics coveredelements="111" coveredconditionals="19" complexity="41" loc="823" coveredmethods="21" methods="23" elements="140" classes="1" ncloc="303" statements="85" conditionals="32" coveredstatements="71"/>
            <class name="BachelierModel">
               <metrics coveredelements="111" coveredconditionals="19" complexity="41" coveredmethods="21" methods="23" elements="140" statements="85" conditionals="32" coveredstatements="71"/>
            </class>
            <line complexity="1" visibility="private" signature="BachelierModel()" num="44" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="bachelierOptionValue(double,double,double,double,double) : double" num="67" count="176066697" type="method"/>
            <line num="74" count="176232929" type="stmt"/>
            <line falsecount="176392897" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="176446213" type="stmt"/>
            <line falsecount="148909316" truecount="27587580" num="77" type="cond"/>
            <line num="78" count="27596471" type="stmt"/>
            <line num="83" count="148953695" type="stmt"/>
            <line num="85" count="149003849" type="stmt"/>
            <line num="88" count="150128510" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="110" count="652" type="method"/>
            <line num="117" count="652" type="stmt"/>
            <line falsecount="652" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="122" count="652" type="stmt"/>
            <line num="123" count="652" type="stmt"/>
            <line num="125" count="652" type="stmt"/>
            <line num="128" count="652" type="stmt"/>
            <line complexity="4" visibility="public" signature="bachelierOptionImpliedVolatility(double,double,double,double,double) : double" num="150" count="976318" type="method"/>
            <line num="159" count="976319" type="stmt"/>
            <line num="160" count="976321" type="stmt"/>
            <line num="163" count="976317" type="stmt"/>
            <line num="164" count="976298" type="stmt"/>
            <line num="167" count="976330" type="stmt"/>
            <line num="168" count="975978" type="stmt"/>
            <line falsecount="976059" truecount="90678614" num="168" type="cond"/>
            <line num="169" count="90744843" type="stmt"/>
            <line num="171" count="90415756" type="stmt"/>
            <line num="173" count="91193134" type="stmt"/>
            <line num="175" count="91339955" type="stmt"/>
            <line num="178" count="976080" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierOptionDelta(double,double,double,double,double) : double" num="199" count="36356" type="method"/>
            <line num="206" count="36356" type="stmt"/>
            <line falsecount="36356" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="36356" type="stmt"/>
            <line falsecount="34908" truecount="1448" num="209" type="cond"/>
            <line num="210" count="1448" type="stmt"/>
            <line num="215" count="34908" type="stmt"/>
            <line num="217" count="34908" type="stmt"/>
            <line num="219" count="34908" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierDigitalOptionDelta(double,double,double,double,double) : double" num="245" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="287" count="36" type="method"/>
            <line num="294" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="299" count="36" type="stmt"/>
            <line num="300" count="36" type="stmt"/>
            <line num="302" count="36" type="stmt"/>
            <line num="304" count="36" type="stmt"/>
            <line complexity="3" visibility="public" signature="bachelierOptionVega(double,double,double,double,double) : double" num="326" count="252" type="method"/>
            <line num="333" count="252" type="stmt"/>
            <line falsecount="252" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="252" type="stmt"/>
            <line falsecount="252" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="343" count="252" type="stmt"/>
            <line num="345" count="252" type="stmt"/>
            <line num="347" count="252" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="369" count="36" type="method"/>
            <line num="376" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="36" type="stmt"/>
            <line num="382" count="36" type="stmt"/>
            <line num="384" count="36" type="stmt"/>
            <line num="386" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionValue(double,double,double,double,double) : double" num="409" count="2100" type="method"/>
            <line num="416" count="2100" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="438" count="36" type="method"/>
            <line num="445" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionImpliedVolatility(double,double,double,double,double) : double" num="467" count="1100" type="method"/>
            <line num="474" count="1100" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionDelta(double,double,double,double,double) : double" num="497" count="252" type="method"/>
            <line num="504" count="252" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="527" count="36" type="method"/>
            <line num="534" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionVega(double,double,double,double,double) : double" num="556" count="252" type="method"/>
            <line num="563" count="252" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierHomogeneousOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="585" count="36" type="method"/>
            <line num="592" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionValue(double,double,double,double,double) : double" num="613" count="804" type="method"/>
            <line num="620" count="804" type="stmt"/>
            <line falsecount="50" truecount="754" num="620" type="cond"/>
            <line num="621" count="804" type="stmt"/>
            <line num="623" count="804" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionValue(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="644" count="18" type="method"/>
            <line num="652" count="18" type="stmt"/>
            <line num="654" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionImpliedVolatility(double,double,double,double,double) : double" num="676" count="550" type="method"/>
            <line num="683" count="550" type="stmt"/>
            <line num="685" count="550" type="stmt"/>
            <line falsecount="50" truecount="500" num="685" type="cond"/>
            <line num="686" count="550" type="stmt"/>
            <line num="688" count="550" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionDelta(double,double,double,double,double) : double" num="709" count="72" type="method"/>
            <line num="716" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="716" type="cond"/>
            <line num="717" count="72" type="stmt"/>
            <line num="719" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionDelta(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="745" count="18" type="method"/>
            <line num="753" count="18" type="stmt"/>
            <line num="755" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="bachelierInhomogeneousOptionVega(double,double,double,double,double) : double" num="776" count="72" type="method"/>
            <line num="783" count="72" type="stmt"/>
            <line falsecount="0" truecount="72" num="783" type="cond"/>
            <line num="784" count="72" type="stmt"/>
            <line num="786" count="72" type="stmt"/>
            <line num="788" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="bachelierInhomogeneousOptionVega(RandomVariable,RandomVariable,double,double,RandomVariable) : RandomVariable" num="809" count="18" type="method"/>
            <line num="817" count="18" type="stmt"/>
            <line num="819" count="18" type="stmt"/>
            <line num="821" count="18" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/BarrierOptions.java" name="BarrierOptions.java">
            <metrics coveredelements="97" coveredconditionals="26" complexity="23" loc="237" coveredmethods="1" methods="2" elements="102" classes="2" ncloc="146" statements="74" conditionals="26" coveredstatements="70"/>
            <class name="BarrierOptions">
               <metrics coveredelements="97" coveredconditionals="26" complexity="23" coveredmethods="1" methods="2" elements="102" statements="74" conditionals="26" coveredstatements="70"/>
            </class>
            <class name="BarrierOptions.BarrierType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="BarrierOptions()" num="27" count="0" type="method"/>
            <line complexity="22" visibility="public" signature="blackScholesBarrierOptionValue(double,double,double,double,double,double,boolean,double,double,BarrierType) : double" num="45" count="72" type="method"/>
            <line num="56" count="72" type="stmt"/>
            <line falsecount="36" truecount="36" num="56" type="cond"/>
            <line num="57" count="72" type="stmt"/>
            <line num="59" count="72" type="stmt"/>
            <line num="60" count="12" type="stmt"/>
            <line num="61" count="12" type="stmt"/>
            <line num="62" count="12" type="stmt"/>
            <line num="63" count="24" type="stmt"/>
            <line num="64" count="24" type="stmt"/>
            <line num="65" count="24" type="stmt"/>
            <line num="66" count="12" type="stmt"/>
            <line num="67" count="12" type="stmt"/>
            <line num="68" count="12" type="stmt"/>
            <line num="69" count="24" type="stmt"/>
            <line num="70" count="24" type="stmt"/>
            <line num="71" count="24" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="72" type="stmt"/>
            <line num="77" count="72" type="stmt"/>
            <line num="78" count="72" type="stmt"/>
            <line num="79" count="72" type="stmt"/>
            <line num="80" count="72" type="stmt"/>
            <line num="82" count="72" type="stmt"/>
            <line num="84" count="72" type="stmt"/>
            <line num="86" count="72" type="stmt"/>
            <line num="89" count="72" type="stmt"/>
            <line num="91" count="72" type="stmt"/>
            <line num="93" count="72" type="stmt"/>
            <line num="97" count="72" type="stmt"/>
            <line num="101" count="72" type="stmt"/>
            <line num="107" count="72" type="stmt"/>
            <line num="113" count="72" type="stmt"/>
            <line num="117" count="72" type="stmt"/>
            <line num="122" count="72" type="stmt"/>
            <line num="124" count="72" type="stmt"/>
            <line num="132" count="24" type="stmt"/>
            <line num="133" count="24" type="stmt"/>
            <line falsecount="12" truecount="12" num="133" type="cond"/>
            <line num="136" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="136" type="cond"/>
            <line num="138" count="8" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line num="146" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="146" type="cond"/>
            <line num="148" count="8" type="stmt"/>
            <line num="151" count="4" type="stmt"/>
            <line num="154" count="24" type="stmt"/>
            <line num="155" count="12" type="stmt"/>
            <line num="156" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="156" type="cond"/>
            <line num="159" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="159" type="cond"/>
            <line num="161" count="2" type="stmt"/>
            <line num="164" count="4" type="stmt"/>
            <line num="169" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="169" type="cond"/>
            <line num="171" count="2" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line num="177" count="12" type="stmt"/>
            <line num="185" count="24" type="stmt"/>
            <line num="186" count="24" type="stmt"/>
            <line falsecount="12" truecount="12" num="186" type="cond"/>
            <line num="189" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="189" type="cond"/>
            <line num="191" count="8" type="stmt"/>
            <line num="194" count="4" type="stmt"/>
            <line num="199" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="199" type="cond"/>
            <line num="201" count="8" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="207" count="24" type="stmt"/>
            <line num="208" count="12" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="209" type="cond"/>
            <line num="212" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="212" type="cond"/>
            <line num="214" count="2" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="222" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="222" type="cond"/>
            <line num="224" count="2" type="stmt"/>
            <line num="227" count="4" type="stmt"/>
            <line num="230" count="12" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="72" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/DoubleTernaryOperator.java" name="DoubleTernaryOperator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DoubleTernaryOperator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/GammaDistribution.java" name="GammaDistribution.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="31" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="GammaDistribution">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="GammaDistribution(double,double)" num="17" count="1400" type="method"/>
            <line num="18" count="1400" type="stmt"/>
            <line num="19" count="1400" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="28" count="32000000" type="method"/>
            <line num="29" count="32000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/JarqueBeraTest.java" name="JarqueBeraTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="14" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="JarqueBeraTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="JarqueBeraTest()" num="28" count="10" type="method"/>
            <line complexity="1" visibility="public" signature="test(RandomVariable) : double" num="38" count="1922" type="method"/>
            <line num="39" count="1922" type="stmt"/>
            <line num="40" count="1922" type="stmt"/>
            <line num="42" count="1922" type="stmt"/>
            <line num="43" count="1922" type="stmt"/>
            <line num="45" count="1922" type="stmt"/>
            <line num="47" count="1922" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/LinearAlgebra.java" name="LinearAlgebra.java">
            <metrics coveredelements="88" coveredconditionals="22" complexity="60" loc="565" coveredmethods="12" methods="21" elements="231" classes="2" ncloc="256" statements="140" conditionals="70" coveredstatements="54"/>
            <class name="LinearAlgebra">
               <metrics coveredelements="83" coveredconditionals="22" complexity="58" coveredmethods="10" methods="19" elements="226" statements="137" conditionals="70" coveredstatements="51"/>
            </class>
            <class name="LinearAlgebra.EigenValueIndex">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="6" visibility="package" signature="&lt;clinit&gt;, line 36()" num="36" count="96" type="method"/>
            <line num="38" count="96" type="stmt"/>
            <line num="43" count="96" type="stmt"/>
            <line falsecount="96" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="96" type="stmt"/>
            <line falsecount="0" truecount="96" num="59" type="cond"/>
            <line num="60" count="96" type="stmt"/>
            <line num="62" count="96" type="stmt"/>
            <line complexity="4" visibility="public" signature="solveLinearEquationTikonov(double[][],double[],double) : double[]" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="solveLinearEquationTikonov(double[][],double[],double,double,double) : double[]" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="solveLinearEquation(double[][],double[]) : double[]" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="solveLinearEquationSVD(double[][],double[]) : double[]" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="invert(double[][]) : double[][]" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="solveLinearEquationSymmetric(double[][],double[]) : double[]" num="293" count="6854333" type="method"/>
            <line num="294" count="6854425" type="stmt"/>
            <line falsecount="0" truecount="6854488" num="294" type="cond"/>
            <line num="295" count="6854539" type="stmt"/>
            <line num="296" count="6854869" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="solveLinearEquationLeastSquare(double[][],double[]) : double[]" num="321" count="2" type="method"/>
            <line num="323" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="solveLinearEquationLeastSquare(double[][],double[][]) : double[][]" num="339" count="4" type="method"/>
            <line num="341" count="4" type="stmt"/>
            <line num="342" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorMatrix(double[][],int) : double[][]" num="353" count="6092" type="method"/>
            <line num="354" count="6092" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorReduction(double[][],int) : double[][]" num="364" count="3046" type="method"/>
            <line num="365" count="3045" type="stmt"/>
            <line complexity="7" visibility="private" signature="getFactorMatrixUsingCommonsMath(double[][],int) : double[][]" num="376" count="6087" type="method"/>
            <line num="381" count="6085" type="stmt"/>
            <line num="382" count="6094" type="stmt"/>
            <line num="384" count="6096" type="stmt"/>
            <line falsecount="6094" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="6096" type="stmt"/>
            <line num="391" count="6096" type="stmt"/>
            <line num="392" count="6095" type="stmt"/>
            <line complexity="1" visibility="package" signature="EigenValueIndex(int,double)" num="399" count="239438" type="method"/>
            <line num="400" count="239458" type="stmt"/>
            <line num="400" count="239459" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(EigenValueIndex) : int" num="403" count="232966" type="method"/>
            <line num="404" count="232985" type="stmt"/>
            <line num="406" count="6098" type="stmt"/>
            <line num="407" count="6096" type="stmt"/>
            <line falsecount="6093" truecount="239312" num="407" type="cond"/>
            <line num="408" count="239384" type="stmt"/>
            <line num="410" count="6092" type="stmt"/>
            <line num="413" count="6087" type="stmt"/>
            <line num="414" count="6097" type="stmt"/>
            <line falsecount="6097" truecount="32431" num="414" type="cond"/>
            <line num="415" count="32441" type="stmt"/>
            <line num="416" count="32437" type="stmt"/>
            <line num="417" count="32439" type="stmt"/>
            <line falsecount="20487" truecount="11959" num="417" type="cond"/>
            <line num="418" count="32447" type="stmt"/>
            <line num="419" count="32447" type="stmt"/>
            <line falsecount="32443" truecount="1291790" num="419" type="cond"/>
            <line num="420" count="1291490" type="stmt"/>
            <line num="422" count="32440" type="stmt"/>
            <line num="423" count="32442" type="stmt"/>
            <line falsecount="32431" truecount="1291023" num="423" type="cond"/>
            <line num="424" count="1290834" type="stmt"/>
            <line num="428" count="6094" type="stmt"/>
            <line complexity="6" visibility="public" signature="factorReductionUsingCommonsMath(double[][],int) : double[][]" num="438" count="3046" type="method"/>
            <line num="441" count="3044" type="stmt"/>
            <line num="444" count="3045" type="stmt"/>
            <line falsecount="3042" truecount="119292" num="444" type="cond"/>
            <line num="445" count="119299" type="stmt"/>
            <line num="446" count="119301" type="stmt"/>
            <line falsecount="119431" truecount="642485" num="446" type="cond"/>
            <line num="447" count="642618" type="stmt"/>
            <line num="449" count="119448" type="stmt"/>
            <line falsecount="0" truecount="119460" num="449" type="cond"/>
            <line num="450" count="119429" type="stmt"/>
            <line falsecount="119330" truecount="642272" num="450" type="cond"/>
            <line num="451" count="642359" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="463" count="3047" type="stmt"/>
            <line num="465" count="3048" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp(double[][]) : double[][]" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp(RealMatrix) : RealMatrix" num="490" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="transpose(double[][]) : double[][]" num="500" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pseudoInverse(double[][]) : double[][]" num="524" count="2" type="method"/>
            <line num="525" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="525" type="cond"/>
            <line num="527" count="2" type="stmt"/>
            <line num="528" count="2" type="stmt"/>
            <line num="530" count="2" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="diag(double[]) : double[][]" num="543" count="0" type="method"/>
            <line num="546" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="548" type="cond"/>
            <line num="549" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multMatrices(double[][],double[][]) : double[][]" num="562" count="2" type="method"/>
            <line num="563" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/LogNormalDistribution.java" name="LogNormalDistribution.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="96" coveredmethods="0" methods="11" elements="29" classes="2" ncloc="50" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="LogNormalDistribution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LogNormalDistribution.LogNormalDistributionParameters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LogNormalDistributionParameters(double,double,double,double)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMean() : double" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMu() : double" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSigma() : double" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LogNormalDistribution()" num="48" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getParametersFromMuAndSigma(double,double) : LogNormalDistributionParameters" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParametersFromMeanAndStdDev(double,double) : LogNormalDistributionParameters" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="density(double) : double" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cumulativeDistribution(double) : double" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/NonCentralChiSquaredDistribution.java" name="NonCentralChiSquaredDistribution.java">
            <metrics coveredelements="49" coveredconditionals="8" complexity="10" loc="138" coveredmethods="2" methods="4" elements="59" classes="1" ncloc="69" statements="43" conditionals="12" coveredstatements="39"/>
            <class name="NonCentralChiSquaredDistribution">
               <metrics coveredelements="49" coveredconditionals="8" complexity="10" coveredmethods="2" methods="4" elements="59" statements="43" conditionals="12" coveredstatements="39"/>
            </class>
            <line complexity="2" visibility="public" signature="NonCentralChiSquaredDistribution(double,double)" num="40" count="1272" type="method"/>
            <line num="41" count="1272" type="stmt"/>
            <line num="42" count="1272" type="stmt"/>
            <line num="44" count="1272" type="stmt"/>
            <line num="45" count="1272" type="stmt"/>
            <line num="46" count="1272" type="stmt"/>
            <line num="47" count="1272" type="stmt"/>
            <line num="49" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="1272" type="stmt"/>
            <line complexity="6" visibility="public" signature="cumulativeDistribution(double) : double" num="62" count="1272" type="method"/>
            <line num="63" count="1272" type="stmt"/>
            <line falsecount="1272" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="1272" type="stmt"/>
            <line num="68" count="1272" type="stmt"/>
            <line num="70" count="1272" type="stmt"/>
            <line num="72" count="1272" type="stmt"/>
            <line num="73" count="1272" type="stmt"/>
            <line num="78" count="1272" type="stmt"/>
            <line num="79" count="1272" type="stmt"/>
            <line num="80" count="1272" type="stmt"/>
            <line num="81" count="1272" type="stmt"/>
            <line falsecount="0" truecount="297104" num="81" type="cond"/>
            <line num="83" count="297104" type="stmt"/>
            <line num="84" count="297104" type="stmt"/>
            <line num="87" count="297104" type="stmt"/>
            <line num="89" count="297104" type="stmt"/>
            <line num="90" count="297104" type="stmt"/>
            <line num="92" count="297104" type="stmt"/>
            <line falsecount="295832" truecount="1272" num="92" type="cond"/>
            <line num="93" count="1272" type="stmt"/>
            <line num="95" count="295832" type="stmt"/>
            <line num="98" count="1272" type="stmt"/>
            <line num="99" count="1272" type="stmt"/>
            <line num="100" count="1272" type="stmt"/>
            <line num="106" count="1272" type="stmt"/>
            <line falsecount="0" truecount="190164" num="106" type="cond"/>
            <line num="107" count="190164" type="stmt"/>
            <line num="108" count="190164" type="stmt"/>
            <line num="111" count="190164" type="stmt"/>
            <line num="113" count="190164" type="stmt"/>
            <line num="114" count="190164" type="stmt"/>
            <line num="116" count="190164" type="stmt"/>
            <line falsecount="188892" truecount="1272" num="116" type="cond"/>
            <line num="117" count="1272" type="stmt"/>
            <line num="119" count="188892" type="stmt"/>
            <line num="122" count="1272" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDegreesOfFreedom() : double" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNonCentrality() : double" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/NormalDistribution.java" name="NormalDistribution.java">
            <metrics coveredelements="82" coveredconditionals="9" complexity="10" loc="163" coveredmethods="4" methods="5" elements="85" classes="1" ncloc="98" statements="70" conditionals="10" coveredstatements="69"/>
            <class name="NormalDistribution">
               <metrics coveredelements="82" coveredconditionals="9" complexity="10" coveredmethods="4" methods="5" elements="85" statements="70" conditionals="10" coveredstatements="69"/>
            </class>
            <line complexity="1" visibility="private" signature="NormalDistribution()" num="17" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="density(double) : double" num="26" count="150997814" type="method"/>
            <line num="27" count="151369293" type="stmt"/>
            <line complexity="1" visibility="public" signature="cumulativeDistribution(double) : double" num="37" count="241797911" type="method"/>
            <line num="38" count="241955993" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="47" count="2147483647" type="method"/>
            <line num="48" count="2147483647" type="stmt"/>
            <line complexity="6" visibility="public" signature="inverseCumulativeNormalDistributionWichura(double) : double" num="67" count="2147483647" type="method"/>
            <line num="68" count="2147483647" type="stmt"/>
            <line num="69" count="2147483647" type="stmt"/>
            <line num="70" count="2147483647" type="stmt"/>
            <line num="73" count="2147483647" type="stmt"/>
            <line num="74" count="2147483647" type="stmt"/>
            <line num="75" count="2147483647" type="stmt"/>
            <line num="76" count="2147483647" type="stmt"/>
            <line num="77" count="2147483647" type="stmt"/>
            <line num="78" count="2147483647" type="stmt"/>
            <line num="79" count="2147483647" type="stmt"/>
            <line num="80" count="2147483647" type="stmt"/>
            <line num="81" count="2147483647" type="stmt"/>
            <line num="82" count="2147483647" type="stmt"/>
            <line num="83" count="2147483647" type="stmt"/>
            <line num="84" count="2147483647" type="stmt"/>
            <line num="85" count="2147483647" type="stmt"/>
            <line num="86" count="2147483647" type="stmt"/>
            <line num="87" count="2147483647" type="stmt"/>
            <line num="91" count="2147483647" type="stmt"/>
            <line num="92" count="2147483647" type="stmt"/>
            <line num="93" count="2147483647" type="stmt"/>
            <line num="94" count="2147483647" type="stmt"/>
            <line num="95" count="2147483647" type="stmt"/>
            <line num="96" count="2147483647" type="stmt"/>
            <line num="97" count="2147483647" type="stmt"/>
            <line num="98" count="2147483647" type="stmt"/>
            <line num="99" count="2147483647" type="stmt"/>
            <line num="100" count="2147483647" type="stmt"/>
            <line num="101" count="2147483647" type="stmt"/>
            <line num="102" count="2147483647" type="stmt"/>
            <line num="103" count="2147483647" type="stmt"/>
            <line num="104" count="2147483647" type="stmt"/>
            <line num="105" count="2147483647" type="stmt"/>
            <line num="109" count="2147483647" type="stmt"/>
            <line num="110" count="2147483647" type="stmt"/>
            <line num="111" count="2147483647" type="stmt"/>
            <line num="112" count="2147483647" type="stmt"/>
            <line num="113" count="2147483647" type="stmt"/>
            <line num="114" count="2147483647" type="stmt"/>
            <line num="115" count="2147483647" type="stmt"/>
            <line num="116" count="2147483647" type="stmt"/>
            <line num="117" count="2147483647" type="stmt"/>
            <line num="118" count="2147483647" type="stmt"/>
            <line num="119" count="2147483647" type="stmt"/>
            <line num="120" count="2147483647" type="stmt"/>
            <line num="121" count="2147483647" type="stmt"/>
            <line num="122" count="2147483647" type="stmt"/>
            <line num="123" count="2147483647" type="stmt"/>
            <line num="126" count="2147483647" type="stmt"/>
            <line num="127" count="2147483647" type="stmt"/>
            <line num="129" count="2147483647" type="stmt"/>
            <line falsecount="1263083000" truecount="2147483647" num="129" type="cond"/>
            <line num="130" count="2147483647" type="stmt"/>
            <line num="131" count="2147483647" type="stmt"/>
            <line num="135" count="1263083000" type="stmt"/>
            <line falsecount="631727014" truecount="631355986" num="135" type="cond"/>
            <line num="136" count="631355986" type="stmt"/>
            <line num="138" count="631727014" type="stmt"/>
            <line num="141" count="1263083000" type="stmt"/>
            <line falsecount="1263083000" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="1263082999" type="stmt"/>
            <line num="145" count="1263083000" type="stmt"/>
            <line falsecount="704" truecount="1263082296" num="145" type="cond"/>
            <line num="146" count="1263082296" type="stmt"/>
            <line num="147" count="1263082296" type="stmt"/>
            <line num="151" count="703" type="stmt"/>
            <line num="152" count="703" type="stmt"/>
            <line num="156" count="1263083000" type="stmt"/>
            <line falsecount="631727014" truecount="631355986" num="156" type="cond"/>
            <line num="157" count="631355986" type="stmt"/>
            <line num="160" count="1263083000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/PoissonDistribution.java" name="PoissonDistribution.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="3" loc="38" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="19" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="PoissonDistribution">
               <metrics coveredelements="14" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="14" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="PoissonDistribution(double)" num="16" count="800" type="method"/>
            <line num="17" count="800" type="stmt"/>
            <line num="18" count="800" type="stmt"/>
            <line complexity="2" visibility="public" signature="inverseCumulativeDistribution(double) : double" num="27" count="260000000" type="method"/>
            <line num="28" count="260000000" type="stmt"/>
            <line num="29" count="260000000" type="stmt"/>
            <line num="30" count="260000000" type="stmt"/>
            <line num="31" count="260000000" type="stmt"/>
            <line falsecount="260000000" truecount="1919202" num="31" type="cond"/>
            <line num="32" count="1919202" type="stmt"/>
            <line num="33" count="1919202" type="stmt"/>
            <line num="34" count="1919202" type="stmt"/>
            <line num="36" count="260000000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/functions/SABRModel.java" name="SABRModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="5" elements="33" classes="1" ncloc="44" statements="24" conditionals="4" coveredstatements="0"/>
            <class name="SABRModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="33" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SABRModel()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[]) : double[]" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[],double[],double[]) : double[]" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sabrCalibrateParameterForImpliedNormalVols(double,double,double[],double[],double[],double[],double[],double[]) : double[]" num="46" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.templatemethoddesign">
         <metrics coveredelements="0" complexity="41" loc="419" methods="18" classes="2" statements="101" coveredconditionals="0" coveredmethods="0" elements="153" ncloc="205" files="1" conditionals="34" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/templatemethoddesign/LogNormalProcess.java" name="LogNormalProcess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="419" coveredmethods="0" methods="18" elements="153" classes="2" ncloc="205" statements="101" conditionals="34" coveredstatements="0"/>
            <class name="LogNormalProcess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="18" elements="153" statements="101" conditionals="34" coveredstatements="0"/>
            </class>
            <class name="LogNormalProcess.Scheme">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LogNormalProcess(int,BrownianMotion)" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LogNormalProcess(TimeDiscretization,int,int)" num="59" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LogNormalProcess(TimeDiscretization,int,int,int,int)" num="86" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDrift(int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getProcessValue(int) : RandomVariable[]" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getProcessValue(int,int) : RandomVariable" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMonteCarloWeights(int) : RandomVariable" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="doPrecalculateProcess() : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfPaths() : int" num="343" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="357" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime(int) : double" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeIndex(double) : int" num="377" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBrownianMotion() : BrownianMotion" num="384" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScheme() : Scheme" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="setBrownianMotion(BrownianMotion) : void" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setScheme(Scheme) : void" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatility.caplet.smile">
         <metrics coveredelements="0" complexity="7" loc="66" methods="2" classes="2" statements="16" coveredconditionals="0" coveredmethods="0" elements="28" ncloc="40" files="2" conditionals="10" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/smile/LinearSmileInterpolater.java" name="LinearSmileInterpolater.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="56" coveredmethods="0" methods="2" elements="28" classes="1" ncloc="36" statements="16" conditionals="10" coveredstatements="0"/>
            <class name="LinearSmileInterpolater">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="2" elements="28" statements="16" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LinearSmileInterpolater(double[][],double[])" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="calculateInterpolatedExtrapolatedSmileVolatility(double,int) : double" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata/model/volatility/caplet/smile/SmileInterpolationExtrapolationMethod.java" name="SmileInterpolationExtrapolationMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SmileInterpolationExtrapolationMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.marketdata2.model.volatilities">
         <metrics coveredelements="0" complexity="24" loc="234" methods="12" classes="3" statements="44" coveredconditionals="0" coveredmethods="0" elements="72" ncloc="116" files="2" conditionals="16" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/volatilities/AbstractVolatilitySurface.java" name="AbstractVolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="158" coveredmethods="0" methods="12" elements="72" classes="1" ncloc="101" statements="44" conditionals="16" coveredstatements="0"/>
            <class name="AbstractVolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="12" elements="72" statements="44" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate,ForwardCurve,DiscountCurve,QuotingConvention,DayCountConvention)" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatilitySurface(String,LocalDate)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDate" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQuotingConvention() : QuotingConvention" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="convertFromTo(AnalyticModel,double,double,double,QuotingConvention,QuotingConvention) : double" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertFromTo(double,double,double,QuotingConvention,QuotingConvention) : double" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve() : ForwardCurve" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve() : DiscountCurve" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDaycountConvention() : DayCountConvention" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/marketdata2/model/volatilities/VolatilitySurface.java" name="VolatilitySurface.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatilitySurface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatilitySurface.QuotingConvention">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.models.covariance">
         <metrics coveredelements="1106" complexity="654" loc="6747" methods="306" classes="42" statements="1779" coveredconditionals="212" coveredmethods="139" elements="2707" ncloc="3789" files="41" conditionals="622" coveredstatements="755"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractLIBORCovarianceModel.java" name="AbstractLIBORCovarianceModel.java">
            <metrics coveredelements="39" coveredconditionals="7" complexity="12" loc="131" coveredmethods="8" methods="8" elements="41" classes="1" ncloc="70" statements="25" conditionals="8" coveredstatements="24"/>
            <class name="AbstractLIBORCovarianceModel">
               <metrics coveredelements="39" coveredconditionals="7" complexity="12" coveredmethods="8" methods="8" elements="41" statements="25" conditionals="8" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORCovarianceModel(TimeDiscretization,TimeDiscretization,int)" num="37" count="11077" type="method"/>
            <line num="38" count="11079" type="stmt"/>
            <line num="39" count="11079" type="stmt"/>
            <line num="40" count="11080" type="stmt"/>
            <line num="41" count="11080" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(double,double,RandomVariable[]) : RandomVariable[]" num="44" count="119368062" type="method"/>
            <line num="46" count="119484295" type="stmt"/>
            <line num="47" count="119426937" type="stmt"/>
            <line falsecount="116992601" truecount="2513028" num="47" type="cond"/>
            <line num="48" count="2517723" type="stmt"/>
            <line num="50" count="119568675" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(double,int,RandomVariable[]) : RandomVariable[]" num="56" count="119624045" type="method"/>
            <line num="58" count="119675909" type="stmt"/>
            <line num="59" count="119439915" type="stmt"/>
            <line falsecount="116951816" truecount="2576449" num="59" type="cond"/>
            <line num="60" count="2579158" type="stmt"/>
            <line num="62" count="119591867" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCovariance(double,int,int,RandomVariable[]) : RandomVariable" num="80" count="1096705" type="method"/>
            <line num="82" count="1096714" type="stmt"/>
            <line num="83" count="1096699" type="stmt"/>
            <line falsecount="1096699" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="1096703" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCovariance(int,int,int,RandomVariable[]) : RandomVariable" num="93" count="658245" type="method"/>
            <line num="96" count="658248" type="stmt"/>
            <line num="97" count="658298" type="stmt"/>
            <line num="100" count="658301" type="stmt"/>
            <line num="103" count="658294" type="stmt"/>
            <line falsecount="658172" truecount="3290441" num="103" type="cond"/>
            <line num="104" count="3290447" type="stmt"/>
            <line num="107" count="658191" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="111" count="133645" type="method"/>
            <line num="113" count="133709" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="116" count="20959" type="method"/>
            <line num="118" count="20958" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="121" count="3957944" type="method"/>
            <line num="123" count="3957984" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractLIBORCovarianceModelParametric.java" name="AbstractLIBORCovarianceModelParametric.java">
            <metrics coveredelements="169" coveredconditionals="40" complexity="51" loc="480" coveredmethods="11" methods="14" elements="230" classes="2" ncloc="292" statements="156" conditionals="60" coveredstatements="118"/>
            <class name="AbstractLIBORCovarianceModelParametric">
               <metrics coveredelements="160" coveredconditionals="38" complexity="46" coveredmethods="8" methods="11" elements="219" statements="152" conditionals="56" coveredstatements="114"/>
            </class>
            <class name="AbstractLIBORCovarianceModelParametric.FutureTaskWithPriority">
               <metrics coveredelements="9" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="11" statements="4" conditionals="4" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLIBORCovarianceModelParametric(TimeDiscretization,TimeDiscretization,int)" num="78" count="11077" type="method"/>
            <line num="79" count="11076" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="89" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="4" truecount="28" num="92" type="cond"/>
            <line num="93" count="28" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(LIBORMarketModel,CalibrationProduct[]) : AbstractLIBORCovarianceModelParametric" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getCloneCalibrated(LIBORMarketModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractLIBORCovarianceModelParametric" num="155" count="24" type="method"/>
            <line num="158" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="158" type="cond"/>
            <line num="159" count="4" type="stmt"/>
            <line num="162" count="24" type="stmt"/>
            <line num="163" count="24" type="stmt"/>
            <line num="164" count="24" type="stmt"/>
            <line num="165" count="24" type="stmt"/>
            <line num="166" count="24" type="stmt"/>
            <line num="168" count="24" type="stmt"/>
            <line num="169" count="24" type="stmt"/>
            <line num="170" count="24" type="stmt"/>
            <line num="171" count="24" type="stmt"/>
            <line num="172" count="24" type="stmt"/>
            <line num="173" count="24" type="stmt"/>
            <line num="174" count="24" type="stmt"/>
            <line num="175" count="24" type="stmt"/>
            <line falsecount="12" truecount="12" num="175" type="cond"/>
            <line num="177" count="24" type="stmt"/>
            <line num="178" count="24" type="stmt"/>
            <line num="180" count="24" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="182" count="1786" type="method"/>
            <line num="185" count="1786" type="stmt"/>
            <line num="189" count="1786" type="stmt"/>
            <line num="190" count="1786" type="stmt"/>
            <line num="191" count="1786" type="stmt"/>
            <line num="193" count="1786" type="stmt"/>
            <line num="194" count="1786" type="stmt"/>
            <line falsecount="1786" truecount="275044" num="194" type="cond"/>
            <line num="195" count="275044" type="stmt"/>
            <line num="196" count="275044" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="197" count="275030" type="method"/>
            <line num="199" count="275019" type="stmt"/>
            <line num="200" count="275020" type="stmt"/>
            <line num="203" count="17860" type="stmt"/>
            <line num="207" count="275044" type="stmt"/>
            <line falsecount="0" truecount="275044" num="207" type="cond"/>
            <line num="208" count="275044" type="stmt"/>
            <line num="209" count="275044" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="1786" type="stmt"/>
            <line falsecount="1786" truecount="275044" num="217" type="cond"/>
            <line num="218" count="275044" type="stmt"/>
            <line num="219" count="275044" type="stmt"/>
            <line num="220" count="275044" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="235" count="24" type="stmt"/>
            <line num="236" count="24" type="stmt"/>
            <line num="242" count="24" type="stmt"/>
            <line num="243" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="243" type="cond"/>
            <line num="244" count="4" type="stmt"/>
            <line num="245" count="4" type="stmt"/>
            <line num="246" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="254" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="254" type="cond"/>
            <line num="255" count="4" type="stmt"/>
            <line num="260" count="4" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
            <line num="262" count="4" type="stmt"/>
            <line num="265" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="275" type="cond"/>
            <line num="276" count="20" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="314" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="FutureTaskWithPriority(Callable&lt;T&gt;,int)" num="319" count="462494" type="method"/>
            <line num="320" count="462499" type="stmt"/>
            <line num="321" count="462497" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPriority() : int" num="323" count="5447516" type="method"/>
            <line num="324" count="5447516" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(FutureTaskWithPriority&lt;T&gt;) : int" num="326" count="1361879" type="method"/>
            <line num="328" count="1361879" type="stmt"/>
            <line falsecount="1361879" truecount="0" num="328" type="cond"/>
            <line falsecount="0" truecount="1361879" num="328" type="cond"/>
            <line complexity="15" visibility="public" signature="getCloneCalibratedLegazy(LIBORMarketModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractLIBORCovarianceModelParametric" num="333" count="20" type="method"/>
            <line num="335" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="20" type="stmt"/>
            <line num="339" count="20" type="stmt"/>
            <line num="340" count="20" type="stmt"/>
            <line num="341" count="20" type="stmt"/>
            <line num="342" count="20" type="stmt"/>
            <line num="343" count="20" type="stmt"/>
            <line num="345" count="20" type="stmt"/>
            <line num="346" count="20" type="stmt"/>
            <line num="347" count="20" type="stmt"/>
            <line num="348" count="20" type="stmt"/>
            <line num="349" count="20" type="stmt"/>
            <line num="350" count="20" type="stmt"/>
            <line num="351" count="20" type="stmt"/>
            <line num="352" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="352" type="cond"/>
            <line num="353" count="20" type="stmt"/>
            <line num="361" count="20" type="stmt"/>
            <line num="362" count="20" type="stmt"/>
            <line num="364" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="364" type="cond"/>
            <line num="365" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="365" type="cond"/>
            <line num="366" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="366" type="cond"/>
            <line num="367" count="20" type="stmt"/>
            <line falsecount="6" truecount="14" num="367" type="cond"/>
            <line num="368" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="368" type="cond"/>
            <line num="369" count="20" type="stmt"/>
            <line falsecount="12" truecount="8" num="369" type="cond"/>
            <line num="371" count="20" type="stmt"/>
            <line num="372" count="20" type="stmt"/>
            <line num="374" count="20" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="376" count="4216" type="method"/>
            <line num="379" count="4216" type="stmt"/>
            <line num="383" count="4213" type="stmt"/>
            <line num="384" count="4213" type="stmt"/>
            <line num="385" count="4209" type="stmt"/>
            <line num="387" count="4212" type="stmt"/>
            <line num="388" count="4214" type="stmt"/>
            <line falsecount="4216" truecount="462497" num="388" type="cond"/>
            <line num="389" count="462496" type="stmt"/>
            <line num="392" count="462492" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="394" count="462334" type="method"/>
            <line num="396" count="462335" type="stmt"/>
            <line num="397" count="462321" type="stmt"/>
            <line num="400" count="27895" type="stmt"/>
            <line num="406" count="462485" type="stmt"/>
            <line falsecount="0" truecount="462489" num="406" type="cond"/>
            <line num="407" count="462490" type="stmt"/>
            <line num="408" count="462501" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="415" count="4216" type="stmt"/>
            <line falsecount="4216" truecount="462441" num="415" type="cond"/>
            <line num="416" count="462436" type="stmt"/>
            <line num="417" count="462442" type="stmt"/>
            <line num="418" count="462445" type="stmt"/>
            <line falsecount="28324" truecount="434120" num="418" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="427" count="20" type="stmt"/>
            <line num="428" count="20" type="stmt"/>
            <line num="429" count="20" type="stmt"/>
            <line num="432" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="447" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="455" count="20" type="stmt"/>
            <line num="456" count="20" type="stmt"/>
            <line num="458" count="20" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="468" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="468" type="cond"/>
            <line num="469" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="475" count="0" type="method"/>
            <line num="477" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractShortRateVolatilityModel.java" name="AbstractShortRateVolatilityModel.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="AbstractShortRateVolatilityModel">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractShortRateVolatilityModel(TimeDiscretization)" num="30" count="60" type="method"/>
            <line num="31" count="60" type="stmt"/>
            <line num="32" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="40" count="15883383" type="method"/>
            <line num="42" count="15944595" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/AbstractShortRateVolatilityModelParametric.java" name="AbstractShortRateVolatilityModelParametric.java">
            <metrics coveredelements="84" coveredconditionals="18" complexity="27" loc="419" coveredmethods="6" methods="7" elements="123" classes="1" ncloc="166" statements="82" conditionals="34" coveredstatements="60"/>
            <class name="AbstractShortRateVolatilityModelParametric">
               <metrics coveredelements="84" coveredconditionals="18" complexity="27" coveredmethods="6" methods="7" elements="123" statements="82" conditionals="34" coveredstatements="60"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractShortRateVolatilityModelParametric(TimeDiscretization)" num="67" count="60" type="method"/>
            <line num="68" count="60" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="85" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line falsecount="4" truecount="32" num="89" type="cond"/>
            <line num="90" count="32" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneCalibrated(ShortRateModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractShortRateVolatilityModelParametric" num="136" count="2" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line complexity="14" visibility="public" signature="getCloneCalibratedLegazy(ShortRateModel,CalibrationProduct[],Map&lt;String,Object&gt;) : AbstractShortRateVolatilityModelParametric" num="279" count="2" type="method"/>
            <line num="281" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="298" type="cond"/>
            <line num="299" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="310" type="cond"/>
            <line num="311" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="311" type="cond"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="313" type="cond"/>
            <line num="314" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="314" type="cond"/>
            <line num="315" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="315" type="cond"/>
            <line num="316" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="316" type="cond"/>
            <line num="318" count="2" type="stmt"/>
            <line num="322" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="setValues(double[],double[]) : void" num="324" count="56" type="method"/>
            <line num="327" count="56" type="stmt"/>
            <line num="331" count="56" type="stmt"/>
            <line num="332" count="56" type="stmt"/>
            <line num="333" count="56" type="stmt"/>
            <line num="335" count="56" type="stmt"/>
            <line num="336" count="56" type="stmt"/>
            <line falsecount="56" truecount="392" num="336" type="cond"/>
            <line num="337" count="392" type="stmt"/>
            <line num="338" count="392" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : RandomVariable" num="339" count="389" type="method"/>
            <line num="341" count="389" type="stmt"/>
            <line num="342" count="391" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="349" count="392" type="stmt"/>
            <line falsecount="391" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="354" count="392" type="stmt"/>
            <line num="355" count="392" type="stmt"/>
            <line num="356" count="389" type="stmt"/>
            <line num="359" count="56" type="stmt"/>
            <line falsecount="56" truecount="392" num="359" type="cond"/>
            <line num="360" count="392" type="stmt"/>
            <line num="361" count="392" type="stmt"/>
            <line num="362" count="392" type="stmt"/>
            <line falsecount="0" truecount="392" num="362" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="371" count="2" type="stmt"/>
            <line num="372" count="2" type="stmt"/>
            <line num="373" count="2" type="stmt"/>
            <line num="376" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="391" type="cond"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="402" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="408" count="2" type="stmt"/>
            <line num="409" count="2" type="stmt"/>
            <line num="411" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/BlendedLocalVolatilityModel.java" name="BlendedLocalVolatilityModel.java">
            <metrics coveredelements="44" coveredconditionals="8" complexity="28" loc="321" coveredmethods="8" methods="14" elements="107" classes="1" ncloc="134" statements="69" conditionals="24" coveredstatements="28"/>
            <class name="BlendedLocalVolatilityModel">
               <metrics coveredelements="44" coveredconditionals="8" complexity="28" coveredmethods="8" methods="14" elements="107" statements="69" conditionals="24" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,ForwardCurve,RandomVariable,boolean)" num="79" count="368" type="method"/>
            <line num="80" count="368" type="stmt"/>
            <line num="82" count="368" type="stmt"/>
            <line num="83" count="368" type="stmt"/>
            <line num="84" count="368" type="stmt"/>
            <line num="85" count="368" type="stmt"/>
            <line complexity="2" visibility="public" signature="BlendedLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,ForwardCurve,double,boolean)" num="108" count="370" type="method"/>
            <line num="109" count="370" type="stmt"/>
            <line num="111" count="370" type="stmt"/>
            <line falsecount="0" truecount="370" num="111" type="cond"/>
            <line num="112" count="370" type="stmt"/>
            <line num="113" count="370" type="stmt"/>
            <line num="114" count="370" type="stmt"/>
            <line num="115" count="370" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,double,boolean)" num="140" count="2" type="method"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,ForwardCurve,double,boolean)" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlendedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="188" count="2" type="method"/>
            <line num="189" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="192" count="368" type="method"/>
            <line num="194" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="211" count="6" type="method"/>
            <line num="213" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="213" type="cond"/>
            <line num="214" count="6" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="240" count="367" type="method"/>
            <line num="242" count="368" type="stmt"/>
            <line falsecount="368" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="368" type="stmt"/>
            <line falsecount="0" truecount="368" num="246" type="cond"/>
            <line num="247" count="368" type="stmt"/>
            <line num="248" count="368" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="259" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="264" count="572443" type="method"/>
            <line num="266" count="571988" type="stmt"/>
            <line num="268" count="571853" type="stmt"/>
            <line num="269" count="571842" type="stmt"/>
            <line falsecount="571494" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="571608" type="stmt"/>
            <line falsecount="0" truecount="571557" num="275" type="cond"/>
            <line num="276" count="571618" type="stmt"/>
            <line num="277" count="573873" type="stmt"/>
            <line falsecount="573968" truecount="2869022" num="277" type="cond"/>
            <line num="278" count="2869153" type="stmt"/>
            <line num="282" count="573972" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="290" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/DisplacedLocalVolatilityModel.java" name="DisplacedLocalVolatilityModel.java">
            <metrics coveredelements="41" coveredconditionals="9" complexity="26" loc="230" coveredmethods="7" methods="12" elements="97" classes="1" ncloc="120" statements="61" conditionals="24" coveredstatements="25"/>
            <class name="DisplacedLocalVolatilityModel">
               <metrics coveredelements="41" coveredconditionals="9" complexity="26" coveredmethods="7" methods="12" elements="97" statements="61" conditionals="24" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="DisplacedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,RandomVariable,boolean)" num="67" count="3102" type="method"/>
            <line num="68" count="3102" type="stmt"/>
            <line num="69" count="3102" type="stmt"/>
            <line num="70" count="3102" type="stmt"/>
            <line num="71" count="3102" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="95" count="6" type="method"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="99" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="121" count="24" type="method"/>
            <line num="123" count="24" type="stmt"/>
            <line falsecount="0" truecount="24" num="123" type="cond"/>
            <line num="124" count="24" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="140" count="2" type="method"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line falsecount="2" truecount="96" num="144" type="cond"/>
            <line num="145" count="96" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="150" count="3098" type="method"/>
            <line num="152" count="3098" type="stmt"/>
            <line falsecount="3098" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="3098" type="stmt"/>
            <line falsecount="0" truecount="3098" num="156" type="cond"/>
            <line num="157" count="3098" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="169" count="1308" type="method"/>
            <line num="171" count="1308" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="174" count="78300631" type="method"/>
            <line num="176" count="78387794" type="stmt"/>
            <line num="178" count="77694833" type="stmt"/>
            <line falsecount="51200" truecount="77720665" num="178" type="cond"/>
            <line num="179" count="77766270" type="stmt"/>
            <line num="180" count="78444722" type="stmt"/>
            <line falsecount="78530820" truecount="78517101" num="180" type="cond"/>
            <line num="181" count="78550893" type="stmt"/>
            <line num="185" count="78640294" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ExponentialDecayLocalVolatilityModel.java" name="ExponentialDecayLocalVolatilityModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="254" coveredmethods="0" methods="13" elements="102" classes="1" ncloc="124" statements="65" conditionals="24" coveredstatements="0"/>
            <class name="ExponentialDecayLocalVolatilityModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="13" elements="102" statements="65" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialDecayLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,RandomVariable,boolean)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ExponentialDecayLocalVolatilityModel(RandomVariableFactory,AbstractLIBORCovarianceModelParametric,double,boolean)" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentialDecayLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double,boolean)" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplacement() : RandomVariable" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/HullWhiteLocalVolatilityModel.java" name="HullWhiteLocalVolatilityModel.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="13" loc="121" coveredmethods="2" methods="8" elements="39" classes="1" ncloc="59" statements="23" conditionals="8" coveredstatements="9"/>
            <class name="HullWhiteLocalVolatilityModel">
               <metrics coveredelements="15" coveredconditionals="4" complexity="13" coveredmethods="2" methods="8" elements="39" statements="23" conditionals="8" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteLocalVolatilityModel(AbstractLIBORCovarianceModelParametric,double)" num="53" count="18" type="method"/>
            <line num="54" count="18" type="stmt"/>
            <line num="55" count="18" type="stmt"/>
            <line num="56" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBaseCovarianceModel() : AbstractLIBORCovarianceModelParametric" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="83" count="30887" type="method"/>
            <line num="85" count="30886" type="stmt"/>
            <line num="87" count="30759" type="stmt"/>
            <line falsecount="6400" truecount="24391" num="87" type="cond"/>
            <line num="88" count="24467" type="stmt"/>
            <line num="89" count="24943" type="stmt"/>
            <line falsecount="24951" truecount="24948" num="89" type="cond"/>
            <line num="90" count="24948" type="stmt"/>
            <line num="94" count="31353" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModel.java" name="LIBORCorrelationModel.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="84" coveredmethods="2" methods="4" elements="10" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="4"/>
            <class name="LIBORCorrelationModel">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModel(TimeDiscretization,TimeDiscretization)" num="34" count="3886" type="method"/>
            <line num="35" count="3888" type="stmt"/>
            <line num="36" count="3886" type="stmt"/>
            <line num="37" count="3887" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="54" count="8096094" type="method"/>
            <line num="55" count="8099167" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModelExponentialDecay.java" name="LIBORCorrelationModelExponentialDecay.java">
            <metrics coveredelements="47" coveredconditionals="11" complexity="18" loc="165" coveredmethods="7" methods="10" elements="75" classes="1" ncloc="98" statements="49" conditionals="16" coveredstatements="29"/>
            <class name="LIBORCorrelationModelExponentialDecay">
               <metrics coveredelements="47" coveredconditionals="11" complexity="18" coveredmethods="7" methods="10" elements="75" statements="49" conditionals="16" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelExponentialDecay(TimeDiscretization,TimeDiscretization,int,double,boolean)" num="50" count="1797" type="method"/>
            <line num="51" count="1797" type="stmt"/>
            <line num="53" count="1795" type="stmt"/>
            <line num="54" count="1797" type="stmt"/>
            <line num="55" count="1796" type="stmt"/>
            <line num="57" count="1798" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelExponentialDecay(TimeDiscretization,TimeDiscretization,int,double)" num="60" count="428" type="method"/>
            <line num="61" count="428" type="stmt"/>
            <line num="63" count="428" type="stmt"/>
            <line num="64" count="428" type="stmt"/>
            <line num="65" count="428" type="stmt"/>
            <line num="67" count="428" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORCorrelationModelExponentialDecay" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(int,int,int) : double" num="84" count="126387131" type="method"/>
            <line num="86" count="126468710" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelation(int,int,int) : double" num="89" count="438460" type="method"/>
            <line num="91" count="438460" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="94" count="118586273" type="method"/>
            <line num="96" count="118645933" type="stmt"/>
            <line complexity="6" visibility="private" signature="initialize(int,double) : void" num="99" count="2225" type="method"/>
            <line num="105" count="2224" type="stmt"/>
            <line num="107" count="2226" type="stmt"/>
            <line num="108" count="2226" type="stmt"/>
            <line falsecount="2225" truecount="86688" num="108" type="cond"/>
            <line num="109" count="86723" type="stmt"/>
            <line falsecount="86592" truecount="3435466" num="109" type="cond"/>
            <line num="111" count="3439207" type="stmt"/>
            <line num="118" count="2225" type="stmt"/>
            <line num="120" count="2226" type="stmt"/>
            <line falsecount="2226" truecount="87208" num="120" type="cond"/>
            <line num="121" count="87217" type="stmt"/>
            <line falsecount="87277" truecount="1760660" num="121" type="cond"/>
            <line num="122" count="1763032" type="stmt"/>
            <line num="123" count="1759112" type="stmt"/>
            <line falsecount="1764799" truecount="8538612" num="123" type="cond"/>
            <line num="124" count="8541818" type="stmt"/>
            <line num="126" count="1764673" type="stmt"/>
            <line num="127" count="1766849" type="stmt"/>
            <line num="129" count="87237" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="133" count="4542" type="method"/>
            <line num="135" count="4542" type="stmt"/>
            <line falsecount="0" truecount="4542" num="135" type="cond"/>
            <line num="136" count="4542" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORCorrelationModel" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCorrelationModelThreeParameterExponentialDecay.java" name="LIBORCorrelationModelThreeParameterExponentialDecay.java">
            <metrics coveredelements="48" coveredconditionals="12" complexity="19" loc="185" coveredmethods="4" methods="9" elements="97" classes="1" ncloc="130" statements="68" conditionals="20" coveredstatements="32"/>
            <class name="LIBORCorrelationModelThreeParameterExponentialDecay">
               <metrics coveredelements="48" coveredconditionals="12" complexity="19" coveredmethods="4" methods="9" elements="97" statements="68" conditionals="20" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCorrelationModelThreeParameterExponentialDecay(TimeDiscretization,TimeDiscretization,int,double,double,double,boolean)" num="42" count="1660" type="method"/>
            <line num="43" count="1662" type="stmt"/>
            <line num="45" count="1660" type="stmt"/>
            <line num="46" count="1660" type="stmt"/>
            <line num="47" count="1660" type="stmt"/>
            <line num="48" count="1660" type="stmt"/>
            <line num="49" count="1659" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORCorrelationModelThreeParameterExponentialDecay" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,int) : double" num="80" count="15644224" type="method"/>
            <line num="82" count="15647675" type="stmt"/>
            <line num="83" count="15778130" type="stmt"/>
            <line falsecount="15778020" truecount="823" num="83" type="cond"/>
            <line num="84" count="823" type="stmt"/>
            <line num="88" count="15779065" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCorrelation(int,int,int) : double" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="101" count="2626688" type="method"/>
            <line num="103" count="2627729" type="stmt"/>
            <line complexity="6" visibility="private" signature="initialize(int,double,double,double) : void" num="106" count="823" type="method"/>
            <line num="111" count="820" type="stmt"/>
            <line num="112" count="811" type="stmt"/>
            <line num="113" count="818" type="stmt"/>
            <line num="115" count="819" type="stmt"/>
            <line num="116" count="822" type="stmt"/>
            <line falsecount="824" truecount="32764" num="116" type="cond"/>
            <line num="117" count="32776" type="stmt"/>
            <line falsecount="32761" truecount="612047" num="117" type="cond"/>
            <line num="119" count="612541" type="stmt"/>
            <line num="120" count="611561" type="stmt"/>
            <line num="121" count="611152" type="stmt"/>
            <line num="122" count="611514" type="stmt"/>
            <line num="123" count="611671" type="stmt"/>
            <line num="125" count="32765" type="stmt"/>
            <line num="131" count="823" type="stmt"/>
            <line num="133" count="824" type="stmt"/>
            <line falsecount="824" truecount="32932" num="133" type="cond"/>
            <line num="134" count="32930" type="stmt"/>
            <line falsecount="32935" truecount="629622" num="134" type="cond"/>
            <line num="135" count="630519" type="stmt"/>
            <line num="136" count="633052" type="stmt"/>
            <line falsecount="630264" truecount="3673934" num="136" type="cond"/>
            <line num="137" count="3673995" type="stmt"/>
            <line num="139" count="630024" type="stmt"/>
            <line num="140" count="630968" type="stmt"/>
            <line num="142" count="32928" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORCorrelationModel" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModel.java" name="LIBORCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="149" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="20" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelBH.java" name="LIBORCovarianceModelBH.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="116" coveredmethods="0" methods="8" elements="47" classes="1" ncloc="67" statements="33" conditionals="6" coveredstatements="0"/>
            <class name="LIBORCovarianceModelBH">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="8" elements="47" statements="33" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelBH(TimeDiscretization,TimeDiscretization,int,double[])" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelBH(TimeDiscretization,TimeDiscretization,int)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelCalibrateable.java" name="LIBORCovarianceModelCalibrateable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LIBORCovarianceModelCalibrateable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelExponentialForm5Param.java" name="LIBORCovarianceModelExponentialForm5Param.java">
            <metrics coveredelements="45" coveredconditionals="6" complexity="23" loc="152" coveredmethods="9" methods="12" elements="79" classes="1" ncloc="111" statements="51" conditionals="16" coveredstatements="30"/>
            <class name="LIBORCovarianceModelExponentialForm5Param">
               <metrics coveredelements="45" coveredconditionals="6" complexity="23" coveredmethods="9" methods="12" elements="79" statements="51" conditionals="16" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int,RandomVariable[])" num="40" count="1082" type="method"/>
            <line num="41" count="1082" type="stmt"/>
            <line num="43" count="1082" type="stmt"/>
            <line num="44" count="1082" type="stmt"/>
            <line num="45" count="1079" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int,double[])" num="48" count="10" type="method"/>
            <line num="49" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm5Param(TimeDiscretization,TimeDiscretization,int)" num="52" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="55" count="1072" type="method"/>
            <line num="57" count="1072" type="stmt"/>
            <line num="58" count="1072" type="stmt"/>
            <line num="59" count="1072" type="stmt"/>
            <line num="60" count="1072" type="stmt"/>
            <line num="61" count="1072" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="64" count="704" type="method"/>
            <line num="66" count="704" type="stmt"/>
            <line num="68" count="703" type="stmt"/>
            <line num="69" count="704" type="stmt"/>
            <line falsecount="0" truecount="704" num="69" type="cond"/>
            <line num="70" count="703" type="stmt"/>
            <line num="72" count="704" type="stmt"/>
            <line falsecount="0" truecount="704" num="72" type="cond"/>
            <line num="73" count="704" type="stmt"/>
            <line num="76" count="704" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="79" count="1100" type="method"/>
            <line num="81" count="1101" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="84" count="336" type="method"/>
            <line num="86" count="336" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="89" count="16" type="method"/>
            <line num="91" count="16" type="stmt"/>
            <line num="92" count="16" type="stmt"/>
            <line num="93" count="16" type="stmt"/>
            <line falsecount="16" truecount="80" num="93" type="cond"/>
            <line num="94" count="80" type="stmt"/>
            <line num="96" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="99" count="1108006" type="method"/>
            <line num="101" count="1108102" type="stmt"/>
            <line num="102" count="1106352" type="stmt"/>
            <line falsecount="1109125" truecount="6016670" num="102" type="cond"/>
            <line num="103" count="6021950" type="stmt"/>
            <line num="104" count="6074324" type="stmt"/>
            <line num="108" count="1109362" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelExponentialForm7Param.java" name="LIBORCovarianceModelExponentialForm7Param.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="16" loc="107" coveredmethods="5" methods="7" elements="54" classes="1" ncloc="76" statements="39" conditionals="8" coveredstatements="29"/>
            <class name="LIBORCovarianceModelExponentialForm7Param">
               <metrics coveredelements="40" coveredconditionals="6" complexity="16" coveredmethods="5" methods="7" elements="54" statements="39" conditionals="8" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelExponentialForm7Param(TimeDiscretization,TimeDiscretization,int)" num="29" count="843" type="method"/>
            <line num="30" count="844" type="stmt"/>
            <line num="32" count="844" type="stmt"/>
            <line num="33" count="844" type="stmt"/>
            <line num="34" count="844" type="stmt"/>
            <line num="35" count="844" type="stmt"/>
            <line num="36" count="844" type="stmt"/>
            <line num="37" count="844" type="stmt"/>
            <line num="38" count="844" type="stmt"/>
            <line num="40" count="844" type="stmt"/>
            <line num="41" count="843" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="44" count="837" type="method"/>
            <line num="46" count="836" type="stmt"/>
            <line num="47" count="839" type="stmt"/>
            <line num="48" count="837" type="stmt"/>
            <line num="49" count="836" type="stmt"/>
            <line num="50" count="837" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="53" count="840" type="method"/>
            <line num="55" count="840" type="stmt"/>
            <line num="57" count="839" type="stmt"/>
            <line num="58" count="837" type="stmt"/>
            <line falsecount="16" truecount="823" num="58" type="cond"/>
            <line num="59" count="824" type="stmt"/>
            <line num="61" count="840" type="stmt"/>
            <line falsecount="20" truecount="820" num="61" type="cond"/>
            <line num="62" count="820" type="stmt"/>
            <line num="65" count="837" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="68" count="12" type="method"/>
            <line num="70" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="73" count="2627076" type="method"/>
            <line num="75" count="2627238" type="stmt"/>
            <line num="76" count="2625501" type="stmt"/>
            <line falsecount="2628334" truecount="15733312" num="76" type="cond"/>
            <line num="77" count="15738589" type="stmt"/>
            <line num="78" count="15635961" type="stmt"/>
            <line num="79" count="15641300" type="stmt"/>
            <line num="82" count="2628769" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariableFromDoubleArray" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelFromVolatilityAndCorrelation.java" name="LIBORCovarianceModelFromVolatilityAndCorrelation.java">
            <metrics coveredelements="62" coveredconditionals="11" complexity="29" loc="209" coveredmethods="7" methods="12" elements="120" classes="1" ncloc="141" statements="78" conditionals="30" coveredstatements="44"/>
            <class name="LIBORCovarianceModelFromVolatilityAndCorrelation">
               <metrics coveredelements="62" coveredconditionals="11" complexity="29" coveredmethods="7" methods="12" elements="120" statements="78" conditionals="30" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelFromVolatilityAndCorrelation(TimeDiscretization,TimeDiscretization,LIBORVolatilityModel,LIBORCorrelationModel)" num="40" count="4922" type="method"/>
            <line num="41" count="4922" type="stmt"/>
            <line num="43" count="4922" type="stmt"/>
            <line num="44" count="4922" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="47" count="117389271" type="method"/>
            <line num="49" count="117477241" type="stmt"/>
            <line num="51" count="117175950" type="stmt"/>
            <line num="52" count="116663987" type="stmt"/>
            <line falsecount="116709345" truecount="120228414" num="52" type="cond"/>
            <line num="53" count="120294913" type="stmt"/>
            <line num="56" count="116778478" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCovariance(int,int,int,RandomVariable[]) : RandomVariable" num="82" count="438460" type="method"/>
            <line num="85" count="438460" type="stmt"/>
            <line num="86" count="438460" type="stmt"/>
            <line num="88" count="438460" type="stmt"/>
            <line num="90" count="438460" type="stmt"/>
            <line num="92" count="438460" type="stmt"/>
            <line complexity="5" visibility="public" signature="getParameter() : RandomVariable[]" num="95" count="60" type="method"/>
            <line num="97" count="60" type="stmt"/>
            <line num="98" count="60" type="stmt"/>
            <line num="100" count="60" type="stmt"/>
            <line num="101" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="101" type="cond"/>
            <line num="102" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="102" type="cond"/>
            <line num="104" count="60" type="stmt"/>
            <line num="106" count="60" type="stmt"/>
            <line num="107" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="107" type="cond"/>
            <line num="108" count="60" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="111" count="60" type="stmt"/>
            <line falsecount="60" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="119" count="1384" type="method"/>
            <line num="121" count="1384" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="124" count="22" type="method"/>
            <line num="126" count="22" type="stmt"/>
            <line num="127" count="22" type="stmt"/>
            <line num="128" count="22" type="stmt"/>
            <line falsecount="22" truecount="1056" num="128" type="cond"/>
            <line num="129" count="1056" type="stmt"/>
            <line num="131" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="142" count="4482" type="method"/>
            <line num="144" count="4482" type="stmt"/>
            <line num="145" count="4482" type="stmt"/>
            <line num="147" count="4482" type="stmt"/>
            <line num="148" count="4482" type="stmt"/>
            <line num="150" count="4482" type="stmt"/>
            <line num="151" count="4482" type="stmt"/>
            <line falsecount="0" truecount="4482" num="151" type="cond"/>
            <line num="152" count="4482" type="stmt"/>
            <line num="153" count="4482" type="stmt"/>
            <line num="154" count="4482" type="stmt"/>
            <line num="155" count="4482" type="stmt"/>
            <line falsecount="0" truecount="4482" num="155" type="cond"/>
            <line num="156" count="4482" type="stmt"/>
            <line num="160" count="4482" type="stmt"/>
            <line falsecount="4482" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="4482" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityModel() : LIBORVolatilityModel" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCorrelationModel() : LIBORCorrelationModel" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelStochasticHestonVolatility.java" name="LIBORCovarianceModelStochasticHestonVolatility.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="316" coveredmethods="0" methods="22" elements="164" classes="1" ncloc="212" statements="108" conditionals="34" coveredstatements="0"/>
            <class name="LIBORCovarianceModelStochasticHestonVolatility">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="22" elements="164" statements="108" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticHestonVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,RandomVariable,RandomVariable,RandomVariable,boolean)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticHestonVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,double,double,double,boolean)" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="setParameter(RandomVariable[]) : void" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORCovarianceModelStochasticVolatility.java" name="LIBORCovarianceModelStochasticVolatility.java">
            <metrics coveredelements="84" coveredconditionals="11" complexity="39" loc="306" coveredmethods="15" methods="22" elements="149" classes="1" ncloc="200" statements="97" conditionals="30" coveredstatements="58"/>
            <class name="LIBORCovarianceModelStochasticVolatility">
               <metrics coveredelements="84" coveredconditionals="11" complexity="39" coveredmethods="15" methods="22" elements="149" statements="97" conditionals="30" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,RandomVariable,RandomVariable,boolean)" num="72" count="367" type="method"/>
            <line num="73" count="367" type="stmt"/>
            <line num="75" count="367" type="stmt"/>
            <line num="76" count="368" type="stmt"/>
            <line num="77" count="368" type="stmt"/>
            <line num="78" count="368" type="stmt"/>
            <line num="80" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORCovarianceModelStochasticVolatility(AbstractLIBORCovarianceModelParametric,BrownianMotion,double,double,boolean)" num="92" count="2" type="method"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getParameter() : RandomVariable[]" num="103" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line complexity="4" visibility="private" signature="setParameter(RandomVariable[]) : void" num="124" count="367" type="method"/>
            <line num="125" count="367" type="stmt"/>
            <line falsecount="367" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="368" type="stmt"/>
            <line falsecount="368" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="368" type="stmt"/>
            <line num="135" count="367" type="stmt"/>
            <line num="137" count="367" type="stmt"/>
            <line num="139" count="367" type="stmt"/>
            <line num="140" count="368" type="stmt"/>
            <line num="142" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="145" count="368" type="method"/>
            <line num="147" count="368" type="stmt"/>
            <line num="148" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractLIBORCovarianceModelParametric" num="151" count="368" type="method"/>
            <line num="153" count="368" type="stmt"/>
            <line num="154" count="368" type="stmt"/>
            <line num="155" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractLIBORCovarianceModelParametric" num="158" count="368" type="method"/>
            <line num="160" count="368" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameterAsDouble() : double[]" num="163" count="4" type="method"/>
            <line num="165" count="4" type="stmt"/>
            <line num="166" count="4" type="stmt"/>
            <line num="167" count="4" type="stmt"/>
            <line falsecount="4" truecount="28" num="167" type="cond"/>
            <line num="168" count="28" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFactorLoading(int,int,RandomVariable[]) : RandomVariable[]" num="173" count="566544" type="method"/>
            <line num="176" count="566185" type="stmt"/>
            <line num="177" count="574070" type="stmt"/>
            <line falsecount="573686" truecount="368" num="177" type="cond"/>
            <line num="178" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDate() : LocalDateTime" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumeraire(MonteCarloProcess,double) : RandomVariable" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfComponents() : int" num="195" count="736" type="method"/>
            <line num="197" count="736" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialState(MonteCarloProcess) : RandomVariable[]" num="200" count="368" type="method"/>
            <line num="202" count="368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="205" count="14719" type="method"/>
            <line num="207" count="14719" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoading(MonteCarloProcess,int,int,RandomVariable[]) : RandomVariable[]" num="210" count="14718" type="method"/>
            <line num="212" count="14717" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransform(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="214" count="15088" type="method"/>
            <line num="216" count="15088" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyStateSpaceTransformInverse(MonteCarloProcess,int,int,RandomVariable) : RandomVariable" num="219" count="14719" type="method"/>
            <line num="221" count="14719" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRandomVariableForConstant(double) : RandomVariable" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : ProcessModel" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="368" type="stmt"/>
            <line num="238" count="573833" type="stmt"/>
            <line num="239" count="573807" type="stmt"/>
            <line num="240" count="573772" type="stmt"/>
            <line num="245" count="572729" type="stmt"/>
            <line num="247" count="572633" type="stmt"/>
            <line falsecount="0" truecount="572596" num="247" type="cond"/>
            <line num="248" count="572757" type="stmt"/>
            <line num="249" count="573950" type="stmt"/>
            <line falsecount="574024" truecount="2869418" num="249" type="cond"/>
            <line num="250" count="2869549" type="stmt"/>
            <line num="254" count="574032" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactorLoadingPseudoInverse(int,int,int,RandomVariable[]) : RandomVariable" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : AbstractLIBORCovarianceModelParametric" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModel.java" name="LIBORVolatilityModel.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="96" coveredmethods="3" methods="5" elements="11" classes="1" ncloc="34" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="LIBORVolatilityModel">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="LIBORVolatilityModel()" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModel(TimeDiscretization,TimeDiscretization)" num="42" count="10373" type="method"/>
            <line num="43" count="10375" type="stmt"/>
            <line num="44" count="10373" type="stmt"/>
            <line num="45" count="10375" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAsDouble() : double[]" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiborPeriodDiscretization() : TimeDiscretization" num="66" count="130182567" type="method"/>
            <line num="67" count="130221572" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="73" count="130660392" type="method"/>
            <line num="74" count="130753965" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFourParameterExponentialForm.java" name="LIBORVolatilityModelFourParameterExponentialForm.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="19" loc="263" coveredmethods="5" methods="9" elements="97" classes="1" ncloc="145" statements="68" conditionals="20" coveredstatements="29"/>
            <class name="LIBORVolatilityModelFourParameterExponentialForm">
               <metrics coveredelements="40" coveredconditionals="6" complexity="19" coveredmethods="5" methods="9" elements="97" statements="68" conditionals="20" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="72" count="1786" type="method"/>
            <line num="73" count="1785" type="stmt"/>
            <line num="74" count="1786" type="stmt"/>
            <line num="75" count="1785" type="stmt"/>
            <line num="76" count="1785" type="stmt"/>
            <line num="77" count="1783" type="stmt"/>
            <line num="78" count="1786" type="stmt"/>
            <line num="79" count="1786" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="93" count="1784" type="method"/>
            <line num="94" count="1786" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="109" count="118" type="method"/>
            <line num="110" count="118" type="stmt"/>
            <line num="111" count="118" type="stmt"/>
            <line num="112" count="118" type="stmt"/>
            <line num="113" count="118" type="stmt"/>
            <line num="114" count="118" type="stmt"/>
            <line num="115" count="118" type="stmt"/>
            <line num="116" count="118" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="130" count="116" type="method"/>
            <line num="131" count="116" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFourParameterExponentialForm" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="167" count="6614363" type="method"/>
            <line num="170" count="6616906" type="stmt"/>
            <line num="171" count="6677893" type="stmt"/>
            <line falsecount="6679647" truecount="812" num="171" type="cond"/>
            <line num="172" count="811" type="stmt"/>
            <line num="175" count="6674930" type="stmt"/>
            <line falsecount="5738064" truecount="939367" num="175" type="cond"/>
            <line num="176" count="939446" type="stmt"/>
            <line num="177" count="939237" type="stmt"/>
            <line num="178" count="938459" type="stmt"/>
            <line num="180" count="938486" type="stmt"/>
            <line num="181" count="938513" type="stmt"/>
            <line falsecount="629411" truecount="309568" num="181" type="cond"/>
            <line num="183" count="309588" type="stmt"/>
            <line num="187" count="629429" type="stmt"/>
            <line num="190" count="938511" type="stmt"/>
            <line num="193" count="6668773" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFourParameterExponentialFormIntegrated.java" name="LIBORVolatilityModelFourParameterExponentialFormIntegrated.java">
            <metrics coveredelements="60" coveredconditionals="5" complexity="25" loc="333" coveredmethods="4" methods="10" elements="157" classes="1" ncloc="194" statements="117" conditionals="30" coveredstatements="51"/>
            <class name="LIBORVolatilityModelFourParameterExponentialFormIntegrated">
               <metrics coveredelements="60" coveredconditionals="5" complexity="25" coveredmethods="4" methods="10" elements="157" statements="117" conditionals="30" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,RandomVariable,RandomVariable,boolean)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFourParameterExponentialFormIntegrated(TimeDiscretization,TimeDiscretization,double,double,double,double,boolean)" num="121" count="2002" type="method"/>
            <line num="122" count="2002" type="stmt"/>
            <line num="123" count="2002" type="stmt"/>
            <line num="124" count="2002" type="stmt"/>
            <line num="125" count="2002" type="stmt"/>
            <line num="126" count="2002" type="stmt"/>
            <line num="127" count="2002" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFourParameterExponentialFormIntegrated" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="163" count="46170" type="method"/>
            <line num="166" count="46183" type="stmt"/>
            <line num="167" count="46102" type="stmt"/>
            <line num="168" count="46064" type="stmt"/>
            <line num="170" count="46037" type="stmt"/>
            <line falsecount="46052" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="174" count="46077" type="stmt"/>
            <line num="176" count="46200" type="stmt"/>
            <line complexity="2" visibility="private" signature="getIntegratedVariance(double) : RandomVariable" num="179" count="92248" type="method"/>
            <line num="181" count="92261" type="stmt"/>
            <line falsecount="91089" truecount="1202" num="181" type="cond"/>
            <line num="182" count="1202" type="stmt"/>
            <line num="194" count="91092" type="stmt"/>
            <line num="195" count="91076" type="stmt"/>
            <line num="196" count="91044" type="stmt"/>
            <line num="197" count="91017" type="stmt"/>
            <line num="198" count="91007" type="stmt"/>
            <line num="199" count="91023" type="stmt"/>
            <line num="201" count="90998" type="stmt"/>
            <line num="202" count="90997" type="stmt"/>
            <line num="204" count="90997" type="stmt"/>
            <line num="205" count="91098" type="stmt"/>
            <line num="207" count="91068" type="stmt"/>
            <line num="208" count="91123" type="stmt"/>
            <line num="209" count="91110" type="stmt"/>
            <line num="217" count="91127" type="stmt"/>
            <line num="218" count="91117" type="stmt"/>
            <line num="220" count="91078" type="stmt"/>
            <line num="221" count="91089" type="stmt"/>
            <line num="222" count="91106" type="stmt"/>
            <line num="224" count="91128" type="stmt"/>
            <line num="225" count="91096" type="stmt"/>
            <line num="226" count="91084" type="stmt"/>
            <line num="228" count="91120" type="stmt"/>
            <line num="229" count="91100" type="stmt"/>
            <line num="230" count="91138" type="stmt"/>
            <line num="231" count="91133" type="stmt"/>
            <line num="232" count="91109" type="stmt"/>
            <line num="243" count="91109" type="stmt"/>
            <line num="244" count="91164" type="stmt"/>
            <line num="245" count="91175" type="stmt"/>
            <line num="246" count="91177" type="stmt"/>
            <line num="247" count="91162" type="stmt"/>
            <line num="248" count="91158" type="stmt"/>
            <line num="250" count="91176" type="stmt"/>
            <line complexity="2" visibility="private" signature="polynom(RandomVariable,double[]) : RandomVariable" num="253" count="454382" type="method"/>
            <line num="254" count="454598" type="stmt"/>
            <line num="256" count="454170" type="stmt"/>
            <line falsecount="453968" truecount="1357124" num="256" type="cond"/>
            <line num="257" count="1357864" type="stmt"/>
            <line num="259" count="454190" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelFromGivenMatrix.java" name="LIBORVolatilityModelFromGivenMatrix.java">
            <metrics coveredelements="35" coveredconditionals="7" complexity="22" loc="226" coveredmethods="7" methods="11" elements="82" classes="1" ncloc="126" statements="49" conditionals="22" coveredstatements="21"/>
            <class name="LIBORVolatilityModelFromGivenMatrix">
               <metrics coveredelements="35" coveredconditionals="7" complexity="22" coveredmethods="7" methods="11" elements="82" statements="49" conditionals="22" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[][],boolean)" num="47" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,RandomVariable[][],boolean)" num="69" count="100" type="method"/>
            <line num="74" count="100" type="stmt"/>
            <line num="76" count="100" type="stmt"/>
            <line num="77" count="100" type="stmt"/>
            <line num="78" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,RandomVariable[][])" num="89" count="100" type="method"/>
            <line num="93" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[][],boolean)" num="106" count="210" type="method"/>
            <line num="112" count="210" type="stmt"/>
            <line num="114" count="210" type="stmt"/>
            <line num="115" count="210" type="stmt"/>
            <line num="116" count="210" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[][])" num="129" count="210" type="method"/>
            <line num="134" count="210" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelFromGivenMatrix(TimeDiscretization,TimeDiscretization,double[][])" num="145" count="208" type="method"/>
            <line num="149" count="208" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="153" count="3758908" type="method"/>
            <line num="155" count="3760441" type="stmt"/>
            <line complexity="5" visibility="public" signature="getParameter() : RandomVariable[]" num="158" count="10" type="method"/>
            <line num="160" count="10" type="stmt"/>
            <line num="161" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="161" type="cond"/>
            <line num="162" count="10" type="stmt"/>
            <line num="163" count="10" type="stmt"/>
            <line falsecount="10" truecount="40" num="163" type="cond"/>
            <line num="164" count="40" type="stmt"/>
            <line falsecount="40" truecount="160" num="164" type="cond"/>
            <line num="165" count="160" type="stmt"/>
            <line falsecount="100" truecount="60" num="165" type="cond"/>
            <line num="166" count="60" type="stmt"/>
            <line num="170" count="10" type="stmt"/>
            <line num="174" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelFromGivenMatrix" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelMaturityDependentFourParameterExponentialForm.java" name="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm.java">
            <metrics coveredelements="22" coveredconditionals="1" complexity="24" loc="268" coveredmethods="3" methods="18" elements="111" classes="1" ncloc="195" statements="81" conditionals="12" coveredstatements="18"/>
            <class name="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm">
               <metrics coveredelements="22" coveredconditionals="1" complexity="24" coveredmethods="3" methods="18" elements="111" statements="81" conditionals="12" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[])" num="33" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],double[],double[])" num="57" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,double,double)" num="79" count="1666" type="method"/>
            <line num="84" count="1667" type="stmt"/>
            <line num="85" count="1666" type="stmt"/>
            <line num="86" count="1665" type="stmt"/>
            <line num="86" count="1667" type="stmt"/>
            <line num="87" count="1668" type="stmt"/>
            <line num="87" count="1666" type="stmt"/>
            <line num="88" count="1666" type="stmt"/>
            <line num="88" count="1666" type="stmt"/>
            <line num="89" count="1667" type="stmt"/>
            <line num="89" count="1666" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double,double,double)" num="100" count="1668" type="method"/>
            <line num="102" count="1668" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelMaturityDependentFourParameterExponentialForm(TimeDiscretization,TimeDiscretization,double[],double[],double[],double[])" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelMaturityDependentFourParameterExponentialForm" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="154" count="15739444" type="method"/>
            <line num="157" count="15743124" type="stmt"/>
            <line num="158" count="15701215" type="stmt"/>
            <line num="159" count="15671877" type="stmt"/>
            <line num="161" count="15675555" type="stmt"/>
            <line num="162" count="15678457" type="stmt"/>
            <line falsecount="15681016" truecount="0" num="162" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="15685234" type="stmt"/>
            <line num="171" count="15652610" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(RandomVariable) : double" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelPiecewiseConstant.java" name="LIBORVolatilityModelPiecewiseConstant.java">
            <metrics coveredelements="93" coveredconditionals="26" complexity="41" loc="294" coveredmethods="8" methods="14" elements="182" classes="1" ncloc="219" statements="114" conditionals="54" coveredstatements="59"/>
            <class name="LIBORVolatilityModelPiecewiseConstant">
               <metrics coveredelements="93" coveredconditionals="26" complexity="41" coveredmethods="8" methods="14" elements="182" statements="114" conditionals="54" coveredstatements="59"/>
            </class>
            <line complexity="7" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[],boolean)" num="36" count="4486" type="method"/>
            <line num="37" count="4486" type="stmt"/>
            <line num="39" count="4486" type="stmt"/>
            <line num="44" count="4486" type="stmt"/>
            <line num="45" count="4486" type="stmt"/>
            <line num="46" count="4486" type="stmt"/>
            <line falsecount="4486" truecount="35888" num="46" type="cond"/>
            <line num="47" count="35888" type="stmt"/>
            <line num="48" count="35888" type="stmt"/>
            <line falsecount="35888" truecount="287104" num="48" type="cond"/>
            <line num="49" count="287104" type="stmt"/>
            <line falsecount="215328" truecount="71776" num="49" type="cond"/>
            <line num="50" count="71776" type="stmt"/>
            <line num="53" count="215328" type="stmt"/>
            <line num="55" count="35888" type="stmt"/>
            <line num="58" count="4486" type="stmt"/>
            <line falsecount="4482" truecount="4" num="58" type="cond"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="62" count="4482" type="stmt"/>
            <line falsecount="0" truecount="4482" num="62" type="cond"/>
            <line num="63" count="4482" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="4486" type="stmt"/>
            <line falsecount="4486" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="4486" type="stmt"/>
            <line num="73" count="4486" type="stmt"/>
            <line num="74" count="4486" type="stmt"/>
            <line complexity="4" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[][],boolean)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[],boolean)" num="113" count="6" type="method"/>
            <line num="114" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="121" count="6" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line falsecount="6" truecount="48" num="123" type="cond"/>
            <line num="124" count="48" type="stmt"/>
            <line num="125" count="48" type="stmt"/>
            <line falsecount="48" truecount="384" num="125" type="cond"/>
            <line num="126" count="384" type="stmt"/>
            <line falsecount="288" truecount="96" num="126" type="cond"/>
            <line num="127" count="96" type="stmt"/>
            <line num="130" count="288" type="stmt"/>
            <line num="132" count="48" type="stmt"/>
            <line num="135" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="135" type="cond"/>
            <line num="136" count="6" type="stmt"/>
            <line num="137" count="6" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="6" type="stmt"/>
            <line num="153" count="6" type="stmt"/>
            <line num="154" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[],boolean)" num="157" count="6" type="method"/>
            <line num="158" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double,boolean)" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="165" count="6" type="method"/>
            <line num="166" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,TimeDiscretization,double)" num="169" count="6" type="method"/>
            <line num="170" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="173" count="9014" type="method"/>
            <line num="175" count="9014" type="stmt"/>
            <line falsecount="0" truecount="9014" num="175" type="cond"/>
            <line num="176" count="9014" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModel" num="182" count="4482" type="method"/>
            <line num="184" count="4482" type="stmt"/>
            <line complexity="7" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="194" count="113758764" type="method"/>
            <line num="197" count="113870874" type="stmt"/>
            <line num="198" count="113432756" type="stmt"/>
            <line num="199" count="113127324" type="stmt"/>
            <line num="201" count="113204585" type="stmt"/>
            <line num="202" count="113256794" type="stmt"/>
            <line falsecount="104348517" truecount="8964480" num="202" type="cond"/>
            <line num="204" count="8964480" type="stmt"/>
            <line num="206" count="8964480" type="stmt"/>
            <line falsecount="8964480" truecount="0" num="206" type="cond"/>
            <line num="210" count="104400052" type="stmt"/>
            <line num="211" count="104300600" type="stmt"/>
            <line falsecount="104370499" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="104455169" type="stmt"/>
            <line falsecount="104281048" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="218" count="104363012" type="stmt"/>
            <line num="219" count="104116302" type="stmt"/>
            <line falsecount="104187952" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="104248938" type="stmt"/>
            <line falsecount="104085683" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="104163566" type="stmt"/>
            <line num="227" count="104463502" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSimulationTimeDiscretization() : TimeDiscretization" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeToMaturityDiscretization() : TimeDiscretization" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelTimeHomogenousPiecewiseConstant.java" name="LIBORVolatilityModelTimeHomogenousPiecewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="174" coveredmethods="0" methods="9" elements="62" classes="1" ncloc="96" statements="37" conditionals="16" coveredstatements="0"/>
            <class name="LIBORVolatilityModelTimeHomogenousPiecewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="9" elements="62" statements="37" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[])" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,RandomVariable[])" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTimeHomogenousPiecewiseConstant(TimeDiscretization,TimeDiscretization,TimeDiscretization,double[])" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter() : RandomVariable[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelTimeHomogenousPiecewiseConstant" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/LIBORVolatilityModelTwoParameterExponentialForm.java" name="LIBORVolatilityModelTwoParameterExponentialForm.java">
            <metrics coveredelements="30" coveredconditionals="6" complexity="13" loc="156" coveredmethods="4" methods="8" elements="49" classes="1" ncloc="91" statements="31" conditionals="10" coveredstatements="20"/>
            <class name="LIBORVolatilityModelTwoParameterExponentialForm">
               <metrics coveredelements="30" coveredconditionals="6" complexity="13" coveredmethods="4" methods="8" elements="49" statements="31" conditionals="10" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable,RandomVariable,boolean)" num="46" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double,double,boolean)" num="64" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORVolatilityModelTwoParameterExponentialForm(TimeDiscretization,TimeDiscretization,double,double)" num="76" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : RandomVariable[]" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameter(RandomVariable[]) : LIBORVolatilityModelTwoParameterExponentialForm" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getVolatility(int,int) : RandomVariable" num="110" count="3540" type="method"/>
            <line num="113" count="3540" type="stmt"/>
            <line num="114" count="3540" type="stmt"/>
            <line falsecount="3538" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="118" count="3540" type="stmt"/>
            <line falsecount="2640" truecount="900" num="118" type="cond"/>
            <line num="119" count="900" type="stmt"/>
            <line num="120" count="900" type="stmt"/>
            <line num="121" count="900" type="stmt"/>
            <line num="123" count="900" type="stmt"/>
            <line num="124" count="900" type="stmt"/>
            <line falsecount="660" truecount="240" num="124" type="cond"/>
            <line num="126" count="240" type="stmt"/>
            <line num="130" count="660" type="stmt"/>
            <line num="133" count="900" type="stmt"/>
            <line num="136" count="3540" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedData(Map&lt;String, Object&gt;) : LIBORVolatilityModel" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModel.java" name="ShortRateVolatilityModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelAsGiven.java" name="ShortRateVolatilityModelAsGiven.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="50" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ShortRateVolatilityModelAsGiven">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelAsGiven(TimeDiscretization,double[],double[])" num="29" count="18" type="method"/>
            <line num="30" count="18" type="stmt"/>
            <line num="31" count="18" type="stmt"/>
            <line num="32" count="18" type="stmt"/>
            <line num="33" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="36" count="534611" type="method"/>
            <line num="38" count="534789" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="41" count="49484" type="method"/>
            <line num="43" count="49486" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="46" count="268355" type="method"/>
            <line num="48" count="268404" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelCalibrateable.java" name="ShortRateVolatilityModelCalibrateable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelCalibrateable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelHoLee.java" name="ShortRateVolatilityModelHoLee.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="45" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelHoLee">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelHoLee(double)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeDiscretization() : TimeDiscretization" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelParametric.java" name="ShortRateVolatilityModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortRateVolatilityModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/ShortRateVolatilityModelPiecewiseConstant.java" name="ShortRateVolatilityModelPiecewiseConstant.java">
            <metrics coveredelements="78" coveredconditionals="18" complexity="36" loc="242" coveredmethods="8" methods="12" elements="136" classes="1" ncloc="176" statements="82" conditionals="42" coveredstatements="52"/>
            <class name="ShortRateVolatilityModelPiecewiseConstant">
               <metrics coveredelements="78" coveredconditionals="18" complexity="36" coveredmethods="8" methods="12" elements="136" statements="82" conditionals="42" coveredstatements="52"/>
            </class>
            <line complexity="3" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],boolean,boolean)" num="35" count="58" type="method"/>
            <line num="36" count="58" type="stmt"/>
            <line num="38" count="58" type="stmt"/>
            <line falsecount="58" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="58" type="stmt"/>
            <line falsecount="58" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="58" type="stmt"/>
            <line num="47" count="58" type="stmt"/>
            <line num="48" count="58" type="stmt"/>
            <line num="49" count="58" type="stmt"/>
            <line num="50" count="58" type="stmt"/>
            <line num="51" count="58" type="stmt"/>
            <line num="52" count="58" type="stmt"/>
            <line complexity="11" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],boolean,boolean)" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line falsecount="2" truecount="16" num="65" type="cond"/>
            <line num="66" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="66" type="cond"/>
            <line num="67" count="16" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="72" type="cond"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line falsecount="2" truecount="2" num="88" type="cond"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="95" type="cond"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,double[],double[],boolean)" num="114" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortRateVolatilityModelPiecewiseConstant(RandomVariableFactory,TimeDiscretization,TimeDiscretization,RandomVariable[],RandomVariable[],boolean)" num="118" count="58" type="method"/>
            <line num="119" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility(int) : RandomVariable" num="122" count="558153" type="method"/>
            <line num="126" count="558224" type="stmt"/>
            <line num="129" count="557838" type="stmt"/>
            <line num="130" count="557089" type="stmt"/>
            <line complexity="2" visibility="public" signature="getVolatility(double) : RandomVariable" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanReversion(int) : RandomVariable" num="145" count="14351525" type="method"/>
            <line num="149" count="14452178" type="stmt"/>
            <line num="151" count="14322723" type="stmt"/>
            <line num="152" count="14271108" type="stmt"/>
            <line complexity="6" visibility="public" signature="getParameter() : RandomVariable[]" num="155" count="4" type="method"/>
            <line num="157" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="157" type="cond"/>
            <line num="158" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="158" type="cond"/>
            <line num="159" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="4" type="stmt"/>
            <line num="164" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="164" type="cond"/>
            <line num="165" count="4" type="stmt"/>
            <line num="168" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Object" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(RandomVariable[]) : AbstractShortRateVolatilityModelParametric" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCloneWithModifiedParameters(double[]) : AbstractShortRateVolatilityModelParametric" num="199" count="58" type="method"/>
            <line num="201" count="58" type="stmt"/>
            <line num="202" count="58" type="stmt"/>
            <line num="204" count="58" type="stmt"/>
            <line falsecount="0" truecount="58" num="204" type="cond"/>
            <line num="205" count="58" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="223" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatilityTimeDiscretization() : TimeDiscretization" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructCovarianceModelFromLIBORCovarianceModel.java" name="TermStructCovarianceModelFromLIBORCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="76" coveredmethods="0" methods="3" elements="39" classes="1" ncloc="47" statements="22" conditionals="14" coveredstatements="0"/>
            <class name="TermStructCovarianceModelFromLIBORCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="39" statements="22" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructCovarianceModelFromLIBORCovarianceModel(AbstractLIBORCovarianceModelParametric)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="getFactorLoading(double,double,double,TimeDiscretization,RandomVariable[],TermStructureModel) : RandomVariable[]" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructCovarianceModelFromLIBORCovarianceModelParametric.java" name="TermStructCovarianceModelFromLIBORCovarianceModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="124" coveredmethods="0" methods="7" elements="74" classes="1" ncloc="84" statements="45" conditionals="22" coveredstatements="0"/>
            <class name="TermStructCovarianceModelFromLIBORCovarianceModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="7" elements="74" statements="45" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TermStructCovarianceModelFromLIBORCovarianceModelParametric(TermStructureTenorTimeScaling,AbstractLIBORCovarianceModelParametric)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getScaledTenorTime(double,double) : double" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="getFactorLoading(double,double,double,TimeDiscretization,RandomVariable[],TermStructureModel) : RandomVariable[]" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumberOfFactors() : int" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCloneWithModifiedParameters(double[]) : TermStructureCovarianceModelParametric" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : TermStructureCovarianceModelParametric" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureCovarianceModel.java" name="TermStructureCovarianceModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="16" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureCovarianceModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureCovarianceModelParametric.java" name="TermStructureCovarianceModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="213" coveredmethods="0" methods="3" elements="110" classes="1" ncloc="142" statements="77" conditionals="30" coveredstatements="0"/>
            <class name="TermStructureCovarianceModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="3" elements="110" statements="77" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="13" visibility="public" signature="getCloneCalibrated(TermStructureModel,CalibrationProduct[],Map&lt;String, Object&gt;) : TermStructureCovarianceModelParametric" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="setValues(double[],double[]) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureFactorLoadingsModel.java" name="TermStructureFactorLoadingsModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureFactorLoadingsModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureFactorLoadingsModelParametric.java" name="TermStructureFactorLoadingsModelParametric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureFactorLoadingsModelParametric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureTenorTimeScaling.java" name="TermStructureTenorTimeScaling.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TermStructureTenorTimeScaling">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/main/java8/net/finmath/montecarlo/interestrate/models/covariance/TermStructureTenorTimeScalingPicewiseConstant.java" name="TermStructureTenorTimeScalingPicewiseConstant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="85" coveredmethods="0" methods="5" elements="38" classes="1" ncloc="59" statements="25" conditionals="8" coveredstatements="0"/>
            <class name="TermStructureTenorTimeScalingPicewiseConstant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="38" statements="25" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TermStructureTenorTimeScalingPicewiseConstant(TimeDiscretization,double[])" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getScaledTenorTime(double,double) : double" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCloneWithModifiedParameters(double[]) : TermStructureTenorTimeScaling" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getParameter() : double[]" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : TermStructureTenorTimeScaling" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="finmath lib 6.0.5" timestamp="1665457860686">
      <metrics coveredelements="10431" complexity="1606" loc="29908" methods="703" classes="145" statements="10560" packages="44" coveredconditionals="835" coveredmethods="635" elements="12413" ncloc="19431" files="129" conditionals="1150" coveredstatements="8961"/>
      <package name="net.finmath.montecarlo.interestrate">
         <metrics coveredelements="2444" complexity="324" loc="7101" methods="102" classes="16" statements="2756" coveredconditionals="238" coveredmethods="84" elements="3210" ncloc="4572" files="11" conditionals="352" coveredstatements="2122"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/CapValuationTest.java" name="CapValuationTest.java">
            <metrics coveredelements="61" coveredconditionals="2" complexity="4" loc="221" coveredmethods="3" methods="3" elements="61" classes="1" ncloc="122" statements="56" conditionals="2" coveredstatements="56"/>
            <class name="CapValuationTest">
               <metrics coveredelements="61" complexity="4" methods="3" testruns="2" statements="56" coveredconditionals="2" coveredmethods="3" elements="61" testfailures="0" testduration="69.282" conditionals="2" coveredstatements="56" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="CapValuationTest()" num="60" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="init(int) : void" num="75" count="2" type="method"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCap() : void" num="164" testsuccess="true" count="2" testduration="34.205" type="method"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line falsecount="2" truecount="156" num="173" type="cond"/>
            <line num="175" count="156" type="stmt"/>
            <line num="176" count="156" type="stmt"/>
            <line num="178" count="156" type="stmt"/>
            <line num="179" count="156" type="stmt"/>
            <line num="180" count="156" type="stmt"/>
            <line num="181" count="156" type="stmt"/>
            <line num="182" count="156" type="stmt"/>
            <line num="185" count="156" type="stmt"/>
            <line num="188" count="156" type="stmt"/>
            <line num="189" count="156" type="stmt"/>
            <line num="192" count="156" type="stmt"/>
            <line num="193" count="156" type="stmt"/>
            <line num="194" count="156" type="stmt"/>
            <line num="195" count="156" type="stmt"/>
            <line num="197" count="156" type="stmt"/>
            <line num="199" count="156" type="stmt"/>
            <line num="202" count="156" type="stmt"/>
            <line num="203" count="156" type="stmt"/>
            <line num="204" count="156" type="stmt"/>
            <line num="207" count="156" type="stmt"/>
            <line num="208" count="156" type="stmt"/>
            <line num="210" count="156" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/HullWhiteModelCalibrationTest.java" name="HullWhiteModelCalibrationTest.java">
            <metrics coveredelements="182" coveredconditionals="13" complexity="13" loc="389" coveredmethods="5" methods="5" elements="184" classes="1" ncloc="249" statements="165" conditionals="14" coveredstatements="164"/>
            <class name="HullWhiteModelCalibrationTest">
               <metrics coveredelements="182" complexity="13" methods="5" testruns="2" statements="165" coveredconditionals="13" coveredmethods="5" elements="184" testfailures="0" testduration="15.018" conditionals="14" coveredstatements="164" testpasses="2"/>
            </class>
            <line complexity="2" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve) : CalibrationProduct" num="68" count="14" type="method"/>
            <line num="70" count="14" type="stmt"/>
            <line num="71" count="14" type="stmt"/>
            <line num="72" count="14" type="stmt"/>
            <line num="74" count="14" type="stmt"/>
            <line falsecount="14" truecount="180" num="74" type="cond"/>
            <line num="75" count="180" type="stmt"/>
            <line num="76" count="180" type="stmt"/>
            <line num="77" count="180" type="stmt"/>
            <line num="79" count="14" type="stmt"/>
            <line num="82" count="14" type="stmt"/>
            <line num="85" count="14" type="stmt"/>
            <line num="86" count="14" type="stmt"/>
            <line num="93" count="14" type="stmt"/>
            <line num="95" count="14" type="stmt"/>
            <line complexity="6" visibility="public" signature="testATMSwaptionCalibration() : void" num="107" testsuccess="true" count="2" testduration="8.609" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="156" type="cond"/>
            <line num="158" count="14" type="stmt"/>
            <line num="159" count="14" type="stmt"/>
            <line num="160" count="14" type="stmt"/>
            <line num="161" count="14" type="stmt"/>
            <line num="164" count="14" type="stmt"/>
            <line num="165" count="14" type="stmt"/>
            <line num="167" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="14" type="stmt"/>
            <line num="173" count="14" type="stmt"/>
            <line num="174" count="14" type="stmt"/>
            <line num="176" count="14" type="stmt"/>
            <line num="178" count="14" type="stmt"/>
            <line num="180" count="14" type="stmt"/>
            <line num="181" count="14" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="206" type="cond"/>
            <line num="207" count="14" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="16" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="226" type="cond"/>
            <line num="227" count="14" type="stmt"/>
            <line num="228" count="14" type="stmt"/>
            <line num="229" count="14" type="stmt"/>
            <line num="230" count="14" type="stmt"/>
            <line num="231" count="14" type="stmt"/>
            <line num="232" count="14" type="stmt"/>
            <line num="233" count="14" type="stmt"/>
            <line num="234" count="14" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="251" count="2" type="method"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="267" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="274" count="2" type="method"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line num="315" count="2" type="stmt"/>
            <line num="316" count="2" type="stmt"/>
            <line falsecount="2" truecount="42" num="316" type="cond"/>
            <line num="318" count="42" type="stmt"/>
            <line num="319" count="42" type="stmt"/>
            <line num="321" count="42" type="stmt"/>
            <line num="322" count="42" type="stmt"/>
            <line num="323" count="42" type="stmt"/>
            <line num="324" count="42" type="stmt"/>
            <line num="327" count="2" type="stmt"/>
            <line num="330" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="349" count="2" type="stmt"/>
            <line num="350" count="2" type="stmt"/>
            <line num="355" count="2" type="stmt"/>
            <line num="356" count="2" type="stmt"/>
            <line num="357" count="2" type="stmt"/>
            <line num="359" count="2" type="stmt"/>
            <line num="362" count="2" type="stmt"/>
            <line num="365" count="2" type="stmt"/>
            <line num="367" count="2" type="stmt"/>
            <line num="368" count="2" type="stmt"/>
            <line num="369" count="42" type="stmt"/>
            <line num="370" count="42" type="stmt"/>
            <line num="371" count="42" type="stmt"/>
            <line num="372" count="42" type="stmt"/>
            <line num="374" count="2" type="stmt"/>
            <line num="376" count="2" type="stmt"/>
            <line num="378" count="2" type="stmt"/>
            <line num="379" count="2" type="stmt"/>
            <line falsecount="2" truecount="44" num="379" type="cond"/>
            <line num="380" count="44" type="stmt"/>
            <line num="381" count="44" type="stmt"/>
            <line num="383" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="386" count="14" type="method"/>
            <line num="387" count="14" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/HullWhiteModelTest.java" name="HullWhiteModelTest.java">
            <metrics coveredelements="414" coveredconditionals="36" complexity="39" loc="956" coveredmethods="13" methods="14" elements="444" classes="1" ncloc="579" statements="380" conditionals="50" coveredstatements="365"/>
            <class name="HullWhiteModelTest">
               <metrics coveredelements="414" complexity="39" methods="14" testruns="18" statements="380" coveredconditionals="36" coveredmethods="13" elements="444" testfailures="0" testduration="360.494" conditionals="50" coveredstatements="365" testpasses="18"/>
            </class>
            <line complexity="1" visibility="public" signature="HullWhiteModelTest()" num="109" count="18" type="method"/>
            <line num="110" count="18" type="stmt"/>
            <line num="111" count="18" type="stmt"/>
            <line num="112" count="18" type="stmt"/>
            <line num="113" count="18" type="stmt"/>
            <line complexity="4" visibility="public" signature="initModels() : void" num="116" count="18" type="method"/>
            <line num="120" count="18" type="stmt"/>
            <line num="121" count="18" type="stmt"/>
            <line num="122" count="18" type="stmt"/>
            <line num="125" count="18" type="stmt"/>
            <line num="136" count="18" type="stmt"/>
            <line num="139" count="18" type="stmt"/>
            <line num="151" count="18" type="stmt"/>
            <line num="153" count="18" type="stmt"/>
            <line num="158" count="18" type="stmt"/>
            <line num="159" count="18" type="stmt"/>
            <line num="161" count="18" type="stmt"/>
            <line num="170" count="18" type="stmt"/>
            <line num="175" count="18" type="stmt"/>
            <line num="176" count="18" type="stmt"/>
            <line num="179" count="18" type="stmt"/>
            <line num="182" count="18" type="stmt"/>
            <line num="184" count="18" type="stmt"/>
            <line num="186" count="18" type="stmt"/>
            <line num="196" count="18" type="stmt"/>
            <line num="197" count="18" type="stmt"/>
            <line falsecount="18" truecount="720" num="197" type="cond"/>
            <line num="198" count="720" type="stmt"/>
            <line falsecount="720" truecount="28800" num="198" type="cond"/>
            <line num="200" count="28800" type="stmt"/>
            <line num="201" count="28800" type="stmt"/>
            <line num="202" count="28800" type="stmt"/>
            <line num="203" count="28800" type="stmt"/>
            <line num="205" count="28800" type="stmt"/>
            <line num="206" count="28800" type="stmt"/>
            <line num="207" count="28800" type="stmt"/>
            <line num="209" count="28800" type="stmt"/>
            <line num="211" count="28800" type="stmt"/>
            <line num="212" count="28800" type="stmt"/>
            <line falsecount="14040" truecount="14760" num="212" type="cond"/>
            <line num="213" count="14760" type="stmt"/>
            <line num="216" count="14040" type="stmt"/>
            <line num="224" count="28800" type="stmt"/>
            <line num="227" count="18" type="stmt"/>
            <line num="232" count="18" type="stmt"/>
            <line num="239" count="18" type="stmt"/>
            <line num="244" count="18" type="stmt"/>
            <line num="247" count="18" type="stmt"/>
            <line num="250" count="18" type="stmt"/>
            <line num="253" count="18" type="stmt"/>
            <line num="256" count="18" type="stmt"/>
            <line num="261" count="18" type="stmt"/>
            <line num="264" count="18" type="stmt"/>
            <line num="266" count="18" type="stmt"/>
            <line num="268" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBond() : void" num="272" testsuccess="true" count="2" testduration="14.055" type="method"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line falsecount="2" truecount="82" num="284" type="cond"/>
            <line num="285" count="82" type="stmt"/>
            <line num="286" count="82" type="stmt"/>
            <line num="289" count="82" type="stmt"/>
            <line num="292" count="82" type="stmt"/>
            <line num="293" count="82" type="stmt"/>
            <line num="296" count="82" type="stmt"/>
            <line num="297" count="82" type="stmt"/>
            <line num="300" count="82" type="stmt"/>
            <line num="301" count="82" type="stmt"/>
            <line falsecount="82" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="82" type="stmt"/>
            <line num="305" count="82" type="stmt"/>
            <line num="308" count="82" type="stmt"/>
            <line num="309" count="82" type="stmt"/>
            <line num="312" count="82" type="stmt"/>
            <line num="313" count="82" type="stmt"/>
            <line num="315" count="82" type="stmt"/>
            <line num="317" count="82" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="322" count="2" type="stmt"/>
            <line num="323" count="2" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSwap() : void" num="332" testsuccess="true" count="2" testduration="70.732" type="method"/>
            <line num="338" count="2" type="stmt"/>
            <line num="339" count="2" type="stmt"/>
            <line num="341" count="2" type="stmt"/>
            <line num="348" count="2" type="stmt"/>
            <line num="358" count="2" type="stmt"/>
            <line num="368" count="2" type="stmt"/>
            <line num="369" count="2" type="stmt"/>
            <line num="370" count="2" type="stmt"/>
            <line falsecount="2" truecount="228" num="370" type="cond"/>
            <line num="372" count="228" type="stmt"/>
            <line num="373" count="228" type="stmt"/>
            <line num="375" count="228" type="stmt"/>
            <line num="376" count="228" type="stmt"/>
            <line num="378" count="228" type="stmt"/>
            <line num="380" count="228" type="stmt"/>
            <line num="383" count="228" type="stmt"/>
            <line num="386" count="228" type="stmt"/>
            <line num="389" count="228" type="stmt"/>
            <line num="390" count="228" type="stmt"/>
            <line num="393" count="228" type="stmt"/>
            <line num="395" count="228" type="stmt"/>
            <line num="398" count="228" type="stmt"/>
            <line num="399" count="228" type="stmt"/>
            <line num="402" count="228" type="stmt"/>
            <line num="403" count="228" type="stmt"/>
            <line num="406" count="228" type="stmt"/>
            <line num="407" count="228" type="stmt"/>
            <line num="409" count="228" type="stmt"/>
            <line num="411" count="228" type="stmt"/>
            <line num="414" count="2" type="stmt"/>
            <line num="416" count="2" type="stmt"/>
            <line num="417" count="2" type="stmt"/>
            <line num="418" count="2" type="stmt"/>
            <line num="424" count="2" type="stmt"/>
            <line complexity="8" visibility="public" signature="testCaplet() : void" num="427" testsuccess="true" count="2" testduration="11.439" type="method"/>
            <line num="432" count="2" type="stmt"/>
            <line num="433" count="2" type="stmt"/>
            <line num="435" count="2" type="stmt"/>
            <line num="437" count="2" type="stmt"/>
            <line num="438" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="438" type="cond"/>
            <line num="440" count="60" type="stmt"/>
            <line num="441" count="60" type="stmt"/>
            <line num="443" count="60" type="stmt"/>
            <line num="444" count="60" type="stmt"/>
            <line num="445" count="60" type="stmt"/>
            <line num="446" count="60" type="stmt"/>
            <line num="448" count="60" type="stmt"/>
            <line num="449" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="449" type="cond"/>
            <line num="450" count="60" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="457" count="60" type="stmt"/>
            <line num="458" count="60" type="stmt"/>
            <line num="460" count="60" type="stmt"/>
            <line num="463" count="60" type="stmt"/>
            <line num="466" count="60" type="stmt"/>
            <line num="467" count="60" type="stmt"/>
            <line num="468" count="60" type="stmt"/>
            <line num="471" count="60" type="stmt"/>
            <line num="472" count="60" type="stmt"/>
            <line num="473" count="60" type="stmt"/>
            <line num="476" count="60" type="stmt"/>
            <line num="477" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="477" type="cond"/>
            <line num="478" count="60" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="480" type="cond"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line num="487" count="60" type="stmt"/>
            <line num="488" count="60" type="stmt"/>
            <line num="490" count="60" type="stmt"/>
            <line num="492" count="60" type="stmt"/>
            <line num="493" count="60" type="stmt"/>
            <line num="494" count="60" type="stmt"/>
            <line num="497" count="60" type="stmt"/>
            <line num="498" count="60" type="stmt"/>
            <line num="501" count="60" type="stmt"/>
            <line num="502" count="60" type="stmt"/>
            <line num="504" count="60" type="stmt"/>
            <line num="506" count="60" type="stmt"/>
            <line num="507" count="60" type="stmt"/>
            <line falsecount="0" truecount="60" num="507" type="cond"/>
            <line num="508" count="60" type="stmt"/>
            <line num="512" count="2" type="stmt"/>
            <line num="514" count="2" type="stmt"/>
            <line num="515" count="2" type="stmt"/>
            <line num="516" count="2" type="stmt"/>
            <line num="521" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="524" testsuccess="true" count="2" testduration="12.104" type="method"/>
            <line num="529" count="2" type="stmt"/>
            <line num="530" count="2" type="stmt"/>
            <line num="532" count="2" type="stmt"/>
            <line num="534" count="2" type="stmt"/>
            <line num="535" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="535" type="cond"/>
            <line num="537" count="60" type="stmt"/>
            <line num="538" count="60" type="stmt"/>
            <line num="540" count="60" type="stmt"/>
            <line num="544" count="60" type="stmt"/>
            <line num="545" count="60" type="stmt"/>
            <line num="546" count="60" type="stmt"/>
            <line num="547" count="60" type="stmt"/>
            <line num="548" count="60" type="stmt"/>
            <line num="550" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="550" type="cond"/>
            <line num="551" count="300" type="stmt"/>
            <line num="552" count="300" type="stmt"/>
            <line num="553" count="300" type="stmt"/>
            <line num="555" count="60" type="stmt"/>
            <line num="558" count="60" type="stmt"/>
            <line num="559" count="60" type="stmt"/>
            <line num="562" count="60" type="stmt"/>
            <line num="563" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="563" type="cond"/>
            <line num="564" count="300" type="stmt"/>
            <line num="568" count="60" type="stmt"/>
            <line num="571" count="60" type="stmt"/>
            <line num="572" count="60" type="stmt"/>
            <line num="575" count="60" type="stmt"/>
            <line num="576" count="60" type="stmt"/>
            <line num="579" count="60" type="stmt"/>
            <line num="580" count="60" type="stmt"/>
            <line num="581" count="60" type="stmt"/>
            <line num="582" count="60" type="stmt"/>
            <line num="585" count="60" type="stmt"/>
            <line num="586" count="60" type="stmt"/>
            <line num="588" count="60" type="stmt"/>
            <line num="590" count="60" type="stmt"/>
            <line num="593" count="2" type="stmt"/>
            <line num="595" count="2" type="stmt"/>
            <line num="596" count="2" type="stmt"/>
            <line num="597" count="2" type="stmt"/>
            <line num="602" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBermudanSwaption() : void" num="605" testsuccess="true" count="2" testduration="23.271" type="method"/>
            <line num="610" count="2" type="stmt"/>
            <line num="611" count="2" type="stmt"/>
            <line num="613" count="2" type="stmt"/>
            <line num="615" count="2" type="stmt"/>
            <line num="616" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="616" type="cond"/>
            <line num="618" count="60" type="stmt"/>
            <line num="619" count="60" type="stmt"/>
            <line num="621" count="60" type="stmt"/>
            <line num="625" count="60" type="stmt"/>
            <line num="626" count="60" type="stmt"/>
            <line num="627" count="60" type="stmt"/>
            <line num="628" count="60" type="stmt"/>
            <line num="629" count="60" type="stmt"/>
            <line num="631" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="631" type="cond"/>
            <line num="632" count="300" type="stmt"/>
            <line num="633" count="300" type="stmt"/>
            <line num="634" count="300" type="stmt"/>
            <line num="636" count="60" type="stmt"/>
            <line num="639" count="60" type="stmt"/>
            <line num="640" count="60" type="stmt"/>
            <line num="643" count="60" type="stmt"/>
            <line num="644" count="60" type="stmt"/>
            <line num="646" count="60" type="stmt"/>
            <line num="647" count="60" type="stmt"/>
            <line num="649" count="60" type="stmt"/>
            <line num="650" count="60" type="stmt"/>
            <line num="652" count="60" type="stmt"/>
            <line num="653" count="60" type="stmt"/>
            <line num="656" count="60" type="stmt"/>
            <line num="659" count="60" type="stmt"/>
            <line num="660" count="60" type="stmt"/>
            <line num="663" count="60" type="stmt"/>
            <line num="664" count="60" type="stmt"/>
            <line num="667" count="60" type="stmt"/>
            <line num="668" count="60" type="stmt"/>
            <line num="669" count="60" type="stmt"/>
            <line num="670" count="60" type="stmt"/>
            <line num="673" count="60" type="stmt"/>
            <line num="674" count="60" type="stmt"/>
            <line num="676" count="60" type="stmt"/>
            <line num="678" count="60" type="stmt"/>
            <line num="681" count="2" type="stmt"/>
            <line num="683" count="2" type="stmt"/>
            <line num="684" count="2" type="stmt"/>
            <line num="685" count="2" type="stmt"/>
            <line num="690" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCapletSmile() : void" num="693" testsuccess="true" count="2" testduration="13.956" type="method"/>
            <line num="695" count="2" type="stmt"/>
            <line num="700" count="2" type="stmt"/>
            <line num="701" count="2" type="stmt"/>
            <line num="703" count="2" type="stmt"/>
            <line num="705" count="2" type="stmt"/>
            <line num="706" count="2" type="stmt"/>
            <line num="707" count="2" type="stmt"/>
            <line num="708" count="2" type="stmt"/>
            <line falsecount="2" truecount="16" num="708" type="cond"/>
            <line num="710" count="16" type="stmt"/>
            <line num="712" count="16" type="stmt"/>
            <line num="713" count="16" type="stmt"/>
            <line num="714" count="16" type="stmt"/>
            <line num="716" count="16" type="stmt"/>
            <line num="717" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="717" type="cond"/>
            <line num="718" count="16" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="719" type="cond"/>
            <line num="720" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="725" count="16" type="stmt"/>
            <line num="726" count="16" type="stmt"/>
            <line num="729" count="16" type="stmt"/>
            <line num="732" count="16" type="stmt"/>
            <line num="733" count="16" type="stmt"/>
            <line num="734" count="16" type="stmt"/>
            <line num="737" count="16" type="stmt"/>
            <line num="738" count="16" type="stmt"/>
            <line num="739" count="16" type="stmt"/>
            <line num="742" count="16" type="stmt"/>
            <line num="743" count="16" type="stmt"/>
            <line num="744" count="16" type="stmt"/>
            <line num="746" count="16" type="stmt"/>
            <line num="747" count="16" type="stmt"/>
            <line num="748" count="16" type="stmt"/>
            <line num="749" count="16" type="stmt"/>
            <line num="752" count="16" type="stmt"/>
            <line num="753" count="16" type="stmt"/>
            <line num="756" count="16" type="stmt"/>
            <line num="757" count="16" type="stmt"/>
            <line num="759" count="16" type="stmt"/>
            <line num="761" count="16" type="stmt"/>
            <line num="764" count="2" type="stmt"/>
            <line num="766" count="2" type="stmt"/>
            <line num="767" count="2" type="stmt"/>
            <line num="768" count="2" type="stmt"/>
            <line num="773" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testZeroCMSSwap() : void" num="777" testsuccess="true" count="2" testduration="22.724" type="method"/>
            <line num="783" count="2" type="stmt"/>
            <line num="784" count="2" type="stmt"/>
            <line num="786" count="2" type="stmt"/>
            <line num="788" count="2" type="stmt"/>
            <line num="789" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="789" type="cond"/>
            <line num="791" count="20" type="stmt"/>
            <line num="793" count="20" type="stmt"/>
            <line num="796" count="20" type="stmt"/>
            <line num="797" count="20" type="stmt"/>
            <line num="798" count="20" type="stmt"/>
            <line num="799" count="20" type="stmt"/>
            <line num="800" count="20" type="stmt"/>
            <line num="802" count="20" type="stmt"/>
            <line falsecount="20" truecount="200" num="802" type="cond"/>
            <line num="803" count="200" type="stmt"/>
            <line num="804" count="200" type="stmt"/>
            <line num="805" count="200" type="stmt"/>
            <line num="807" count="20" type="stmt"/>
            <line num="809" count="20" type="stmt"/>
            <line num="812" count="20" type="stmt"/>
            <line num="815" count="20" type="stmt"/>
            <line num="816" count="20" type="stmt"/>
            <line falsecount="20" truecount="200" num="816" type="cond"/>
            <line num="817" count="200" type="stmt"/>
            <line num="821" count="20" type="stmt"/>
            <line num="822" count="20" type="stmt"/>
            <line num="823" count="20" type="stmt"/>
            <line num="826" count="20" type="stmt"/>
            <line num="827" count="20" type="stmt"/>
            <line num="829" count="20" type="stmt"/>
            <line num="830" count="20" type="stmt"/>
            <line num="833" count="20" type="stmt"/>
            <line num="834" count="20" type="stmt"/>
            <line num="836" count="20" type="stmt"/>
            <line num="838" count="20" type="stmt"/>
            <line num="841" count="2" type="stmt"/>
            <line num="843" count="2" type="stmt"/>
            <line num="844" count="2" type="stmt"/>
            <line num="845" count="2" type="stmt"/>
            <line num="850" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLIBORInArrearsFloatLeg() : void" num="853" testsuccess="true" count="2" testduration="0.014" type="method"/>
            <line num="859" count="2" type="stmt"/>
            <line num="860" count="2" type="stmt"/>
            <line num="861" count="2" type="stmt"/>
            <line num="862" count="2" type="stmt"/>
            <line num="863" count="2" type="stmt"/>
            <line num="864" count="2" type="stmt"/>
            <line num="866" count="2" type="stmt"/>
            <line num="871" count="2" type="stmt"/>
            <line num="872" count="2" type="stmt"/>
            <line num="873" count="2" type="stmt"/>
            <line num="874" count="2" type="stmt"/>
            <line num="876" count="2" type="stmt"/>
            <line num="878" count="2" type="stmt"/>
            <line num="879" count="2" type="stmt"/>
            <line num="882" count="2" type="stmt"/>
            <line num="883" count="2" type="stmt"/>
            <line num="885" count="2" type="stmt"/>
            <line num="886" count="2" type="stmt"/>
            <line num="889" count="2" type="stmt"/>
            <line num="890" count="2" type="stmt"/>
            <line num="892" count="2" type="stmt"/>
            <line num="894" count="2" type="stmt"/>
            <line num="899" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPutOnMoneyMarketAccount() : void" num="902" testsuccess="true" count="2" testduration="11.03" type="method"/>
            <line num="908" count="2" type="stmt"/>
            <line num="910" count="2" type="stmt"/>
            <line num="911" count="2" type="stmt"/>
            <line num="914" count="2" type="stmt"/>
            <line num="915" count="2" type="stmt"/>
            <line num="917" count="2" type="stmt"/>
            <line num="918" count="2" type="stmt"/>
            <line num="921" count="2" type="stmt"/>
            <line num="922" count="2" type="stmt"/>
            <line num="924" count="2" type="stmt"/>
            <line num="926" count="2" type="stmt"/>
            <line num="931" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,Schedule,Schedule,String) : double" num="934" count="0" type="method"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="937" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[],String) : double" num="940" count="216" type="method"/>
            <line num="941" count="216" type="stmt"/>
            <line num="942" count="216" type="stmt"/>
            <line num="943" count="216" type="stmt"/>
            <line num="944" count="216" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="949" count="196" type="method"/>
            <line num="950" count="196" type="stmt"/>
            <line num="951" count="196" type="stmt"/>
            <line falsecount="196" truecount="0" num="951" type="cond"/>
            <line num="952" count="0" type="stmt"/>
            <line num="954" count="196" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationAADTest.java" name="LIBORMarketModelCalibrationAADTest.java">
            <metrics coveredelements="309" coveredconditionals="22" complexity="43" loc="805" coveredmethods="12" methods="14" elements="362" classes="4" ncloc="539" statements="318" conditionals="30" coveredstatements="275"/>
            <class name="LIBORMarketModelCalibrationAADTest">
               <metrics coveredelements="309" complexity="43" methods="14" testruns="4" statements="318" coveredconditionals="22" coveredmethods="12" elements="362" testfailures="0" testduration="3365.094" conditionals="30" coveredstatements="275" testpasses="4"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerDerivativeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerSolverType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationAADTest.OptimizerType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="104" count="4" type="method"/>
            <line num="107" count="4" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="112" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="LIBORMarketModelCalibrationAADTest(OptimizerSolverType,OptimizerDerivativeType,OptimizerType,ValueUnit)" num="153" count="4" type="method"/>
            <line num="155" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="173" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line num="175" count="4" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="181" count="4" type="stmt"/>
            <line num="182" count="4" type="stmt"/>
            <line num="183" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="testATMSwaptionCalibration() : void" num="198" count="4" type="method"/>
            <line num="201" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line num="206" count="4" type="stmt"/>
            <line num="207" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="211" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line num="214" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="218" count="4" type="stmt"/>
            <line num="219" count="4" type="stmt"/>
            <line num="220" count="4" type="stmt"/>
            <line num="221" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="getOptimizer(ObjectiveFunction,RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[],RandomVariable[]) : StochasticOptimizer" num="224" count="4" type="method"/>
            <line num="231" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="235" count="4" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="4" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
            <line num="262" count="4" type="stmt"/>
            <line falsecount="4" truecount="192" num="262" type="cond"/>
            <line num="263" count="192" type="stmt"/>
            <line num="266" count="4" type="stmt"/>
            <line num="268" count="4" type="stmt"/>
            <line num="269" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="269" type="cond"/>
            <line num="270" count="616" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line num="276" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="276" type="cond"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="279" count="1786" type="method"/>
            <line num="281" count="1786" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="290" count="4" type="stmt"/>
            <line num="295" count="4" type="stmt"/>
            <line num="301" count="4" type="stmt"/>
            <line num="304" count="4" type="stmt"/>
            <line num="305" count="4" type="stmt"/>
            <line num="314" count="4" type="stmt"/>
            <line num="319" count="4" type="stmt"/>
            <line num="320" count="4" type="stmt"/>
            <line num="321" count="4" type="stmt"/>
            <line num="323" count="4" type="stmt"/>
            <line num="325" count="4" type="stmt"/>
            <line num="338" count="4" type="stmt"/>
            <line num="351" count="4" type="stmt"/>
            <line num="370" count="4" type="stmt"/>
            <line num="371" count="4" type="stmt"/>
            <line num="372" count="4" type="stmt"/>
            <line num="373" count="4" type="stmt"/>
            <line falsecount="4" truecount="784" num="373" type="cond"/>
            <line num="375" count="784" type="stmt"/>
            <line num="376" count="784" type="stmt"/>
            <line num="377" count="784" type="stmt"/>
            <line num="378" count="784" type="stmt"/>
            <line num="381" count="784" type="stmt"/>
            <line num="382" count="784" type="stmt"/>
            <line num="384" count="784" type="stmt"/>
            <line falsecount="616" truecount="168" num="384" type="cond"/>
            <line num="385" count="168" type="stmt"/>
            <line num="388" count="616" type="stmt"/>
            <line num="390" count="616" type="stmt"/>
            <line num="391" count="616" type="stmt"/>
            <line num="393" count="616" type="stmt"/>
            <line num="395" count="616" type="stmt"/>
            <line num="396" count="616" type="stmt"/>
            <line num="398" count="616" type="stmt"/>
            <line num="405" count="4" type="stmt"/>
            <line num="406" count="4" type="stmt"/>
            <line num="407" count="4" type="stmt"/>
            <line num="408" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="415" count="4" type="stmt"/>
            <line num="418" count="4" type="stmt"/>
            <line num="421" count="4" type="stmt"/>
            <line num="424" count="4" type="stmt"/>
            <line num="426" count="4" type="stmt"/>
            <line num="427" count="4" type="stmt"/>
            <line num="428" count="4" type="stmt"/>
            <line num="429" count="4" type="stmt"/>
            <line num="430" count="4" type="stmt"/>
            <line num="431" count="4" type="stmt"/>
            <line num="435" count="4" type="stmt"/>
            <line num="436" count="4" type="stmt"/>
            <line num="440" count="4" type="stmt"/>
            <line num="441" count="4" type="stmt"/>
            <line num="442" count="4" type="stmt"/>
            <line num="444" count="4" type="stmt"/>
            <line num="445" count="4" type="stmt"/>
            <line num="446" count="4" type="stmt"/>
            <line num="448" count="4" type="stmt"/>
            <line num="453" count="4" type="stmt"/>
            <line num="454" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="454" type="cond"/>
            <line num="455" count="616" type="stmt"/>
            <line falsecount="616" truecount="0" num="455" type="cond"/>
            <line num="456" count="616" type="stmt"/>
            <line num="458" count="4" type="stmt"/>
            <line num="467" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="469" type="cond"/>
            <line falsecount="0" truecount="4" num="470" type="cond"/>
            <line num="473" count="4" type="stmt"/>
            <line num="475" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="478" count="4" type="method"/>
            <line num="479" count="4" type="stmt"/>
            <line num="480" count="4" type="stmt"/>
            <line num="481" count="4" type="stmt"/>
            <line num="482" count="4" type="stmt"/>
            <line num="483" count="4" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="490" count="4" type="stmt"/>
            <line num="491" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line num="494" count="4" type="stmt"/>
            <line num="495" count="4" type="stmt"/>
            <line num="496" count="4" type="stmt"/>
            <line num="498" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="501" count="4" type="method"/>
            <line num="503" count="4" type="stmt"/>
            <line num="504" count="4" type="stmt"/>
            <line num="505" count="4" type="stmt"/>
            <line num="506" count="4" type="stmt"/>
            <line num="507" count="4" type="stmt"/>
            <line num="508" count="4" type="stmt"/>
            <line num="509" count="4" type="stmt"/>
            <line num="510" count="4" type="stmt"/>
            <line num="511" count="4" type="stmt"/>
            <line num="513" count="4" type="stmt"/>
            <line num="514" count="4" type="stmt"/>
            <line num="515" count="4" type="stmt"/>
            <line num="517" count="4" type="stmt"/>
            <line num="518" count="4" type="stmt"/>
            <line num="520" count="4" type="stmt"/>
            <line num="521" count="4" type="stmt"/>
            <line num="523" count="4" type="stmt"/>
            <line num="533" count="4" type="stmt"/>
            <line num="536" count="4" type="stmt"/>
            <line num="537" count="4" type="stmt"/>
            <line num="538" count="4" type="stmt"/>
            <line num="539" count="4" type="stmt"/>
            <line num="540" count="4" type="stmt"/>
            <line num="541" count="4" type="stmt"/>
            <line num="542" count="4" type="stmt"/>
            <line num="543" count="4" type="stmt"/>
            <line falsecount="4" truecount="84" num="543" type="cond"/>
            <line num="545" count="84" type="stmt"/>
            <line num="546" count="84" type="stmt"/>
            <line num="548" count="84" type="stmt"/>
            <line num="549" count="84" type="stmt"/>
            <line num="550" count="84" type="stmt"/>
            <line num="551" count="84" type="stmt"/>
            <line num="554" count="4" type="stmt"/>
            <line num="557" count="4" type="stmt"/>
            <line num="571" count="4" type="stmt"/>
            <line num="576" count="4" type="stmt"/>
            <line num="577" count="4" type="stmt"/>
            <line num="582" count="4" type="stmt"/>
            <line num="583" count="4" type="stmt"/>
            <line num="586" count="4" type="stmt"/>
            <line num="588" count="4" type="stmt"/>
            <line num="590" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="593" count="616" type="method"/>
            <line num="594" count="616" type="stmt"/>
            <line complexity="6" visibility="private" signature="createATMCalibrationItem(double,double,double,int,double,double,ForwardCurve,DiscountCurve,ValueUnit) : CalibrationProduct" num="597" count="1232" type="method"/>
            <line num="599" count="1232" type="stmt"/>
            <line num="600" count="1232" type="stmt"/>
            <line num="601" count="1232" type="stmt"/>
            <line num="602" count="1232" type="stmt"/>
            <line falsecount="1232" truecount="25520" num="602" type="cond"/>
            <line num="603" count="25520" type="stmt"/>
            <line num="604" count="25520" type="stmt"/>
            <line num="605" count="25520" type="stmt"/>
            <line num="607" count="1232" type="stmt"/>
            <line num="609" count="1232" type="stmt"/>
            <line num="616" count="1232" type="stmt"/>
            <line num="617" count="1232" type="stmt"/>
            <line num="618" count="616" type="stmt"/>
            <line num="619" count="616" type="stmt"/>
            <line num="620" count="616" type="stmt"/>
            <line num="621" count="616" type="stmt"/>
            <line num="625" count="616" type="stmt"/>
            <line num="626" count="616" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="616" type="stmt"/>
            <line num="631" count="616" type="stmt"/>
            <line num="632" count="616" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="1232" type="stmt"/>
            <line complexity="6" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,ForwardCurve,DiscountCurve,ValueUnit) : CalibrationProduct" num="640" count="0" type="method"/>
            <line num="642" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="evaluateCalibration(LIBORModel,BrownianMotion,List&lt;String&gt;,List&lt;CalibrationProduct&gt;,List&lt;CalibrationProduct&gt;,double,double,String) : void" num="689" count="4" type="method"/>
            <line num="693" count="4" type="stmt"/>
            <line num="694" count="4" type="stmt"/>
            <line num="695" count="4" type="stmt"/>
            <line num="696" count="4" type="stmt"/>
            <line num="697" count="192" type="stmt"/>
            <line num="700" count="4" type="stmt"/>
            <line num="701" count="4" type="stmt"/>
            <line num="703" count="4" type="stmt"/>
            <line num="704" count="4" type="stmt"/>
            <line num="705" count="4" type="stmt"/>
            <line num="706" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="706" type="cond"/>
            <line num="707" count="616" type="stmt"/>
            <line num="708" count="616" type="stmt"/>
            <line num="709" count="616" type="stmt"/>
            <line num="710" count="576" type="stmt"/>
            <line num="711" count="576" type="stmt"/>
            <line num="712" count="576" type="stmt"/>
            <line num="713" count="576" type="stmt"/>
            <line num="714" count="576" type="stmt"/>
            <line num="720" count="4" type="stmt"/>
            <line num="721" count="4" type="stmt"/>
            <line num="722" count="4" type="stmt"/>
            <line num="723" count="4" type="stmt"/>
            <line falsecount="4" truecount="616" num="723" type="cond"/>
            <line num="724" count="616" type="stmt"/>
            <line num="725" count="616" type="stmt"/>
            <line num="726" count="616" type="stmt"/>
            <line num="727" count="576" type="stmt"/>
            <line num="728" count="576" type="stmt"/>
            <line num="729" count="576" type="stmt"/>
            <line num="730" count="576" type="stmt"/>
            <line num="731" count="576" type="stmt"/>
            <line num="738" count="4" type="stmt"/>
            <line num="742" count="4" type="stmt"/>
            <line num="743" count="4" type="stmt"/>
            <line num="745" count="4" type="stmt"/>
            <line num="746" count="4" type="stmt"/>
            <line num="747" count="4" type="stmt"/>
            <line num="748" count="4" type="stmt"/>
            <line num="749" count="4" type="stmt"/>
            <line num="750" count="4" type="stmt"/>
            <line num="751" count="4" type="stmt"/>
            <line num="754" count="4" type="stmt"/>
            <line num="755" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="printConfigurations(ValueUnit,OptimizerType,OptimizerDerivativeType,OptimizerSolverType,int,long,double,int,int,int,int) : void" num="758" count="4" type="method"/>
            <line num="760" count="4" type="stmt"/>
            <line num="761" count="4" type="stmt"/>
            <line num="763" count="4" type="stmt"/>
            <line num="764" count="4" type="stmt"/>
            <line num="765" count="4" type="stmt"/>
            <line num="766" count="4" type="stmt"/>
            <line num="767" count="4" type="stmt"/>
            <line num="768" count="4" type="stmt"/>
            <line num="769" count="4" type="stmt"/>
            <line num="770" count="4" type="stmt"/>
            <line num="771" count="4" type="stmt"/>
            <line num="772" count="4" type="stmt"/>
            <line num="773" count="4" type="stmt"/>
            <line num="774" count="4" type="stmt"/>
            <line num="775" count="4" type="stmt"/>
            <line num="776" count="4" type="stmt"/>
            <line num="777" count="4" type="stmt"/>
            <line num="778" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="createInitialCovarianceModel(RandomVariableFactory,TimeDiscretization,TimeDiscretization,int) : AbstractLIBORCovarianceModelParametric" num="782" count="4" type="method"/>
            <line num="784" count="4" type="stmt"/>
            <line num="785" count="4" type="stmt"/>
            <line num="786" count="4" type="stmt"/>
            <line num="795" count="4" type="stmt"/>
            <line num="798" count="4" type="stmt"/>
            <line num="801" count="4" type="stmt"/>
            <line num="803" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationSmileTest.java" name="LIBORMarketModelCalibrationSmileTest.java">
            <metrics coveredelements="109" coveredconditionals="8" complexity="17" loc="476" coveredmethods="3" methods="5" elements="199" classes="1" ncloc="313" statements="182" conditionals="12" coveredstatements="98"/>
            <class name="LIBORMarketModelCalibrationSmileTest">
               <metrics coveredelements="109" complexity="17" methods="5" testruns="2" statements="182" coveredconditionals="8" coveredmethods="3" elements="199" testfailures="0" testduration="6051.7029999999995" conditionals="12" coveredstatements="98" testpasses="2"/>
            </class>
            <line complexity="7" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve,String) : CalibrationProduct" num="77" count="38" type="method"/>
            <line num="79" count="38" type="stmt"/>
            <line num="80" count="38" type="stmt"/>
            <line num="81" count="38" type="stmt"/>
            <line num="83" count="38" type="stmt"/>
            <line falsecount="38" truecount="760" num="83" type="cond"/>
            <line num="84" count="760" type="stmt"/>
            <line num="85" count="760" type="stmt"/>
            <line num="86" count="760" type="stmt"/>
            <line num="88" count="38" type="stmt"/>
            <line num="91" count="38" type="stmt"/>
            <line num="94" count="38" type="stmt"/>
            <line num="95" count="38" type="stmt"/>
            <line num="102" count="38" type="stmt"/>
            <line num="103" count="38" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="38" type="stmt"/>
            <line num="106" count="38" type="stmt"/>
            <line num="107" count="38" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="38" type="stmt"/>
            <line num="117" count="38" type="stmt"/>
            <line num="118" count="38" type="stmt"/>
            <line num="119" count="38" type="stmt"/>
            <line num="120" count="38" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="38" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwaptionSmileCalibration() : void" num="133" testsuccess="true" count="2" testduration="2984.614" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="198" type="cond"/>
            <line num="199" count="18" type="stmt"/>
            <line num="200" count="18" type="stmt"/>
            <line num="201" count="18" type="stmt"/>
            <line num="203" count="18" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="210" type="cond"/>
            <line num="212" count="20" type="stmt"/>
            <line num="213" count="20" type="stmt"/>
            <line num="214" count="20" type="stmt"/>
            <line num="216" count="20" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="251" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="299" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="302" count="2" type="stmt"/>
            <line num="303" count="14" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line falsecount="2" truecount="38" num="313" type="cond"/>
            <line num="314" count="38" type="stmt"/>
            <line num="315" count="38" type="stmt"/>
            <line num="316" count="38" type="stmt"/>
            <line num="317" count="30" type="stmt"/>
            <line num="318" count="30" type="stmt"/>
            <line num="319" count="30" type="stmt"/>
            <line num="320" count="30" type="stmt"/>
            <line num="321" count="30" type="stmt"/>
            <line num="328" count="2" type="stmt"/>
            <line num="330" count="2" type="stmt"/>
            <line num="331" count="2" type="stmt"/>
            <line num="332" count="2" type="stmt"/>
            <line num="333" count="2" type="stmt"/>
            <line num="335" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="338" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="473" count="38" type="method"/>
            <line num="474" count="38" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelCalibrationTest.java" name="LIBORMarketModelCalibrationTest.java">
            <metrics coveredelements="268" coveredconditionals="21" complexity="32" loc="649" coveredmethods="7" methods="7" elements="294" classes="3" ncloc="458" statements="259" conditionals="28" coveredstatements="240"/>
            <class name="LIBORMarketModelCalibrationTest">
               <metrics coveredelements="268" complexity="32" methods="7" testruns="6" statements="259" coveredconditionals="21" coveredmethods="7" elements="294" testfailures="0" testduration="19290.459" conditionals="28" coveredstatements="240" testpasses="6"/>
            </class>
            <class name="LIBORMarketModelCalibrationTest.LIBORMarketModelType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LIBORMarketModelCalibrationTest.CalibrationProductType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="98" count="4" type="method"/>
            <line num="100" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelCalibrationTest(LIBORMarketModelType,CalibrationProductType)" num="120" count="6" type="method"/>
            <line num="121" count="6" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line complexity="17" visibility="public" signature="testATMSwaptionCalibration() : void" num="136" count="6" type="method"/>
            <line num="140" count="6" type="stmt"/>
            <line num="141" count="6" type="stmt"/>
            <line num="143" count="6" type="stmt"/>
            <line num="148" count="6" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="151" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line num="158" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="170" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line num="177" count="6" type="stmt"/>
            <line num="178" count="6" type="stmt"/>
            <line num="180" count="6" type="stmt"/>
            <line num="182" count="6" type="stmt"/>
            <line num="197" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="232" count="6" type="stmt"/>
            <line num="233" count="6" type="stmt"/>
            <line num="234" count="6" type="stmt"/>
            <line num="235" count="6" type="stmt"/>
            <line falsecount="6" truecount="1176" num="235" type="cond"/>
            <line num="237" count="1176" type="stmt"/>
            <line num="238" count="1176" type="stmt"/>
            <line num="239" count="1176" type="stmt"/>
            <line num="240" count="1176" type="stmt"/>
            <line num="243" count="1176" type="stmt"/>
            <line num="244" count="1176" type="stmt"/>
            <line num="246" count="1176" type="stmt"/>
            <line falsecount="924" truecount="252" num="246" type="cond"/>
            <line num="247" count="252" type="stmt"/>
            <line num="250" count="924" type="stmt"/>
            <line num="252" count="924" type="stmt"/>
            <line num="253" count="924" type="stmt"/>
            <line num="255" count="924" type="stmt"/>
            <line num="257" count="924" type="stmt"/>
            <line num="259" count="924" type="stmt"/>
            <line num="260" count="924" type="stmt"/>
            <line num="261" count="924" type="stmt"/>
            <line falsecount="308" truecount="616" num="261" type="cond"/>
            <line num="262" count="924" type="stmt"/>
            <line num="269" count="6" type="stmt"/>
            <line num="270" count="6" type="stmt"/>
            <line num="271" count="6" type="stmt"/>
            <line num="272" count="6" type="stmt"/>
            <line num="277" count="6" type="stmt"/>
            <line num="281" count="6" type="stmt"/>
            <line num="282" count="6" type="stmt"/>
            <line num="285" count="6" type="stmt"/>
            <line num="288" count="6" type="stmt"/>
            <line num="290" count="6" type="stmt"/>
            <line num="291" count="6" type="stmt"/>
            <line num="292" count="4" type="stmt"/>
            <line num="293" count="4" type="stmt"/>
            <line num="294" count="4" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="302" count="6" type="stmt"/>
            <line num="305" count="6" type="stmt"/>
            <line num="308" count="6" type="stmt"/>
            <line num="311" count="6" type="stmt"/>
            <line num="312" count="6" type="stmt"/>
            <line num="313" count="6" type="stmt"/>
            <line num="314" count="6" type="stmt"/>
            <line num="315" count="6" type="stmt"/>
            <line num="319" count="6" type="stmt"/>
            <line num="320" count="6" type="stmt"/>
            <line num="321" count="6" type="stmt"/>
            <line num="322" count="6" type="stmt"/>
            <line num="323" count="6" type="stmt"/>
            <line num="324" count="6" type="stmt"/>
            <line num="329" count="6" type="stmt"/>
            <line num="330" count="6" type="stmt"/>
            <line num="331" count="6" type="stmt"/>
            <line num="332" count="6" type="stmt"/>
            <line num="333" count="6" type="stmt"/>
            <line num="334" count="6" type="stmt"/>
            <line num="336" count="6" type="stmt"/>
            <line num="341" count="6" type="stmt"/>
            <line num="342" count="6" type="stmt"/>
            <line falsecount="6" truecount="924" num="342" type="cond"/>
            <line num="343" count="924" type="stmt"/>
            <line num="345" count="6" type="stmt"/>
            <line num="354" count="6" type="stmt"/>
            <line num="356" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="356" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="364" count="6" type="stmt"/>
            <line num="365" count="6" type="stmt"/>
            <line num="367" count="6" type="stmt"/>
            <line num="368" count="6" type="stmt"/>
            <line num="369" count="6" type="stmt"/>
            <line num="370" count="6" type="stmt"/>
            <line falsecount="6" truecount="924" num="370" type="cond"/>
            <line num="371" count="924" type="stmt"/>
            <line num="372" count="924" type="stmt"/>
            <line num="373" count="924" type="stmt"/>
            <line num="374" count="924" type="stmt"/>
            <line num="375" count="864" type="stmt"/>
            <line num="376" count="864" type="stmt"/>
            <line num="377" count="864" type="stmt"/>
            <line num="378" count="864" type="stmt"/>
            <line num="379" count="864" type="stmt"/>
            <line num="380" count="864" type="stmt"/>
            <line num="381" count="864" type="stmt"/>
            <line num="383" count="864" type="stmt"/>
            <line falsecount="864" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="399" count="6" type="stmt"/>
            <line num="400" count="6" type="stmt"/>
            <line num="401" count="6" type="stmt"/>
            <line num="402" count="6" type="stmt"/>
            <line num="403" count="6" type="stmt"/>
            <line num="404" count="6" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="409" count="6" type="stmt"/>
            <line num="410" count="6" type="stmt"/>
            <line num="411" count="6" type="stmt"/>
            <line num="412" count="6" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="420" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="420" type="cond"/>
            <line num="421" count="6" type="stmt"/>
            <line num="423" count="6" type="stmt"/>
            <line num="424" count="6" type="stmt"/>
            <line falsecount="6" truecount="924" num="424" type="cond"/>
            <line num="425" count="924" type="stmt"/>
            <line num="426" count="924" type="stmt"/>
            <line num="427" count="924" type="stmt"/>
            <line num="428" count="864" type="stmt"/>
            <line num="429" count="864" type="stmt"/>
            <line num="430" count="864" type="stmt"/>
            <line num="431" count="864" type="stmt"/>
            <line falsecount="864" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="441" count="6" type="stmt"/>
            <line num="442" count="6" type="stmt"/>
            <line num="444" count="6" type="stmt"/>
            <line num="445" count="6" type="stmt"/>
            <line num="446" count="6" type="stmt"/>
            <line num="447" count="6" type="stmt"/>
            <line num="449" count="6" type="stmt"/>
            <line complexity="7" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve,CalibrationProductType) : CalibrationProduct" num="452" count="2772" type="method"/>
            <line num="454" count="2772" type="stmt"/>
            <line num="455" count="2772" type="stmt"/>
            <line num="456" count="2772" type="stmt"/>
            <line num="458" count="2772" type="stmt"/>
            <line falsecount="2772" truecount="57420" num="458" type="cond"/>
            <line num="459" count="57420" type="stmt"/>
            <line num="460" count="57420" type="stmt"/>
            <line num="461" count="57420" type="stmt"/>
            <line num="463" count="2772" type="stmt"/>
            <line num="466" count="2772" type="stmt"/>
            <line num="469" count="2772" type="stmt"/>
            <line num="470" count="2772" type="stmt"/>
            <line num="477" count="2772" type="stmt"/>
            <line num="478" count="2772" type="stmt"/>
            <line num="479" count="1848" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="1848" type="stmt"/>
            <line num="482" count="1848" type="stmt"/>
            <line num="483" count="924" type="stmt"/>
            <line num="484" count="924" type="stmt"/>
            <line num="485" count="924" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="2772" type="stmt"/>
            <line num="492" count="2772" type="stmt"/>
            <line num="493" count="1848" type="stmt"/>
            <line num="494" count="1848" type="stmt"/>
            <line num="495" count="1848" type="stmt"/>
            <line num="496" count="924" type="stmt"/>
            <line num="497" count="924" type="stmt"/>
            <line num="501" count="924" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="506" count="2772" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="509" count="6" type="method"/>
            <line num="510" count="6" type="stmt"/>
            <line num="511" count="6" type="stmt"/>
            <line num="512" count="6" type="stmt"/>
            <line num="513" count="6" type="stmt"/>
            <line num="514" count="6" type="stmt"/>
            <line num="515" count="6" type="stmt"/>
            <line num="517" count="6" type="stmt"/>
            <line num="519" count="6" type="stmt"/>
            <line num="520" count="6" type="stmt"/>
            <line num="521" count="6" type="stmt"/>
            <line num="522" count="6" type="stmt"/>
            <line num="523" count="6" type="stmt"/>
            <line num="524" count="6" type="stmt"/>
            <line num="525" count="6" type="stmt"/>
            <line num="526" count="6" type="stmt"/>
            <line num="527" count="6" type="stmt"/>
            <line num="529" count="6" type="stmt"/>
            <line complexity="4" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="532" count="6" type="method"/>
            <line num="534" count="6" type="stmt"/>
            <line num="535" count="6" type="stmt"/>
            <line num="536" count="6" type="stmt"/>
            <line num="537" count="6" type="stmt"/>
            <line num="538" count="6" type="stmt"/>
            <line num="539" count="6" type="stmt"/>
            <line num="540" count="6" type="stmt"/>
            <line num="541" count="6" type="stmt"/>
            <line num="542" count="6" type="stmt"/>
            <line num="544" count="6" type="stmt"/>
            <line num="545" count="6" type="stmt"/>
            <line num="546" count="6" type="stmt"/>
            <line num="548" count="6" type="stmt"/>
            <line num="549" count="6" type="stmt"/>
            <line num="551" count="6" type="stmt"/>
            <line num="552" count="6" type="stmt"/>
            <line num="554" count="6" type="stmt"/>
            <line num="564" count="6" type="stmt"/>
            <line num="567" count="6" type="stmt"/>
            <line num="568" count="6" type="stmt"/>
            <line num="569" count="6" type="stmt"/>
            <line num="570" count="6" type="stmt"/>
            <line num="571" count="6" type="stmt"/>
            <line num="572" count="6" type="stmt"/>
            <line num="573" count="6" type="stmt"/>
            <line num="574" count="6" type="stmt"/>
            <line falsecount="6" truecount="126" num="574" type="cond"/>
            <line num="576" count="126" type="stmt"/>
            <line num="577" count="126" type="stmt"/>
            <line num="579" count="126" type="stmt"/>
            <line num="580" count="126" type="stmt"/>
            <line num="581" count="126" type="stmt"/>
            <line num="582" count="126" type="stmt"/>
            <line num="585" count="6" type="stmt"/>
            <line num="588" count="6" type="stmt"/>
            <line num="602" count="6" type="stmt"/>
            <line num="607" count="6" type="stmt"/>
            <line num="608" count="6" type="stmt"/>
            <line num="613" count="6" type="stmt"/>
            <line num="614" count="6" type="stmt"/>
            <line num="615" count="6" type="stmt"/>
            <line num="617" count="6" type="stmt"/>
            <line num="620" count="6" type="stmt"/>
            <line num="623" count="6" type="stmt"/>
            <line num="625" count="6" type="stmt"/>
            <line num="626" count="6" type="stmt"/>
            <line num="627" count="126" type="stmt"/>
            <line num="628" count="126" type="stmt"/>
            <line num="629" count="126" type="stmt"/>
            <line num="630" count="126" type="stmt"/>
            <line num="632" count="6" type="stmt"/>
            <line num="634" count="6" type="stmt"/>
            <line num="636" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="636" type="cond"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="643" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="646" count="2772" type="method"/>
            <line num="647" count="2772" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelInterpolationTest.java" name="LIBORMarketModelInterpolationTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="4" loc="169" coveredmethods="4" methods="4" elements="41" classes="1" ncloc="103" statements="37" conditionals="0" coveredstatements="37"/>
            <class name="LIBORMarketModelInterpolationTest">
               <metrics coveredelements="41" complexity="4" methods="4" testruns="6" statements="37" coveredconditionals="0" coveredmethods="4" elements="41" testfailures="0" testduration="352.31699999999995" conditionals="0" coveredstatements="37" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="38" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelInterpolationTest(LIBORMarketModelFromCovarianceModel.InterpolationMethod)" num="60" count="6" type="method"/>
            <line num="63" count="6" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(LIBORMarketModelFromCovarianceModel.InterpolationMethod,RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="68" count="6" type="method"/>
            <line num="75" count="6" type="stmt"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line num="93" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="99" count="6" type="stmt"/>
            <line num="104" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line num="126" count="6" type="stmt"/>
            <line num="128" count="6" type="stmt"/>
            <line num="131" count="6" type="stmt"/>
            <line num="136" count="6" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line num="140" count="6" type="stmt"/>
            <line num="142" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterpolatedLastLIBOR() : void" num="145" count="6" type="method"/>
            <line num="148" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="153" count="6" type="stmt"/>
            <line num="155" count="6" type="stmt"/>
            <line num="158" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelMultiCurveValuationTest.java" name="LIBORMarketModelMultiCurveValuationTest.java">
            <metrics coveredelements="306" coveredconditionals="43" complexity="34" loc="671" coveredmethods="12" methods="12" elements="309" classes="1" ncloc="401" statements="253" conditionals="44" coveredstatements="251"/>
            <class name="LIBORMarketModelMultiCurveValuationTest">
               <metrics coveredelements="306" complexity="34" methods="12" testruns="28" statements="253" coveredconditionals="43" coveredmethods="12" elements="309" testfailures="0" testduration="4800.566" conditionals="44" coveredstatements="251" testpasses="28"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="60" count="4" type="method"/>
            <line num="63" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelMultiCurveValuationTest(Measure)" num="79" count="28" type="method"/>
            <line num="81" count="28" type="stmt"/>
            <line num="84" count="28" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="87" count="28" type="method"/>
            <line num="93" count="28" type="stmt"/>
            <line num="94" count="28" type="stmt"/>
            <line num="95" count="28" type="stmt"/>
            <line num="98" count="28" type="stmt"/>
            <line num="106" count="28" type="stmt"/>
            <line num="116" count="28" type="stmt"/>
            <line num="117" count="28" type="stmt"/>
            <line num="119" count="28" type="stmt"/>
            <line num="124" count="28" type="stmt"/>
            <line num="125" count="28" type="stmt"/>
            <line falsecount="28" truecount="1120" num="125" type="cond"/>
            <line num="126" count="1120" type="stmt"/>
            <line falsecount="1120" truecount="44800" num="126" type="cond"/>
            <line num="128" count="44800" type="stmt"/>
            <line num="129" count="44800" type="stmt"/>
            <line num="130" count="44800" type="stmt"/>
            <line num="132" count="44800" type="stmt"/>
            <line num="133" count="44800" type="stmt"/>
            <line falsecount="21840" truecount="22960" num="133" type="cond"/>
            <line num="134" count="22960" type="stmt"/>
            <line num="136" count="21840" type="stmt"/>
            <line num="140" count="44800" type="stmt"/>
            <line num="143" count="28" type="stmt"/>
            <line num="148" count="28" type="stmt"/>
            <line num="156" count="28" type="stmt"/>
            <line num="164" count="28" type="stmt"/>
            <line num="167" count="28" type="stmt"/>
            <line num="170" count="28" type="stmt"/>
            <line num="173" count="28" type="stmt"/>
            <line num="178" count="28" type="stmt"/>
            <line num="188" count="28" type="stmt"/>
            <line num="190" count="28" type="stmt"/>
            <line num="192" count="28" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBond() : void" num="195" count="4" type="method"/>
            <line num="201" count="4" type="stmt"/>
            <line num="202" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line falsecount="4" truecount="164" num="205" type="cond"/>
            <line num="206" count="164" type="stmt"/>
            <line num="207" count="164" type="stmt"/>
            <line num="210" count="164" type="stmt"/>
            <line num="213" count="164" type="stmt"/>
            <line num="214" count="164" type="stmt"/>
            <line num="217" count="164" type="stmt"/>
            <line num="219" count="164" type="stmt"/>
            <line num="222" count="164" type="stmt"/>
            <line num="223" count="164" type="stmt"/>
            <line num="225" count="164" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwap() : void" num="235" count="4" type="method"/>
            <line num="240" count="4" type="stmt"/>
            <line num="241" count="4" type="stmt"/>
            <line num="243" count="4" type="stmt"/>
            <line num="244" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="244" type="cond"/>
            <line num="246" count="120" type="stmt"/>
            <line num="248" count="120" type="stmt"/>
            <line num="251" count="120" type="stmt"/>
            <line num="252" count="120" type="stmt"/>
            <line num="253" count="120" type="stmt"/>
            <line num="254" count="120" type="stmt"/>
            <line num="256" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="256" type="cond"/>
            <line num="257" count="1200" type="stmt"/>
            <line num="258" count="1200" type="stmt"/>
            <line num="259" count="1200" type="stmt"/>
            <line num="261" count="120" type="stmt"/>
            <line num="263" count="120" type="stmt"/>
            <line num="266" count="120" type="stmt"/>
            <line num="269" count="120" type="stmt"/>
            <line num="270" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="270" type="cond"/>
            <line num="271" count="1200" type="stmt"/>
            <line num="275" count="120" type="stmt"/>
            <line num="278" count="120" type="stmt"/>
            <line num="279" count="120" type="stmt"/>
            <line num="281" count="120" type="stmt"/>
            <line num="284" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="291" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="291" type="cond"/>
            <line num="292" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCaplet() : void" num="298" count="4" type="method"/>
            <line num="303" count="4" type="stmt"/>
            <line num="304" count="4" type="stmt"/>
            <line num="306" count="4" type="stmt"/>
            <line num="307" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="307" type="cond"/>
            <line num="309" count="120" type="stmt"/>
            <line num="310" count="120" type="stmt"/>
            <line num="312" count="120" type="stmt"/>
            <line num="313" count="120" type="stmt"/>
            <line num="314" count="120" type="stmt"/>
            <line num="315" count="120" type="stmt"/>
            <line num="317" count="120" type="stmt"/>
            <line num="320" count="120" type="stmt"/>
            <line num="323" count="120" type="stmt"/>
            <line num="324" count="120" type="stmt"/>
            <line num="327" count="120" type="stmt"/>
            <line num="328" count="120" type="stmt"/>
            <line num="329" count="120" type="stmt"/>
            <line num="330" count="120" type="stmt"/>
            <line num="331" count="120" type="stmt"/>
            <line num="332" count="120" type="stmt"/>
            <line num="333" count="120" type="stmt"/>
            <line num="336" count="120" type="stmt"/>
            <line num="337" count="120" type="stmt"/>
            <line num="339" count="120" type="stmt"/>
            <line num="342" count="4" type="stmt"/>
            <line num="343" count="4" type="stmt"/>
            <line num="348" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="348" type="cond"/>
            <line num="349" count="2" type="stmt"/>
            <line num="351" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDigitalCaplet() : void" num="355" count="4" type="method"/>
            <line num="360" count="4" type="stmt"/>
            <line num="361" count="4" type="stmt"/>
            <line num="363" count="4" type="stmt"/>
            <line num="364" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="364" type="cond"/>
            <line num="366" count="120" type="stmt"/>
            <line num="367" count="120" type="stmt"/>
            <line num="369" count="120" type="stmt"/>
            <line num="370" count="120" type="stmt"/>
            <line num="372" count="120" type="stmt"/>
            <line num="375" count="120" type="stmt"/>
            <line num="378" count="120" type="stmt"/>
            <line num="379" count="120" type="stmt"/>
            <line num="382" count="120" type="stmt"/>
            <line num="383" count="120" type="stmt"/>
            <line num="384" count="120" type="stmt"/>
            <line num="385" count="120" type="stmt"/>
            <line num="386" count="120" type="stmt"/>
            <line num="387" count="120" type="stmt"/>
            <line num="388" count="120" type="stmt"/>
            <line num="389" count="120" type="stmt"/>
            <line num="392" count="120" type="stmt"/>
            <line num="393" count="120" type="stmt"/>
            <line num="395" count="120" type="stmt"/>
            <line num="398" count="4" type="stmt"/>
            <line num="403" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="406" count="4" type="method"/>
            <line num="411" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="414" count="4" type="stmt"/>
            <line num="415" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="415" type="cond"/>
            <line num="417" count="120" type="stmt"/>
            <line num="418" count="120" type="stmt"/>
            <line num="420" count="120" type="stmt"/>
            <line num="424" count="120" type="stmt"/>
            <line num="425" count="120" type="stmt"/>
            <line num="426" count="120" type="stmt"/>
            <line num="427" count="120" type="stmt"/>
            <line num="429" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="429" type="cond"/>
            <line num="430" count="600" type="stmt"/>
            <line num="431" count="600" type="stmt"/>
            <line num="432" count="600" type="stmt"/>
            <line num="434" count="120" type="stmt"/>
            <line num="437" count="120" type="stmt"/>
            <line num="440" count="120" type="stmt"/>
            <line num="441" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="441" type="cond"/>
            <line num="442" count="600" type="stmt"/>
            <line num="446" count="120" type="stmt"/>
            <line num="447" count="120" type="stmt"/>
            <line num="448" count="120" type="stmt"/>
            <line num="451" count="120" type="stmt"/>
            <line num="452" count="120" type="stmt"/>
            <line num="453" count="120" type="stmt"/>
            <line num="456" count="120" type="stmt"/>
            <line num="457" count="120" type="stmt"/>
            <line num="458" count="120" type="stmt"/>
            <line num="461" count="120" type="stmt"/>
            <line num="462" count="120" type="stmt"/>
            <line num="464" count="120" type="stmt"/>
            <line num="465" count="120" type="stmt"/>
            <line num="467" count="120" type="stmt"/>
            <line num="468" count="120" type="stmt"/>
            <line num="471" count="4" type="stmt"/>
            <line num="472" count="4" type="stmt"/>
            <line num="477" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaptionSmile() : void" num="480" count="4" type="method"/>
            <line num="485" count="4" type="stmt"/>
            <line num="486" count="4" type="stmt"/>
            <line num="488" count="4" type="stmt"/>
            <line num="489" count="4" type="stmt"/>
            <line num="490" count="4" type="stmt"/>
            <line num="492" count="4" type="stmt"/>
            <line num="493" count="4" type="stmt"/>
            <line falsecount="4" truecount="60" num="493" type="cond"/>
            <line num="495" count="60" type="stmt"/>
            <line num="500" count="60" type="stmt"/>
            <line num="501" count="60" type="stmt"/>
            <line num="502" count="60" type="stmt"/>
            <line num="504" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="504" type="cond"/>
            <line num="505" count="600" type="stmt"/>
            <line num="506" count="600" type="stmt"/>
            <line num="507" count="600" type="stmt"/>
            <line num="509" count="60" type="stmt"/>
            <line num="512" count="60" type="stmt"/>
            <line num="515" count="60" type="stmt"/>
            <line num="516" count="60" type="stmt"/>
            <line falsecount="60" truecount="600" num="516" type="cond"/>
            <line num="517" count="600" type="stmt"/>
            <line num="520" count="60" type="stmt"/>
            <line num="521" count="60" type="stmt"/>
            <line num="525" count="60" type="stmt"/>
            <line num="528" count="60" type="stmt"/>
            <line num="529" count="60" type="stmt"/>
            <line num="530" count="60" type="stmt"/>
            <line num="533" count="60" type="stmt"/>
            <line num="534" count="60" type="stmt"/>
            <line num="535" count="60" type="stmt"/>
            <line num="538" count="60" type="stmt"/>
            <line num="539" count="60" type="stmt"/>
            <line num="541" count="60" type="stmt"/>
            <line num="544" count="4" type="stmt"/>
            <line num="545" count="4" type="stmt"/>
            <line num="550" count="4" type="stmt"/>
            <line complexity="6" visibility="public" signature="testSwaptionCalibration() : void" num="553" count="4" type="method"/>
            <line num="559" count="4" type="stmt"/>
            <line num="565" count="4" type="stmt"/>
            <line num="566" count="4" type="stmt"/>
            <line falsecount="4" truecount="32" num="566" type="cond"/>
            <line num="567" count="32" type="stmt"/>
            <line num="568" count="32" type="stmt"/>
            <line falsecount="32" truecount="144" num="568" type="cond"/>
            <line num="572" count="144" type="stmt"/>
            <line num="573" count="144" type="stmt"/>
            <line num="574" count="144" type="stmt"/>
            <line num="575" count="144" type="stmt"/>
            <line num="577" count="144" type="stmt"/>
            <line falsecount="144" truecount="1488" num="577" type="cond"/>
            <line num="578" count="1488" type="stmt"/>
            <line num="579" count="1488" type="stmt"/>
            <line num="580" count="1488" type="stmt"/>
            <line num="582" count="144" type="stmt"/>
            <line num="585" count="144" type="stmt"/>
            <line num="588" count="144" type="stmt"/>
            <line num="589" count="144" type="stmt"/>
            <line num="592" count="144" type="stmt"/>
            <line num="597" count="144" type="stmt"/>
            <line num="598" count="144" type="stmt"/>
            <line falsecount="144" truecount="0" num="598" type="cond"/>
            <line num="600" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="606" count="144" type="stmt"/>
            <line num="607" count="144" type="stmt"/>
            <line num="608" count="144" type="stmt"/>
            <line num="612" count="4" type="stmt"/>
            <line num="617" count="4" type="stmt"/>
            <line num="619" count="4" type="stmt"/>
            <line num="620" count="4" type="stmt"/>
            <line num="627" count="4" type="stmt"/>
            <line num="629" count="4" type="stmt"/>
            <line num="640" count="4" type="stmt"/>
            <line num="644" count="4" type="stmt"/>
            <line num="647" count="4" type="stmt"/>
            <line num="648" count="4" type="stmt"/>
            <line num="649" count="28" type="stmt"/>
            <line num="652" count="4" type="stmt"/>
            <line num="653" count="4" type="stmt"/>
            <line falsecount="4" truecount="144" num="653" type="cond"/>
            <line num="654" count="144" type="stmt"/>
            <line num="655" count="144" type="stmt"/>
            <line num="656" count="144" type="stmt"/>
            <line num="657" count="144" type="stmt"/>
            <line num="658" count="144" type="stmt"/>
            <line num="660" count="4" type="stmt"/>
            <line num="661" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="664" count="804" type="method"/>
            <line num="665" count="804" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="668" count="504" type="method"/>
            <line num="669" count="504" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelNormalAADSensitivitiesTest.java" name="LIBORMarketModelNormalAADSensitivitiesTest.java">
            <metrics coveredelements="357" coveredconditionals="38" complexity="44" loc="919" coveredmethods="10" methods="11" elements="400" classes="1" ncloc="595" statements="335" conditionals="54" coveredstatements="309"/>
            <class name="LIBORMarketModelNormalAADSensitivitiesTest">
               <metrics coveredelements="357" complexity="44" methods="11" testruns="30" statements="335" coveredconditionals="38" coveredmethods="10" elements="400" testfailures="0" testduration="4269.660000000002" conditionals="54" coveredstatements="309" testpasses="30"/>
            </class>
            <line complexity="3" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="77" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line falsecount="4" truecount="80" num="106" type="cond"/>
            <line num="107" count="80" type="stmt"/>
            <line num="108" count="80" type="stmt"/>
            <line num="109" count="80" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="124" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="147" count="4" type="stmt"/>
            <line num="154" count="4" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelNormalAADSensitivitiesTest(String,AbstractLIBORMonteCarloProduct,Optional&lt;Integer&gt;,boolean)" num="281" count="30" type="method"/>
            <line num="282" count="30" type="stmt"/>
            <line num="283" count="30" type="stmt"/>
            <line num="284" count="30" type="stmt"/>
            <line num="285" count="30" type="stmt"/>
            <line complexity="7" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,RandomVariableFactory,int,int,double,Optional&lt;Integer&gt;,double,int,int,double) : LIBORModelMonteCarloSimulationModel" num="288" count="100" type="method"/>
            <line num="299" count="100" type="stmt"/>
            <line num="300" count="100" type="stmt"/>
            <line num="301" count="100" type="stmt"/>
            <line num="303" count="100" type="stmt"/>
            <line num="304" count="100" type="stmt"/>
            <line num="305" count="100" type="stmt"/>
            <line falsecount="80" truecount="20" num="305" type="cond"/>
            <line num="306" count="20" type="stmt"/>
            <line num="307" count="20" type="stmt"/>
            <line num="310" count="80" type="stmt"/>
            <line num="314" count="100" type="stmt"/>
            <line num="324" count="100" type="stmt"/>
            <line num="325" count="100" type="stmt"/>
            <line num="327" count="100" type="stmt"/>
            <line num="330" count="100" type="stmt"/>
            <line num="331" count="100" type="stmt"/>
            <line falsecount="0" truecount="100" num="331" type="cond"/>
            <line num="332" count="100" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="341" count="100" type="stmt"/>
            <line num="343" count="100" type="stmt"/>
            <line num="344" count="100" type="stmt"/>
            <line falsecount="100" truecount="400" num="344" type="cond"/>
            <line num="345" count="400" type="stmt"/>
            <line falsecount="400" truecount="1600" num="345" type="cond"/>
            <line num="346" count="1600" type="stmt"/>
            <line falsecount="1600" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="350" count="1600" type="stmt"/>
            <line num="354" count="100" type="stmt"/>
            <line num="355" count="100" type="stmt"/>
            <line num="360" count="100" type="stmt"/>
            <line num="368" count="100" type="stmt"/>
            <line num="376" count="100" type="stmt"/>
            <line num="379" count="100" type="stmt"/>
            <line num="382" count="100" type="stmt"/>
            <line num="385" count="100" type="stmt"/>
            <line num="388" count="100" type="stmt"/>
            <line num="394" count="100" type="stmt"/>
            <line num="395" count="100" type="stmt"/>
            <line num="397" count="100" type="stmt"/>
            <line num="399" count="100" type="stmt"/>
            <line num="401" count="100" type="stmt"/>
            <line complexity="9" visibility="public" signature="testVega() : void" num="410" count="10" type="method"/>
            <line num="413" count="10" type="stmt"/>
            <line num="414" count="10" type="stmt"/>
            <line num="415" count="10" type="stmt"/>
            <line num="416" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="416" type="cond"/>
            <line num="417" count="10" type="stmt"/>
            <line num="418" count="10" type="stmt"/>
            <line num="419" count="10" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="10" type="stmt"/>
            <line num="428" count="10" type="stmt"/>
            <line num="431" count="10" type="stmt"/>
            <line num="432" count="10" type="stmt"/>
            <line num="433" count="10" type="stmt"/>
            <line num="439" count="10" type="stmt"/>
            <line num="440" count="10" type="stmt"/>
            <line num="442" count="10" type="stmt"/>
            <line num="443" count="10" type="stmt"/>
            <line num="445" count="10" type="stmt"/>
            <line num="452" count="10" type="stmt"/>
            <line num="454" count="10" type="stmt"/>
            <line num="455" count="10" type="stmt"/>
            <line num="456" count="10" type="stmt"/>
            <line num="460" count="10" type="stmt"/>
            <line num="461" count="10" type="stmt"/>
            <line num="463" count="10" type="stmt"/>
            <line num="464" count="10" type="stmt"/>
            <line num="465" count="10" type="stmt"/>
            <line num="466" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="466" type="cond"/>
            <line num="467" count="10" type="stmt"/>
            <line falsecount="10" truecount="40" num="467" type="cond"/>
            <line num="468" count="40" type="stmt"/>
            <line falsecount="40" truecount="160" num="468" type="cond"/>
            <line num="469" count="160" type="stmt"/>
            <line num="470" count="160" type="stmt"/>
            <line num="471" count="160" type="stmt"/>
            <line falsecount="0" truecount="160" num="471" type="cond"/>
            <line num="472" count="160" type="stmt"/>
            <line num="473" count="160" type="stmt"/>
            <line num="474" count="160" type="stmt"/>
            <line falsecount="98" truecount="62" num="474" type="cond"/>
            <line num="475" count="62" type="stmt"/>
            <line num="476" count="62" type="stmt"/>
            <line num="480" count="160" type="stmt"/>
            <line num="489" count="10" type="stmt"/>
            <line num="490" count="10" type="stmt"/>
            <line num="496" count="10" type="stmt"/>
            <line num="499" count="10" type="stmt"/>
            <line num="501" count="10" type="stmt"/>
            <line num="503" count="10" type="stmt"/>
            <line num="506" count="10" type="stmt"/>
            <line num="513" count="10" type="stmt"/>
            <line num="515" count="10" type="stmt"/>
            <line num="517" count="10" type="stmt"/>
            <line num="519" count="10" type="stmt"/>
            <line num="521" count="10" type="stmt"/>
            <line num="523" count="10" type="stmt"/>
            <line num="525" count="10" type="stmt"/>
            <line num="528" count="10" type="stmt"/>
            <line num="529" count="10" type="stmt"/>
            <line num="531" count="10" type="stmt"/>
            <line num="537" count="10" type="stmt"/>
            <line num="538" count="10" type="stmt"/>
            <line num="540" count="10" type="stmt"/>
            <line num="541" count="10" type="stmt"/>
            <line num="542" count="10" type="stmt"/>
            <line num="543" count="10" type="stmt"/>
            <line num="544" count="10" type="stmt"/>
            <line num="545" count="10" type="stmt"/>
            <line num="546" count="10" type="stmt"/>
            <line num="547" count="10" type="stmt"/>
            <line num="548" count="10" type="stmt"/>
            <line num="549" count="10" type="stmt"/>
            <line num="550" count="10" type="stmt"/>
            <line num="552" count="10" type="stmt"/>
            <line num="553" count="10" type="stmt"/>
            <line complexity="9" visibility="public" signature="testDelta() : void" num="562" count="10" type="method"/>
            <line num="565" count="10" type="stmt"/>
            <line num="572" count="10" type="stmt"/>
            <line num="573" count="10" type="stmt"/>
            <line num="575" count="10" type="stmt"/>
            <line num="577" count="10" type="stmt"/>
            <line num="578" count="10" type="stmt"/>
            <line num="579" count="10" type="stmt"/>
            <line num="584" count="10" type="stmt"/>
            <line num="585" count="10" type="stmt"/>
            <line num="587" count="10" type="stmt"/>
            <line num="588" count="10" type="stmt"/>
            <line num="590" count="10" type="stmt"/>
            <line num="597" count="10" type="stmt"/>
            <line num="599" count="10" type="stmt"/>
            <line num="600" count="10" type="stmt"/>
            <line num="601" count="10" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="607" count="10" type="stmt"/>
            <line num="608" count="10" type="stmt"/>
            <line num="610" count="10" type="stmt"/>
            <line num="611" count="10" type="stmt"/>
            <line num="612" count="10" type="stmt"/>
            <line num="613" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="613" type="cond"/>
            <line num="614" count="10" type="stmt"/>
            <line falsecount="10" truecount="800" num="614" type="cond"/>
            <line num="615" count="800" type="stmt"/>
            <line num="616" count="800" type="stmt"/>
            <line num="617" count="800" type="stmt"/>
            <line falsecount="0" truecount="800" num="617" type="cond"/>
            <line num="618" count="800" type="stmt"/>
            <line num="619" count="800" type="stmt"/>
            <line num="620" count="800" type="stmt"/>
            <line falsecount="294" truecount="506" num="620" type="cond"/>
            <line num="621" count="506" type="stmt"/>
            <line num="622" count="506" type="stmt"/>
            <line num="625" count="800" type="stmt"/>
            <line num="631" count="10" type="stmt"/>
            <line num="632" count="10" type="stmt"/>
            <line num="638" count="10" type="stmt"/>
            <line num="641" count="10" type="stmt"/>
            <line num="643" count="10" type="stmt"/>
            <line num="645" count="10" type="stmt"/>
            <line num="648" count="10" type="stmt"/>
            <line num="655" count="10" type="stmt"/>
            <line num="657" count="10" type="stmt"/>
            <line num="659" count="10" type="stmt"/>
            <line num="661" count="10" type="stmt"/>
            <line num="663" count="10" type="stmt"/>
            <line num="665" count="10" type="stmt"/>
            <line num="667" count="10" type="stmt"/>
            <line num="670" count="10" type="stmt"/>
            <line num="671" count="10" type="stmt"/>
            <line num="673" count="10" type="stmt"/>
            <line num="679" count="10" type="stmt"/>
            <line num="680" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="680" type="cond"/>
            <line num="681" count="10" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="690" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="690" type="cond"/>
            <line num="691" count="10" type="stmt"/>
            <line num="692" count="10" type="stmt"/>
            <line num="694" count="10" type="stmt"/>
            <line num="695" count="10" type="stmt"/>
            <line num="696" count="10" type="stmt"/>
            <line num="698" count="10" type="stmt"/>
            <line num="699" count="10" type="stmt"/>
            <line num="700" count="10" type="stmt"/>
            <line num="701" count="10" type="stmt"/>
            <line num="702" count="10" type="stmt"/>
            <line num="703" count="10" type="stmt"/>
            <line num="704" count="10" type="stmt"/>
            <line num="705" count="10" type="stmt"/>
            <line num="706" count="10" type="stmt"/>
            <line num="707" count="10" type="stmt"/>
            <line num="708" count="10" type="stmt"/>
            <line num="710" count="10" type="stmt"/>
            <line num="711" count="10" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="testGenericDelta() : void" num="724" count="10" type="method"/>
            <line num="732" count="10" type="stmt"/>
            <line num="733" count="10" type="stmt"/>
            <line num="735" count="10" type="stmt"/>
            <line num="737" count="10" type="stmt"/>
            <line num="738" count="10" type="stmt"/>
            <line num="739" count="10" type="stmt"/>
            <line num="744" count="10" type="stmt"/>
            <line num="745" count="10" type="stmt"/>
            <line num="747" count="10" type="stmt"/>
            <line num="748" count="10" type="stmt"/>
            <line num="750" count="10" type="stmt"/>
            <line num="757" count="10" type="stmt"/>
            <line num="759" count="10" type="stmt"/>
            <line num="760" count="10" type="stmt"/>
            <line num="761" count="10" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="766" count="10" type="stmt"/>
            <line num="768" count="10" type="stmt"/>
            <line num="769" count="10" type="stmt"/>
            <line num="771" count="10" type="stmt"/>
            <line num="773" count="10" type="stmt"/>
            <line num="774" count="10" type="stmt"/>
            <line num="775" count="10" type="stmt"/>
            <line num="776" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="776" type="cond"/>
            <line num="777" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Entry&lt;String, RandomVariable&gt;) : String" num="779" count="860" type="method"/>
            <line num="781" count="860" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Entry&lt;String, RandomVariable&gt;) : Double" num="785" count="860" type="method"/>
            <line num="787" count="860" type="stmt"/>
            <line num="788" count="860" type="stmt"/>
            <line num="789" count="860" type="stmt"/>
            <line falsecount="60" truecount="800" num="789" type="cond"/>
            <line num="790" count="800" type="stmt"/>
            <line num="791" count="800" type="stmt"/>
            <line falsecount="294" truecount="506" num="791" type="cond"/>
            <line num="792" count="506" type="stmt"/>
            <line num="795" count="860" type="stmt"/>
            <line num="803" count="10" type="stmt"/>
            <line num="809" count="10" type="stmt"/>
            <line num="812" count="10" type="stmt"/>
            <line num="814" count="10" type="stmt"/>
            <line num="816" count="10" type="stmt"/>
            <line num="819" count="10" type="stmt"/>
            <line num="821" count="10" type="stmt"/>
            <line num="830" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="830" type="cond"/>
            <line num="831" count="10" type="stmt"/>
            <line num="832" count="10" type="stmt"/>
            <line num="834" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(String,Double) : void" num="836" count="860" type="method"/>
            <line num="837" count="860" type="stmt"/>
            <line num="840" count="10" type="stmt"/>
            <line num="841" count="10" type="stmt"/>
            <line num="842" count="10" type="stmt"/>
            <line num="843" count="10" type="stmt"/>
            <line num="844" count="10" type="stmt"/>
            <line num="845" count="10" type="stmt"/>
            <line num="846" count="10" type="stmt"/>
            <line num="847" count="10" type="stmt"/>
            <line num="848" count="10" type="stmt"/>
            <line num="849" count="10" type="stmt"/>
            <line num="854" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="854" type="cond"/>
            <line num="855" count="2" type="stmt"/>
            <line num="856" count="2" type="stmt"/>
            <line num="858" count="2" type="stmt"/>
            <line num="860" count="2" type="stmt"/>
            <line num="861" count="2" type="stmt"/>
            <line num="863" count="2" type="stmt"/>
            <line num="865" count="2" type="stmt"/>
            <line num="866" count="2" type="stmt"/>
            <line num="867" count="2" type="stmt"/>
            <line num="869" count="2" type="stmt"/>
            <line num="870" count="2" type="stmt"/>
            <line num="871" count="2" type="stmt"/>
            <line num="873" count="2" type="stmt"/>
            <line num="875" count="2" type="stmt"/>
            <line num="877" count="2" type="stmt"/>
            <line num="878" count="2" type="stmt"/>
            <line num="880" count="2" type="stmt"/>
            <line num="882" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="882" type="cond"/>
            <line num="883" count="2" type="stmt"/>
            <line num="884" count="2" type="stmt"/>
            <line num="886" count="2" type="stmt"/>
            <line num="888" count="2" type="stmt"/>
            <line num="889" count="2" type="stmt"/>
            <line num="891" count="2" type="stmt"/>
            <line num="892" count="2" type="stmt"/>
            <line num="893" count="2" type="stmt"/>
            <line num="894" count="2" type="stmt"/>
            <line num="896" count="2" type="stmt"/>
            <line num="898" count="2" type="stmt"/>
            <line num="900" count="2" type="stmt"/>
            <line num="901" count="2" type="stmt"/>
            <line num="903" count="2" type="stmt"/>
            <line num="905" count="10" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAllocatedMemory() : long" num="912" count="90" type="method"/>
            <line num="913" count="90" type="stmt"/>
            <line num="914" count="90" type="stmt"/>
            <line num="915" count="90" type="stmt"/>
            <line num="916" count="90" type="stmt"/>
            <line num="917" count="90" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelValuationTest.java" name="LIBORMarketModelValuationTest.java">
            <metrics coveredelements="397" coveredconditionals="55" complexity="43" loc="817" coveredmethods="15" methods="15" elements="400" classes="1" ncloc="479" statements="329" conditionals="56" coveredstatements="327"/>
            <class name="LIBORMarketModelValuationTest">
               <metrics coveredelements="397" complexity="43" methods="15" testruns="80" statements="329" coveredconditionals="55" coveredmethods="15" elements="400" testfailures="0" testduration="2732.3550000000005" conditionals="56" coveredstatements="327" testpasses="80"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="63" count="4" type="method"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelValuationTest(RandomVariableFactory)" num="84" count="80" type="method"/>
            <line num="87" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="90" count="82" type="method"/>
            <line num="96" count="82" type="stmt"/>
            <line num="97" count="82" type="stmt"/>
            <line num="98" count="82" type="stmt"/>
            <line num="101" count="82" type="stmt"/>
            <line num="111" count="82" type="stmt"/>
            <line num="112" count="82" type="stmt"/>
            <line num="114" count="82" type="stmt"/>
            <line num="119" count="82" type="stmt"/>
            <line num="120" count="82" type="stmt"/>
            <line num="125" count="82" type="stmt"/>
            <line num="133" count="82" type="stmt"/>
            <line num="140" count="82" type="stmt"/>
            <line num="143" count="82" type="stmt"/>
            <line num="146" count="82" type="stmt"/>
            <line num="149" count="82" type="stmt"/>
            <line num="154" count="82" type="stmt"/>
            <line num="156" count="82" type="stmt"/>
            <line num="158" count="82" type="stmt"/>
            <line num="160" count="82" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBond() : void" num="163" count="8" type="method"/>
            <line num="169" count="8" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line num="172" count="8" type="stmt"/>
            <line num="173" count="8" type="stmt"/>
            <line num="174" count="8" type="stmt"/>
            <line falsecount="8" truecount="1288" num="174" type="cond"/>
            <line num="175" count="1288" type="stmt"/>
            <line num="178" count="1288" type="stmt"/>
            <line num="181" count="1288" type="stmt"/>
            <line num="182" count="1288" type="stmt"/>
            <line num="185" count="1288" type="stmt"/>
            <line num="186" count="1288" type="stmt"/>
            <line num="189" count="1288" type="stmt"/>
            <line num="190" count="1288" type="stmt"/>
            <line num="192" count="1288" type="stmt"/>
            <line num="195" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="199" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testFRA() : void" num="202" count="8" type="method"/>
            <line num="207" count="8" type="stmt"/>
            <line num="208" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="211" count="8" type="stmt"/>
            <line falsecount="8" truecount="1256" num="211" type="cond"/>
            <line num="213" count="1256" type="stmt"/>
            <line num="216" count="1256" type="stmt"/>
            <line num="217" count="1256" type="stmt"/>
            <line num="218" count="1256" type="stmt"/>
            <line num="219" count="1256" type="stmt"/>
            <line num="221" count="1256" type="stmt"/>
            <line falsecount="1256" truecount="1256" num="221" type="cond"/>
            <line num="222" count="1256" type="stmt"/>
            <line num="223" count="1256" type="stmt"/>
            <line num="224" count="1256" type="stmt"/>
            <line num="226" count="1256" type="stmt"/>
            <line num="228" count="1256" type="stmt"/>
            <line num="231" count="1256" type="stmt"/>
            <line num="234" count="1256" type="stmt"/>
            <line num="235" count="1256" type="stmt"/>
            <line falsecount="1256" truecount="1256" num="235" type="cond"/>
            <line num="236" count="1256" type="stmt"/>
            <line num="240" count="1256" type="stmt"/>
            <line num="243" count="1256" type="stmt"/>
            <line num="244" count="1256" type="stmt"/>
            <line num="246" count="1256" type="stmt"/>
            <line num="249" count="8" type="stmt"/>
            <line num="250" count="8" type="stmt"/>
            <line num="256" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwap() : void" num="259" count="8" type="method"/>
            <line num="264" count="8" type="stmt"/>
            <line num="265" count="8" type="stmt"/>
            <line num="267" count="8" type="stmt"/>
            <line num="268" count="8" type="stmt"/>
            <line falsecount="8" truecount="240" num="268" type="cond"/>
            <line num="270" count="240" type="stmt"/>
            <line num="273" count="240" type="stmt"/>
            <line num="274" count="240" type="stmt"/>
            <line num="275" count="240" type="stmt"/>
            <line num="276" count="240" type="stmt"/>
            <line num="278" count="240" type="stmt"/>
            <line falsecount="240" truecount="2400" num="278" type="cond"/>
            <line num="279" count="2400" type="stmt"/>
            <line num="280" count="2400" type="stmt"/>
            <line num="281" count="2400" type="stmt"/>
            <line num="283" count="240" type="stmt"/>
            <line num="285" count="240" type="stmt"/>
            <line num="288" count="240" type="stmt"/>
            <line num="291" count="240" type="stmt"/>
            <line num="292" count="240" type="stmt"/>
            <line falsecount="240" truecount="2400" num="292" type="cond"/>
            <line num="293" count="2400" type="stmt"/>
            <line num="297" count="240" type="stmt"/>
            <line num="300" count="240" type="stmt"/>
            <line num="301" count="240" type="stmt"/>
            <line num="303" count="240" type="stmt"/>
            <line num="306" count="8" type="stmt"/>
            <line num="307" count="8" type="stmt"/>
            <line num="313" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDigitalCaplet() : void" num="316" count="8" type="method"/>
            <line num="321" count="8" type="stmt"/>
            <line num="322" count="8" type="stmt"/>
            <line num="324" count="8" type="stmt"/>
            <line num="325" count="8" type="stmt"/>
            <line falsecount="8" truecount="304" num="325" type="cond"/>
            <line num="327" count="304" type="stmt"/>
            <line num="328" count="304" type="stmt"/>
            <line num="330" count="304" type="stmt"/>
            <line num="333" count="304" type="stmt"/>
            <line num="336" count="304" type="stmt"/>
            <line num="337" count="304" type="stmt"/>
            <line num="340" count="304" type="stmt"/>
            <line num="341" count="304" type="stmt"/>
            <line num="342" count="304" type="stmt"/>
            <line num="343" count="304" type="stmt"/>
            <line num="344" count="304" type="stmt"/>
            <line num="345" count="304" type="stmt"/>
            <line num="346" count="304" type="stmt"/>
            <line num="347" count="304" type="stmt"/>
            <line num="350" count="304" type="stmt"/>
            <line num="351" count="304" type="stmt"/>
            <line num="353" count="304" type="stmt"/>
            <line num="356" count="8" type="stmt"/>
            <line num="357" count="8" type="stmt"/>
            <line num="362" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="365" count="8" type="method"/>
            <line num="370" count="8" type="stmt"/>
            <line num="371" count="8" type="stmt"/>
            <line num="373" count="8" type="stmt"/>
            <line num="374" count="8" type="stmt"/>
            <line falsecount="8" truecount="272" num="374" type="cond"/>
            <line num="376" count="272" type="stmt"/>
            <line num="377" count="272" type="stmt"/>
            <line num="379" count="272" type="stmt"/>
            <line num="383" count="272" type="stmt"/>
            <line num="384" count="272" type="stmt"/>
            <line num="385" count="272" type="stmt"/>
            <line num="386" count="272" type="stmt"/>
            <line num="388" count="272" type="stmt"/>
            <line falsecount="272" truecount="1360" num="388" type="cond"/>
            <line num="389" count="1360" type="stmt"/>
            <line num="390" count="1360" type="stmt"/>
            <line num="391" count="1360" type="stmt"/>
            <line num="393" count="272" type="stmt"/>
            <line num="396" count="272" type="stmt"/>
            <line num="399" count="272" type="stmt"/>
            <line num="400" count="272" type="stmt"/>
            <line falsecount="272" truecount="1360" num="400" type="cond"/>
            <line num="401" count="1360" type="stmt"/>
            <line num="405" count="272" type="stmt"/>
            <line num="406" count="272" type="stmt"/>
            <line num="407" count="272" type="stmt"/>
            <line num="410" count="272" type="stmt"/>
            <line num="411" count="272" type="stmt"/>
            <line num="412" count="272" type="stmt"/>
            <line num="415" count="272" type="stmt"/>
            <line num="416" count="272" type="stmt"/>
            <line num="418" count="272" type="stmt"/>
            <line num="421" count="8" type="stmt"/>
            <line num="422" count="8" type="stmt"/>
            <line num="427" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCaplet() : void" num="430" count="8" type="method"/>
            <line num="435" count="8" type="stmt"/>
            <line num="436" count="8" type="stmt"/>
            <line num="438" count="8" type="stmt"/>
            <line num="439" count="8" type="stmt"/>
            <line falsecount="8" truecount="304" num="439" type="cond"/>
            <line num="441" count="304" type="stmt"/>
            <line num="442" count="304" type="stmt"/>
            <line num="444" count="304" type="stmt"/>
            <line num="448" count="304" type="stmt"/>
            <line num="449" count="304" type="stmt"/>
            <line num="450" count="304" type="stmt"/>
            <line num="451" count="304" type="stmt"/>
            <line num="453" count="304" type="stmt"/>
            <line falsecount="304" truecount="304" num="453" type="cond"/>
            <line num="454" count="304" type="stmt"/>
            <line num="455" count="304" type="stmt"/>
            <line num="456" count="304" type="stmt"/>
            <line num="458" count="304" type="stmt"/>
            <line num="461" count="304" type="stmt"/>
            <line num="464" count="304" type="stmt"/>
            <line num="465" count="304" type="stmt"/>
            <line falsecount="304" truecount="304" num="465" type="cond"/>
            <line num="466" count="304" type="stmt"/>
            <line num="470" count="304" type="stmt"/>
            <line num="471" count="304" type="stmt"/>
            <line num="472" count="304" type="stmt"/>
            <line num="475" count="304" type="stmt"/>
            <line num="476" count="304" type="stmt"/>
            <line num="477" count="304" type="stmt"/>
            <line num="480" count="304" type="stmt"/>
            <line num="481" count="304" type="stmt"/>
            <line num="483" count="304" type="stmt"/>
            <line num="486" count="8" type="stmt"/>
            <line num="487" count="8" type="stmt"/>
            <line num="492" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCapletSmile() : void" num="495" count="8" type="method"/>
            <line num="500" count="8" type="stmt"/>
            <line num="501" count="8" type="stmt"/>
            <line num="502" count="8" type="stmt"/>
            <line num="504" count="8" type="stmt"/>
            <line num="505" count="8" type="stmt"/>
            <line num="506" count="8" type="stmt"/>
            <line num="508" count="8" type="stmt"/>
            <line num="509" count="8" type="stmt"/>
            <line falsecount="8" truecount="120" num="509" type="cond"/>
            <line num="511" count="120" type="stmt"/>
            <line num="515" count="120" type="stmt"/>
            <line num="516" count="120" type="stmt"/>
            <line num="517" count="120" type="stmt"/>
            <line num="519" count="120" type="stmt"/>
            <line falsecount="120" truecount="120" num="519" type="cond"/>
            <line num="520" count="120" type="stmt"/>
            <line num="521" count="120" type="stmt"/>
            <line num="522" count="120" type="stmt"/>
            <line num="524" count="120" type="stmt"/>
            <line num="527" count="120" type="stmt"/>
            <line num="530" count="120" type="stmt"/>
            <line num="531" count="120" type="stmt"/>
            <line falsecount="120" truecount="120" num="531" type="cond"/>
            <line num="532" count="120" type="stmt"/>
            <line num="535" count="120" type="stmt"/>
            <line num="537" count="120" type="stmt"/>
            <line num="540" count="120" type="stmt"/>
            <line num="541" count="120" type="stmt"/>
            <line num="544" count="120" type="stmt"/>
            <line num="545" count="120" type="stmt"/>
            <line num="546" count="120" type="stmt"/>
            <line num="549" count="120" type="stmt"/>
            <line num="550" count="120" type="stmt"/>
            <line num="552" count="120" type="stmt"/>
            <line num="553" count="120" type="stmt"/>
            <line num="554" count="120" type="stmt"/>
            <line num="555" count="120" type="stmt"/>
            <line num="556" count="120" type="stmt"/>
            <line num="557" count="120" type="stmt"/>
            <line num="559" count="120" type="stmt"/>
            <line num="562" count="8" type="stmt"/>
            <line num="563" count="8" type="stmt"/>
            <line num="568" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaptionSmile() : void" num="571" count="8" type="method"/>
            <line num="576" count="8" type="stmt"/>
            <line num="577" count="8" type="stmt"/>
            <line num="579" count="8" type="stmt"/>
            <line num="580" count="8" type="stmt"/>
            <line num="581" count="8" type="stmt"/>
            <line num="583" count="8" type="stmt"/>
            <line num="584" count="8" type="stmt"/>
            <line falsecount="8" truecount="120" num="584" type="cond"/>
            <line num="586" count="120" type="stmt"/>
            <line num="591" count="120" type="stmt"/>
            <line num="592" count="120" type="stmt"/>
            <line num="593" count="120" type="stmt"/>
            <line num="595" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="595" type="cond"/>
            <line num="596" count="1200" type="stmt"/>
            <line num="597" count="1200" type="stmt"/>
            <line num="598" count="1200" type="stmt"/>
            <line num="600" count="120" type="stmt"/>
            <line num="603" count="120" type="stmt"/>
            <line num="606" count="120" type="stmt"/>
            <line num="607" count="120" type="stmt"/>
            <line falsecount="120" truecount="1200" num="607" type="cond"/>
            <line num="608" count="1200" type="stmt"/>
            <line num="611" count="120" type="stmt"/>
            <line num="612" count="120" type="stmt"/>
            <line num="616" count="120" type="stmt"/>
            <line num="619" count="120" type="stmt"/>
            <line num="620" count="120" type="stmt"/>
            <line num="621" count="120" type="stmt"/>
            <line num="624" count="120" type="stmt"/>
            <line num="625" count="120" type="stmt"/>
            <line num="626" count="120" type="stmt"/>
            <line num="629" count="120" type="stmt"/>
            <line num="630" count="120" type="stmt"/>
            <line num="632" count="120" type="stmt"/>
            <line num="635" count="8" type="stmt"/>
            <line num="636" count="8" type="stmt"/>
            <line num="641" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="testLIBORInArrearsConvexity() : void" num="644" count="8" type="method"/>
            <line num="649" count="8" type="stmt"/>
            <line num="650" count="8" type="stmt"/>
            <line num="652" count="8" type="stmt"/>
            <line num="653" count="8" type="stmt"/>
            <line falsecount="8" truecount="240" num="653" type="cond"/>
            <line num="654" count="240" type="stmt"/>
            <line num="655" count="240" type="stmt"/>
            <line num="656" count="240" type="stmt"/>
            <line num="657" count="240" type="stmt"/>
            <line num="658" count="240" type="stmt"/>
            <line num="660" count="240" type="stmt"/>
            <line num="661" count="240" type="stmt"/>
            <line num="662" count="240" type="stmt"/>
            <line num="664" count="240" type="stmt"/>
            <line num="665" count="240" type="stmt"/>
            <line num="666" count="240" type="stmt"/>
            <line num="668" count="240" type="stmt"/>
            <line num="670" count="240" type="stmt"/>
            <line falsecount="232" truecount="8" num="670" type="cond"/>
            <line num="671" count="8" type="stmt"/>
            <line num="673" count="240" type="stmt"/>
            <line falsecount="16" truecount="224" num="673" type="cond"/>
            <line num="674" count="224" type="stmt"/>
            <line num="677" count="8" type="stmt"/>
            <line complexity="6" visibility="public" signature="testSwaptionCalibration() : void" num="684" count="8" type="method"/>
            <line num="690" count="8" type="stmt"/>
            <line num="695" count="8" type="stmt"/>
            <line num="696" count="8" type="stmt"/>
            <line falsecount="8" truecount="64" num="696" type="cond"/>
            <line num="697" count="64" type="stmt"/>
            <line num="698" count="64" type="stmt"/>
            <line falsecount="64" truecount="288" num="698" type="cond"/>
            <line num="702" count="288" type="stmt"/>
            <line num="703" count="288" type="stmt"/>
            <line num="704" count="288" type="stmt"/>
            <line num="705" count="288" type="stmt"/>
            <line num="707" count="288" type="stmt"/>
            <line falsecount="288" truecount="2976" num="707" type="cond"/>
            <line num="708" count="2976" type="stmt"/>
            <line num="709" count="2976" type="stmt"/>
            <line num="710" count="2976" type="stmt"/>
            <line num="712" count="288" type="stmt"/>
            <line num="715" count="288" type="stmt"/>
            <line num="718" count="288" type="stmt"/>
            <line num="719" count="288" type="stmt"/>
            <line num="722" count="288" type="stmt"/>
            <line num="727" count="288" type="stmt"/>
            <line num="728" count="288" type="stmt"/>
            <line falsecount="0" truecount="288" num="728" type="cond"/>
            <line num="730" count="288" type="stmt"/>
            <line num="732" count="288" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="746" count="8" type="stmt"/>
            <line num="751" count="8" type="stmt"/>
            <line num="753" count="8" type="stmt"/>
            <line num="760" count="8" type="stmt"/>
            <line num="763" count="8" type="stmt"/>
            <line num="766" count="8" type="stmt"/>
            <line num="767" count="8" type="stmt"/>
            <line num="768" count="8" type="stmt"/>
            <line num="769" count="8" type="stmt"/>
            <line num="771" count="8" type="stmt"/>
            <line num="778" count="8" type="stmt"/>
            <line num="783" count="8" type="stmt"/>
            <line num="784" count="8" type="stmt"/>
            <line num="785" count="40" type="stmt"/>
            <line num="788" count="8" type="stmt"/>
            <line num="791" count="8" type="stmt"/>
            <line num="792" count="8" type="stmt"/>
            <line num="793" count="8" type="stmt"/>
            <line falsecount="8" truecount="288" num="793" type="cond"/>
            <line num="794" count="288" type="stmt"/>
            <line num="795" count="288" type="stmt"/>
            <line num="796" count="288" type="stmt"/>
            <line num="797" count="288" type="stmt"/>
            <line num="798" count="288" type="stmt"/>
            <line num="799" count="288" type="stmt"/>
            <line num="801" count="8" type="stmt"/>
            <line num="803" count="8" type="stmt"/>
            <line num="804" count="8" type="stmt"/>
            <line num="805" count="8" type="stmt"/>
            <line num="807" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="810" count="3384" type="method"/>
            <line num="811" count="3384" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSwapAnnuity(LIBORModelMonteCarloSimulationModel,double[]) : double" num="814" count="784" type="method"/>
            <line num="815" count="784" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/LIBORMarketModelWithTenorRefinementCalibrationTest.java" name="LIBORMarketModelWithTenorRefinementCalibrationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="1029" coveredmethods="0" methods="12" elements="516" classes="1" ncloc="734" statements="442" conditionals="62" coveredstatements="0"/>
            <class name="LIBORMarketModelWithTenorRefinementCalibrationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="12" elements="516" statements="442" conditionals="62" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORMarketModelWithTenorRefinementCalibrationTest()" num="99" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="createCalibrationItem(double,double,double,int,double,double,String,ForwardCurve,DiscountCurve) : CalibrationProduct" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSwaptionSmileCalibration() : void" num="132" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="23" visibility="public" signature="testATMSwaptionCalibration() : void" num="298" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="380" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line num="604" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="608" type="cond"/>
            <line num="609" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(double[],double[]) : void" num="627" count="0" type="method"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="647" type="cond"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="660" type="cond"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="670" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="697" type="cond"/>
            <line num="698" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="726" type="cond"/>
            <line num="727" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="741" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="746" type="cond"/>
            <line num="747" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setValues(double[],double[]) : void" num="765" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line num="784" count="0" type="stmt"/>
            <line num="785" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="785" type="cond"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Double" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="799" type="cond"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="809" type="cond"/>
            <line num="810" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="815" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="836" type="cond"/>
            <line num="837" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line num="863" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="870" type="cond"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line num="873" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line num="883" count="0" type="stmt"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCalibratedCurve() : AnalyticModel" num="891" count="0" type="method"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line num="903" count="0" type="stmt"/>
            <line num="904" count="0" type="stmt"/>
            <line num="905" count="0" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line num="908" count="0" type="stmt"/>
            <line num="909" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getCalibratedCurve(AnalyticModel,Map&lt;String, Object&gt;) : AnalyticModel" num="914" count="0" type="method"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line num="918" count="0" type="stmt"/>
            <line num="919" count="0" type="stmt"/>
            <line num="920" count="0" type="stmt"/>
            <line num="921" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line num="923" count="0" type="stmt"/>
            <line num="924" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line num="928" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line num="950" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line num="952" count="0" type="stmt"/>
            <line num="953" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line num="956" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="956" type="cond"/>
            <line num="958" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line num="961" count="0" type="stmt"/>
            <line num="962" count="0" type="stmt"/>
            <line num="963" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line num="970" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1002" count="0" type="stmt"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1008" count="0" type="stmt"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1018" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1019" type="cond"/>
            <line num="1020" count="0" type="stmt"/>
            <line num="1021" count="0" type="stmt"/>
            <line num="1023" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParSwaprate(ForwardCurve,DiscountCurve,double[]) : double" num="1026" count="0" type="method"/>
            <line num="1027" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation">
         <metrics coveredelements="481" complexity="59" loc="1130" methods="32" classes="4" statements="402" coveredconditionals="50" coveredmethods="32" elements="486" ncloc="657" files="4" conditionals="52" coveredstatements="399"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest.java" name="MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest.java">
            <metrics coveredelements="129" coveredconditionals="8" complexity="8" loc="326" coveredmethods="3" methods="3" elements="133" classes="1" ncloc="181" statements="120" conditionals="10" coveredstatements="118"/>
            <class name="MonteCarloBlackScholesModelDigitalOptionAADRegressionSensitivitiesTest">
               <metrics coveredelements="129" complexity="8" methods="3" testruns="2" statements="120" coveredconditionals="8" coveredmethods="3" elements="133" testfailures="0" testduration="9.546" conditionals="10" coveredstatements="118" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="72" testsuccess="true" count="2" testduration="4.649" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMonteCarloBlackScholesModel(RandomVariableFactory,BrownianMotion) : MonteCarloAssetModel" num="112" count="10" type="method"/>
            <line num="114" count="10" type="stmt"/>
            <line num="117" count="10" type="stmt"/>
            <line num="120" count="10" type="stmt"/>
            <line complexity="6" visibility="public" signature="getSensitivityApproximations(double,int,boolean) : Map&lt;String, Object&gt;" num="123" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="229" type="cond"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line falsecount="2" truecount="202" num="258" type="cond"/>
            <line num="259" count="202" type="stmt"/>
            <line num="260" count="202" type="stmt"/>
            <line falsecount="200" truecount="2" num="260" type="cond"/>
            <line num="261" count="2" type="stmt"/>
            <line num="263" count="200" type="stmt"/>
            <line num="264" count="200" type="stmt"/>
            <line num="265" count="200" type="stmt"/>
            <line num="266" count="200" type="stmt"/>
            <line num="267" count="200" type="stmt"/>
            <line num="268" count="200" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line falsecount="2" truecount="2" num="277" type="cond"/>
            <line num="278" count="2" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="305" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableArithmeticTest.java" name="RandomVariableDifferentiableArithmeticTest.java">
            <metrics coveredelements="54" coveredconditionals="0" complexity="7" loc="162" coveredmethods="7" methods="7" elements="54" classes="1" ncloc="89" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="RandomVariableDifferentiableArithmeticTest">
               <metrics coveredelements="54" complexity="7" methods="7" testruns="40" statements="47" coveredconditionals="0" coveredmethods="7" elements="54" testfailures="0" testduration="0.06200000000000001" conditionals="0" coveredstatements="47" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="27" count="4" type="method"/>
            <line num="29" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableArithmeticTest(RandomVariableDifferentiableFactory)" num="39" count="40" type="method"/>
            <line num="40" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSubSelf() : void" num="43" count="8" type="method"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="54" count="8" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line num="62" count="8" type="stmt"/>
            <line num="64" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticDivSelf() : void" num="67" count="8" type="method"/>
            <line num="70" count="8" type="stmt"/>
            <line num="72" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line num="81" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line num="84" count="8" type="stmt"/>
            <line num="86" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticExpLog() : void" num="91" count="8" type="method"/>
            <line num="94" count="8" type="stmt"/>
            <line num="96" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line num="103" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line num="110" count="8" type="stmt"/>
            <line num="112" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSqrtSquared() : void" num="115" count="8" type="method"/>
            <line num="118" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line num="126" count="8" type="stmt"/>
            <line num="127" count="8" type="stmt"/>
            <line num="129" count="8" type="stmt"/>
            <line num="130" count="8" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArithmeticSqrtMultSqrt() : void" num="139" count="8" type="method"/>
            <line num="142" count="8" type="stmt"/>
            <line num="144" count="8" type="stmt"/>
            <line num="150" count="8" type="stmt"/>
            <line num="151" count="8" type="stmt"/>
            <line num="153" count="8" type="stmt"/>
            <line num="154" count="8" type="stmt"/>
            <line num="156" count="8" type="stmt"/>
            <line num="158" count="8" type="stmt"/>
            <line num="160" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableTest.java" name="RandomVariableDifferentiableTest.java">
            <metrics coveredelements="248" coveredconditionals="42" complexity="38" loc="504" coveredmethods="16" methods="16" elements="249" classes="1" ncloc="303" statements="191" conditionals="42" coveredstatements="190"/>
            <class name="RandomVariableDifferentiableTest">
               <metrics coveredelements="248" complexity="38" methods="16" testruns="104" statements="191" coveredconditionals="42" coveredmethods="16" elements="249" testfailures="0" testduration="547.1059999999998" conditionals="42" coveredstatements="190" testpasses="104"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="33" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableTest(RandomVariableDifferentiableFactory)" num="45" count="104" type="method"/>
            <line num="46" count="104" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableDeterministc() : void" num="49" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line num="56" count="8" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line num="63" count="8" type="stmt"/>
            <line num="66" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStochastic() : void" num="70" count="8" type="method"/>
            <line num="74" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line num="85" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line num="95" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSqrtPow() : void" num="98" count="8" type="method"/>
            <line num="102" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSquaredPow() : void" num="113" count="8" type="method"/>
            <line num="117" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line num="123" count="8" type="stmt"/>
            <line num="124" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStandardDeviation() : void" num="128" count="8" type="method"/>
            <line num="132" count="8" type="stmt"/>
            <line num="135" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableSimpleGradient() : void" num="139" count="8" type="method"/>
            <line num="142" count="8" type="stmt"/>
            <line num="144" count="8" type="stmt"/>
            <line num="148" count="8" type="stmt"/>
            <line num="151" count="8" type="stmt"/>
            <line num="155" count="8" type="stmt"/>
            <line num="157" count="8" type="stmt"/>
            <line num="159" count="8" type="stmt"/>
            <line num="161" count="8" type="stmt"/>
            <line num="165" count="8" type="stmt"/>
            <line num="170" count="8" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line num="172" count="8" type="stmt"/>
            <line num="174" count="8" type="stmt"/>
            <line falsecount="8" truecount="16" num="174" type="cond"/>
            <line num="175" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableSimpleGradient2() : void" num="179" count="8" type="method"/>
            <line num="182" count="8" type="stmt"/>
            <line num="184" count="8" type="stmt"/>
            <line num="188" count="8" type="stmt"/>
            <line num="191" count="8" type="stmt"/>
            <line num="194" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="198" count="8" type="stmt"/>
            <line num="200" count="8" type="stmt"/>
            <line num="204" count="8" type="stmt"/>
            <line num="209" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="211" count="8" type="stmt"/>
            <line num="213" count="8" type="stmt"/>
            <line falsecount="8" truecount="16" num="213" type="cond"/>
            <line num="214" count="16" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSum() : void" num="218" count="8" type="method"/>
            <line num="222" count="8" type="stmt"/>
            <line num="224" count="8" type="stmt"/>
            <line num="226" count="8" type="stmt"/>
            <line falsecount="8" truecount="800000" num="226" type="cond"/>
            <line num="227" count="800000" type="stmt"/>
            <line num="230" count="8" type="stmt"/>
            <line num="233" count="8" type="stmt"/>
            <line num="236" count="8" type="stmt"/>
            <line num="238" count="8" type="stmt"/>
            <line num="239" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="239" type="cond"/>
            <line num="240" count="8000" type="stmt"/>
            <line num="243" count="8" type="stmt"/>
            <line num="244" count="8" type="stmt"/>
            <line num="246" count="8" type="stmt"/>
            <line num="247" count="8" type="stmt"/>
            <line num="248" count="8" type="stmt"/>
            <line num="250" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="250" type="cond"/>
            <line num="251" count="8" type="stmt"/>
            <line complexity="5" visibility="public" signature="testRandomVariableGradientBiggerSum() : void" num="256" count="8" type="method"/>
            <line num="259" count="8" type="stmt"/>
            <line num="261" count="8" type="stmt"/>
            <line num="263" count="8" type="stmt"/>
            <line num="264" count="8" type="stmt"/>
            <line num="265" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000000" num="265" type="cond"/>
            <line num="266" count="8000000" type="stmt"/>
            <line num="269" count="8" type="stmt"/>
            <line num="272" count="8" type="stmt"/>
            <line num="275" count="8" type="stmt"/>
            <line num="277" count="8" type="stmt"/>
            <line num="279" count="8" type="stmt"/>
            <line num="280" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="280" type="cond"/>
            <line num="281" count="8000" type="stmt"/>
            <line num="284" count="8" type="stmt"/>
            <line num="285" count="8" type="stmt"/>
            <line num="287" count="8" type="stmt"/>
            <line num="289" count="8" type="stmt"/>
            <line num="291" count="8" type="stmt"/>
            <line num="292" count="8" type="stmt"/>
            <line num="294" count="8" type="stmt"/>
            <line num="296" count="8" type="stmt"/>
            <line num="297" count="8" type="stmt"/>
            <line num="298" count="8" type="stmt"/>
            <line num="300" count="8" type="stmt"/>
            <line num="301" count="8" type="stmt"/>
            <line num="303" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="303" type="cond"/>
            <line num="304" count="8" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSum2() : void" num="312" count="8" type="method"/>
            <line num="316" count="8" type="stmt"/>
            <line num="318" count="8" type="stmt"/>
            <line num="320" count="8" type="stmt"/>
            <line falsecount="8" truecount="320000" num="320" type="cond"/>
            <line num="321" count="320000" type="stmt"/>
            <line num="325" count="8" type="stmt"/>
            <line num="329" count="8" type="stmt"/>
            <line num="331" count="8" type="stmt"/>
            <line num="332" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="332" type="cond"/>
            <line num="333" count="8000" type="stmt"/>
            <line num="336" count="8" type="stmt"/>
            <line num="337" count="8" type="stmt"/>
            <line num="339" count="8" type="stmt"/>
            <line num="340" count="8" type="stmt"/>
            <line num="341" count="8" type="stmt"/>
            <line num="343" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="343" type="cond"/>
            <line num="344" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRandomVariableExpectation() : void" num="349" count="8" type="method"/>
            <line num="352" count="8" type="stmt"/>
            <line num="353" count="8" type="stmt"/>
            <line num="354" count="8" type="stmt"/>
            <line num="355" count="8" type="stmt"/>
            <line num="357" count="8" type="stmt"/>
            <line num="359" count="8" type="stmt"/>
            <line num="361" count="8" type="stmt"/>
            <line num="363" count="8" type="stmt"/>
            <line num="365" count="8" type="stmt"/>
            <line num="366" count="8" type="stmt"/>
            <line num="367" count="8" type="stmt"/>
            <line num="368" count="8" type="stmt"/>
            <line num="370" count="8" type="stmt"/>
            <line num="373" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="373" type="cond"/>
            <line num="374" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="testRandomVariableGradientBigSumWithConstants() : void" num="378" count="8" type="method"/>
            <line num="382" count="8" type="stmt"/>
            <line num="385" count="8" type="stmt"/>
            <line num="386" count="8" type="stmt"/>
            <line falsecount="8" truecount="320000" num="386" type="cond"/>
            <line num="387" count="320000" type="stmt"/>
            <line num="390" count="8" type="stmt"/>
            <line num="391" count="8" type="stmt"/>
            <line num="394" count="8" type="stmt"/>
            <line num="398" count="8" type="stmt"/>
            <line num="405" count="8" type="stmt"/>
            <line num="407" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="407" type="cond"/>
            <line num="408" count="8000" type="stmt"/>
            <line num="409" count="8000" type="stmt"/>
            <line num="412" count="8" type="stmt"/>
            <line num="413" count="8" type="stmt"/>
            <line num="415" count="8" type="stmt"/>
            <line num="416" count="8" type="stmt"/>
            <line num="417" count="8" type="stmt"/>
            <line num="419" count="8" type="stmt"/>
            <line falsecount="8" truecount="8" num="419" type="cond"/>
            <line num="420" count="8" type="stmt"/>
            <line complexity="6" visibility="public" signature="testRandomVariableDifferentiableInterfaceVsFiniteDifferences() : void" num="424" count="8" type="method"/>
            <line num="427" count="8" type="stmt"/>
            <line num="428" count="8" type="stmt"/>
            <line num="430" count="8" type="stmt"/>
            <line num="432" count="8" type="stmt"/>
            <line num="435" count="8" type="stmt"/>
            <line num="436" count="8" type="stmt"/>
            <line num="438" count="8" type="stmt"/>
            <line num="439" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="439" type="cond"/>
            <line num="440" count="400" type="stmt"/>
            <line falsecount="400" truecount="40000000" num="440" type="cond"/>
            <line num="441" count="40000000" type="stmt"/>
            <line num="443" count="400" type="stmt"/>
            <line num="449" count="8" type="stmt"/>
            <line num="450" count="8" type="stmt"/>
            <line num="451" count="8" type="stmt"/>
            <line num="458" count="8" type="stmt"/>
            <line num="459" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="459" type="cond"/>
            <line num="460" count="400" type="stmt"/>
            <line num="464" count="8" type="stmt"/>
            <line num="466" count="8" type="stmt"/>
            <line num="467" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="467" type="cond"/>
            <line num="469" count="400" type="stmt"/>
            <line num="470" count="400" type="stmt"/>
            <line num="472" count="400" type="stmt"/>
            <line num="473" count="400" type="stmt"/>
            <line num="476" count="400" type="stmt"/>
            <line num="478" count="8" type="stmt"/>
            <line num="480" count="8" type="stmt"/>
            <line num="481" count="8" type="stmt"/>
            <line num="483" count="8" type="stmt"/>
            <line falsecount="8" truecount="400" num="483" type="cond"/>
            <line num="484" count="400" type="stmt"/>
            <line num="485" count="400" type="stmt"/>
            <line num="486" count="400" type="stmt"/>
            <line num="488" count="400" type="stmt"/>
            <line complexity="2" visibility="private" signature="testFunction(RandomVariable[]) : RandomVariable" num="493" count="808" type="method"/>
            <line num="495" count="808" type="stmt"/>
            <line num="496" count="808" type="stmt"/>
            <line falsecount="808" truecount="39592" num="496" type="cond"/>
            <line num="497" count="39592" type="stmt"/>
            <line num="500" count="808" type="stmt"/>
            <line num="502" count="808" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/RandomVariableDifferentiableTypePriorityTest.java" name="RandomVariableDifferentiableTypePriorityTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="6" loc="138" coveredmethods="6" methods="6" elements="50" classes="1" ncloc="84" statements="44" conditionals="0" coveredstatements="44"/>
            <class name="RandomVariableDifferentiableTypePriorityTest">
               <metrics coveredelements="50" complexity="6" methods="6" testruns="32" statements="44" coveredconditionals="0" coveredmethods="6" elements="50" testfailures="0" testduration="0.041" conditionals="0" coveredstatements="44" testpasses="32"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="27" count="4" type="method"/>
            <line num="29" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableTypePriorityTest(RandomVariableFactory,AbstractRandomVariableDifferentiableFactory)" num="40" count="32" type="method"/>
            <line num="41" count="32" type="stmt"/>
            <line num="42" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityAdd() : void" num="45" count="8" type="method"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line num="51" count="8" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
            <line num="61" count="8" type="stmt"/>
            <line num="62" count="8" type="stmt"/>
            <line num="63" count="8" type="stmt"/>
            <line num="65" count="8" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityMult() : void" num="70" count="8" type="method"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line num="76" count="8" type="stmt"/>
            <line num="82" count="8" type="stmt"/>
            <line num="83" count="8" type="stmt"/>
            <line num="84" count="8" type="stmt"/>
            <line num="86" count="8" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityCap() : void" num="93" count="8" type="method"/>
            <line num="96" count="8" type="stmt"/>
            <line num="97" count="8" type="stmt"/>
            <line num="99" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line num="107" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line num="110" count="8" type="stmt"/>
            <line num="111" count="8" type="stmt"/>
            <line num="113" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypePriorityFloor() : void" num="116" count="8" type="method"/>
            <line num="119" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line num="122" count="8" type="stmt"/>
            <line num="128" count="8" type="stmt"/>
            <line num="129" count="8" type="stmt"/>
            <line num="130" count="8" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line num="133" count="8" type="stmt"/>
            <line num="134" count="8" type="stmt"/>
            <line num="136" count="8" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.rootfinder">
         <metrics coveredelements="46" complexity="7" loc="97" methods="3" classes="1" statements="39" coveredconditionals="4" coveredmethods="3" elements="46" ncloc="55" files="1" conditionals="4" coveredstatements="39"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/rootfinder/RootFindersTest.java" name="RootFindersTest.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="7" loc="97" coveredmethods="3" methods="3" elements="46" classes="1" ncloc="55" statements="39" conditionals="4" coveredstatements="39"/>
            <class name="RootFindersTest">
               <metrics coveredelements="46" complexity="7" methods="3" testruns="2" statements="39" coveredconditionals="4" coveredmethods="3" elements="46" testfailures="0" testduration="0.069" conditionals="4" coveredstatements="39" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testRootFinders() : void" num="21" testsuccess="true" count="2" testduration="0.033" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRootFinder(RootFinder) : void" num="53" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line falsecount="6" truecount="164" num="57" type="cond"/>
            <line num="58" count="164" type="stmt"/>
            <line num="61" count="164" type="stmt"/>
            <line num="63" count="164" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="68" count="6" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line num="70" count="6" type="stmt"/>
            <line num="72" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRootFinderWithDerivative(RootFinderWithDerivative) : void" num="75" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="80" type="cond"/>
            <line num="81" count="40" type="stmt"/>
            <line num="83" count="40" type="stmt"/>
            <line num="84" count="40" type="stmt"/>
            <line num="86" count="40" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod">
         <metrics coveredelements="106" complexity="17" loc="402" methods="11" classes="4" statements="83" coveredconditionals="12" coveredmethods="11" elements="106" ncloc="235" files="4" conditionals="12" coveredstatements="83"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/BlackScholesCallOptionTest.java" name="BlackScholesCallOptionTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="2" loc="76" coveredmethods="2" methods="2" elements="20" classes="1" ncloc="41" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="BlackScholesCallOptionTest">
               <metrics coveredelements="20" complexity="2" methods="2" testruns="4" statements="18" coveredconditionals="0" coveredmethods="2" elements="20" testfailures="0" testduration="0.4670000000000001" conditionals="0" coveredstatements="18" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="35" testsuccess="true" count="2" testduration="0.171" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDigitalOption() : void" num="56" testsuccess="true" count="2" testduration="0.056" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/HestonModelCallOptionTest.java" name="HestonModelCallOptionTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="3" loc="90" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="HestonModelCallOptionTest">
               <metrics coveredelements="16" complexity="3" methods="3" testruns="4" statements="13" coveredconditionals="0" coveredmethods="3" elements="16" testfailures="0" testduration="0.7799999999999999" conditionals="0" coveredstatements="13" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="40" count="4" type="method"/>
            <line num="43" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModelCallOptionTest(FourierTransformProduct)" num="64" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="69" count="4" type="method"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/MertonJumpDiffusionCallOptionTest.java" name="MertonJumpDiffusionCallOptionTest.java">
            <metrics coveredelements="35" coveredconditionals="6" complexity="6" loc="122" coveredmethods="3" methods="3" elements="35" classes="1" ncloc="72" statements="26" conditionals="6" coveredstatements="26"/>
            <class name="MertonJumpDiffusionCallOptionTest">
               <metrics coveredelements="35" complexity="6" methods="3" testruns="6" statements="26" coveredconditionals="6" coveredmethods="3" elements="35" testfailures="0" testduration="33.326" conditionals="6" coveredstatements="26" testpasses="6"/>
            </class>
            <line complexity="2" visibility="public" signature="testMartingaleProperty() : void" num="50" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="58" type="cond"/>
            <line num="59" count="20" type="stmt"/>
            <line num="60" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMartingalePropertyMonteCarlo() : void" num="64" testsuccess="true" count="2" testduration="8.523" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="75" type="cond"/>
            <line num="76" count="20" type="stmt"/>
            <line num="77" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="81" testsuccess="true" count="2" testduration="8.155" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line falsecount="2" truecount="40" num="103" type="cond"/>
            <line num="108" count="40" type="stmt"/>
            <line num="111" count="40" type="stmt"/>
            <line num="113" count="40" type="stmt"/>
            <line num="114" count="40" type="stmt"/>
            <line num="115" count="40" type="stmt"/>
            <line num="116" count="40" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/VarianceGammaCallOptionTest.java" name="VarianceGammaCallOptionTest.java">
            <metrics coveredelements="35" coveredconditionals="6" complexity="6" loc="114" coveredmethods="3" methods="3" elements="35" classes="1" ncloc="69" statements="26" conditionals="6" coveredstatements="26"/>
            <class name="VarianceGammaCallOptionTest">
               <metrics coveredelements="35" complexity="6" methods="3" testruns="6" statements="26" coveredconditionals="6" coveredmethods="3" elements="35" testfailures="0" testduration="13.108" conditionals="6" coveredstatements="26" testpasses="6"/>
            </class>
            <line complexity="2" visibility="public" signature="testMartingaleProperty() : void" num="48" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="56" type="cond"/>
            <line num="57" count="20" type="stmt"/>
            <line num="58" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMartingalePropertyMonteCarlo() : void" num="62" testsuccess="true" count="2" testduration="3.342" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="72" type="cond"/>
            <line num="73" count="20" type="stmt"/>
            <line num="74" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="77" testsuccess="true" count="2" testduration="3.217" type="method"/>
            <line num="80" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line falsecount="2" truecount="40" num="97" type="cond"/>
            <line num="102" count="40" type="stmt"/>
            <line num="105" count="40" type="stmt"/>
            <line num="107" count="40" type="stmt"/>
            <line num="108" count="40" type="stmt"/>
            <line num="109" count="40" type="stmt"/>
            <line num="110" count="40" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.products">
         <metrics coveredelements="25" complexity="4" loc="106" methods="4" classes="1" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" ncloc="61" files="1" conditionals="0" coveredstatements="21"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/products/DepositTest.java" name="DepositTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="4" loc="106" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="61" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="DepositTest">
               <metrics coveredelements="25" complexity="4" methods="4" testruns="6" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="21" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="DepositTest()" num="27" count="6" type="method"/>
            <line num="28" count="6" type="stmt"/>
            <line num="31" count="6" type="stmt"/>
            <line num="34" count="6" type="stmt"/>
            <line num="35" count="6" type="stmt"/>
            <line num="36" count="6" type="stmt"/>
            <line num="37" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRateValueConsistency() : void" num="47" testsuccess="true" count="2" testduration="0.006" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDepositValue() : void" num="67" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEvaluationTime() : void" num="87" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.annuitymapping">
         <metrics coveredelements="116" complexity="25" loc="363" methods="9" classes="2" statements="104" coveredconditionals="6" coveredmethods="9" elements="119" ncloc="279" files="2" conditionals="6" coveredstatements="101"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/annuitymapping/AnnuityMappingTest.java" name="AnnuityMappingTest.java">
            <metrics coveredelements="80" coveredconditionals="6" complexity="15" loc="213" coveredmethods="7" methods="7" elements="81" classes="1" ncloc="163" statements="68" conditionals="6" coveredstatements="67"/>
            <class name="AnnuityMappingTest">
               <metrics coveredelements="80" complexity="15" methods="7" testruns="8" statements="68" coveredconditionals="6" coveredmethods="7" elements="81" testfailures="0" testduration="0.034" conditionals="6" coveredstatements="67" testpasses="8"/>
            </class>
            <line complexity="6" visibility="public" signature="create() : void" num="71" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="a_testMappings() : void" num="142" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="b_testSeq() : void" num="159" testsuccess="true" count="2" testduration="0.004" type="method"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="163" type="cond"/>
            <line num="164" count="100" type="stmt"/>
            <line num="165" count="100" type="stmt"/>
            <line num="166" count="100" type="stmt"/>
            <line num="168" count="100" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="c_testFirstDerivative() : void" num="173" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="176" type="cond"/>
            <line num="177" count="100" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="d_testSecondDerivative() : void" num="185" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="188" type="cond"/>
            <line num="189" count="100" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="manageOutput() : void" num="195" count="2" type="method"/>
            <line num="197" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="createVolatilityCube(String,LocalDate,double) : VolatilityCube" num="201" count="2" type="method"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/annuitymapping/NormalizingFunctionTest.java" name="NormalizingFunctionTest.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="10" loc="150" coveredmethods="2" methods="2" elements="38" classes="1" ncloc="116" statements="36" conditionals="0" coveredstatements="34"/>
            <class name="NormalizingFunctionTest">
               <metrics coveredelements="36" complexity="10" methods="2" testruns="2" statements="36" coveredconditionals="0" coveredmethods="2" elements="38" testfailures="0" testduration="0.202" conditionals="0" coveredstatements="34" testpasses="2"/>
            </class>
            <line complexity="9" visibility="public" signature="setup() : void" num="63" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExpectation() : void" num="138" testsuccess="true" count="2" testduration="0.106" type="method"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.products">
         <metrics coveredelements="349" complexity="79" loc="862" methods="22" classes="3" statements="301" coveredconditionals="37" coveredmethods="22" elements="365" ncloc="678" files="3" conditionals="42" coveredstatements="290"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/products/AnnuityDummyTest.java" name="AnnuityDummyTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="17" loc="187" coveredmethods="5" methods="5" elements="59" classes="1" ncloc="147" statements="54" conditionals="0" coveredstatements="52"/>
            <class name="AnnuityDummyTest">
               <metrics coveredelements="57" complexity="17" methods="5" testruns="6" statements="54" coveredconditionals="0" coveredmethods="5" elements="59" testfailures="0" testduration="2.141" conditionals="0" coveredstatements="52" testpasses="6"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimplified() : void" num="127" testsuccess="true" count="2" testduration="0.638" type="method"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasic() : void" num="141" testsuccess="true" count="2" testduration="0.296" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMulti() : void" num="155" testsuccess="true" count="2" testduration="0.181" type="method"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="170" count="6" type="method"/>
            <line num="171" count="6" type="stmt"/>
            <line num="182" count="6" type="stmt"/>
            <line num="183" count="6" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/products/CashSettledSwaptionTest.java" name="CashSettledSwaptionTest.java">
            <metrics coveredelements="180" coveredconditionals="27" complexity="39" loc="404" coveredmethods="11" methods="11" elements="192" classes="1" ncloc="320" statements="149" conditionals="32" coveredstatements="142"/>
            <class name="CashSettledSwaptionTest">
               <metrics coveredelements="180" complexity="39" methods="11" testruns="6" statements="149" coveredconditionals="27" coveredmethods="11" elements="192" testfailures="0" testduration="14.735" conditionals="32" coveredstatements="142" testpasses="6"/>
            </class>
            <line complexity="15" visibility="public" signature="setup() : void" num="104" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line falsecount="2" truecount="408" num="107" type="cond"/>
            <line num="108" count="408" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="172" type="cond"/>
            <line num="173" count="200" type="stmt"/>
            <line complexity="1" visibility="public" signature="initiate() : void" num="178" count="6" type="method"/>
            <line num="182" count="6" type="stmt"/>
            <line num="183" count="6" type="stmt"/>
            <line num="184" count="6" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_testSimplifiedLinear() : void" num="189" testsuccess="true" count="2" testduration="1.861" type="method"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="202" type="cond"/>
            <line num="203" count="200" type="stmt"/>
            <line num="204" count="200" type="stmt"/>
            <line num="206" count="200" type="stmt"/>
            <line num="207" count="200" type="stmt"/>
            <line num="209" count="200" type="stmt"/>
            <line num="212" count="200" type="stmt"/>
            <line num="213" count="200" type="stmt"/>
            <line num="214" count="200" type="stmt"/>
            <line num="215" count="200" type="stmt"/>
            <line complexity="2" visibility="public" signature="b_testBasicPiterbarg() : void" num="220" testsuccess="true" count="2" testduration="2.824" type="method"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="233" type="cond"/>
            <line num="234" count="200" type="stmt"/>
            <line num="235" count="200" type="stmt"/>
            <line num="237" count="200" type="stmt"/>
            <line num="238" count="200" type="stmt"/>
            <line num="240" count="200" type="stmt"/>
            <line num="243" count="200" type="stmt"/>
            <line num="244" count="200" type="stmt"/>
            <line num="245" count="200" type="stmt"/>
            <line num="246" count="200" type="stmt"/>
            <line complexity="2" visibility="public" signature="c_testMultiPiterbarg() : void" num="251" testsuccess="true" count="2" testduration="2.71" type="method"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="264" type="cond"/>
            <line num="265" count="200" type="stmt"/>
            <line num="266" count="200" type="stmt"/>
            <line num="268" count="200" type="stmt"/>
            <line num="269" count="200" type="stmt"/>
            <line num="271" count="200" type="stmt"/>
            <line num="274" count="200" type="stmt"/>
            <line num="275" count="200" type="stmt"/>
            <line num="276" count="200" type="stmt"/>
            <line num="277" count="200" type="stmt"/>
            <line complexity="8" visibility="public" signature="gatherOutput() : void" num="282" count="6" type="method"/>
            <line num="286" count="6" type="stmt"/>
            <line num="287" count="6" type="stmt"/>
            <line num="288" count="6" type="stmt"/>
            <line falsecount="6" truecount="600" num="288" type="cond"/>
            <line num="289" count="600" type="stmt"/>
            <line num="293" count="6" type="stmt"/>
            <line num="294" count="6" type="stmt"/>
            <line num="295" count="6" type="stmt"/>
            <line num="298" count="6" type="stmt"/>
            <line num="299" count="6" type="stmt"/>
            <line num="300" count="6" type="stmt"/>
            <line falsecount="6" truecount="600" num="300" type="cond"/>
            <line num="301" count="600" type="stmt"/>
            <line num="303" count="600" type="stmt"/>
            <line num="304" count="600" type="stmt"/>
            <line num="305" count="600" type="stmt"/>
            <line num="307" count="600" type="stmt"/>
            <line num="310" count="600" type="stmt"/>
            <line num="312" count="600" type="stmt"/>
            <line num="316" count="6" type="stmt"/>
            <line falsecount="6" truecount="1224" num="316" type="cond"/>
            <line num="317" count="1224" type="stmt"/>
            <line num="320" count="6" type="stmt"/>
            <line num="321" count="600" type="stmt"/>
            <line falsecount="600" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="6" type="stmt"/>
            <line num="326" count="600" type="stmt"/>
            <line falsecount="600" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="6" type="stmt"/>
            <line num="331" count="600" type="stmt"/>
            <line falsecount="600" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="335" count="6" type="stmt"/>
            <line num="336" count="600" type="stmt"/>
            <line falsecount="600" truecount="0" num="336" type="cond"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="printResults() : void" num="342" count="2" type="method"/>
            <line num="344" count="2" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line falsecount="2" truecount="408" num="345" type="cond"/>
            <line num="346" count="408" type="stmt"/>
            <line falsecount="406" truecount="2" num="346" type="cond"/>
            <line num="347" count="2" type="stmt"/>
            <line num="349" count="408" type="stmt"/>
            <line num="351" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="358" count="6" type="method"/>
            <line num="359" count="6" type="stmt"/>
            <line num="370" count="6" type="stmt"/>
            <line num="371" count="6" type="stmt"/>
            <line num="373" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="valueReceiverPSS(double,VolatilityCubeModel,double,double,Schedule,String) : double" num="376" count="600" type="method"/>
            <line num="378" count="600" type="stmt"/>
            <line complexity="1" visibility="private" signature="valuePayerPSS(double,VolatilityCubeModel,double,double,Schedule,String) : double" num="381" count="1200" type="method"/>
            <line num="382" count="1200" type="stmt"/>
            <line num="383" count="1200" type="stmt"/>
            <line num="384" count="1200" type="stmt"/>
            <line num="385" count="1200" type="stmt"/>
            <line complexity="3" visibility="private" signature="cashFunction(double) : double" num="389" count="6" type="method"/>
            <line num="391" count="6" type="stmt"/>
            <line num="392" count="6" type="stmt"/>
            <line num="393" count="6" type="stmt"/>
            <line falsecount="6" truecount="120" num="393" type="cond"/>
            <line num="394" count="120" type="stmt"/>
            <line num="396" count="6" type="stmt"/>
            <line num="398" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/products/ConstantMaturitySwapTest.java" name="ConstantMaturitySwapTest.java">
            <metrics coveredelements="112" coveredconditionals="10" complexity="23" loc="271" coveredmethods="6" methods="6" elements="114" classes="1" ncloc="211" statements="98" conditionals="10" coveredstatements="96"/>
            <class name="ConstantMaturitySwapTest">
               <metrics coveredelements="112" complexity="23" methods="6" testruns="6" statements="98" coveredconditionals="10" coveredmethods="6" elements="114" testfailures="0" testduration="14.654999999999998" conditionals="10" coveredstatements="96" testpasses="6"/>
            </class>
            <line complexity="14" visibility="public" signature="setup() : void" num="77" count="2" type="method"/>
            <line num="80" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="146" type="cond"/>
            <line num="147" count="100" type="stmt"/>
            <line num="148" count="100" type="stmt"/>
            <line num="149" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSimplifiedLinear() : void" num="153" testsuccess="true" count="2" testduration="1.692" type="method"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="173" type="cond"/>
            <line num="174" count="100" type="stmt"/>
            <line num="175" count="100" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBasicPiterbarg() : void" num="181" testsuccess="true" count="2" testduration="3.009" type="method"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="201" type="cond"/>
            <line num="202" count="100" type="stmt"/>
            <line num="203" count="100" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiPiterbarg() : void" num="209" testsuccess="true" count="2" testduration="2.804" type="method"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="229" type="cond"/>
            <line num="230" count="100" type="stmt"/>
            <line num="231" count="100" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="gatherOutput() : void" num="237" count="6" type="method"/>
            <line num="241" count="6" type="stmt"/>
            <line num="242" count="6" type="stmt"/>
            <line num="243" count="6" type="stmt"/>
            <line num="245" count="6" type="stmt"/>
            <line num="246" count="6" type="stmt"/>
            <line num="247" count="6" type="stmt"/>
            <line falsecount="6" truecount="300" num="247" type="cond"/>
            <line num="248" count="300" type="stmt"/>
            <line num="250" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildCube(AnnuityMappingType) : VolatilityCubeModel" num="254" count="6" type="method"/>
            <line num="255" count="6" type="stmt"/>
            <line num="266" count="6" type="stmt"/>
            <line num="267" count="6" type="stmt"/>
            <line num="269" count="6" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.calibration">
         <metrics coveredelements="118" complexity="4" loc="362" methods="4" classes="2" statements="114" coveredconditionals="0" coveredmethods="4" elements="118" ncloc="234" files="2" conditionals="0" coveredstatements="114"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/calibration/HestonDaxCalibrationTest.java" name="HestonDaxCalibrationTest.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="2" loc="185" coveredmethods="2" methods="2" elements="62" classes="1" ncloc="120" statements="60" conditionals="0" coveredstatements="60"/>
            <class name="HestonDaxCalibrationTest">
               <metrics coveredelements="62" complexity="2" methods="2" testruns="2" statements="60" coveredconditionals="0" coveredmethods="2" elements="62" testfailures="0" testduration="4.159000000000001" conditionals="0" coveredstatements="60" testpasses="2"/>
            </class>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="43" count="6" type="method"/>
            <line num="44" count="6" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="47" count="6" type="stmt"/>
            <line num="48" count="6" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="53" testsuccess="true" count="2" testduration="2.027" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="178" count="42" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/calibration/VarianceGammaDaxCalibrationTest.java" name="VarianceGammaDaxCalibrationTest.java">
            <metrics coveredelements="56" coveredconditionals="0" complexity="2" loc="177" coveredmethods="2" methods="2" elements="56" classes="1" ncloc="114" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="VarianceGammaDaxCalibrationTest">
               <metrics coveredelements="56" complexity="2" methods="2" testruns="2" statements="54" coveredconditionals="0" coveredmethods="2" elements="56" testfailures="0" testduration="3.231" conditionals="0" coveredstatements="54" testpasses="2"/>
            </class>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="43" count="6" type="method"/>
            <line num="44" count="6" type="stmt"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="47" count="6" type="stmt"/>
            <line num="48" count="6" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="53" testsuccess="true" count="2" testduration="1.64" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="42" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time">
         <metrics coveredelements="251" complexity="45" loc="635" methods="36" classes="4" statements="197" coveredconditionals="18" coveredmethods="36" elements="251" ncloc="424" files="4" conditionals="18" coveredstatements="197"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/DayCountConventionTest.java" name="DayCountConventionTest.java">
            <metrics coveredelements="95" coveredconditionals="6" complexity="11" loc="214" coveredmethods="8" methods="8" elements="95" classes="1" ncloc="143" statements="81" conditionals="6" coveredstatements="81"/>
            <class name="DayCountConventionTest">
               <metrics coveredelements="95" complexity="11" methods="8" testruns="16" statements="81" coveredconditionals="6" coveredmethods="8" elements="95" testfailures="0" testduration="0.053000000000000005" conditionals="6" coveredstatements="81" testpasses="16"/>
            </class>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_ACT_ISDA() : void" num="30" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConventionAdditivity_ACT_ACT_ISDA() : void" num="67" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_30E_360() : void" num="78" testsuccess="true" count="2" testduration="0.006" type="method"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_365() : void" num="95" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_360() : void" num="108" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDayCountConvention_ACT_ACT_YEARFRAC() : void" num="121" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDayCountConventionAdditivity_ACT_ACT_ICMA() : void" num="137" testsuccess="true" count="2" testduration="0.009" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line falsecount="2" truecount="240" num="141" type="cond"/>
            <line num="142" count="240" type="stmt"/>
            <line num="143" count="240" type="stmt"/>
            <line num="144" count="240" type="stmt"/>
            <line num="146" count="240" type="stmt"/>
            <line num="147" count="240" type="stmt"/>
            <line num="148" count="240" type="stmt"/>
            <line num="150" count="240" type="stmt"/>
            <line num="151" count="240" type="stmt"/>
            <line num="152" count="240" type="stmt"/>
            <line num="154" count="240" type="stmt"/>
            <line num="155" count="240" type="stmt"/>
            <line num="156" count="240" type="stmt"/>
            <line num="157" count="240" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDayCountConventionConsistency_ACT_ACT_ICMA_versus_ACT_ACT_ISDA() : void" num="168" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="2" truecount="240" num="174" type="cond"/>
            <line num="175" count="240" type="stmt"/>
            <line num="176" count="240" type="stmt"/>
            <line num="177" count="240" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="207" type="cond"/>
            <line num="208" count="18" type="stmt"/>
            <line num="209" count="18" type="stmt"/>
            <line num="211" count="18" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/FloatingpointDateTest.java" name="FloatingpointDateTest.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="7" loc="68" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="41" statements="19" conditionals="8" coveredstatements="19"/>
            <class name="FloatingpointDateTest">
               <metrics coveredelements="30" complexity="7" methods="3" testruns="6" statements="19" coveredconditionals="8" coveredmethods="3" elements="30" testfailures="0" testduration="2.839" conditionals="8" coveredstatements="19" testpasses="6"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="22" testsuccess="true" count="2" testduration="0.011" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="25" type="cond"/>
            <line num="26" count="2000" type="stmt"/>
            <line num="28" count="2000" type="stmt"/>
            <line num="29" count="2000" type="stmt"/>
            <line num="31" count="2000" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalDateLocalDateTimeConsistency() : void" num="38" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="41" type="cond"/>
            <line num="42" count="2000" type="stmt"/>
            <line num="44" count="2000" type="stmt"/>
            <line num="45" count="2000" type="stmt"/>
            <line num="47" count="2000" type="stmt"/>
            <line complexity="3" visibility="public" signature="testLocalDateTime() : void" num="54" testsuccess="true" count="2" testduration="1.447" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line falsecount="2" truecount="1000" num="57" type="cond"/>
            <line num="58" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="12343000" num="58" type="cond"/>
            <line num="59" count="12343000" type="stmt"/>
            <line num="61" count="12343000" type="stmt"/>
            <line num="62" count="12343000" type="stmt"/>
            <line num="64" count="12343000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/ScheduleGeneratorTest.java" name="ScheduleGeneratorTest.java">
            <metrics coveredelements="30" coveredconditionals="4" complexity="5" loc="121" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="88" statements="23" conditionals="4" coveredstatements="23"/>
            <class name="ScheduleGeneratorTest">
               <metrics coveredelements="30" complexity="5" methods="3" testruns="6" statements="23" coveredconditionals="4" coveredmethods="3" elements="30" testfailures="0" testduration="0.058" conditionals="4" coveredstatements="23" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testScheduleGeneratorMetaData() : void" num="26" testsuccess="true" count="2" testduration="0.01" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeriodStartPeriodEnd() : void" num="67" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="80" type="stmt"/>
            <line num="87" count="80" type="stmt"/>
            <line falsecount="2" truecount="78" num="87" type="cond"/>
            <line num="88" count="78" type="stmt"/>
            <line num="90" count="80" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPeriodLength() : void" num="94" testsuccess="true" count="2" testduration="0.022" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line falsecount="2" truecount="80" num="113" type="cond"/>
            <line num="114" count="80" type="stmt"/>
            <line num="115" count="80" type="stmt"/>
            <line num="116" count="80" type="stmt"/>
            <line num="117" count="80" type="stmt"/>
            <line num="118" count="80" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/TimeDiscretizationTest.java" name="TimeDiscretizationTest.java">
            <metrics coveredelements="96" coveredconditionals="0" complexity="22" loc="232" coveredmethods="22" methods="22" elements="96" classes="1" ncloc="152" statements="74" conditionals="0" coveredstatements="74"/>
            <class name="TimeDiscretizationTest">
               <metrics coveredelements="96" complexity="22" methods="22" testruns="40" statements="74" coveredconditionals="0" coveredmethods="22" elements="96" testfailures="0" testduration="0.05900000000000001" conditionals="0" coveredstatements="74" testpasses="40"/>
            </class>
            <line complexity="1" visibility="private" signature="getHalfTickMore(double) : double" num="20" count="20" type="method"/>
            <line num="21" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="40" type="method"/>
            <line num="26" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithUnboxedArrayAtDefaultTickSize() : void" num="29" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtDefaultTickSize() : void" num="40" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtBigTickSize() : void" num="51" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithBoxedArrayAtSmallTickSize() : void" num="62" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtDefaultTickSize() : void" num="73" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtBigTickSize() : void" num="84" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithSetAtSmallTickSize() : void" num="95" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtDefaultTickSize() : void" num="106" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtBigTickSize() : void" num="117" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithArrayListAtSmallTickSize() : void" num="128" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithNumberOfSteps() : void" num="139" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithNumberOfStepsSmallerThanTickSize() : void" num="146" testsuccess="true" count="2" testduration="0.019" type="method"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithIntervalShortStubAtEnd() : void" num="153" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructWithIntervalShortStubAtFront() : void" num="160" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="162" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithNoDuplicates() : void" num="167" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithSubTickDuplicates() : void" num="178" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnionWithDifferentTickSizes() : void" num="189" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithNoDuplicates() : void" num="200" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="203" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithSubTickDuplicates() : void" num="211" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="214" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionWithDifferentTickSizes() : void" num="222" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.stochastic">
         <metrics coveredelements="104" complexity="20" loc="181" methods="20" classes="1" statements="84" coveredconditionals="0" coveredmethods="20" elements="104" ncloc="149" files="1" conditionals="0" coveredstatements="84"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/stochastic/ScalarTest.java" name="ScalarTest.java">
            <metrics coveredelements="104" coveredconditionals="0" complexity="20" loc="181" coveredmethods="20" methods="20" elements="104" classes="1" ncloc="149" statements="84" conditionals="0" coveredstatements="84"/>
            <class name="ScalarTest">
               <metrics coveredelements="104" complexity="20" methods="20" testruns="40" statements="84" coveredconditionals="0" coveredmethods="20" elements="104" testfailures="0" testduration="0.022000000000000002" conditionals="0" coveredstatements="84" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="testAbs() : void" num="8" testsuccess="true" count="2" testduration="0.008" type="method"/>
            <line num="10" count="2" type="stmt"/>
            <line num="11" count="2" type="stmt"/>
            <line num="12" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAccrue() : void" num="15" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="27" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddProduct() : void" num="34" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddRatio() : void" num="46" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayOf() : void" num="58" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCap() : void" num="66" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChoose() : void" num="75" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDiscount() : void" num="85" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDiv() : void" num="96" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="104" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloor() : void" num="111" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetAverage() : void" num="121" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvert() : void" num="127" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsNaN() : void" num="134" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMult() : void" num="142" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSqrt() : void" num="149" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSquared() : void" num="157" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSub() : void" num="164" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubRatio() : void" num="173" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor.xmlparser">
         <metrics coveredelements="30" complexity="16" loc="256" methods="9" classes="2" statements="87" coveredconditionals="0" coveredmethods="6" elements="100" ncloc="197" files="2" conditionals="4" coveredstatements="24"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/xmlparser/FIPXMLParserTest.java" name="FIPXMLParserTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="96" coveredmethods="3" methods="4" elements="40" classes="1" ncloc="71" statements="34" conditionals="2" coveredstatements="10"/>
            <class name="FIPXMLParserTest">
               <metrics coveredelements="13" complexity="7" methods="4" testruns="2" statements="34" coveredconditionals="0" coveredmethods="3" elements="40" testfailures="0" testduration="0.096" conditionals="2" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="26" count="4" type="method"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FIPXMLParserTest(File)" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGetSwapProductDescriptor() : void" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/xmlparser/FPMLParserTest.java" name="FPMLParserTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="9" loc="160" coveredmethods="3" methods="5" elements="60" classes="1" ncloc="126" statements="53" conditionals="2" coveredstatements="14"/>
            <class name="FPMLParserTest">
               <metrics coveredelements="17" complexity="9" methods="5" testruns="2" statements="53" coveredconditionals="0" coveredmethods="3" elements="60" testfailures="0" testduration="0.14100000000000001" conditionals="2" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="44" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPMLParserTest(File)" num="82" count="2" type="method"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGetSwapProductDescriptor() : void" num="87" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getForwardCurve(String,LocalDate) : ForwardCurveInterpolation" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves.locallinearregression">
         <metrics coveredelements="19" complexity="8" loc="86" methods="3" classes="1" statements="33" coveredconditionals="3" coveredmethods="3" elements="42" ncloc="58" files="1" conditionals="6" coveredstatements="13"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/locallinearregression/CurveEstimationTest.java" name="CurveEstimationTest.java">
            <metrics coveredelements="19" coveredconditionals="3" complexity="8" loc="86" coveredmethods="3" methods="3" elements="42" classes="1" ncloc="58" statements="33" conditionals="6" coveredstatements="13"/>
            <class name="CurveEstimationTest">
               <metrics coveredelements="19" complexity="8" methods="3" testruns="4" statements="33" coveredconditionals="3" coveredmethods="3" elements="42" testfailures="0" testduration="0.037000000000000005" conditionals="6" coveredstatements="13" testpasses="4"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 21()" num="21" count="2" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLinearInterpolation() : void" num="41" testsuccess="true" count="2" testduration="0.014" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="48" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRegressionMatrix() : void" num="65" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="70" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward">
         <metrics coveredelements="407" complexity="77" loc="973" methods="45" classes="12" statements="317" coveredconditionals="54" coveredmethods="44" elements="418" ncloc="671" files="2" conditionals="56" coveredstatements="309"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADPerformanceTest.java" name="RandomVariableDifferentiableAADPerformanceTest.java">
            <metrics coveredelements="273" coveredconditionals="54" complexity="64" loc="660" coveredmethods="31" methods="32" elements="284" classes="11" ncloc="486" statements="196" conditionals="56" coveredstatements="188"/>
            <class name="RandomVariableDifferentiableAADPerformanceTest">
               <metrics coveredelements="106" complexity="20" methods="5" testruns="36" statements="81" coveredconditionals="26" coveredmethods="4" elements="114" testfailures="0" testduration="1004.3850000000001" conditionals="28" coveredstatements="76" testpasses="36"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionBigSum">
               <metrics coveredelements="12" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionGeometricSum">
               <metrics coveredelements="18" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionSumOfProducts">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionSumOfProductsWithAddAndMult">
               <metrics coveredelements="20" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="20" statements="11" conditionals="6" coveredstatements="11"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionAccrue">
               <metrics coveredelements="14" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionAccrueWithAddAndMult">
               <metrics coveredelements="14" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloEuropeanOption">
               <metrics coveredelements="20" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="21" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloAsianOption">
               <metrics coveredelements="20" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="21" statements="18" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="RandomVariableDifferentiableAADPerformanceTest.TestFunctionMonteCarloBermudanOption">
               <metrics coveredelements="29" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="30" statements="25" conditionals="2" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="77" count="8" type="method"/>
            <line num="79" count="8" type="stmt"/>
            <line num="80" count="8" type="stmt"/>
            <line num="81" count="8" type="stmt"/>
            <line falsecount="8" truecount="60000" num="81" type="cond"/>
            <line num="82" count="60000" type="stmt"/>
            <line num="84" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="87" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="94" count="4" type="method"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="101" count="8" type="method"/>
            <line num="103" count="8" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line falsecount="8" truecount="8000" num="105" type="cond"/>
            <line num="106" count="8000" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="111" count="4" type="method"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="115" type="cond"/>
            <line num="116" count="4000" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="121" count="4" type="method"/>
            <line num="122" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="128" count="404" type="method"/>
            <line num="130" count="404" type="stmt"/>
            <line num="131" count="404" type="stmt"/>
            <line falsecount="404" truecount="2020" num="131" type="cond"/>
            <line num="132" count="2020" type="stmt"/>
            <line falsecount="2020" truecount="202000" num="132" type="cond"/>
            <line num="133" count="202000" type="stmt"/>
            <line num="136" count="404" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="139" count="4" type="method"/>
            <line num="141" count="4" type="stmt"/>
            <line num="142" count="4" type="stmt"/>
            <line falsecount="4" truecount="20" num="142" type="cond"/>
            <line num="144" count="20" type="stmt"/>
            <line num="145" count="20" type="stmt"/>
            <line num="148" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="151" count="4" type="method"/>
            <line num="152" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="157" count="44" type="method"/>
            <line num="159" count="44" type="stmt"/>
            <line num="160" count="44" type="stmt"/>
            <line falsecount="44" truecount="440" num="160" type="cond"/>
            <line num="161" count="440" type="stmt"/>
            <line falsecount="440" truecount="4400" num="161" type="cond"/>
            <line num="162" count="4400" type="stmt"/>
            <line num="165" count="44" type="stmt"/>
            <line complexity="2" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="168" count="4" type="method"/>
            <line num="170" count="4" type="stmt"/>
            <line num="171" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="171" type="cond"/>
            <line num="173" count="40" type="stmt"/>
            <line num="174" count="40" type="stmt"/>
            <line num="177" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="180" count="4" type="method"/>
            <line num="181" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="186" count="404" type="method"/>
            <line num="188" count="404" type="stmt"/>
            <line num="189" count="404" type="stmt"/>
            <line falsecount="404" truecount="404" num="189" type="cond"/>
            <line num="190" count="404" type="stmt"/>
            <line falsecount="404" truecount="40400" num="190" type="cond"/>
            <line num="191" count="40400" type="stmt"/>
            <line num="194" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="197" count="4" type="method"/>
            <line num="199" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="202" count="4" type="method"/>
            <line num="203" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="209" count="404" type="method"/>
            <line num="211" count="404" type="stmt"/>
            <line num="212" count="404" type="stmt"/>
            <line falsecount="404" truecount="404" num="212" type="cond"/>
            <line num="213" count="404" type="stmt"/>
            <line falsecount="404" truecount="40400" num="213" type="cond"/>
            <line num="214" count="40400" type="stmt"/>
            <line num="217" count="404" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="220" count="4" type="method"/>
            <line num="222" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="225" count="4" type="method"/>
            <line num="226" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="252" count="16" type="method"/>
            <line num="254" count="16" type="stmt"/>
            <line num="257" count="16" type="stmt"/>
            <line num="258" count="16" type="stmt"/>
            <line num="259" count="16" type="stmt"/>
            <line num="262" count="16" type="stmt"/>
            <line num="265" count="16" type="stmt"/>
            <line num="268" count="16" type="stmt"/>
            <line num="271" count="16" type="stmt"/>
            <line num="276" count="16" type="stmt"/>
            <line num="277" count="16" type="stmt"/>
            <line num="278" count="16" type="stmt"/>
            <line num="279" count="16" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="285" count="16" type="stmt"/>
            <line num="286" count="16" type="stmt"/>
            <line num="288" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="291" count="4" type="method"/>
            <line num="293" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="296" count="4" type="method"/>
            <line num="297" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="323" count="16" type="method"/>
            <line num="325" count="16" type="stmt"/>
            <line num="328" count="16" type="stmt"/>
            <line num="329" count="16" type="stmt"/>
            <line num="330" count="16" type="stmt"/>
            <line num="333" count="16" type="stmt"/>
            <line num="336" count="16" type="stmt"/>
            <line num="339" count="16" type="stmt"/>
            <line num="342" count="16" type="stmt"/>
            <line num="347" count="16" type="stmt"/>
            <line num="348" count="16" type="stmt"/>
            <line num="349" count="16" type="stmt"/>
            <line num="350" count="16" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="16" type="stmt"/>
            <line num="357" count="16" type="stmt"/>
            <line num="359" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="362" count="4" type="method"/>
            <line num="364" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="367" count="4" type="method"/>
            <line num="368" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="value(RandomVariableFactory,RandomVariable[],RandomVariable[]) : RandomVariable" num="389" count="16" type="method"/>
            <line num="391" count="16" type="stmt"/>
            <line num="394" count="16" type="stmt"/>
            <line num="395" count="16" type="stmt"/>
            <line num="396" count="16" type="stmt"/>
            <line num="399" count="16" type="stmt"/>
            <line num="402" count="16" type="stmt"/>
            <line num="405" count="16" type="stmt"/>
            <line num="408" count="16" type="stmt"/>
            <line num="413" count="16" type="stmt"/>
            <line num="414" count="16" type="stmt"/>
            <line num="415" count="16" type="stmt"/>
            <line num="416" count="16" type="stmt"/>
            <line falsecount="16" truecount="800" num="416" type="cond"/>
            <line num="417" count="800" type="stmt"/>
            <line num="418" count="800" type="stmt"/>
            <line num="419" count="800" type="stmt"/>
            <line num="421" count="16" type="stmt"/>
            <line num="422" count="16" type="stmt"/>
            <line num="423" count="16" type="stmt"/>
            <line num="424" count="16" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="429" count="16" type="stmt"/>
            <line num="430" count="16" type="stmt"/>
            <line num="431" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="derivative(RandomVariable[],RandomVariable[]) : RandomVariable[]" num="434" count="4" type="method"/>
            <line num="436" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPeakMemory() : long" num="439" count="4" type="method"/>
            <line num="440" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="510" count="4" type="method"/>
            <line num="512" count="4" type="stmt"/>
            <line num="513" count="4" type="stmt"/>
            <line falsecount="4" truecount="36" num="513" type="cond"/>
            <line num="514" count="36" type="stmt"/>
            <line falsecount="36" truecount="72" num="514" type="cond"/>
            <line num="515" count="72" type="stmt"/>
            <line num="516" count="72" type="stmt"/>
            <line num="523" count="72" type="stmt"/>
            <line num="524" count="72" type="stmt"/>
            <line num="525" count="72" type="stmt"/>
            <line num="528" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableDifferentiableAADPerformanceTest(String,Object[],RandomVariableFactory)" num="535" count="36" type="method"/>
            <line num="536" count="36" type="stmt"/>
            <line num="537" count="36" type="stmt"/>
            <line complexity="14" visibility="public" signature="test() : void" num="540" count="36" type="method"/>
            <line num="543" count="36" type="stmt"/>
            <line num="544" count="36" type="stmt"/>
            <line num="545" count="36" type="stmt"/>
            <line num="546" count="36" type="stmt"/>
            <line num="547" count="36" type="stmt"/>
            <line num="552" count="36" type="stmt"/>
            <line num="553" count="36" type="stmt"/>
            <line num="554" count="36" type="stmt"/>
            <line falsecount="36" truecount="240012" num="554" type="cond"/>
            <line num="555" count="240012" type="stmt"/>
            <line num="557" count="36" type="stmt"/>
            <line num="558" count="36" type="stmt"/>
            <line falsecount="36" truecount="160020" num="558" type="cond"/>
            <line num="559" count="160020" type="stmt"/>
            <line num="562" count="36" type="stmt"/>
            <line num="563" count="36" type="stmt"/>
            <line num="564" count="36" type="stmt"/>
            <line falsecount="36" truecount="1284" num="564" type="cond"/>
            <line num="565" count="1284" type="stmt"/>
            <line falsecount="1248" truecount="36" num="565" type="cond"/>
            <line num="566" count="36" type="stmt"/>
            <line num="569" count="1248" type="stmt"/>
            <line num="572" count="36" type="stmt"/>
            <line falsecount="36" truecount="1252" num="572" type="cond"/>
            <line num="573" count="1252" type="stmt"/>
            <line falsecount="440" truecount="812" num="573" type="cond"/>
            <line num="574" count="812" type="stmt"/>
            <line num="577" count="440" type="stmt"/>
            <line num="581" count="36" type="stmt"/>
            <line num="582" count="36" type="stmt"/>
            <line num="583" count="36" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="592" count="36" type="stmt"/>
            <line num="593" count="36" type="stmt"/>
            <line num="595" count="36" type="stmt"/>
            <line num="597" count="36" type="stmt"/>
            <line num="603" count="36" type="stmt"/>
            <line num="605" count="36" type="stmt"/>
            <line num="606" count="36" type="stmt"/>
            <line falsecount="18" truecount="18" num="606" type="cond"/>
            <line num="607" count="18" type="stmt"/>
            <line num="608" count="18" type="stmt"/>
            <line num="609" count="18" type="stmt"/>
            <line falsecount="18" truecount="642" num="609" type="cond"/>
            <line num="610" count="642" type="stmt"/>
            <line num="614" count="18" type="stmt"/>
            <line num="615" count="18" type="stmt"/>
            <line num="616" count="18" type="stmt"/>
            <line num="617" count="18" type="stmt"/>
            <line num="618" count="18" type="stmt"/>
            <line falsecount="18" truecount="642" num="618" type="cond"/>
            <line num="619" count="642" type="stmt"/>
            <line num="620" count="642" type="stmt"/>
            <line num="621" count="642" type="stmt"/>
            <line num="622" count="642" type="stmt"/>
            <line num="623" count="642" type="stmt"/>
            <line num="627" count="36" type="stmt"/>
            <line num="628" count="36" type="stmt"/>
            <line num="630" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="630" type="cond"/>
            <line num="631" count="0" type="stmt"/>
            <line num="633" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="633" type="cond"/>
            <line num="634" count="0" type="stmt"/>
            <line num="637" count="36" type="stmt"/>
            <line num="639" count="36" type="stmt"/>
            <line num="640" count="36" type="stmt"/>
            <line num="641" count="36" type="stmt"/>
            <line num="642" count="36" type="stmt"/>
            <line num="643" count="36" type="stmt"/>
            <line num="644" count="36" type="stmt"/>
            <line num="646" count="36" type="stmt"/>
            <line num="648" count="36" type="stmt"/>
            <line falsecount="20" truecount="16" num="648" type="cond"/>
            <line num="649" count="16" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAllocatedMemory() : long" num="653" count="168" type="method"/>
            <line num="654" count="168" type="stmt"/>
            <line num="655" count="168" type="stmt"/>
            <line num="656" count="168" type="stmt"/>
            <line num="657" count="168" type="stmt"/>
            <line num="658" count="168" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/RandomVariableDifferentiableAADTest.java" name="RandomVariableDifferentiableAADTest.java">
            <metrics coveredelements="134" coveredconditionals="0" complexity="13" loc="313" coveredmethods="13" methods="13" elements="134" classes="1" ncloc="185" statements="121" conditionals="0" coveredstatements="121"/>
            <class name="RandomVariableDifferentiableAADTest">
               <metrics coveredelements="134" complexity="13" methods="13" testruns="26" statements="121" coveredconditionals="0" coveredmethods="13" elements="134" testfailures="0" testduration="0.05100000000000001" conditionals="0" coveredstatements="121" testpasses="26"/>
            </class>
            <line complexity="1" visibility="public" signature="testSecondOrderDerivative() : void" num="21" testsuccess="true" count="2" testduration="0.016" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorAdd1() : void" num="64" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorAdd2() : void" num="82" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorSub1() : void" num="105" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorSub2() : void" num="123" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorMult1() : void" num="146" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorMult2() : void" num="164" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorDiv1() : void" num="187" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorDiv2() : void" num="205" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorExp() : void" num="228" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOperatorLog() : void" num="246" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="249" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExpectation() : void" num="264" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="267" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVariance() : void" num="289" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="299" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="302" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.randomnumbers">
         <metrics coveredelements="37" complexity="7" loc="68" methods="4" classes="1" statements="27" coveredconditionals="6" coveredmethods="4" elements="37" ncloc="48" files="1" conditionals="6" coveredstatements="27"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/randomnumbers/AcceptanceRejectionRandomNumberGeneratorTest.java" name="AcceptanceRejectionRandomNumberGeneratorTest.java">
            <metrics coveredelements="37" coveredconditionals="6" complexity="7" loc="68" coveredmethods="4" methods="4" elements="37" classes="1" ncloc="48" statements="27" conditionals="6" coveredstatements="27"/>
            <class name="AcceptanceRejectionRandomNumberGeneratorTest">
               <metrics coveredelements="37" complexity="7" methods="4" testruns="2" statements="27" coveredconditionals="6" coveredmethods="4" elements="37" testfailures="0" testduration="3.769" conditionals="6" coveredstatements="27" testpasses="2"/>
            </class>
            <line complexity="4" visibility="public" signature="test() : void" num="20" testsuccess="true" count="2" testduration="1.982" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="24" count="2631060" type="method"/>
            <line num="25" count="2631060" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="28" count="2631060" type="method"/>
            <line num="29" count="2631060" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="32" count="2631060" type="method"/>
            <line num="33" count="2631060" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000000" num="45" type="cond"/>
            <line num="46" count="2000000" type="stmt"/>
            <line num="48" count="2000000" type="stmt"/>
            <line falsecount="1000322" truecount="999678" num="48" type="cond"/>
            <line num="50" count="2000000" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="2" truecount="202" num="58" type="cond"/>
            <line num="59" count="202" type="stmt"/>
            <line num="60" count="202" type="stmt"/>
            <line num="61" count="202" type="stmt"/>
            <line num="63" count="202" type="stmt"/>
            <line num="65" count="202" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.curves">
         <metrics coveredelements="445" complexity="42" loc="1151" methods="26" classes="8" statements="407" coveredconditionals="22" coveredmethods="24" elements="455" ncloc="693" files="8" conditionals="22" coveredstatements="399"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/CalibrationMultiCurveTest.java" name="CalibrationMultiCurveTest.java">
            <metrics coveredelements="166" coveredconditionals="0" complexity="12" loc="308" coveredmethods="10" methods="10" elements="167" classes="1" ncloc="221" statements="157" conditionals="0" coveredstatements="156"/>
            <class name="CalibrationMultiCurveTest">
               <metrics coveredelements="166" complexity="12" methods="10" testruns="2" statements="157" coveredconditionals="0" coveredmethods="10" elements="167" testfailures="0" testduration="11.344000000000001" conditionals="0" coveredstatements="156" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testMultiCurveCalibration() : void" num="38" testsuccess="true" count="2" testduration="5.899" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(String) : String" num="51" count="96" type="method"/>
            <line num="53" count="96" type="stmt"/>
            <line num="54" count="64" type="stmt"/>
            <line num="55" count="64" type="stmt"/>
            <line num="56" count="32" type="stmt"/>
            <line num="57" count="32" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="64" count="32" type="method"/>
            <line num="66" count="32" type="stmt"/>
            <line num="67" count="32" type="stmt"/>
            <line num="68" count="32" type="stmt"/>
            <line num="69" count="32" type="stmt"/>
            <line num="70" count="32" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="75" count="40" type="method"/>
            <line num="77" count="40" type="stmt"/>
            <line num="78" count="40" type="stmt"/>
            <line num="79" count="40" type="stmt"/>
            <line num="80" count="40" type="stmt"/>
            <line num="81" count="40" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="86" count="30" type="method"/>
            <line num="88" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="89" count="30" type="method"/>
            <line num="91" count="30" type="stmt"/>
            <line num="92" count="30" type="stmt"/>
            <line num="93" count="30" type="stmt"/>
            <line num="94" count="30" type="stmt"/>
            <line num="95" count="30" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="102" count="32" type="method"/>
            <line num="104" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="105" count="32" type="method"/>
            <line num="107" count="32" type="stmt"/>
            <line num="109" count="32" type="stmt"/>
            <line num="110" count="32" type="stmt"/>
            <line num="111" count="32" type="stmt"/>
            <line num="112" count="32" type="stmt"/>
            <line num="113" count="32" type="stmt"/>
            <line num="114" count="32" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="121" count="32" type="method"/>
            <line num="123" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="124" count="32" type="method"/>
            <line num="126" count="32" type="stmt"/>
            <line num="127" count="32" type="stmt"/>
            <line num="129" count="32" type="stmt"/>
            <line num="130" count="32" type="stmt"/>
            <line num="132" count="32" type="stmt"/>
            <line num="133" count="32" type="stmt"/>
            <line num="134" count="32" type="stmt"/>
            <line num="136" count="32" type="stmt"/>
            <line num="137" count="32" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="251" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="166" type="stmt"/>
            <line num="286" count="166" type="stmt"/>
            <line num="287" count="166" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="301" count="2" type="stmt"/>
            <line num="303" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/CalibrationTest.java" name="CalibrationTest.java">
            <metrics coveredelements="75" coveredconditionals="4" complexity="7" loc="249" coveredmethods="4" methods="5" elements="79" classes="1" ncloc="141" statements="70" conditionals="4" coveredstatements="67"/>
            <class name="CalibrationTest">
               <metrics coveredelements="75" complexity="7" methods="5" testruns="24" statements="70" coveredconditionals="4" coveredmethods="4" elements="79" testfailures="0" testduration="1.044" conditionals="4" coveredstatements="67" testpasses="24"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationTest(InterpolationMethod)" num="45" count="24" type="method"/>
            <line num="47" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="56" count="4" type="method"/>
            <line num="59" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardCurveFromDiscountCurve() : void" num="83" count="12" type="method"/>
            <line num="90" count="12" type="stmt"/>
            <line num="97" count="12" type="stmt"/>
            <line num="104" count="12" type="stmt"/>
            <line num="106" count="12" type="stmt"/>
            <line num="107" count="12" type="stmt"/>
            <line num="110" count="12" type="stmt"/>
            <line num="111" count="12" type="stmt"/>
            <line num="112" count="12" type="stmt"/>
            <line num="113" count="12" type="stmt"/>
            <line num="116" count="12" type="stmt"/>
            <line num="117" count="12" type="stmt"/>
            <line num="119" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurvesAndCalibration() : void" num="122" count="12" type="method"/>
            <line num="131" count="12" type="stmt"/>
            <line num="134" count="12" type="stmt"/>
            <line num="144" count="12" type="stmt"/>
            <line num="151" count="12" type="stmt"/>
            <line num="153" count="12" type="stmt"/>
            <line num="154" count="12" type="stmt"/>
            <line num="155" count="12" type="stmt"/>
            <line num="156" count="12" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line num="162" count="12" type="stmt"/>
            <line num="163" count="12" type="stmt"/>
            <line num="166" count="12" type="stmt"/>
            <line num="167" count="12" type="stmt"/>
            <line num="168" count="12" type="stmt"/>
            <line num="169" count="12" type="stmt"/>
            <line num="170" count="12" type="stmt"/>
            <line num="178" count="12" type="stmt"/>
            <line num="179" count="12" type="stmt"/>
            <line num="180" count="12" type="stmt"/>
            <line num="181" count="12" type="stmt"/>
            <line falsecount="12" truecount="48" num="181" type="cond"/>
            <line num="182" count="48" type="stmt"/>
            <line num="183" count="48" type="stmt"/>
            <line num="184" count="48" type="stmt"/>
            <line num="186" count="48" type="stmt"/>
            <line num="188" count="12" type="stmt"/>
            <line num="189" count="12" type="stmt"/>
            <line num="191" count="12" type="stmt"/>
            <line num="201" count="12" type="stmt"/>
            <line num="204" count="12" type="stmt"/>
            <line num="206" count="12" type="stmt"/>
            <line num="209" count="12" type="stmt"/>
            <line num="212" count="12" type="stmt"/>
            <line num="213" count="12" type="stmt"/>
            <line num="214" count="12" type="stmt"/>
            <line num="215" count="12" type="stmt"/>
            <line num="216" count="12" type="stmt"/>
            <line num="219" count="12" type="stmt"/>
            <line num="220" count="12" type="stmt"/>
            <line num="223" count="12" type="stmt"/>
            <line num="224" count="12" type="stmt"/>
            <line num="225" count="12" type="stmt"/>
            <line num="226" count="12" type="stmt"/>
            <line num="227" count="12" type="stmt"/>
            <line num="235" count="12" type="stmt"/>
            <line num="236" count="12" type="stmt"/>
            <line num="237" count="12" type="stmt"/>
            <line falsecount="12" truecount="60" num="237" type="cond"/>
            <line num="238" count="60" type="stmt"/>
            <line num="239" count="60" type="stmt"/>
            <line num="240" count="60" type="stmt"/>
            <line num="242" count="60" type="stmt"/>
            <line num="244" count="12" type="stmt"/>
            <line num="245" count="12" type="stmt"/>
            <line num="247" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/CurveTest.java" name="CurveTest.java">
            <metrics coveredelements="37" coveredconditionals="6" complexity="7" loc="130" coveredmethods="2" methods="3" elements="40" classes="1" ncloc="62" statements="31" conditionals="6" coveredstatements="29"/>
            <class name="CurveTest">
               <metrics coveredelements="37" complexity="7" methods="3" testruns="2" statements="31" coveredconditionals="6" coveredmethods="2" elements="40" testfailures="0" testduration="0.10500000000000001" conditionals="6" coveredstatements="29" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurveFitting() : void" num="45" testsuccess="true" count="2" testduration="0.047" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="setValues(double[],double[]) : void" num="90" count="50" type="method"/>
            <line num="93" count="50" type="stmt"/>
            <line num="94" count="50" type="stmt"/>
            <line num="95" count="50" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="50" type="stmt"/>
            <line falsecount="50" truecount="345" num="100" type="cond"/>
            <line num="101" count="345" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line falsecount="2" truecount="142" num="112" type="cond"/>
            <line num="113" count="142" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="118" type="cond"/>
            <line num="119" count="14" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/DiscountCurveNelsonSiegelSvenssonTest.java" name="DiscountCurveNelsonSiegelSvenssonTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="23" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="15" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="DiscountCurveNelsonSiegelSvenssonTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="2" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="11" testsuccess="true" count="2" testduration="0.008" type="method"/>
            <line num="14" count="2" type="stmt"/>
            <line num="15" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/DiscountCurveSerializationTest.java" name="DiscountCurveSerializationTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="4" loc="80" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="41" statements="20" conditionals="2" coveredstatements="18"/>
            <class name="DiscountCurveSerializationTest">
               <metrics coveredelements="21" complexity="4" methods="1" testruns="2" statements="20" coveredconditionals="2" coveredmethods="1" elements="23" testfailures="0" testduration="0.12" conditionals="2" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="4" visibility="public" signature="test() : void" num="29" testsuccess="true" count="2" testduration="0.057" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="2" truecount="202" num="75" type="cond"/>
            <line num="76" count="202" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/ForwardCurveNelsonSiegelSvenssonTest.java" name="ForwardCurveNelsonSiegelSvenssonTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="1" loc="49" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="29" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ForwardCurveNelsonSiegelSvenssonTest">
               <metrics coveredelements="14" complexity="1" methods="1" testruns="2" statements="13" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="0" testduration="0.054" conditionals="0" coveredstatements="13" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="2" testduration="0.023" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/NelsonSiegelSvenssonBondCalibrationTest.java" name="NelsonSiegelSvenssonBondCalibrationTest.java">
            <metrics coveredelements="59" coveredconditionals="8" complexity="7" loc="155" coveredmethods="3" methods="3" elements="59" classes="1" ncloc="90" statements="48" conditionals="8" coveredstatements="48"/>
            <class name="NelsonSiegelSvenssonBondCalibrationTest">
               <metrics coveredelements="59" complexity="7" methods="3" testruns="2" statements="48" coveredconditionals="8" coveredmethods="3" elements="59" testfailures="0" testduration="0.402" conditionals="8" coveredstatements="48" testpasses="2"/>
            </class>
            <line complexity="3" visibility="public" signature="testBondNSSCurveCalibration() : void" num="43" testsuccess="true" count="2" testduration="0.201" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line falsecount="2" truecount="22" num="53" type="cond"/>
            <line num="54" count="22" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line falsecount="2" truecount="22" num="67" type="cond"/>
            <line num="68" count="22" type="stmt"/>
            <line num="69" count="22" type="stmt"/>
            <line num="71" count="22" type="stmt"/>
            <line complexity="3" visibility="private" signature="calibrateNSSCurve(Map&lt;String, Object&gt;) : double[]" num="85" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line falsecount="2" truecount="22" num="103" type="cond"/>
            <line num="104" count="22" type="stmt"/>
            <line num="106" count="22" type="stmt"/>
            <line num="107" count="22" type="stmt"/>
            <line num="108" count="22" type="stmt"/>
            <line num="110" count="22" type="stmt"/>
            <line num="112" count="22" type="stmt"/>
            <line num="113" count="22" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line falsecount="2" truecount="22" num="131" type="cond"/>
            <line num="132" count="22" type="stmt"/>
            <line num="133" count="22" type="stmt"/>
            <line num="134" count="22" type="stmt"/>
            <line num="135" count="22" type="stmt"/>
            <line num="137" count="22" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getYieldToMaturity(double,double,double,double) : double" num="152" count="22" type="method"/>
            <line num="153" count="22" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/curves/NelsonSiegelSvenssonCalibrationTest.java" name="NelsonSiegelSvenssonCalibrationTest.java">
            <metrics coveredelements="67" coveredconditionals="2" complexity="3" loc="157" coveredmethods="2" methods="2" elements="67" classes="1" ncloc="94" statements="63" conditionals="2" coveredstatements="63"/>
            <class name="NelsonSiegelSvenssonCalibrationTest">
               <metrics coveredelements="67" complexity="3" methods="2" testruns="2" statements="63" coveredconditionals="2" coveredmethods="2" elements="67" testfailures="0" testduration="1.0859999999999999" conditionals="2" coveredstatements="63" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="calibrateNSSCurve(Map&lt;String, Object&gt;) : double[]" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line falsecount="2" truecount="42" num="80" type="cond"/>
            <line num="82" count="42" type="stmt"/>
            <line num="83" count="42" type="stmt"/>
            <line num="85" count="42" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="42" type="stmt"/>
            <line num="114" count="42" type="stmt"/>
            <line num="115" count="42" type="stmt"/>
            <line num="116" count="42" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCalibration() : void" num="131" testsuccess="true" count="2" testduration="0.523" type="method"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.components">
         <metrics coveredelements="108" complexity="8" loc="329" methods="4" classes="2" statements="96" coveredconditionals="8" coveredmethods="4" elements="108" ncloc="205" files="2" conditionals="8" coveredstatements="96"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/components/ExposureTest.java" name="ExposureTest.java">
            <metrics coveredelements="85" coveredconditionals="8" complexity="7" loc="271" coveredmethods="3" methods="3" elements="85" classes="1" ncloc="169" statements="74" conditionals="8" coveredstatements="74"/>
            <class name="ExposureTest">
               <metrics coveredelements="85" complexity="7" methods="3" testruns="4" statements="74" coveredconditionals="8" coveredmethods="3" elements="85" testfailures="0" testduration="727.4369999999999" conditionals="8" coveredstatements="74" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testExpectedPositiveExposure() : void" num="59" testsuccess="true" count="2" testduration="191.921" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="242" type="stmt"/>
            <line falsecount="240" truecount="2" num="102" type="cond"/>
            <line num="103" count="2" type="stmt"/>
            <line num="109" count="240" type="stmt"/>
            <line num="110" count="240" type="stmt"/>
            <line num="111" count="240" type="stmt"/>
            <line num="113" count="240" type="stmt"/>
            <line num="114" count="240" type="stmt"/>
            <line num="115" count="240" type="stmt"/>
            <line num="117" count="240" type="stmt"/>
            <line num="119" count="240" type="stmt"/>
            <line num="120" count="240" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAgainstSwaption() : void" num="125" testsuccess="true" count="2" testduration="181.977" type="method"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="150" count="242" type="stmt"/>
            <line num="151" count="242" type="stmt"/>
            <line num="152" count="242" type="stmt"/>
            <line num="154" count="242" type="stmt"/>
            <line num="155" count="242" type="stmt"/>
            <line num="156" count="242" type="stmt"/>
            <line num="161" count="242" type="stmt"/>
            <line num="162" count="242" type="stmt"/>
            <line num="163" count="242" type="stmt"/>
            <line num="165" count="242" type="stmt"/>
            <line num="167" count="242" type="stmt"/>
            <line num="168" count="242" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="172" count="4" type="method"/>
            <line num="178" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line num="183" count="4" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line falsecount="4" truecount="480" num="209" type="cond"/>
            <line num="210" count="480" type="stmt"/>
            <line falsecount="480" truecount="38400" num="210" type="cond"/>
            <line num="212" count="38400" type="stmt"/>
            <line num="213" count="38400" type="stmt"/>
            <line num="214" count="38400" type="stmt"/>
            <line num="216" count="38400" type="stmt"/>
            <line num="217" count="38400" type="stmt"/>
            <line falsecount="23760" truecount="14640" num="217" type="cond"/>
            <line num="218" count="14640" type="stmt"/>
            <line num="220" count="23760" type="stmt"/>
            <line num="224" count="38400" type="stmt"/>
            <line num="227" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line num="240" count="4" type="stmt"/>
            <line num="248" count="4" type="stmt"/>
            <line num="251" count="4" type="stmt"/>
            <line num="254" count="4" type="stmt"/>
            <line num="257" count="4" type="stmt"/>
            <line num="262" count="4" type="stmt"/>
            <line num="265" count="4" type="stmt"/>
            <line num="269" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/components/FundingCapacityTest.java" name="FundingCapacityTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="1" loc="58" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="36" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="FundingCapacityTest">
               <metrics coveredelements="23" complexity="1" methods="1" testruns="2" statements="22" coveredconditionals="0" coveredmethods="1" elements="23" testfailures="0" testduration="0.04" conditionals="0" coveredstatements="22" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="20" testsuccess="true" count="2" testduration="0.016" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.fouriermethod.products">
         <metrics coveredelements="21" complexity="3" loc="64" methods="1" classes="1" statements="16" coveredconditionals="4" coveredmethods="1" elements="21" ncloc="38" files="1" conditionals="4" coveredstatements="16"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/fouriermethod/products/TestCarrMadan.java" name="TestCarrMadan.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="3" loc="64" coveredmethods="1" methods="1" elements="21" classes="1" ncloc="38" statements="16" conditionals="4" coveredstatements="16"/>
            <class name="TestCarrMadan">
               <metrics coveredelements="21" complexity="3" methods="1" testruns="2" statements="16" coveredconditionals="4" coveredmethods="1" elements="21" testfailures="0" testduration="0.175" conditionals="4" coveredstatements="16" testpasses="2"/>
            </class>
            <line complexity="3" visibility="public" signature="test() : void" num="31" testsuccess="true" count="2" testduration="0.086" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line falsecount="2" truecount="40" num="36" type="cond"/>
            <line num="37" count="40" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line falsecount="2" truecount="40" num="54" type="cond"/>
            <line num="55" count="40" type="stmt"/>
            <line num="56" count="40" type="stmt"/>
            <line num="57" count="40" type="stmt"/>
            <line num="58" count="40" type="stmt"/>
            <line num="59" count="40" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.productfactory">
         <metrics coveredelements="51" complexity="4" loc="259" methods="4" classes="1" statements="47" coveredconditionals="0" coveredmethods="4" elements="51" ncloc="101" files="1" conditionals="0" coveredstatements="47"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/productfactory/ModelWithProductFactoryTest.java" name="ModelWithProductFactoryTest.java">
            <metrics coveredelements="51" coveredconditionals="0" complexity="4" loc="259" coveredmethods="4" methods="4" elements="51" classes="1" ncloc="101" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="ModelWithProductFactoryTest">
               <metrics coveredelements="51" complexity="4" methods="4" testruns="4" statements="47" coveredconditionals="0" coveredmethods="4" elements="51" testfailures="0" testduration="32.985" conditionals="0" coveredstatements="47" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="bsTest() : void" num="58" testsuccess="true" count="2" testduration="6.379" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hTest() : void" num="159" testsuccess="true" count="2" testduration="10.291" type="method"/>
            <line num="164" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="234" count="8" type="method"/>
            <line num="235" count="8" type="stmt"/>
            <line num="236" count="8" type="stmt"/>
            <line num="237" count="8" type="stmt"/>
            <line num="238" count="8" type="stmt"/>
            <line num="239" count="8" type="stmt"/>
            <line num="240" count="8" type="stmt"/>
            <line num="241" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="254" count="4" type="method"/>
            <line num="255" count="4" type="stmt"/>
            <line num="256" count="4" type="stmt"/>
            <line num="257" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.cds">
         <metrics coveredelements="184" complexity="13" loc="324" methods="1" classes="1" statements="165" coveredconditionals="21" coveredmethods="1" elements="190" ncloc="227" files="1" conditionals="24" coveredstatements="162"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/cds/CDSTest.java" name="CDSTest.java">
            <metrics coveredelements="184" coveredconditionals="21" complexity="13" loc="324" coveredmethods="1" methods="1" elements="190" classes="1" ncloc="227" statements="165" conditionals="24" coveredstatements="162"/>
            <class name="CDSTest">
               <metrics coveredelements="184" complexity="13" methods="1" testruns="2" statements="165" coveredconditionals="21" coveredmethods="1" elements="190" testfailures="0" testduration="0.348" conditionals="24" coveredstatements="162" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="testCDS() : void" num="33" testsuccess="true" count="2" testduration="0.155" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="174" type="cond"/>
            <line num="175" count="10" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="189" type="cond"/>
            <line num="190" count="10" type="stmt"/>
            <line num="191" count="10" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="205" type="cond"/>
            <line num="206" count="10" type="stmt"/>
            <line num="207" count="10" type="stmt"/>
            <line num="209" count="10" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="212" type="cond"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="225" type="cond"/>
            <line num="226" count="10" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="240" type="cond"/>
            <line num="241" count="10" type="stmt"/>
            <line num="242" count="10" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="256" type="cond"/>
            <line num="257" count="10" type="stmt"/>
            <line num="258" count="10" type="stmt"/>
            <line num="260" count="10" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="263" type="cond"/>
            <line num="264" count="2" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="276" type="cond"/>
            <line num="277" count="10" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="291" type="cond"/>
            <line num="292" count="10" type="stmt"/>
            <line num="293" count="10" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="299" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="301" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="305" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="307" type="cond"/>
            <line num="308" count="10" type="stmt"/>
            <line num="309" count="10" type="stmt"/>
            <line num="311" count="10" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="314" type="cond"/>
            <line num="315" count="2" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.data">
         <metrics coveredelements="187" complexity="52" loc="397" methods="2" classes="1" statements="231" coveredconditionals="4" coveredmethods="2" elements="237" ncloc="358" files="1" conditionals="4" coveredstatements="181"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/data/DataTablesTest.java" name="DataTablesTest.java">
            <metrics coveredelements="187" coveredconditionals="4" complexity="52" loc="397" coveredmethods="2" methods="2" elements="237" classes="1" ncloc="358" statements="231" conditionals="4" coveredstatements="181"/>
            <class name="DataTablesTest">
               <metrics coveredelements="187" complexity="52" methods="2" testruns="2" statements="231" coveredconditionals="4" coveredmethods="2" elements="237" testfailures="0" testduration="0.393" conditionals="4" coveredstatements="181" testpasses="2"/>
            </class>
            <line complexity="3" visibility="public" signature="setupTableValues() : void" num="36" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="43" type="cond"/>
            <line num="44" count="20" type="stmt"/>
            <line falsecount="20" truecount="320" num="44" type="cond"/>
            <line num="45" count="320" type="stmt"/>
            <line num="46" count="320" type="stmt"/>
            <line num="47" count="320" type="stmt"/>
            <line complexity="49" visibility="public" signature="testTables() : void" num="52" testsuccess="true" count="2" testduration="0.197" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="267" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="301" count="2" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line num="315" count="2" type="stmt"/>
            <line num="316" count="2" type="stmt"/>
            <line num="317" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="323" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
            <line num="326" count="2" type="stmt"/>
            <line num="328" count="2" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="2" type="stmt"/>
            <line num="335" count="2" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="2" type="stmt"/>
            <line num="341" count="2" type="stmt"/>
            <line num="342" count="2" type="stmt"/>
            <line num="343" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="346" count="2" type="stmt"/>
            <line num="348" count="2" type="stmt"/>
            <line num="349" count="2" type="stmt"/>
            <line num="351" count="2" type="stmt"/>
            <line num="353" count="2" type="stmt"/>
            <line num="354" count="2" type="stmt"/>
            <line num="356" count="2" type="stmt"/>
            <line num="359" count="2" type="stmt"/>
            <line num="360" count="2" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="367" count="2" type="stmt"/>
            <line num="368" count="2" type="stmt"/>
            <line num="369" count="2" type="stmt"/>
            <line num="370" count="2" type="stmt"/>
            <line num="371" count="2" type="stmt"/>
            <line num="372" count="2" type="stmt"/>
            <line num="374" count="2" type="stmt"/>
            <line num="376" count="2" type="stmt"/>
            <line num="377" count="2" type="stmt"/>
            <line num="379" count="2" type="stmt"/>
            <line num="381" count="2" type="stmt"/>
            <line num="382" count="2" type="stmt"/>
            <line num="384" count="2" type="stmt"/>
            <line num="387" count="2" type="stmt"/>
            <line num="388" count="2" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.interpolation">
         <metrics coveredelements="23" complexity="5" loc="45" methods="1" classes="1" statements="14" coveredconditionals="8" coveredmethods="1" elements="23" ncloc="26" files="1" conditionals="8" coveredstatements="14"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/interpolation/BiLinearInterpolationTest.java" name="BiLinearInterpolationTest.java">
            <metrics coveredelements="23" coveredconditionals="8" complexity="5" loc="45" coveredmethods="1" methods="1" elements="23" classes="1" ncloc="26" statements="14" conditionals="8" coveredstatements="14"/>
            <class name="BiLinearInterpolationTest">
               <metrics coveredelements="23" complexity="5" methods="1" testruns="2" statements="14" coveredconditionals="8" coveredmethods="1" elements="23" testfailures="0" testduration="0.22" conditionals="8" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="5" visibility="public" signature="test() : void" num="16" testsuccess="true" count="2" testduration="0.116" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="25" type="cond"/>
            <line num="26" count="6" type="stmt"/>
            <line falsecount="6" truecount="18" num="26" type="cond"/>
            <line num="27" count="18" type="stmt"/>
            <line num="28" count="18" type="stmt"/>
            <line num="29" count="18" type="stmt"/>
            <line num="30" count="18" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line falsecount="2" truecount="102" num="37" type="cond"/>
            <line num="38" count="102" type="stmt"/>
            <line falsecount="102" truecount="8262" num="38" type="cond"/>
            <line num="39" count="8262" type="stmt"/>
            <line num="40" count="8262" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.calibration">
         <metrics coveredelements="341" complexity="145" loc="1180" methods="24" classes="4" statements="531" coveredconditionals="11" coveredmethods="18" elements="631" ncloc="950" files="4" conditionals="76" coveredstatements="312"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/SABRCubeCalibrationTest.java" name="SABRCubeCalibrationTest.java">
            <metrics coveredelements="71" coveredconditionals="1" complexity="50" loc="343" coveredmethods="4" methods="6" elements="200" classes="1" ncloc="288" statements="162" conditionals="32" coveredstatements="66"/>
            <class name="SABRCubeCalibrationTest">
               <metrics coveredelements="71" complexity="50" methods="6" testruns="2" statements="162" coveredconditionals="1" coveredmethods="4" elements="200" testfailures="0" testduration="790.782" conditionals="32" coveredstatements="66" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="SABRCubeCalibrationTest()" num="85" count="2" type="method"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSABRCubeCalibration() : void" num="125" testsuccess="true" count="2" testduration="389.571" type="method"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="10" type="stmt"/>
            <line num="157" count="50" type="stmt"/>
            <line num="158" count="250" type="stmt"/>
            <line num="159" count="250" type="stmt"/>
            <line num="161" count="250" type="stmt"/>
            <line num="162" count="250" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="10" type="stmt"/>
            <line num="170" count="50" type="stmt"/>
            <line num="171" count="248" type="stmt"/>
            <line num="172" count="248" type="stmt"/>
            <line num="174" count="248" type="stmt"/>
            <line num="175" count="248" type="stmt"/>
            <line complexity="14" visibility="public" signature="main(String[]) : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="241" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="319" count="250" type="method"/>
            <line num="321" count="250" type="stmt"/>
            <line num="322" count="250" type="stmt"/>
            <line num="323" count="250" type="stmt"/>
            <line num="324" count="250" type="stmt"/>
            <line num="326" count="250" type="stmt"/>
            <line num="328" count="250" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="331" count="248" type="method"/>
            <line num="333" count="248" type="stmt"/>
            <line num="334" count="248" type="stmt"/>
            <line num="335" count="248" type="stmt"/>
            <line num="336" count="248" type="stmt"/>
            <line num="338" count="248" type="stmt"/>
            <line num="340" count="248" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/SABRCubeParallelCalibrationTest.java" name="SABRCubeParallelCalibrationTest.java">
            <metrics coveredelements="67" coveredconditionals="0" complexity="36" loc="279" coveredmethods="4" methods="6" elements="145" classes="1" ncloc="214" statements="123" conditionals="16" coveredstatements="63"/>
            <class name="SABRCubeParallelCalibrationTest">
               <metrics coveredelements="67" complexity="36" methods="6" testruns="2" statements="123" coveredconditionals="0" coveredmethods="4" elements="145" testfailures="0" testduration="43.122" conditionals="16" coveredstatements="63" testpasses="2"/>
            </class>
            <line complexity="13" visibility="public" signature="SABRCubeParallelCalibrationTest()" num="67" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCalibration() : void" num="106" testsuccess="true" count="2" testduration="21.309" type="method"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="10" type="stmt"/>
            <line num="146" count="50" type="stmt"/>
            <line num="147" count="250" type="stmt"/>
            <line num="148" count="250" type="stmt"/>
            <line num="150" count="250" type="stmt"/>
            <line num="151" count="250" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="10" type="stmt"/>
            <line num="159" count="50" type="stmt"/>
            <line num="160" count="248" type="stmt"/>
            <line num="161" count="248" type="stmt"/>
            <line num="163" count="248" type="stmt"/>
            <line num="164" count="248" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="255" count="250" type="method"/>
            <line num="257" count="250" type="stmt"/>
            <line num="258" count="250" type="stmt"/>
            <line num="259" count="250" type="stmt"/>
            <line num="260" count="250" type="stmt"/>
            <line num="262" count="250" type="stmt"/>
            <line num="264" count="250" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="267" count="248" type="method"/>
            <line num="269" count="248" type="stmt"/>
            <line num="270" count="248" type="stmt"/>
            <line num="271" count="248" type="stmt"/>
            <line num="272" count="248" type="stmt"/>
            <line num="274" count="248" type="stmt"/>
            <line num="276" count="248" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/SABRShiftedSmileCalibrationTest.java" name="SABRShiftedSmileCalibrationTest.java">
            <metrics coveredelements="138" coveredconditionals="10" complexity="25" loc="301" coveredmethods="6" methods="6" elements="143" classes="1" ncloc="238" statements="125" conditionals="12" coveredstatements="122"/>
            <class name="SABRShiftedSmileCalibrationTest">
               <metrics coveredelements="138" complexity="25" methods="6" testruns="4" statements="125" coveredconditionals="10" coveredmethods="6" elements="143" testfailures="0" testduration="7.404" conditionals="12" coveredstatements="122" testpasses="4"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="78" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCalibration() : void" num="119" testsuccess="true" count="2" testduration="3.714" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="10" type="stmt"/>
            <line num="150" count="50" type="stmt"/>
            <line num="151" count="250" type="stmt"/>
            <line num="152" count="250" type="stmt"/>
            <line num="154" count="250" type="stmt"/>
            <line num="155" count="250" type="stmt"/>
            <line num="156" count="250" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="10" type="stmt"/>
            <line num="164" count="50" type="stmt"/>
            <line num="165" count="248" type="stmt"/>
            <line num="166" count="248" type="stmt"/>
            <line num="168" count="248" type="stmt"/>
            <line num="169" count="248" type="stmt"/>
            <line num="170" count="248" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line falsecount="2" truecount="250" num="176" type="cond"/>
            <line num="177" count="250" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line falsecount="2" truecount="248" num="179" type="cond"/>
            <line num="180" count="248" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSingleSmile() : void" num="184" testsuccess="true" count="2" testduration="0.077" type="method"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="18" type="stmt"/>
            <line falsecount="0" truecount="18" num="203" type="cond"/>
            <line num="204" count="18" type="stmt"/>
            <line num="205" count="18" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="221" count="726" type="method"/>
            <line num="225" count="726" type="stmt"/>
            <line num="226" count="726" type="stmt"/>
            <line num="227" count="726" type="stmt"/>
            <line num="229" count="726" type="stmt"/>
            <line falsecount="726" truecount="6520" num="229" type="cond"/>
            <line num="230" count="6521" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="251" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="18" type="stmt"/>
            <line falsecount="0" truecount="18" num="255" type="cond"/>
            <line num="256" count="18" type="stmt"/>
            <line num="257" count="18" type="stmt"/>
            <line num="266" count="18" type="stmt"/>
            <line num="267" count="18" type="stmt"/>
            <line num="268" count="18" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="273" type="cond"/>
            <line num="274" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="278" count="250" type="method"/>
            <line num="280" count="250" type="stmt"/>
            <line num="281" count="250" type="stmt"/>
            <line num="282" count="250" type="stmt"/>
            <line num="283" count="250" type="stmt"/>
            <line num="285" count="250" type="stmt"/>
            <line num="287" count="250" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="290" count="248" type="method"/>
            <line num="292" count="248" type="stmt"/>
            <line num="293" count="248" type="stmt"/>
            <line num="294" count="248" type="stmt"/>
            <line num="295" count="248" type="stmt"/>
            <line num="297" count="248" type="stmt"/>
            <line num="299" count="248" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/calibration/StaticCubeCalibrationTest.java" name="StaticCubeCalibrationTest.java">
            <metrics coveredelements="65" coveredconditionals="0" complexity="34" loc="257" coveredmethods="4" methods="6" elements="143" classes="1" ncloc="210" statements="121" conditionals="16" coveredstatements="61"/>
            <class name="StaticCubeCalibrationTest">
               <metrics coveredelements="65" complexity="34" methods="6" testruns="2" statements="121" coveredconditionals="0" coveredmethods="4" elements="143" testfailures="0" testduration="11.458" conditionals="16" coveredstatements="61" testpasses="2"/>
            </class>
            <line complexity="11" visibility="public" signature="StaticCubeCalibrationTest()" num="62" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStaticCubeCalibration() : void" num="100" testsuccess="true" count="2" testduration="5.942" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="10" type="stmt"/>
            <line num="125" count="50" type="stmt"/>
            <line num="126" count="250" type="stmt"/>
            <line num="127" count="250" type="stmt"/>
            <line num="129" count="250" type="stmt"/>
            <line num="130" count="250" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="10" type="stmt"/>
            <line num="138" count="50" type="stmt"/>
            <line num="139" count="248" type="stmt"/>
            <line num="140" count="248" type="stmt"/>
            <line num="142" count="248" type="stmt"/>
            <line num="143" count="248" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="18" visibility="public" signature="askForSwaptions() : void" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="payerValue(VolatilityCubeModel,int,int,int) : double" num="233" count="250" type="method"/>
            <line num="235" count="250" type="stmt"/>
            <line num="236" count="250" type="stmt"/>
            <line num="237" count="250" type="stmt"/>
            <line num="238" count="250" type="stmt"/>
            <line num="240" count="250" type="stmt"/>
            <line num="242" count="250" type="stmt"/>
            <line complexity="1" visibility="private" signature="receiverValue(VolatilityCubeModel,int,int,int) : double" num="245" count="248" type="method"/>
            <line num="247" count="248" type="stmt"/>
            <line num="248" count="248" type="stmt"/>
            <line num="249" count="248" type="stmt"/>
            <line num="250" count="248" type="stmt"/>
            <line num="252" count="248" type="stmt"/>
            <line num="254" count="248" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.businessdaycalendar">
         <metrics coveredelements="84" complexity="5" loc="174" methods="5" classes="1" statements="79" coveredconditionals="0" coveredmethods="5" elements="84" ncloc="107" files="1" conditionals="0" coveredstatements="79"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/businessdaycalendar/BusinessdayCalendarTest.java" name="BusinessdayCalendarTest.java">
            <metrics coveredelements="84" coveredconditionals="0" complexity="5" loc="174" coveredmethods="5" methods="5" elements="84" classes="1" ncloc="107" statements="79" conditionals="0" coveredstatements="79"/>
            <class name="BusinessdayCalendarTest">
               <metrics coveredelements="84" complexity="5" methods="5" testruns="10" statements="79" coveredconditionals="0" coveredmethods="5" elements="84" testfailures="0" testduration="0.203" conditionals="0" coveredstatements="79" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testCreateDateFromDateAndOffsetCode() : void" num="19" testsuccess="true" count="2" testduration="0.036" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="10" type="stmt"/>
            <line num="28" count="10" type="stmt"/>
            <line num="29" count="10" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="24" type="stmt"/>
            <line num="35" count="24" type="stmt"/>
            <line num="36" count="24" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="24" type="stmt"/>
            <line num="42" count="24" type="stmt"/>
            <line num="43" count="24" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="24" type="stmt"/>
            <line num="50" count="24" type="stmt"/>
            <line num="51" count="24" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="24" type="stmt"/>
            <line num="57" count="24" type="stmt"/>
            <line num="58" count="24" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="24" type="stmt"/>
            <line num="64" count="24" type="stmt"/>
            <line num="65" count="24" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="10" type="stmt"/>
            <line num="72" count="10" type="stmt"/>
            <line num="73" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCombinedCalendar() : void" num="80" testsuccess="true" count="2" testduration="0.021" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTargetCalendar() : void" num="109" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNycCalendar() : void" num="144" testsuccess="true" count="2" testduration="0.047" type="method"/>
            <line num="146" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLondonCalendar() : void" num="161" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="163" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.bond">
         <metrics coveredelements="0" complexity="15" loc="264" methods="7" classes="2" statements="73" coveredconditionals="0" coveredmethods="0" elements="94" ncloc="177" files="2" conditionals="14" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/bond/AccruedInterestTest.java" name="AccruedInterestTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="83" coveredmethods="0" methods="3" elements="31" classes="1" ncloc="66" statements="22" conditionals="6" coveredstatements="0"/>
            <class name="AccruedInterestTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="31" statements="22" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="private" signature="getPeriodIndex(LocalDate) : int" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAccruedInterest(LocalDate) : double" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/bond/BondValuationTest.java" name="BondValuationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="181" coveredmethods="0" methods="4" elements="63" classes="1" ncloc="111" statements="51" conditionals="8" coveredstatements="0"/>
            <class name="BondValuationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="63" statements="51" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BondValuationTest(InterpolationMethod)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testImplementation() : void" num="83" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="177" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.hybridassetinterestrate">
         <metrics coveredelements="139" complexity="17" loc="382" methods="9" classes="2" statements="130" coveredconditionals="6" coveredmethods="9" elements="147" ncloc="237" files="2" conditionals="8" coveredstatements="124"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/hybridassetinterestrate/CrossCurrencyLIBORMarketModelFromModelsTest.java" name="CrossCurrencyLIBORMarketModelFromModelsTest.java">
            <metrics coveredelements="118" coveredconditionals="4" complexity="15" loc="329" coveredmethods="8" methods="8" elements="126" classes="1" ncloc="199" statements="112" conditionals="6" coveredstatements="106"/>
            <class name="CrossCurrencyLIBORMarketModelFromModelsTest">
               <metrics coveredelements="118" complexity="15" methods="8" testruns="8" statements="112" coveredconditionals="4" coveredmethods="8" elements="126" testfailures="0" testduration="1880.557" conditionals="6" coveredstatements="106" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="testProperties() : void" num="45" testsuccess="true" count="2" testduration="140.289" type="method"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignBond() : void" num="68" testsuccess="true" count="2" testduration="248.202" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignFRA() : void" num="94" testsuccess="true" count="2" testduration="280.605" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForeignCaplet() : void" num="117" testsuccess="true" count="2" testduration="251.152" type="method"/>
            <line num="119" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line complexity="8" visibility="private" signature="getModel(String[]) : CrossCurrencyLIBORMarketModelFromModels" num="156" count="14" type="method"/>
            <line num="164" count="14" type="stmt"/>
            <line num="165" count="14" type="stmt"/>
            <line num="167" count="14" type="stmt"/>
            <line num="172" count="14" type="stmt"/>
            <line num="173" count="14" type="stmt"/>
            <line num="174" count="14" type="stmt"/>
            <line num="175" count="14" type="stmt"/>
            <line num="177" count="14" type="stmt"/>
            <line num="178" count="14" type="stmt"/>
            <line num="183" count="14" type="stmt"/>
            <line num="189" count="14" type="stmt"/>
            <line num="190" count="14" type="stmt"/>
            <line num="192" count="14" type="stmt"/>
            <line falsecount="6" truecount="8" num="192" type="cond"/>
            <line num="193" count="8" type="stmt"/>
            <line num="194" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="197" count="8" type="stmt"/>
            <line num="198" count="8" type="stmt"/>
            <line num="200" count="8" type="stmt"/>
            <line num="201" count="8" type="stmt"/>
            <line num="203" count="8" type="stmt"/>
            <line num="207" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="219" type="cond"/>
            <line num="220" count="6" type="stmt"/>
            <line num="222" count="6" type="stmt"/>
            <line num="223" count="6" type="stmt"/>
            <line num="225" count="6" type="stmt"/>
            <line num="227" count="6" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFxMartingaleModel(double,IndependentIncrements) : MonteCarloProcessFromProcessModel" num="237" count="14" type="method"/>
            <line num="238" count="14" type="stmt"/>
            <line num="239" count="14" type="stmt"/>
            <line num="241" count="14" type="stmt"/>
            <line num="244" count="14" type="stmt"/>
            <line num="246" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="getInterestRateModel(double,IndependentIncrements,MonteCarloProcess,Map&lt;Integer, Integer&gt;) : LIBORMonteCarloSimulationFromLIBORModel" num="249" count="22" type="method"/>
            <line num="250" count="22" type="stmt"/>
            <line num="252" count="22" type="stmt"/>
            <line num="253" count="22" type="stmt"/>
            <line num="254" count="22" type="stmt"/>
            <line num="258" count="22" type="stmt"/>
            <line num="259" count="22" type="stmt"/>
            <line num="260" count="22" type="stmt"/>
            <line num="263" count="22" type="stmt"/>
            <line num="273" count="22" type="stmt"/>
            <line num="274" count="22" type="stmt"/>
            <line num="279" count="22" type="stmt"/>
            <line num="287" count="22" type="stmt"/>
            <line num="294" count="22" type="stmt"/>
            <line num="297" count="22" type="stmt"/>
            <line num="300" count="22" type="stmt"/>
            <line num="303" count="22" type="stmt"/>
            <line num="308" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDrift(MonteCarloProcess,int,RandomVariable[],RandomVariable[]) : RandomVariable[]" num="316" count="880" type="method"/>
            <line num="318" count="880" type="stmt"/>
            <line num="319" count="880" type="stmt"/>
            <line num="323" count="22" type="stmt"/>
            <line num="325" count="22" type="stmt"/>
            <line num="327" count="22" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/hybridassetinterestrate/HybridAssetLIBORModelMonteCarloSimulationFromModelsTest.java" name="HybridAssetLIBORModelMonteCarloSimulationFromModelsTest.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="2" loc="53" coveredmethods="1" methods="1" elements="21" classes="1" ncloc="38" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="HybridAssetLIBORModelMonteCarloSimulationFromModelsTest">
               <metrics coveredelements="21" complexity="2" methods="1" testruns="2" statements="18" coveredconditionals="2" coveredmethods="1" elements="21" testfailures="0" testduration="41.398" conditionals="2" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="20" testsuccess="true" count="2" testduration="20.446" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="2" truecount="1802" num="44" type="cond"/>
            <line num="45" count="1802" type="stmt"/>
            <line num="47" count="1802" type="stmt"/>
            <line num="48" count="1802" type="stmt"/>
            <line num="50" count="1802" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.integration">
         <metrics coveredelements="122" complexity="23" loc="334" methods="20" classes="4" statements="105" coveredconditionals="0" coveredmethods="20" elements="125" ncloc="222" files="4" conditionals="0" coveredstatements="102"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/MonteCarloIntegratorTest.java" name="MonteCarloIntegratorTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="7" loc="97" coveredmethods="7" methods="7" elements="33" classes="1" ncloc="63" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="MonteCarloIntegratorTest">
               <metrics coveredelements="33" complexity="7" methods="7" testruns="4" statements="26" coveredconditionals="0" coveredmethods="7" elements="33" testfailures="0" testduration="0.5920000000000001" conditionals="0" coveredstatements="26" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="29" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCos() : void" num="34" testsuccess="true" count="2" testduration="0.189" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="38" count="4000000" type="method"/>
            <line num="40" count="4000000" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="44" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCubic() : void" num="67" testsuccess="true" count="2" testduration="0.1" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="71" count="4000000" type="method"/>
            <line num="73" count="4000000" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="77" count="4" type="method"/>
            <line num="79" count="4" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/PiecewiseContantDoubleUnaryOperatorTest.java" name="PiecewiseContantDoubleUnaryOperatorTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="8" loc="108" coveredmethods="5" methods="5" elements="53" classes="1" ncloc="84" statements="48" conditionals="0" coveredstatements="45"/>
            <class name="PiecewiseContantDoubleUnaryOperatorTest">
               <metrics coveredelements="50" complexity="8" methods="5" testruns="10" statements="48" coveredconditionals="0" coveredmethods="5" elements="53" testfailures="0" testduration="0.031000000000000007" conditionals="0" coveredstatements="45" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testValuation() : void" num="10" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="12" count="2" type="stmt"/>
            <line num="14" count="2" type="stmt"/>
            <line num="16" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegral() : void" num="26" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegralOfSquares() : void" num="43" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegralErrorCorrection() : void" num="61" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testExceptions() : void" num="72" testsuccess="true" count="2" testduration="0.014" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/SimpsonRealIntegratorTest.java" name="SimpsonRealIntegratorTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="7" loc="86" coveredmethods="7" methods="7" elements="29" classes="1" ncloc="55" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="SimpsonRealIntegratorTest">
               <metrics coveredelements="29" complexity="7" methods="7" testruns="4" statements="22" coveredconditionals="0" coveredmethods="7" elements="29" testfailures="0" testduration="0.033" conditionals="0" coveredstatements="22" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="4" type="method"/>
            <line num="26" count="4" type="stmt"/>
            <line num="27" count="4" type="stmt"/>
            <line num="28" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCos() : void" num="33" testsuccess="true" count="2" testduration="0.014" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="37" count="198" type="method"/>
            <line num="39" count="198" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="43" count="4" type="method"/>
            <line num="45" count="4" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCubic() : void" num="60" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="64" count="198" type="method"/>
            <line num="66" count="198" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="70" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/integration/TrapezoidalRealIntegratorTest.java" name="TrapezoidalRealIntegratorTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="20" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TrapezoidalRealIntegratorTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="2" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.061" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="22" testsuccess="true" count="2" testduration="0.029" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.automaticdifferentiation.backward.alternative">
         <metrics coveredelements="0" complexity="2" loc="43" methods="1" classes="1" statements="15" coveredconditionals="0" coveredmethods="0" elements="18" ncloc="22" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/automaticdifferentiation/backward/alternative/RandomVariableUniqueVariableTest.java" name="RandomVariableUniqueVariableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="43" coveredmethods="0" methods="1" elements="18" classes="1" ncloc="22" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="RandomVariableUniqueVariableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="18" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling">
         <metrics coveredelements="72" complexity="6" loc="230" methods="3" classes="1" statements="63" coveredconditionals="6" coveredmethods="3" elements="72" ncloc="140" files="1" conditionals="6" coveredstatements="63"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/LIBORMarketModelHierarchyTest.java" name="LIBORMarketModelHierarchyTest.java">
            <metrics coveredelements="72" coveredconditionals="6" complexity="6" loc="230" coveredmethods="3" methods="3" elements="72" classes="1" ncloc="140" statements="63" conditionals="6" coveredstatements="63"/>
            <class name="LIBORMarketModelHierarchyTest">
               <metrics coveredelements="72" complexity="6" methods="3" testruns="2" statements="63" coveredconditionals="6" coveredmethods="3" elements="72" testfailures="0" testduration="97.53800000000001" conditionals="6" coveredstatements="63" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testModelHierarchy() : void" num="62" testsuccess="true" count="2" testduration="53.646" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="112" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="144" count="2" type="method"/>
            <line num="147" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line falsecount="2" truecount="160" num="168" type="cond"/>
            <line num="169" count="160" type="stmt"/>
            <line falsecount="160" truecount="12800" num="169" type="cond"/>
            <line num="171" count="12800" type="stmt"/>
            <line num="172" count="12800" type="stmt"/>
            <line num="173" count="12800" type="stmt"/>
            <line num="175" count="12800" type="stmt"/>
            <line num="176" count="12800" type="stmt"/>
            <line falsecount="6320" truecount="6480" num="176" type="cond"/>
            <line num="177" count="6480" type="stmt"/>
            <line num="179" count="6320" type="stmt"/>
            <line num="183" count="12800" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.singleswaprate.model.volatilities">
         <metrics coveredelements="320" complexity="61" loc="719" methods="19" classes="2" statements="313" coveredconditionals="12" coveredmethods="19" elements="352" ncloc="561" files="2" conditionals="20" coveredstatements="289"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeSharedParametersTest.java" name="SABRVolatilityCubeSharedParametersTest.java">
            <metrics coveredelements="96" coveredconditionals="1" complexity="24" loc="253" coveredmethods="7" methods="7" elements="106" classes="1" ncloc="198" statements="97" conditionals="2" coveredstatements="88"/>
            <class name="SABRVolatilityCubeSharedParametersTest">
               <metrics coveredelements="96" complexity="24" methods="7" testruns="4" statements="97" coveredconditionals="1" coveredmethods="7" elements="106" testfailures="0" testduration="0.38500000000000006" conditionals="2" coveredstatements="88" testpasses="4"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="80" count="2" type="method"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearList() : void" num="123" count="4" type="method"/>
            <line num="125" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_cubeATM() : void" num="128" testsuccess="true" count="2" testduration="0.1" type="method"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="10" type="stmt"/>
            <line num="139" count="50" type="stmt"/>
            <line num="140" count="50" type="stmt"/>
            <line num="142" count="50" type="stmt"/>
            <line num="143" count="50" type="stmt"/>
            <line num="144" count="50" type="stmt"/>
            <line num="146" count="50" type="stmt"/>
            <line num="147" count="50" type="stmt"/>
            <line num="149" count="50" type="stmt"/>
            <line num="150" count="50" type="stmt"/>
            <line num="151" count="50" type="stmt"/>
            <line num="152" count="50" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="b_strikeSlices() : void" num="169" testsuccess="true" count="2" testduration="0.084" type="method"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="18" type="stmt"/>
            <line num="175" count="18" type="stmt"/>
            <line num="176" count="18" type="stmt"/>
            <line num="178" count="18" type="stmt"/>
            <line num="179" count="18" type="stmt"/>
            <line num="180" count="18" type="stmt"/>
            <line num="182" count="18" type="stmt"/>
            <line num="184" count="18" type="stmt"/>
            <line num="185" count="90" type="stmt"/>
            <line num="187" count="448" type="stmt"/>
            <line num="188" count="448" type="stmt"/>
            <line num="190" count="448" type="stmt"/>
            <line num="191" count="448" type="stmt"/>
            <line num="192" count="448" type="stmt"/>
            <line num="194" count="448" type="stmt"/>
            <line num="195" count="448" type="stmt"/>
            <line num="196" count="448" type="stmt"/>
            <line num="197" count="448" type="stmt"/>
            <line num="199" count="448" type="stmt"/>
            <line num="200" count="448" type="stmt"/>
            <line num="201" count="448" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="448" type="stmt"/>
            <line num="209" count="448" type="stmt"/>
            <line num="210" count="448" type="stmt"/>
            <line num="211" count="448" type="stmt"/>
            <line num="212" count="448" type="stmt"/>
            <line num="215" count="448" type="stmt"/>
            <line falsecount="0" truecount="448" num="215" type="cond"/>
            <line num="216" count="448" type="stmt"/>
            <line num="221" count="18" type="stmt"/>
            <line num="222" count="18" type="stmt"/>
            <line num="223" count="18" type="stmt"/>
            <line num="224" count="18" type="stmt"/>
            <line num="226" count="18" type="stmt"/>
            <line num="227" count="18" type="stmt"/>
            <line num="228" count="18" type="stmt"/>
            <line num="229" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkDifferences() : void" num="234" count="4" type="method"/>
            <line num="236" count="4" type="stmt"/>
            <line num="237" count="448" type="stmt"/>
            <line complexity="1" visibility="public" signature="print() : void" num="241" count="2" type="method"/>
            <line num="244" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeVolatilityCube() : VolatilityCube" num="248" count="2" type="method"/>
            <line num="250" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/singleswaprate/model/volatilities/SABRVolatilityCubeTest.java" name="SABRVolatilityCubeTest.java">
            <metrics coveredelements="224" coveredconditionals="11" complexity="37" loc="466" coveredmethods="12" methods="12" elements="246" classes="1" ncloc="363" statements="216" conditionals="18" coveredstatements="201"/>
            <class name="SABRVolatilityCubeTest">
               <metrics coveredelements="224" complexity="37" methods="12" testruns="8" statements="216" coveredconditionals="11" coveredmethods="12" elements="246" testfailures="0" testduration="1.086" conditionals="18" coveredstatements="201" testpasses="8"/>
            </class>
            <line complexity="13" visibility="public" signature="setup() : void" num="86" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="128" count="8" type="method"/>
            <line num="130" count="8" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line num="133" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="a_cubeATM() : void" num="136" testsuccess="true" count="2" testduration="0.094" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="10" type="stmt"/>
            <line num="149" count="50" type="stmt"/>
            <line num="150" count="50" type="stmt"/>
            <line num="152" count="50" type="stmt"/>
            <line num="153" count="50" type="stmt"/>
            <line num="154" count="50" type="stmt"/>
            <line num="156" count="50" type="stmt"/>
            <line num="157" count="50" type="stmt"/>
            <line num="159" count="50" type="stmt"/>
            <line num="160" count="50" type="stmt"/>
            <line num="161" count="50" type="stmt"/>
            <line num="162" count="50" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="b_strikeSlices() : void" num="179" testsuccess="true" count="2" testduration="0.086" type="method"/>
            <line num="182" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="18" type="stmt"/>
            <line num="187" count="18" type="stmt"/>
            <line num="188" count="18" type="stmt"/>
            <line num="190" count="18" type="stmt"/>
            <line num="191" count="18" type="stmt"/>
            <line num="192" count="18" type="stmt"/>
            <line num="194" count="18" type="stmt"/>
            <line num="196" count="18" type="stmt"/>
            <line num="197" count="90" type="stmt"/>
            <line num="199" count="448" type="stmt"/>
            <line num="200" count="448" type="stmt"/>
            <line num="202" count="448" type="stmt"/>
            <line num="203" count="448" type="stmt"/>
            <line num="204" count="448" type="stmt"/>
            <line num="206" count="448" type="stmt"/>
            <line num="207" count="448" type="stmt"/>
            <line num="208" count="448" type="stmt"/>
            <line num="209" count="448" type="stmt"/>
            <line num="211" count="448" type="stmt"/>
            <line num="212" count="448" type="stmt"/>
            <line num="213" count="448" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="448" type="stmt"/>
            <line num="221" count="448" type="stmt"/>
            <line num="222" count="448" type="stmt"/>
            <line num="223" count="448" type="stmt"/>
            <line num="224" count="448" type="stmt"/>
            <line num="227" count="448" type="stmt"/>
            <line falsecount="0" truecount="448" num="227" type="cond"/>
            <line num="228" count="448" type="stmt"/>
            <line num="233" count="18" type="stmt"/>
            <line num="234" count="18" type="stmt"/>
            <line num="235" count="18" type="stmt"/>
            <line num="236" count="18" type="stmt"/>
            <line num="238" count="18" type="stmt"/>
            <line num="239" count="18" type="stmt"/>
            <line num="240" count="18" type="stmt"/>
            <line num="241" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="c_testAccessPerformance() : void" num="246" testsuccess="true" count="2" testduration="0.33" type="method"/>
            <line num="249" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="261" type="cond"/>
            <line num="262" count="2000" type="stmt"/>
            <line num="263" count="2000" type="stmt"/>
            <line num="264" count="2000" type="stmt"/>
            <line num="265" count="2000" type="stmt"/>
            <line num="266" count="2000" type="stmt"/>
            <line num="268" count="2000" type="stmt"/>
            <line num="269" count="2000" type="stmt"/>
            <line num="271" count="2000" type="stmt"/>
            <line num="272" count="2000" type="stmt"/>
            <line num="274" count="2000" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2000" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="d_testAccessPerformanceOnNodes() : void" num="289" testsuccess="true" count="2" testduration="0.056" type="method"/>
            <line num="292" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="300" type="cond"/>
            <line num="301" count="2000" type="stmt"/>
            <line num="302" count="2000" type="stmt"/>
            <line num="303" count="2000" type="stmt"/>
            <line num="304" count="2000" type="stmt"/>
            <line num="305" count="2000" type="stmt"/>
            <line num="307" count="2000" type="stmt"/>
            <line num="308" count="2000" type="stmt"/>
            <line num="310" count="2000" type="stmt"/>
            <line num="311" count="2000" type="stmt"/>
            <line num="313" count="2000" type="stmt"/>
            <line num="316" count="2" type="stmt"/>
            <line num="317" count="2" type="stmt"/>
            <line num="318" count="2000" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="322" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="328" count="8" type="method"/>
            <line num="330" count="8" type="stmt"/>
            <line num="331" count="448" type="stmt"/>
            <line num="333" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="randomInt(int,int) : int" num="336" count="12000" type="method"/>
            <line num="337" count="12000" type="stmt"/>
            <line num="338" count="12000" type="stmt"/>
            <line num="339" count="12000" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeVolatilityCube() : VolatilityCube" num="342" count="8" type="method"/>
            <line num="344" count="8" type="stmt"/>
            <line num="345" count="8" type="stmt"/>
            <line num="346" count="8" type="stmt"/>
            <line num="347" count="8" type="stmt"/>
            <line num="349" count="8" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeSwapRateTable() : DataTable" num="353" count="8" type="method"/>
            <line num="355" count="8" type="stmt"/>
            <line num="356" count="8" type="stmt"/>
            <line num="357" count="8" type="stmt"/>
            <line num="359" count="8" type="stmt"/>
            <line num="360" count="40" type="stmt"/>
            <line num="361" count="200" type="stmt"/>
            <line num="362" count="200" type="stmt"/>
            <line num="364" count="200" type="stmt"/>
            <line num="365" count="200" type="stmt"/>
            <line num="367" count="200" type="stmt"/>
            <line num="368" count="200" type="stmt"/>
            <line num="369" count="200" type="stmt"/>
            <line num="371" count="200" type="stmt"/>
            <line num="375" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="375" type="cond"/>
            <line num="376" count="8" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="makeBaseVolTable(DataTable,DataTable,DataTable) : DataTable" num="384" count="8" type="method"/>
            <line num="386" count="8" type="stmt"/>
            <line num="387" count="8" type="stmt"/>
            <line num="388" count="8" type="stmt"/>
            <line num="390" count="8" type="stmt"/>
            <line num="391" count="40" type="stmt"/>
            <line num="392" count="200" type="stmt"/>
            <line num="393" count="200" type="stmt"/>
            <line num="395" count="200" type="stmt"/>
            <line num="399" count="8" type="stmt"/>
            <line num="400" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="400" type="cond"/>
            <line num="401" count="8" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="409" count="8" type="stmt"/>
            <line num="412" count="8" type="stmt"/>
            <line num="413" count="8" type="stmt"/>
            <line num="414" count="8" type="stmt"/>
            <line num="415" count="8" type="stmt"/>
            <line num="416" count="40" type="stmt"/>
            <line num="418" count="200" type="stmt"/>
            <line num="419" count="200" type="stmt"/>
            <line num="421" count="200" type="stmt"/>
            <line num="422" count="200" type="stmt"/>
            <line num="423" count="200" type="stmt"/>
            <line num="425" count="200" type="stmt"/>
            <line num="426" count="200" type="stmt"/>
            <line num="428" count="200" type="stmt"/>
            <line num="429" count="200" type="stmt"/>
            <line num="430" count="200" type="stmt"/>
            <line num="435" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="435" type="cond"/>
            <line num="436" count="8" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="makeDummyTable(String,double) : DataTable" num="444" count="16" type="method"/>
            <line num="446" count="16" type="stmt"/>
            <line num="447" count="16" type="stmt"/>
            <line num="448" count="16" type="stmt"/>
            <line num="450" count="16" type="stmt"/>
            <line num="451" count="80" type="stmt"/>
            <line num="452" count="400" type="stmt"/>
            <line num="453" count="400" type="stmt"/>
            <line num="454" count="400" type="stmt"/>
            <line num="458" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="458" type="cond"/>
            <line num="459" count="16" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.optimizer">
         <metrics coveredelements="257" complexity="72" loc="759" methods="35" classes="6" statements="295" coveredconditionals="30" coveredmethods="27" elements="400" ncloc="520" files="6" conditionals="70" coveredstatements="200"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/LevenbergMarquardtTest.java" name="LevenbergMarquardtTest.java">
            <metrics coveredelements="149" coveredconditionals="20" complexity="23" loc="299" coveredmethods="13" methods="13" elements="149" classes="1" ncloc="202" statements="116" conditionals="20" coveredstatements="116"/>
            <class name="LevenbergMarquardtTest">
               <metrics coveredelements="149" complexity="23" methods="13" testruns="12" statements="116" coveredconditionals="20" coveredmethods="13" elements="149" testfailures="0" testduration="0.18600000000000003" conditionals="20" coveredstatements="116" testpasses="12"/>
            </class>
            <line complexity="3" visibility="public" signature="testSmallLinearSystem() : void" num="22" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="27" count="64" type="method"/>
            <line num="29" count="64" type="stmt"/>
            <line num="30" count="64" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="44" type="cond"/>
            <line num="45" count="4" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="62" type="cond"/>
            <line num="63" count="4" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedOptimizer() : void" num="73" testsuccess="true" count="2" testduration="0.058" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="84" count="322" type="method"/>
            <line num="86" count="322" type="stmt"/>
            <line num="87" count="322" type="stmt"/>
            <line num="88" count="322" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="96" type="cond"/>
            <line num="97" count="6" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="102" type="cond"/>
            <line num="103" count="6" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRosenbrockFunction() : void" num="112" testsuccess="true" count="2" testduration="0.007" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="123" count="58" type="method"/>
            <line num="125" count="58" type="stmt"/>
            <line num="126" count="58" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="134" type="cond"/>
            <line num="135" count="4" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="140" type="cond"/>
            <line num="141" count="4" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="testRosenbrockFunctionWithList() : void" num="151" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="170" count="58" type="method"/>
            <line num="172" count="58" type="stmt"/>
            <line num="173" count="58" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="181" type="cond"/>
            <line num="182" count="4" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="187" type="cond"/>
            <line num="188" count="4" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunction() : void" num="206" testsuccess="true" count="2" testduration="0.009" type="method"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="225" count="878" type="method"/>
            <line num="227" count="878" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="238" type="cond"/>
            <line num="239" count="4" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="257" testsuccess="true" count="2" testduration="0.019" type="method"/>
            <line num="259" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="271" count="390" type="method"/>
            <line num="273" count="390" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(double[],double[][]) : void" num="276" count="182" type="method"/>
            <line num="278" count="182" type="stmt"/>
            <line num="279" count="182" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="289" type="cond"/>
            <line num="290" count="4" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="295" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/OptimizerFactoryTest.java" name="OptimizerFactoryTest.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="5" loc="63" coveredmethods="4" methods="4" elements="22" classes="1" ncloc="40" statements="16" conditionals="2" coveredstatements="16"/>
            <class name="OptimizerFactoryTest">
               <metrics coveredelements="22" complexity="5" methods="4" testruns="4" statements="16" coveredconditionals="2" coveredmethods="4" elements="22" testfailures="0" testduration="0.28" conditionals="2" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testRosenbrockFunctionWithCMAES() : void" num="18" testsuccess="true" count="2" testduration="0.145" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRosenbrockFunctionWithLevenbergMarquard() : void" num="25" testsuccess="true" count="2" testduration="0.011" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testOptimizerWithRosenbrockFunction(OptimizerFactory) : void" num="32" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(double[],double[]) : void" num="34" count="1822" type="method"/>
            <line num="36" count="1822" type="stmt"/>
            <line num="37" count="1822" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="53" type="cond"/>
            <line num="54" count="8" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticLevenbergMarquardtTest.java" name="StochasticLevenbergMarquardtTest.java">
            <metrics coveredelements="43" coveredconditionals="4" complexity="7" loc="100" coveredmethods="5" methods="5" elements="43" classes="1" ncloc="63" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="StochasticLevenbergMarquardtTest">
               <metrics coveredelements="43" complexity="7" methods="5" testruns="4" statements="34" coveredconditionals="4" coveredmethods="5" elements="43" testfailures="0" testduration="0.5630000000000001" conditionals="4" coveredstatements="34" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="20" testsuccess="true" count="2" testduration="0.188" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="39" count="508" type="method"/>
            <line num="41" count="508" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="51" type="cond"/>
            <line num="52" count="4" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="57" testsuccess="true" count="2" testduration="0.099" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="77" count="508" type="method"/>
            <line num="79" count="508" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="82" count="506" type="method"/>
            <line num="84" count="506" type="stmt"/>
            <line num="85" count="506" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="95" type="cond"/>
            <line num="96" count="4" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticLevenbergMarquardtTestInverse.java" name="StochasticLevenbergMarquardtTestInverse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="101" coveredmethods="0" methods="4" elements="73" classes="1" ncloc="77" statements="49" conditionals="20" coveredstatements="0"/>
            <class name="StochasticLevenbergMarquardtTestInverse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="73" statements="49" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInverse() : void" num="17" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInverseMatrix(RandomVariable[][]) : RandomVariable[][]" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="multiply(RandomVariable[][],RandomVariable[][]) : RandomVariable[][]" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtTest.java" name="StochasticPathwiseLevenbergMarquardtTest.java">
            <metrics coveredelements="43" coveredconditionals="4" complexity="7" loc="96" coveredmethods="5" methods="5" elements="43" classes="1" ncloc="62" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="StochasticPathwiseLevenbergMarquardtTest">
               <metrics coveredelements="43" complexity="7" methods="5" testruns="4" statements="34" coveredconditionals="4" coveredmethods="5" elements="43" testfailures="0" testduration="0.291" conditionals="4" coveredstatements="34" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="16" testsuccess="true" count="2" testduration="0.037" type="method"/>
            <line num="18" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="35" count="854" type="method"/>
            <line num="37" count="854" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="47" type="cond"/>
            <line num="48" count="4" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBoothFunctionWithAnalyticDerivative() : void" num="53" testsuccess="true" count="2" testduration="0.106" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="73" count="508" type="method"/>
            <line num="75" count="508" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDerivatives(RandomVariable[],RandomVariable[][]) : void" num="78" count="506" type="method"/>
            <line num="80" count="506" type="stmt"/>
            <line num="81" count="506" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="91" type="cond"/>
            <line num="92" count="4" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/optimizer/StochasticPathwiseLevenbergMarquardtTestInverse.java" name="StochasticPathwiseLevenbergMarquardtTestInverse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="100" coveredmethods="0" methods="4" elements="70" classes="1" ncloc="76" statements="46" conditionals="20" coveredstatements="0"/>
            <class name="StochasticPathwiseLevenbergMarquardtTestInverse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="4" elements="70" statements="46" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInverse() : void" num="17" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getInverseMatrix(RandomVariable[][]) : RandomVariable[][]" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setValues(RandomVariable[],RandomVariable[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="multiply(RandomVariable[][],RandomVariable[][]) : RandomVariable[][]" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.time.daycount">
         <metrics coveredelements="24" complexity="6" loc="252" methods="3" classes="2" statements="15" coveredconditionals="6" coveredmethods="3" elements="24" ncloc="207" files="2" conditionals="6" coveredstatements="15"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/daycount/DayCountConvention_30E_360Test.java" name="DayCountConvention_30E_360Test.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="2" loc="108" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="87" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="DayCountConvention_30E_360Test">
               <metrics coveredelements="8" complexity="2" methods="1" testruns="2" statements="5" coveredconditionals="2" coveredmethods="1" elements="8" testfailures="0" testduration="0.014" conditionals="2" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="96" testsuccess="true" count="2" testduration="0.006" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line falsecount="2" truecount="44" num="99" type="cond"/>
            <line num="100" count="44" type="stmt"/>
            <line num="102" count="44" type="stmt"/>
            <line num="104" count="44" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/time/daycount/DayCountConvention_30E_360_ISDATest.java" name="DayCountConvention_30E_360_ISDATest.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="4" loc="144" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="120" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="DayCountConvention_30E_360_ISDATest">
               <metrics coveredelements="16" complexity="4" methods="2" testruns="4" statements="10" coveredconditionals="4" coveredmethods="2" elements="16" testfailures="0" testduration="0.018" conditionals="4" coveredstatements="10" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testAssumingEndDateIsNotATerminationDate() : void" num="121" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line falsecount="2" truecount="44" num="124" type="cond"/>
            <line num="125" count="44" type="stmt"/>
            <line num="127" count="44" type="stmt"/>
            <line num="129" count="44" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssumingEndDateIsATerminationDate() : void" num="133" testsuccess="true" count="2" testduration="0.009" type="method"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line falsecount="2" truecount="44" num="136" type="cond"/>
            <line num="137" count="44" type="stmt"/>
            <line num="139" count="44" type="stmt"/>
            <line num="141" count="44" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.information">
         <metrics coveredelements="8" complexity="2" loc="23" methods="2" classes="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" ncloc="17" files="1" conditionals="0" coveredstatements="6"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/information/LibraryTest.java" name="LibraryTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="23" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="LibraryTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="4" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.023" conditionals="0" coveredstatements="6" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testBuildString() : void" num="8" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="10" count="2" type="stmt"/>
            <line num="12" count="2" type="stmt"/>
            <line num="13" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVersionString() : void" num="16" testsuccess="true" count="2" testduration="0.012" type="method"/>
            <line num="18" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products">
         <metrics coveredelements="557" complexity="60" loc="1609" methods="28" classes="5" statements="514" coveredconditionals="56" coveredmethods="25" elements="604" ncloc="917" files="5" conditionals="62" coveredstatements="476"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/InterestRateProductTest.java" name="InterestRateProductTest.java">
            <metrics coveredelements="140" coveredconditionals="16" complexity="20" loc="443" coveredmethods="5" methods="8" elements="187" classes="1" ncloc="257" statements="157" conditionals="22" coveredstatements="119"/>
            <class name="InterestRateProductTest">
               <metrics coveredelements="140" complexity="20" methods="8" testruns="6" statements="157" coveredconditionals="16" coveredmethods="5" elements="187" testfailures="0" testduration="192.13400000000001" conditionals="22" coveredstatements="119" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InterestRateProductTest()" num="80" count="6" type="method"/>
            <line num="81" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLIBORMarketModel(LocalDateTime,int,int,double) : LIBORModelMonteCarloSimulationModel" num="87" count="6" type="method"/>
            <line num="93" count="6" type="stmt"/>
            <line num="94" count="6" type="stmt"/>
            <line num="95" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line num="126" count="6" type="stmt"/>
            <line num="131" count="6" type="stmt"/>
            <line num="139" count="6" type="stmt"/>
            <line num="147" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="153" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBond() : void" num="170" testsuccess="true" count="2" testduration="30.333" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line falsecount="2" truecount="82" num="179" type="cond"/>
            <line num="180" count="82" type="stmt"/>
            <line num="181" count="82" type="stmt"/>
            <line num="184" count="82" type="stmt"/>
            <line num="187" count="82" type="stmt"/>
            <line num="188" count="82" type="stmt"/>
            <line num="191" count="82" type="stmt"/>
            <line num="193" count="82" type="stmt"/>
            <line num="194" count="82" type="stmt"/>
            <line falsecount="82" truecount="1640" num="194" type="cond"/>
            <line num="195" count="1640" type="stmt"/>
            <line num="198" count="82" type="stmt"/>
            <line num="201" count="82" type="stmt"/>
            <line num="202" count="82" type="stmt"/>
            <line num="205" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="208" testsuccess="true" count="2" testduration="36.772" type="method"/>
            <line num="213" count="2" type="stmt"/>
            <line num="214" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="216" type="cond"/>
            <line num="218" count="60" type="stmt"/>
            <line num="219" count="60" type="stmt"/>
            <line num="221" count="60" type="stmt"/>
            <line num="225" count="60" type="stmt"/>
            <line num="226" count="60" type="stmt"/>
            <line num="227" count="60" type="stmt"/>
            <line num="228" count="60" type="stmt"/>
            <line num="230" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="230" type="cond"/>
            <line num="231" count="300" type="stmt"/>
            <line num="232" count="300" type="stmt"/>
            <line num="233" count="300" type="stmt"/>
            <line num="235" count="60" type="stmt"/>
            <line num="238" count="60" type="stmt"/>
            <line num="241" count="60" type="stmt"/>
            <line num="242" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="242" type="cond"/>
            <line num="243" count="300" type="stmt"/>
            <line num="246" count="60" type="stmt"/>
            <line num="247" count="60" type="stmt"/>
            <line num="248" count="60" type="stmt"/>
            <line num="251" count="60" type="stmt"/>
            <line num="252" count="60" type="stmt"/>
            <line num="255" count="60" type="stmt"/>
            <line num="256" count="60" type="stmt"/>
            <line num="259" count="60" type="stmt"/>
            <line num="260" count="60" type="stmt"/>
            <line num="263" count="60" type="stmt"/>
            <line num="264" count="60" type="stmt"/>
            <line num="267" count="60" type="stmt"/>
            <line num="268" count="60" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwap() : void" num="273" testsuccess="true" count="2" testduration="30.133" type="method"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="288" type="cond"/>
            <line num="290" count="60" type="stmt"/>
            <line num="291" count="60" type="stmt"/>
            <line num="293" count="60" type="stmt"/>
            <line num="297" count="60" type="stmt"/>
            <line num="298" count="60" type="stmt"/>
            <line num="299" count="60" type="stmt"/>
            <line num="300" count="60" type="stmt"/>
            <line num="302" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="302" type="cond"/>
            <line num="303" count="300" type="stmt"/>
            <line num="304" count="300" type="stmt"/>
            <line num="305" count="300" type="stmt"/>
            <line num="307" count="60" type="stmt"/>
            <line num="310" count="60" type="stmt"/>
            <line num="313" count="60" type="stmt"/>
            <line num="314" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="314" type="cond"/>
            <line num="315" count="300" type="stmt"/>
            <line num="318" count="60" type="stmt"/>
            <line num="319" count="60" type="stmt"/>
            <line num="320" count="60" type="stmt"/>
            <line num="321" count="60" type="stmt"/>
            <line num="323" count="60" type="stmt"/>
            <line num="324" count="60" type="stmt"/>
            <line num="325" count="60" type="stmt"/>
            <line num="326" count="60" type="stmt"/>
            <line num="329" count="60" type="stmt"/>
            <line num="330" count="60" type="stmt"/>
            <line num="331" count="60" type="stmt"/>
            <line num="332" count="60" type="stmt"/>
            <line num="333" count="60" type="stmt"/>
            <line num="336" count="60" type="stmt"/>
            <line num="337" count="60" type="stmt"/>
            <line num="338" count="60" type="stmt"/>
            <line num="339" count="60" type="stmt"/>
            <line num="340" count="60" type="stmt"/>
            <line num="343" count="60" type="stmt"/>
            <line num="344" count="60" type="stmt"/>
            <line num="347" count="2" type="stmt"/>
            <line num="348" count="2" type="stmt"/>
            <line num="349" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParSwaprate(LIBORModelMonteCarloSimulationModel,double[]) : double" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="flexiCapTest(LIBORModelMonteCarloSimulationModel) : void" num="383" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="407" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SimpleCappedFlooredFloatingRateBondTest.java" name="SimpleCappedFlooredFloatingRateBondTest.java">
            <metrics coveredelements="63" coveredconditionals="10" complexity="9" loc="210" coveredmethods="4" methods="4" elements="63" classes="1" ncloc="127" statements="49" conditionals="10" coveredstatements="49"/>
            <class name="SimpleCappedFlooredFloatingRateBondTest">
               <metrics coveredelements="63" complexity="9" methods="4" testruns="4" statements="49" coveredconditionals="10" coveredmethods="4" elements="63" testfailures="0" testduration="257.846" conditionals="10" coveredstatements="49" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="50" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimpleCappedFlooredFloatingRateBondTest(Measure)" num="62" count="4" type="method"/>
            <line num="64" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="67" count="4" type="method"/>
            <line num="73" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="92" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="95" type="cond"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,Measure) : LIBORModelMonteCarloSimulationModel" num="100" count="4" type="method"/>
            <line num="102" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="125" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line falsecount="4" truecount="320" num="146" type="cond"/>
            <line num="147" count="320" type="stmt"/>
            <line falsecount="320" truecount="25600" num="147" type="cond"/>
            <line num="149" count="25600" type="stmt"/>
            <line num="150" count="25600" type="stmt"/>
            <line num="151" count="25600" type="stmt"/>
            <line num="153" count="25600" type="stmt"/>
            <line num="154" count="25600" type="stmt"/>
            <line falsecount="12640" truecount="12960" num="154" type="cond"/>
            <line num="155" count="12960" type="stmt"/>
            <line num="157" count="12640" type="stmt"/>
            <line num="161" count="25600" type="stmt"/>
            <line num="164" count="4" type="stmt"/>
            <line num="169" count="4" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line num="171" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line num="190" count="4" type="stmt"/>
            <line num="193" count="4" type="stmt"/>
            <line num="196" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SwapLegTest.java" name="SwapLegTest.java">
            <metrics coveredelements="182" coveredconditionals="6" complexity="10" loc="481" coveredmethods="7" methods="7" elements="182" classes="1" ncloc="260" statements="169" conditionals="6" coveredstatements="169"/>
            <class name="SwapLegTest">
               <metrics coveredelements="182" complexity="10" methods="7" testruns="10" statements="169" coveredconditionals="6" coveredmethods="7" elements="182" testfailures="0" testduration="566.1800000000001" conditionals="6" coveredstatements="169" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testFloatLeg() : void" num="62" testsuccess="true" count="2" testduration="62.563" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFixLeg() : void" num="120" testsuccess="true" count="2" testduration="49.476" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCMSFloatLeg() : void" num="173" testsuccess="true" count="2" testduration="54.617" type="method"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line num="201" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCMSSpreadLeg() : void" num="237" testsuccess="true" count="2" testduration="65.131" type="method"/>
            <line num="243" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="278" count="2" type="stmt"/>
            <line num="279" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLIBORInArrearsFloatLeg() : void" num="301" testsuccess="true" count="2" testduration="50.542" type="method"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="314" count="2" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="322" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line num="330" count="2" type="stmt"/>
            <line num="331" count="2" type="stmt"/>
            <line num="332" count="2" type="stmt"/>
            <line num="337" count="2" type="stmt"/>
            <line num="338" count="2" type="stmt"/>
            <line num="339" count="2" type="stmt"/>
            <line num="344" count="2" type="stmt"/>
            <line num="345" count="2" type="stmt"/>
            <line num="346" count="2" type="stmt"/>
            <line num="351" count="2" type="stmt"/>
            <line num="352" count="2" type="stmt"/>
            <line num="353" count="2" type="stmt"/>
            <line num="354" count="2" type="stmt"/>
            <line num="356" count="2" type="stmt"/>
            <line num="358" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="361" count="10" type="method"/>
            <line num="363" count="10" type="stmt"/>
            <line num="367" count="10" type="stmt"/>
            <line num="384" count="10" type="stmt"/>
            <line num="390" count="10" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="393" count="10" type="method"/>
            <line num="396" count="10" type="stmt"/>
            <line num="401" count="10" type="stmt"/>
            <line num="402" count="10" type="stmt"/>
            <line num="403" count="10" type="stmt"/>
            <line num="408" count="10" type="stmt"/>
            <line num="409" count="10" type="stmt"/>
            <line num="411" count="10" type="stmt"/>
            <line num="416" count="10" type="stmt"/>
            <line num="417" count="10" type="stmt"/>
            <line falsecount="10" truecount="800" num="417" type="cond"/>
            <line num="418" count="800" type="stmt"/>
            <line falsecount="800" truecount="64000" num="418" type="cond"/>
            <line num="420" count="64000" type="stmt"/>
            <line num="421" count="64000" type="stmt"/>
            <line num="422" count="64000" type="stmt"/>
            <line num="424" count="64000" type="stmt"/>
            <line num="425" count="64000" type="stmt"/>
            <line falsecount="31600" truecount="32400" num="425" type="cond"/>
            <line num="426" count="32400" type="stmt"/>
            <line num="428" count="31600" type="stmt"/>
            <line num="432" count="64000" type="stmt"/>
            <line num="435" count="10" type="stmt"/>
            <line num="440" count="10" type="stmt"/>
            <line num="448" count="10" type="stmt"/>
            <line num="456" count="10" type="stmt"/>
            <line num="459" count="10" type="stmt"/>
            <line num="462" count="10" type="stmt"/>
            <line num="465" count="10" type="stmt"/>
            <line num="470" count="10" type="stmt"/>
            <line num="473" count="10" type="stmt"/>
            <line num="479" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SwaptionAnalyticApproximationTest.java" name="SwaptionAnalyticApproximationTest.java">
            <metrics coveredelements="96" coveredconditionals="12" complexity="12" loc="263" coveredmethods="6" methods="6" elements="96" classes="1" ncloc="154" statements="78" conditionals="12" coveredstatements="78"/>
            <class name="SwaptionAnalyticApproximationTest">
               <metrics coveredelements="96" complexity="12" methods="6" testruns="4" statements="78" coveredconditionals="12" coveredmethods="6" elements="96" testfailures="0" testduration="114.682" conditionals="12" coveredstatements="78" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleCurveModel() : void" num="49" testsuccess="true" count="2" testduration="23.497" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiCurveModel() : void" num="58" testsuccess="true" count="2" testduration="24.392" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testModel(LIBORModelMonteCarloSimulationModel,boolean) : void" num="67" count="4" type="method"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line falsecount="4" truecount="120" num="76" type="cond"/>
            <line num="78" count="120" type="stmt"/>
            <line num="79" count="120" type="stmt"/>
            <line num="81" count="120" type="stmt"/>
            <line num="85" count="120" type="stmt"/>
            <line num="86" count="120" type="stmt"/>
            <line num="87" count="120" type="stmt"/>
            <line num="88" count="120" type="stmt"/>
            <line num="90" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="90" type="cond"/>
            <line num="91" count="600" type="stmt"/>
            <line num="92" count="600" type="stmt"/>
            <line num="93" count="600" type="stmt"/>
            <line num="95" count="120" type="stmt"/>
            <line num="98" count="120" type="stmt"/>
            <line num="101" count="120" type="stmt"/>
            <line num="102" count="120" type="stmt"/>
            <line falsecount="120" truecount="600" num="102" type="cond"/>
            <line num="103" count="600" type="stmt"/>
            <line num="107" count="120" type="stmt"/>
            <line num="108" count="120" type="stmt"/>
            <line num="109" count="120" type="stmt"/>
            <line num="112" count="120" type="stmt"/>
            <line num="113" count="120" type="stmt"/>
            <line num="114" count="120" type="stmt"/>
            <line num="117" count="120" type="stmt"/>
            <line num="118" count="120" type="stmt"/>
            <line num="119" count="120" type="stmt"/>
            <line num="122" count="120" type="stmt"/>
            <line num="123" count="120" type="stmt"/>
            <line num="125" count="120" type="stmt"/>
            <line num="126" count="120" type="stmt"/>
            <line num="128" count="120" type="stmt"/>
            <line num="129" count="120" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSingleCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="141" count="2" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMultiCurveLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="157" count="2" type="method"/>
            <line num="160" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="177" count="4" type="method"/>
            <line num="183" count="4" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line num="185" count="4" type="stmt"/>
            <line num="190" count="4" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line num="193" count="4" type="stmt"/>
            <line num="198" count="4" type="stmt"/>
            <line num="199" count="4" type="stmt"/>
            <line falsecount="4" truecount="160" num="199" type="cond"/>
            <line num="200" count="160" type="stmt"/>
            <line falsecount="160" truecount="6400" num="200" type="cond"/>
            <line num="202" count="6400" type="stmt"/>
            <line num="203" count="6400" type="stmt"/>
            <line num="204" count="6400" type="stmt"/>
            <line num="206" count="6400" type="stmt"/>
            <line num="207" count="6400" type="stmt"/>
            <line falsecount="3120" truecount="3280" num="207" type="cond"/>
            <line num="208" count="3280" type="stmt"/>
            <line num="210" count="3120" type="stmt"/>
            <line num="214" count="6400" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="238" count="4" type="stmt"/>
            <line num="241" count="4" type="stmt"/>
            <line num="244" count="4" type="stmt"/>
            <line num="247" count="4" type="stmt"/>
            <line num="252" count="4" type="stmt"/>
            <line num="255" count="4" type="stmt"/>
            <line num="261" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/SwaptionNormalTest.java" name="SwaptionNormalTest.java">
            <metrics coveredelements="76" coveredconditionals="12" complexity="9" loc="212" coveredmethods="3" methods="3" elements="76" classes="1" ncloc="119" statements="61" conditionals="12" coveredstatements="61"/>
            <class name="SwaptionNormalTest">
               <metrics coveredelements="76" complexity="9" methods="3" testruns="2" statements="61" coveredconditionals="12" coveredmethods="3" elements="76" testfailures="0" testduration="80.589" conditionals="12" coveredstatements="61" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SwaptionNormalTest()" num="50" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSwaption() : void" num="54" testsuccess="true" count="2" testduration="40.489" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line falsecount="2" truecount="60" num="63" type="cond"/>
            <line num="64" count="60" type="stmt"/>
            <line num="65" count="60" type="stmt"/>
            <line num="67" count="60" type="stmt"/>
            <line num="71" count="60" type="stmt"/>
            <line num="72" count="60" type="stmt"/>
            <line num="73" count="60" type="stmt"/>
            <line num="74" count="60" type="stmt"/>
            <line num="77" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="77" type="cond"/>
            <line num="78" count="300" type="stmt"/>
            <line num="79" count="300" type="stmt"/>
            <line num="80" count="300" type="stmt"/>
            <line num="82" count="60" type="stmt"/>
            <line num="85" count="60" type="stmt"/>
            <line num="88" count="60" type="stmt"/>
            <line num="89" count="60" type="stmt"/>
            <line falsecount="60" truecount="300" num="89" type="cond"/>
            <line num="90" count="300" type="stmt"/>
            <line num="95" count="60" type="stmt"/>
            <line num="96" count="60" type="stmt"/>
            <line num="97" count="60" type="stmt"/>
            <line num="102" count="60" type="stmt"/>
            <line num="104" count="60" type="stmt"/>
            <line num="108" count="60" type="stmt"/>
            <line num="109" count="60" type="stmt"/>
            <line num="111" count="60" type="stmt"/>
            <line num="112" count="60" type="stmt"/>
            <line num="115" count="60" type="stmt"/>
            <line num="116" count="60" type="stmt"/>
            <line num="118" count="60" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double) : LIBORModelMonteCarloSimulationModel" num="122" count="2" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line falsecount="2" truecount="80" num="151" type="cond"/>
            <line num="152" count="80" type="stmt"/>
            <line falsecount="80" truecount="3200" num="152" type="cond"/>
            <line num="154" count="3200" type="stmt"/>
            <line num="155" count="3200" type="stmt"/>
            <line num="156" count="3200" type="stmt"/>
            <line num="158" count="3200" type="stmt"/>
            <line num="159" count="3200" type="stmt"/>
            <line falsecount="1560" truecount="1640" num="159" type="cond"/>
            <line num="160" count="1640" type="stmt"/>
            <line num="163" count="1560" type="stmt"/>
            <line num="168" count="3200" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line num="210" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.products.indices">
         <metrics coveredelements="335" complexity="34" loc="841" methods="20" classes="3" statements="299" coveredconditionals="20" coveredmethods="20" elements="339" ncloc="570" files="2" conditionals="20" coveredstatements="295"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndexMultiCurveTest.java" name="LIBORIndexMultiCurveTest.java">
            <metrics coveredelements="225" coveredconditionals="8" complexity="20" loc="511" coveredmethods="14" methods="14" elements="227" classes="1" ncloc="346" statements="205" conditionals="8" coveredstatements="203"/>
            <class name="LIBORIndexMultiCurveTest">
               <metrics coveredelements="225" complexity="20" methods="14" testruns="12" statements="205" coveredconditionals="8" coveredmethods="14" elements="227" testfailures="0" testduration="1948.385" conditionals="8" coveredstatements="203" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="83" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndexMultiCurveTest(Integer,String)" num="111" count="12" type="method"/>
            <line num="112" count="12" type="stmt"/>
            <line num="115" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFRAMonteCarloVersusAnalytic() : void" num="118" count="12" type="method"/>
            <line num="121" count="12" type="stmt"/>
            <line num="122" count="12" type="stmt"/>
            <line num="124" count="12" type="stmt"/>
            <line falsecount="12" truecount="120" num="124" type="cond"/>
            <line num="125" count="120" type="stmt"/>
            <line num="126" count="120" type="stmt"/>
            <line num="128" count="120" type="stmt"/>
            <line num="129" count="120" type="stmt"/>
            <line num="131" count="120" type="stmt"/>
            <line num="133" count="120" type="stmt"/>
            <line num="134" count="120" type="stmt"/>
            <line num="135" count="120" type="stmt"/>
            <line num="137" count="120" type="stmt"/>
            <line num="138" count="120" type="stmt"/>
            <line num="139" count="120" type="stmt"/>
            <line num="141" count="120" type="stmt"/>
            <line num="142" count="120" type="stmt"/>
            <line num="143" count="120" type="stmt"/>
            <line num="145" count="120" type="stmt"/>
            <line num="147" count="120" type="stmt"/>
            <line num="149" count="120" type="stmt"/>
            <line num="151" count="120" type="stmt"/>
            <line num="157" count="120" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="createCurves() : AnalyticModel" num="163" count="12" type="method"/>
            <line num="169" count="12" type="stmt"/>
            <line num="174" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(String) : String" num="175" count="576" type="method"/>
            <line num="177" count="576" type="stmt"/>
            <line num="178" count="384" type="stmt"/>
            <line num="179" count="384" type="stmt"/>
            <line num="180" count="192" type="stmt"/>
            <line num="181" count="192" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="188" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="189" count="192" type="method"/>
            <line num="191" count="192" type="stmt"/>
            <line num="192" count="192" type="stmt"/>
            <line num="193" count="192" type="stmt"/>
            <line num="194" count="192" type="stmt"/>
            <line num="195" count="192" type="stmt"/>
            <line num="199" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="200" count="240" type="method"/>
            <line num="202" count="240" type="stmt"/>
            <line num="203" count="240" type="stmt"/>
            <line num="204" count="240" type="stmt"/>
            <line num="205" count="240" type="stmt"/>
            <line num="206" count="240" type="stmt"/>
            <line num="210" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="211" count="180" type="method"/>
            <line num="213" count="180" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="214" count="180" type="method"/>
            <line num="216" count="180" type="stmt"/>
            <line num="217" count="180" type="stmt"/>
            <line num="218" count="180" type="stmt"/>
            <line num="219" count="180" type="stmt"/>
            <line num="220" count="180" type="stmt"/>
            <line num="226" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="227" count="192" type="method"/>
            <line num="229" count="192" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="230" count="192" type="method"/>
            <line num="232" count="192" type="stmt"/>
            <line num="234" count="192" type="stmt"/>
            <line num="235" count="192" type="stmt"/>
            <line num="236" count="192" type="stmt"/>
            <line num="237" count="192" type="stmt"/>
            <line num="238" count="192" type="stmt"/>
            <line num="239" count="192" type="stmt"/>
            <line num="245" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,String) : BiFunction&lt;String, Double, CalibrationSpec&gt;" num="246" count="192" type="method"/>
            <line num="248" count="192" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(String,Double) : CalibrationSpec" num="249" count="192" type="method"/>
            <line num="251" count="192" type="stmt"/>
            <line num="252" count="192" type="stmt"/>
            <line num="254" count="192" type="stmt"/>
            <line num="255" count="192" type="stmt"/>
            <line num="257" count="192" type="stmt"/>
            <line num="258" count="192" type="stmt"/>
            <line num="259" count="192" type="stmt"/>
            <line num="261" count="192" type="stmt"/>
            <line num="262" count="192" type="stmt"/>
            <line num="271" count="12" type="stmt"/>
            <line num="272" count="12" type="stmt"/>
            <line num="273" count="12" type="stmt"/>
            <line num="275" count="12" type="stmt"/>
            <line num="276" count="12" type="stmt"/>
            <line num="277" count="12" type="stmt"/>
            <line num="278" count="12" type="stmt"/>
            <line num="280" count="12" type="stmt"/>
            <line num="282" count="12" type="stmt"/>
            <line num="287" count="12" type="stmt"/>
            <line num="288" count="12" type="stmt"/>
            <line num="289" count="12" type="stmt"/>
            <line num="290" count="12" type="stmt"/>
            <line num="291" count="12" type="stmt"/>
            <line num="292" count="12" type="stmt"/>
            <line num="293" count="12" type="stmt"/>
            <line num="294" count="12" type="stmt"/>
            <line num="295" count="12" type="stmt"/>
            <line num="296" count="12" type="stmt"/>
            <line num="297" count="12" type="stmt"/>
            <line num="298" count="12" type="stmt"/>
            <line num="299" count="12" type="stmt"/>
            <line num="300" count="12" type="stmt"/>
            <line num="301" count="12" type="stmt"/>
            <line num="302" count="12" type="stmt"/>
            <line num="307" count="12" type="stmt"/>
            <line num="308" count="12" type="stmt"/>
            <line num="309" count="12" type="stmt"/>
            <line num="310" count="12" type="stmt"/>
            <line num="311" count="12" type="stmt"/>
            <line num="312" count="12" type="stmt"/>
            <line num="313" count="12" type="stmt"/>
            <line num="314" count="12" type="stmt"/>
            <line num="315" count="12" type="stmt"/>
            <line num="316" count="12" type="stmt"/>
            <line num="317" count="12" type="stmt"/>
            <line num="318" count="12" type="stmt"/>
            <line num="319" count="12" type="stmt"/>
            <line num="320" count="12" type="stmt"/>
            <line num="321" count="12" type="stmt"/>
            <line num="322" count="12" type="stmt"/>
            <line num="323" count="12" type="stmt"/>
            <line num="324" count="12" type="stmt"/>
            <line num="325" count="12" type="stmt"/>
            <line num="326" count="12" type="stmt"/>
            <line num="331" count="12" type="stmt"/>
            <line num="332" count="12" type="stmt"/>
            <line num="333" count="12" type="stmt"/>
            <line num="334" count="12" type="stmt"/>
            <line num="335" count="12" type="stmt"/>
            <line num="336" count="12" type="stmt"/>
            <line num="337" count="12" type="stmt"/>
            <line num="338" count="12" type="stmt"/>
            <line num="343" count="12" type="stmt"/>
            <line num="344" count="12" type="stmt"/>
            <line num="345" count="12" type="stmt"/>
            <line num="346" count="12" type="stmt"/>
            <line num="347" count="12" type="stmt"/>
            <line num="348" count="12" type="stmt"/>
            <line num="349" count="12" type="stmt"/>
            <line num="350" count="12" type="stmt"/>
            <line num="351" count="12" type="stmt"/>
            <line num="352" count="12" type="stmt"/>
            <line num="353" count="12" type="stmt"/>
            <line num="354" count="12" type="stmt"/>
            <line num="355" count="12" type="stmt"/>
            <line num="356" count="12" type="stmt"/>
            <line num="357" count="12" type="stmt"/>
            <line num="358" count="12" type="stmt"/>
            <line num="364" count="12" type="stmt"/>
            <line num="365" count="12" type="stmt"/>
            <line num="366" count="12" type="stmt"/>
            <line num="367" count="12" type="stmt"/>
            <line num="368" count="12" type="stmt"/>
            <line num="369" count="12" type="stmt"/>
            <line num="370" count="12" type="stmt"/>
            <line num="376" count="12" type="stmt"/>
            <line num="377" count="12" type="stmt"/>
            <line num="378" count="12" type="stmt"/>
            <line num="379" count="12" type="stmt"/>
            <line num="380" count="12" type="stmt"/>
            <line num="381" count="12" type="stmt"/>
            <line num="382" count="12" type="stmt"/>
            <line num="383" count="12" type="stmt"/>
            <line num="384" count="12" type="stmt"/>
            <line num="385" count="12" type="stmt"/>
            <line num="386" count="12" type="stmt"/>
            <line num="387" count="12" type="stmt"/>
            <line num="388" count="12" type="stmt"/>
            <line num="389" count="12" type="stmt"/>
            <line num="390" count="12" type="stmt"/>
            <line num="391" count="12" type="stmt"/>
            <line num="396" count="12" type="stmt"/>
            <line num="401" count="12" type="stmt"/>
            <line num="403" count="12" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(String,Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="406" count="12" type="method"/>
            <line num="414" count="12" type="stmt"/>
            <line num="415" count="12" type="stmt"/>
            <line num="416" count="12" type="stmt"/>
            <line num="418" count="12" type="stmt"/>
            <line num="420" count="12" type="stmt"/>
            <line num="425" count="12" type="stmt"/>
            <line num="427" count="12" type="stmt"/>
            <line num="428" count="12" type="stmt"/>
            <line num="430" count="12" type="stmt"/>
            <line num="431" count="12" type="stmt"/>
            <line num="433" count="12" type="stmt"/>
            <line num="434" count="12" type="stmt"/>
            <line num="439" count="12" type="stmt"/>
            <line num="440" count="12" type="stmt"/>
            <line num="442" count="12" type="stmt"/>
            <line num="447" count="12" type="stmt"/>
            <line num="448" count="12" type="stmt"/>
            <line falsecount="12" truecount="480" num="448" type="cond"/>
            <line num="449" count="480" type="stmt"/>
            <line falsecount="480" truecount="19200" num="449" type="cond"/>
            <line num="451" count="19200" type="stmt"/>
            <line num="452" count="19200" type="stmt"/>
            <line num="453" count="19200" type="stmt"/>
            <line num="455" count="19200" type="stmt"/>
            <line num="456" count="19200" type="stmt"/>
            <line falsecount="9360" truecount="9840" num="456" type="cond"/>
            <line num="457" count="9840" type="stmt"/>
            <line num="459" count="9360" type="stmt"/>
            <line num="463" count="19200" type="stmt"/>
            <line num="466" count="12" type="stmt"/>
            <line num="471" count="12" type="stmt"/>
            <line num="479" count="12" type="stmt"/>
            <line num="487" count="12" type="stmt"/>
            <line num="490" count="12" type="stmt"/>
            <line num="493" count="12" type="stmt"/>
            <line num="496" count="12" type="stmt"/>
            <line num="501" count="12" type="stmt"/>
            <line num="503" count="12" type="stmt"/>
            <line num="509" count="12" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/products/indices/LIBORIndexTest.java" name="LIBORIndexTest.java">
            <metrics coveredelements="110" coveredconditionals="12" complexity="14" loc="330" coveredmethods="6" methods="6" elements="112" classes="2" ncloc="224" statements="94" conditionals="12" coveredstatements="92"/>
            <class name="LIBORIndexTest">
               <metrics coveredelements="110" complexity="14" methods="6" testruns="120" statements="94" coveredconditionals="12" coveredmethods="6" elements="112" testfailures="0" testduration="7662.404000000003" conditionals="12" coveredstatements="92" testpasses="120"/>
            </class>
            <class name="LIBORIndexTest.CurveSetup">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="73" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="LIBORIndexTest(Integer,CurveSetup)" num="109" count="120" type="method"/>
            <line num="112" count="120" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSinglePeriods() : void" num="115" count="40" type="method"/>
            <line num="118" count="40" type="stmt"/>
            <line num="119" count="40" type="stmt"/>
            <line num="121" count="40" type="stmt"/>
            <line falsecount="40" truecount="400" num="121" type="cond"/>
            <line num="122" count="400" type="stmt"/>
            <line num="123" count="400" type="stmt"/>
            <line num="124" count="400" type="stmt"/>
            <line num="126" count="400" type="stmt"/>
            <line num="127" count="400" type="stmt"/>
            <line num="128" count="400" type="stmt"/>
            <line num="130" count="400" type="stmt"/>
            <line num="132" count="400" type="stmt"/>
            <line num="136" count="400" type="stmt"/>
            <line num="138" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiPeriodFloater() : void" num="141" count="40" type="method"/>
            <line num="144" count="40" type="stmt"/>
            <line num="145" count="40" type="stmt"/>
            <line num="146" count="40" type="stmt"/>
            <line falsecount="40" truecount="400" num="146" type="cond"/>
            <line num="147" count="400" type="stmt"/>
            <line num="148" count="400" type="stmt"/>
            <line num="149" count="400" type="stmt"/>
            <line num="151" count="400" type="stmt"/>
            <line num="152" count="400" type="stmt"/>
            <line num="153" count="400" type="stmt"/>
            <line num="155" count="40" type="stmt"/>
            <line num="156" count="40" type="stmt"/>
            <line num="158" count="40" type="stmt"/>
            <line num="160" count="40" type="stmt"/>
            <line num="161" count="40" type="stmt"/>
            <line num="165" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUnalignedPeriods() : void" num="168" count="40" type="method"/>
            <line num="171" count="40" type="stmt"/>
            <line num="172" count="40" type="stmt"/>
            <line num="174" count="40" type="stmt"/>
            <line num="176" count="40" type="stmt"/>
            <line falsecount="40" truecount="40" num="176" type="cond"/>
            <line num="177" count="40" type="stmt"/>
            <line num="178" count="40" type="stmt"/>
            <line num="179" count="40" type="stmt"/>
            <line num="182" count="40" type="stmt"/>
            <line num="183" count="40" type="stmt"/>
            <line num="185" count="40" type="stmt"/>
            <line num="186" count="40" type="stmt"/>
            <line num="187" count="40" type="stmt"/>
            <line num="189" count="40" type="stmt"/>
            <line num="190" count="40" type="stmt"/>
            <line num="192" count="40" type="stmt"/>
            <line num="194" count="40" type="stmt"/>
            <line num="198" count="40" type="stmt"/>
            <line complexity="6" visibility="public" signature="createLIBORMarketModel(CurveSetup,Measure,int,int,double) : LIBORModelMonteCarloSimulationModel" num="201" count="120" type="method"/>
            <line num="209" count="120" type="stmt"/>
            <line num="210" count="120" type="stmt"/>
            <line num="211" count="120" type="stmt"/>
            <line num="213" count="120" type="stmt"/>
            <line num="215" count="120" type="stmt"/>
            <line num="220" count="120" type="stmt"/>
            <line num="221" count="120" type="stmt"/>
            <line num="222" count="120" type="stmt"/>
            <line num="223" count="60" type="stmt"/>
            <line num="225" count="60" type="stmt"/>
            <line num="227" count="60" type="stmt"/>
            <line num="228" count="60" type="stmt"/>
            <line num="229" count="60" type="stmt"/>
            <line num="230" count="60" type="stmt"/>
            <line num="232" count="60" type="stmt"/>
            <line num="233" count="60" type="stmt"/>
            <line num="235" count="60" type="stmt"/>
            <line num="238" count="60" type="stmt"/>
            <line num="246" count="60" type="stmt"/>
            <line num="247" count="60" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="253" count="120" type="stmt"/>
            <line num="257" count="120" type="stmt"/>
            <line num="258" count="120" type="stmt"/>
            <line num="260" count="120" type="stmt"/>
            <line num="265" count="120" type="stmt"/>
            <line num="266" count="120" type="stmt"/>
            <line falsecount="120" truecount="4800" num="266" type="cond"/>
            <line num="267" count="4800" type="stmt"/>
            <line falsecount="4800" truecount="192000" num="267" type="cond"/>
            <line num="269" count="192000" type="stmt"/>
            <line num="270" count="192000" type="stmt"/>
            <line num="271" count="192000" type="stmt"/>
            <line num="273" count="192000" type="stmt"/>
            <line num="274" count="192000" type="stmt"/>
            <line falsecount="93600" truecount="98400" num="274" type="cond"/>
            <line num="275" count="98400" type="stmt"/>
            <line num="277" count="93600" type="stmt"/>
            <line num="281" count="192000" type="stmt"/>
            <line num="284" count="120" type="stmt"/>
            <line num="289" count="120" type="stmt"/>
            <line num="297" count="120" type="stmt"/>
            <line num="305" count="120" type="stmt"/>
            <line num="308" count="120" type="stmt"/>
            <line num="311" count="120" type="stmt"/>
            <line num="314" count="120" type="stmt"/>
            <line num="319" count="120" type="stmt"/>
            <line num="322" count="120" type="stmt"/>
            <line num="328" count="120" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.modelling.descriptor">
         <metrics coveredelements="211" complexity="18" loc="879" methods="15" classes="5" statements="190" coveredconditionals="6" coveredmethods="15" elements="211" ncloc="456" files="5" conditionals="6" coveredstatements="190"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/AssetBlackScholesModelDescriptorTest.java" name="AssetBlackScholesModelDescriptorTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="3" loc="179" coveredmethods="3" methods="3" elements="41" classes="1" ncloc="81" statements="38" conditionals="0" coveredstatements="38"/>
            <class name="AssetBlackScholesModelDescriptorTest">
               <metrics coveredelements="41" complexity="3" methods="3" testruns="2" statements="38" coveredconditionals="0" coveredmethods="3" elements="41" testfailures="0" testduration="12.783000000000001" conditionals="0" coveredstatements="38" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="60" testsuccess="true" count="2" testduration="6.455" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="153" count="4" type="method"/>
            <line num="154" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="173" count="2" type="method"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/HestonModelDescriptorTest.java" name="HestonModelDescriptorTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="3" loc="150" coveredmethods="3" methods="3" elements="29" classes="1" ncloc="72" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="HestonModelDescriptorTest">
               <metrics coveredelements="29" complexity="3" methods="3" testruns="2" statements="26" coveredconditionals="0" coveredmethods="3" elements="29" testfailures="0" testduration="22.247999999999998" conditionals="0" coveredstatements="26" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="64" testsuccess="true" count="2" testduration="11.366" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="124" count="4" type="method"/>
            <line num="125" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="128" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBronianMotion(int,double,int,int,int) : BrownianMotion" num="144" count="2" type="method"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/InterestRateSwapLegDescriptorTest.java" name="InterestRateSwapLegDescriptorTest.java">
            <metrics coveredelements="91" coveredconditionals="6" complexity="8" loc="302" coveredmethods="5" methods="5" elements="91" classes="1" ncloc="167" statements="80" conditionals="6" coveredstatements="80"/>
            <class name="InterestRateSwapLegDescriptorTest">
               <metrics coveredelements="91" complexity="8" methods="5" testruns="4" statements="80" coveredconditionals="6" coveredmethods="5" elements="91" testfailures="0" testduration="186.017" conditionals="6" coveredstatements="80" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testFloatLeg() : void" num="52" testsuccess="true" count="2" testduration="43.018" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFixLeg() : void" num="124" testsuccess="true" count="2" testduration="40.759" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDiscountCurve() : DiscountCurveInterpolation" num="186" count="8" type="method"/>
            <line num="187" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="createForwardCurve() : ForwardCurveInterpolation" num="194" count="8" type="method"/>
            <line num="195" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="createLIBORMarketModel(int,int,double,DiscountCurve,ForwardCurve) : LIBORModelMonteCarloSimulationModel" num="213" count="4" type="method"/>
            <line num="216" count="4" type="stmt"/>
            <line num="221" count="4" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line num="223" count="4" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="236" count="4" type="stmt"/>
            <line num="237" count="4" type="stmt"/>
            <line falsecount="4" truecount="320" num="237" type="cond"/>
            <line num="238" count="320" type="stmt"/>
            <line falsecount="320" truecount="25600" num="238" type="cond"/>
            <line num="240" count="25600" type="stmt"/>
            <line num="241" count="25600" type="stmt"/>
            <line num="242" count="25600" type="stmt"/>
            <line num="244" count="25600" type="stmt"/>
            <line num="245" count="25600" type="stmt"/>
            <line falsecount="12640" truecount="12960" num="245" type="cond"/>
            <line num="246" count="12960" type="stmt"/>
            <line num="248" count="12640" type="stmt"/>
            <line num="252" count="25600" type="stmt"/>
            <line num="255" count="4" type="stmt"/>
            <line num="260" count="4" type="stmt"/>
            <line num="268" count="4" type="stmt"/>
            <line num="276" count="4" type="stmt"/>
            <line num="279" count="4" type="stmt"/>
            <line num="282" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="290" count="4" type="stmt"/>
            <line num="293" count="4" type="stmt"/>
            <line num="299" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/MertonModelDescriptorTest.java" name="MertonModelDescriptorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="125" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="69" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="MertonModelDescriptorTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="2" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="166.019" conditionals="0" coveredstatements="23" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="58" testsuccess="true" count="2" testduration="84.228" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="116" count="4" type="method"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/modelling/descriptor/VarianceGammaModelDescriptorTest.java" name="VarianceGammaModelDescriptorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="123" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="67" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="VarianceGammaModelDescriptorTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="2" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="81.94300000000001" conditionals="0" coveredstatements="23" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="52" testsuccess="true" count="2" testduration="40.636" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDiscountCurve(String,LocalDate,double) : DiscountCurve" num="114" count="4" type="method"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation">
         <metrics coveredelements="858" complexity="129" loc="3325" methods="73" classes="14" statements="1053" coveredconditionals="35" coveredmethods="57" elements="1184" ncloc="1919" files="14" conditionals="58" coveredstatements="766"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/BachelierModelMonteCarloValuationTest.java" name="BachelierModelMonteCarloValuationTest.java">
            <metrics coveredelements="129" coveredconditionals="9" complexity="33" loc="564" coveredmethods="11" methods="16" elements="225" classes="1" ncloc="325" statements="193" conditionals="16" coveredstatements="109"/>
            <class name="BachelierModelMonteCarloValuationTest">
               <metrics coveredelements="129" complexity="33" methods="16" testruns="40" statements="193" coveredconditionals="9" coveredmethods="11" elements="225" testfailures="0" testduration="54.12300000000001" conditionals="16" coveredstatements="109" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="52" count="4" type="method"/>
            <line num="55" count="4" type="stmt"/>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BachelierModelMonteCarloValuationTest(RandomVariableFactory)" num="129" count="40" type="method"/>
            <line num="130" count="40" type="stmt"/>
            <line num="131" count="40" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="162" count="40" type="method"/>
            <line num="167" count="40" type="stmt"/>
            <line falsecount="0" truecount="40" num="167" type="cond"/>
            <line num="169" count="40" type="stmt"/>
            <line num="172" count="40" type="stmt"/>
            <line num="175" count="40" type="stmt"/>
            <line num="177" count="40" type="stmt"/>
            <line num="180" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="186" count="8" type="method"/>
            <line num="192" count="8" type="stmt"/>
            <line num="195" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="197" count="8" type="stmt"/>
            <line num="200" count="8" type="stmt"/>
            <line num="201" count="8" type="stmt"/>
            <line num="203" count="8" type="stmt"/>
            <line num="204" count="8" type="stmt"/>
            <line num="205" count="8" type="stmt"/>
            <line num="207" count="8" type="stmt"/>
            <line num="209" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="212" count="8" type="stmt"/>
            <line falsecount="8" truecount="80" num="212" type="cond"/>
            <line num="215" count="80" type="stmt"/>
            <line num="217" count="80" type="stmt"/>
            <line num="220" count="80" type="stmt"/>
            <line num="223" count="80" type="stmt"/>
            <line num="228" count="80" type="stmt"/>
            <line num="230" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="238" count="8" type="method"/>
            <line num="243" count="8" type="stmt"/>
            <line num="245" count="8" type="stmt"/>
            <line num="247" count="8" type="stmt"/>
            <line num="248" count="8" type="stmt"/>
            <line num="249" count="88" type="stmt"/>
            <line num="251" count="88" type="stmt"/>
            <line num="252" count="88" type="stmt"/>
            <line num="253" count="88" type="stmt"/>
            <line num="255" count="88" type="stmt"/>
            <line num="256" count="88" type="stmt"/>
            <line num="257" count="88" type="stmt"/>
            <line num="259" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="265" count="8" type="method"/>
            <line num="270" count="8" type="stmt"/>
            <line num="272" count="8" type="stmt"/>
            <line num="274" count="8" type="stmt"/>
            <line num="275" count="8" type="stmt"/>
            <line num="276" count="8" type="stmt"/>
            <line falsecount="8" truecount="800" num="276" type="cond"/>
            <line num="277" count="800" type="stmt"/>
            <line num="280" count="8" type="stmt"/>
            <line num="281" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line num="285" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="300" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="360" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="403" count="8" type="method"/>
            <line num="409" count="8" type="stmt"/>
            <line num="412" count="8" type="stmt"/>
            <line num="413" count="8" type="stmt"/>
            <line num="414" count="8" type="stmt"/>
            <line num="416" count="8" type="stmt"/>
            <line num="417" count="8" type="stmt"/>
            <line num="418" count="8" type="stmt"/>
            <line num="421" count="8" type="stmt"/>
            <line num="422" count="8" type="stmt"/>
            <line num="424" count="8" type="stmt"/>
            <line num="425" count="8" type="stmt"/>
            <line num="426" count="8" type="stmt"/>
            <line num="428" count="8" type="stmt"/>
            <line falsecount="8" truecount="144" num="428" type="cond"/>
            <line num="431" count="144" type="stmt"/>
            <line num="434" count="144" type="stmt"/>
            <line num="436" count="144" type="stmt"/>
            <line num="437" count="144" type="stmt"/>
            <line num="439" count="144" type="stmt"/>
            <line num="441" count="144" type="stmt"/>
            <line num="442" count="144" type="stmt"/>
            <line num="443" count="144" type="stmt"/>
            <line num="446" count="144" type="stmt"/>
            <line num="449" count="144" type="stmt"/>
            <line num="456" count="144" type="stmt"/>
            <line num="459" count="144" type="stmt"/>
            <line num="466" count="144" type="stmt"/>
            <line num="468" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="474" count="8" type="method"/>
            <line num="480" count="8" type="stmt"/>
            <line num="483" count="8" type="stmt"/>
            <line num="484" count="8" type="stmt"/>
            <line num="485" count="8" type="stmt"/>
            <line num="487" count="8" type="stmt"/>
            <line num="488" count="8" type="stmt"/>
            <line num="489" count="8" type="stmt"/>
            <line num="492" count="8" type="stmt"/>
            <line num="493" count="8" type="stmt"/>
            <line num="495" count="8" type="stmt"/>
            <line num="496" count="8" type="stmt"/>
            <line num="497" count="8" type="stmt"/>
            <line num="498" count="8" type="stmt"/>
            <line falsecount="8" truecount="144" num="498" type="cond"/>
            <line num="501" count="144" type="stmt"/>
            <line num="504" count="144" type="stmt"/>
            <line num="506" count="144" type="stmt"/>
            <line num="507" count="144" type="stmt"/>
            <line num="509" count="144" type="stmt"/>
            <line num="511" count="144" type="stmt"/>
            <line num="512" count="144" type="stmt"/>
            <line num="513" count="144" type="stmt"/>
            <line num="516" count="144" type="stmt"/>
            <line num="518" count="144" type="stmt"/>
            <line num="519" count="144" type="stmt"/>
            <line num="521" count="144" type="stmt"/>
            <line num="529" count="144" type="stmt"/>
            <line num="532" count="144" type="stmt"/>
            <line num="539" count="144" type="stmt"/>
            <line num="541" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="547" count="24" type="method"/>
            <line num="548" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="554" count="24" type="method"/>
            <line num="555" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="561" count="24" type="method"/>
            <line num="562" count="24" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/BlackScholesMonteCarloValuationTest.java" name="BlackScholesMonteCarloValuationTest.java">
            <metrics coveredelements="135" coveredconditionals="9" complexity="30" loc="542" coveredmethods="9" methods="13" elements="209" classes="1" ncloc="306" statements="180" conditionals="16" coveredstatements="117"/>
            <class name="BlackScholesMonteCarloValuationTest">
               <metrics coveredelements="135" complexity="30" methods="13" testruns="48" statements="180" coveredconditionals="9" coveredmethods="9" elements="209" testfailures="0" testduration="32.992" conditionals="16" coveredstatements="117" testpasses="48"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="53" count="4" type="method"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BlackScholesMonteCarloValuationTest(RandomVariableFactory)" num="130" count="48" type="method"/>
            <line num="131" count="48" type="stmt"/>
            <line num="132" count="48" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="163" count="48" type="method"/>
            <line num="168" count="48" type="stmt"/>
            <line falsecount="0" truecount="48" num="168" type="cond"/>
            <line num="170" count="48" type="stmt"/>
            <line num="173" count="48" type="stmt"/>
            <line num="176" count="48" type="stmt"/>
            <line num="178" count="48" type="stmt"/>
            <line num="181" count="48" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="187" count="8" type="method"/>
            <line num="193" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="197" count="8" type="stmt"/>
            <line num="198" count="8" type="stmt"/>
            <line num="201" count="8" type="stmt"/>
            <line num="202" count="8" type="stmt"/>
            <line num="207" count="8" type="stmt"/>
            <line num="209" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="212" count="8" type="stmt"/>
            <line num="213" count="8" type="stmt"/>
            <line falsecount="8" truecount="144" num="213" type="cond"/>
            <line num="216" count="144" type="stmt"/>
            <line num="218" count="144" type="stmt"/>
            <line num="221" count="144" type="stmt"/>
            <line num="224" count="144" type="stmt"/>
            <line num="229" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="238" count="8" type="method"/>
            <line num="243" count="8" type="stmt"/>
            <line num="245" count="8" type="stmt"/>
            <line num="247" count="8" type="stmt"/>
            <line num="248" count="8" type="stmt"/>
            <line num="249" count="88" type="stmt"/>
            <line num="251" count="88" type="stmt"/>
            <line num="252" count="88" type="stmt"/>
            <line num="253" count="88" type="stmt"/>
            <line num="255" count="88" type="stmt"/>
            <line num="256" count="88" type="stmt"/>
            <line num="257" count="88" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="264" count="8" type="method"/>
            <line num="269" count="8" type="stmt"/>
            <line num="271" count="8" type="stmt"/>
            <line num="273" count="8" type="stmt"/>
            <line num="274" count="8" type="stmt"/>
            <line num="275" count="8" type="stmt"/>
            <line falsecount="8" truecount="800" num="275" type="cond"/>
            <line num="276" count="800" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="292" count="8" type="method"/>
            <line num="297" count="8" type="stmt"/>
            <line num="302" count="8" type="stmt"/>
            <line num="303" count="8" type="stmt"/>
            <line num="308" count="8" type="stmt"/>
            <line num="309" count="8" type="stmt"/>
            <line num="314" count="8" type="stmt"/>
            <line num="316" count="8" type="stmt"/>
            <line num="317" count="8" type="stmt"/>
            <line num="322" count="8" type="stmt"/>
            <line num="323" count="8" type="stmt"/>
            <line num="324" count="8" type="stmt"/>
            <line num="327" count="8" type="stmt"/>
            <line num="328" count="8" type="stmt"/>
            <line num="331" count="8" type="stmt"/>
            <line num="332" count="8" type="stmt"/>
            <line num="337" count="8" type="stmt"/>
            <line num="338" count="8" type="stmt"/>
            <line num="339" count="8" type="stmt"/>
            <line num="341" count="8" type="stmt"/>
            <line num="342" count="8" type="stmt"/>
            <line num="343" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="351" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="394" count="8" type="method"/>
            <line num="400" count="8" type="stmt"/>
            <line num="403" count="8" type="stmt"/>
            <line num="404" count="8" type="stmt"/>
            <line num="405" count="8" type="stmt"/>
            <line num="410" count="8" type="stmt"/>
            <line num="412" count="8" type="stmt"/>
            <line num="413" count="8" type="stmt"/>
            <line num="416" count="8" type="stmt"/>
            <line num="417" count="8" type="stmt"/>
            <line num="419" count="8" type="stmt"/>
            <line num="420" count="8" type="stmt"/>
            <line falsecount="8" truecount="144" num="420" type="cond"/>
            <line num="423" count="144" type="stmt"/>
            <line num="426" count="144" type="stmt"/>
            <line num="428" count="144" type="stmt"/>
            <line num="429" count="144" type="stmt"/>
            <line num="430" count="144" type="stmt"/>
            <line num="432" count="144" type="stmt"/>
            <line num="433" count="144" type="stmt"/>
            <line num="434" count="144" type="stmt"/>
            <line num="437" count="144" type="stmt"/>
            <line num="440" count="144" type="stmt"/>
            <line num="447" count="144" type="stmt"/>
            <line num="450" count="144" type="stmt"/>
            <line num="451" count="144" type="stmt"/>
            <line num="454" count="144" type="stmt"/>
            <line num="455" count="144" type="stmt"/>
            <line num="458" count="144" type="stmt"/>
            <line num="468" count="144" type="stmt"/>
            <line num="470" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="476" count="8" type="method"/>
            <line num="482" count="8" type="stmt"/>
            <line num="485" count="8" type="stmt"/>
            <line num="486" count="8" type="stmt"/>
            <line num="487" count="8" type="stmt"/>
            <line num="492" count="8" type="stmt"/>
            <line num="494" count="8" type="stmt"/>
            <line num="495" count="8" type="stmt"/>
            <line num="498" count="8" type="stmt"/>
            <line num="499" count="8" type="stmt"/>
            <line num="501" count="8" type="stmt"/>
            <line num="502" count="8" type="stmt"/>
            <line falsecount="8" truecount="144" num="502" type="cond"/>
            <line num="505" count="144" type="stmt"/>
            <line num="508" count="144" type="stmt"/>
            <line num="510" count="144" type="stmt"/>
            <line num="511" count="144" type="stmt"/>
            <line num="513" count="144" type="stmt"/>
            <line num="515" count="144" type="stmt"/>
            <line num="516" count="144" type="stmt"/>
            <line num="517" count="144" type="stmt"/>
            <line num="520" count="144" type="stmt"/>
            <line num="523" count="144" type="stmt"/>
            <line num="530" count="144" type="stmt"/>
            <line num="533" count="144" type="stmt"/>
            <line num="538" count="144" type="stmt"/>
            <line num="540" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/DisplacedLognomalModelTest.java" name="DisplacedLognomalModelTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="4" loc="159" coveredmethods="4" methods="4" elements="33" classes="1" ncloc="93" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="DisplacedLognomalModelTest">
               <metrics coveredelements="33" complexity="4" methods="4" testruns="6" statements="29" coveredconditionals="0" coveredmethods="4" elements="33" testfailures="0" testduration="5.164000000000001" conditionals="0" coveredstatements="29" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="68" count="4" type="method"/>
            <line num="71" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DisplacedLognomalModelTest(double)" num="81" count="6" type="method"/>
            <line num="82" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductImplementation() : void" num="86" count="6" type="method"/>
            <line num="89" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="94" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="102" count="6" type="stmt"/>
            <line num="106" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="119" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line num="134" count="6" type="stmt"/>
            <line num="135" count="6" type="stmt"/>
            <line num="137" count="6" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line num="139" count="6" type="stmt"/>
            <line num="140" count="6" type="stmt"/>
            <line num="141" count="6" type="stmt"/>
            <line num="142" count="6" type="stmt"/>
            <line num="144" count="6" type="stmt"/>
            <line num="146" count="6" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMonteCarloSimulationFromModel(ProcessModel,BrownianMotion) : AssetModelMonteCarloSimulationModel" num="152" count="24" type="method"/>
            <line num="154" count="24" type="stmt"/>
            <line num="157" count="24" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/HestonModelTest.java" name="HestonModelTest.java">
            <metrics coveredelements="38" coveredconditionals="4" complexity="6" loc="160" coveredmethods="4" methods="4" elements="38" classes="1" ncloc="99" statements="30" conditionals="4" coveredstatements="30"/>
            <class name="HestonModelTest">
               <metrics coveredelements="38" complexity="6" methods="4" testruns="4" statements="30" coveredconditionals="4" coveredmethods="4" elements="38" testfailures="0" testduration="44.235" conditionals="4" coveredstatements="30" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="50" count="4" type="method"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="HestonModelTest(double)" num="85" count="4" type="method"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="test() : void" num="90" count="4" type="method"/>
            <line num="94" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line falsecount="4" truecount="28" num="117" type="cond"/>
            <line num="122" count="28" type="stmt"/>
            <line num="125" count="28" type="stmt"/>
            <line num="126" count="28" type="stmt"/>
            <line num="127" count="28" type="stmt"/>
            <line num="130" count="28" type="stmt"/>
            <line num="131" count="28" type="stmt"/>
            <line num="136" count="28" type="stmt"/>
            <line num="137" count="28" type="stmt"/>
            <line num="138" count="28" type="stmt"/>
            <line num="140" count="28" type="stmt"/>
            <line num="143" count="28" type="stmt"/>
            <line falsecount="14" truecount="14" num="143" type="cond"/>
            <line num="144" count="14" type="stmt"/>
            <line num="147" count="14" type="stmt"/>
            <line num="150" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMonteCarloSimulationFromModel(ProcessModel,BrownianMotion) : AssetModelMonteCarloSimulationModel" num="153" count="8" type="method"/>
            <line num="155" count="8" type="stmt"/>
            <line num="158" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/InhomogenousBachelierModelMonteCarloValuationTest.java" name="InhomogenousBachelierModelMonteCarloValuationTest.java">
            <metrics coveredelements="127" coveredconditionals="9" complexity="32" loc="543" coveredmethods="10" methods="15" elements="225" classes="1" ncloc="306" statements="194" conditionals="16" coveredstatements="108"/>
            <class name="InhomogenousBachelierModelMonteCarloValuationTest">
               <metrics coveredelements="127" complexity="32" methods="15" testruns="10" statements="194" coveredconditionals="9" coveredmethods="10" elements="225" testfailures="0" testduration="14.414000000000001" conditionals="16" coveredstatements="108" testpasses="10"/>
            </class>
            <line complexity="8" visibility="public" signature="main(String[]) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InhomogenousBachelierModelMonteCarloValuationTest()" num="109" count="10" type="method"/>
            <line num="110" count="10" type="stmt"/>
            <line complexity="2" visibility="private" signature="readTestNumber() : int" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="141" count="10" type="method"/>
            <line num="146" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="146" type="cond"/>
            <line num="148" count="10" type="stmt"/>
            <line num="151" count="10" type="stmt"/>
            <line num="154" count="10" type="stmt"/>
            <line num="156" count="10" type="stmt"/>
            <line num="159" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCall() : void" num="165" testsuccess="true" count="2" testduration="0.409" type="method"/>
            <line num="171" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line falsecount="2" truecount="20" num="191" type="cond"/>
            <line num="194" count="20" type="stmt"/>
            <line num="196" count="20" type="stmt"/>
            <line num="199" count="20" type="stmt"/>
            <line num="202" count="20" type="stmt"/>
            <line num="207" count="20" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testModelProperties() : void" num="217" testsuccess="true" count="2" testduration="0.396" type="method"/>
            <line num="222" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="22" type="stmt"/>
            <line num="229" count="22" type="stmt"/>
            <line num="231" count="22" type="stmt"/>
            <line num="232" count="22" type="stmt"/>
            <line num="233" count="22" type="stmt"/>
            <line num="235" count="22" type="stmt"/>
            <line num="236" count="22" type="stmt"/>
            <line num="237" count="22" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testModelRandomVariable() : void" num="245" testsuccess="true" count="2" testduration="0.572" type="method"/>
            <line num="250" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line falsecount="2" truecount="200" num="256" type="cond"/>
            <line num="257" count="200" type="stmt"/>
            <line num="260" count="2" type="stmt"/>
            <line num="261" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEuropeanAsianBermudanOption() : void" num="280" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiThreaddedValuation() : void" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="348" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallDelta() : void" num="383" testsuccess="true" count="2" testduration="2.87" type="method"/>
            <line num="389" count="2" type="stmt"/>
            <line num="392" count="2" type="stmt"/>
            <line num="393" count="2" type="stmt"/>
            <line num="394" count="2" type="stmt"/>
            <line num="396" count="2" type="stmt"/>
            <line num="397" count="2" type="stmt"/>
            <line num="398" count="2" type="stmt"/>
            <line num="401" count="2" type="stmt"/>
            <line num="402" count="2" type="stmt"/>
            <line num="404" count="2" type="stmt"/>
            <line num="405" count="2" type="stmt"/>
            <line num="406" count="2" type="stmt"/>
            <line num="407" count="2" type="stmt"/>
            <line falsecount="2" truecount="36" num="407" type="cond"/>
            <line num="410" count="36" type="stmt"/>
            <line num="413" count="36" type="stmt"/>
            <line num="415" count="36" type="stmt"/>
            <line num="416" count="36" type="stmt"/>
            <line num="418" count="36" type="stmt"/>
            <line num="420" count="36" type="stmt"/>
            <line num="421" count="36" type="stmt"/>
            <line num="422" count="36" type="stmt"/>
            <line num="425" count="36" type="stmt"/>
            <line num="428" count="36" type="stmt"/>
            <line num="435" count="36" type="stmt"/>
            <line num="438" count="36" type="stmt"/>
            <line num="445" count="36" type="stmt"/>
            <line num="447" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanCallVega() : void" num="453" testsuccess="true" count="2" testduration="2.992" type="method"/>
            <line num="459" count="2" type="stmt"/>
            <line num="462" count="2" type="stmt"/>
            <line num="463" count="2" type="stmt"/>
            <line num="464" count="2" type="stmt"/>
            <line num="466" count="2" type="stmt"/>
            <line num="467" count="2" type="stmt"/>
            <line num="468" count="2" type="stmt"/>
            <line num="471" count="2" type="stmt"/>
            <line num="472" count="2" type="stmt"/>
            <line num="474" count="2" type="stmt"/>
            <line num="475" count="2" type="stmt"/>
            <line num="476" count="2" type="stmt"/>
            <line num="477" count="2" type="stmt"/>
            <line falsecount="2" truecount="36" num="477" type="cond"/>
            <line num="480" count="36" type="stmt"/>
            <line num="483" count="36" type="stmt"/>
            <line num="485" count="36" type="stmt"/>
            <line num="486" count="36" type="stmt"/>
            <line num="488" count="36" type="stmt"/>
            <line num="490" count="36" type="stmt"/>
            <line num="491" count="36" type="stmt"/>
            <line num="492" count="36" type="stmt"/>
            <line num="495" count="36" type="stmt"/>
            <line num="497" count="36" type="stmt"/>
            <line num="498" count="36" type="stmt"/>
            <line num="500" count="36" type="stmt"/>
            <line num="508" count="36" type="stmt"/>
            <line num="511" count="36" type="stmt"/>
            <line num="518" count="36" type="stmt"/>
            <line num="520" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialValue() : double" num="526" count="6" type="method"/>
            <line num="527" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRiskFreeRate() : double" num="533" count="6" type="method"/>
            <line num="534" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVolatility() : double" num="540" count="6" type="method"/>
            <line num="541" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MertonModelTest.java" name="MertonModelTest.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="2" loc="134" coveredmethods="1" methods="1" elements="36" classes="1" ncloc="79" statements="33" conditionals="2" coveredstatements="33"/>
            <class name="MertonModelTest">
               <metrics coveredelements="36" complexity="2" methods="1" testruns="2" statements="33" coveredconditionals="2" coveredmethods="1" elements="36" testfailures="0" testduration="38.448" conditionals="2" coveredstatements="33" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="58" testsuccess="true" count="2" testduration="19.765" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line falsecount="2" truecount="40" num="111" type="cond"/>
            <line num="112" count="40" type="stmt"/>
            <line num="113" count="40" type="stmt"/>
            <line num="114" count="40" type="stmt"/>
            <line num="115" count="40" type="stmt"/>
            <line num="116" count="40" type="stmt"/>
            <line num="118" count="40" type="stmt"/>
            <line num="119" count="40" type="stmt"/>
            <line num="120" count="40" type="stmt"/>
            <line num="122" count="40" type="stmt"/>
            <line num="123" count="40" type="stmt"/>
            <line num="124" count="40" type="stmt"/>
            <line num="126" count="40" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelAsianOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelAsianOptionSensitivitiesTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="3" loc="158" coveredmethods="3" methods="3" elements="57" classes="1" ncloc="96" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="MonteCarloBlackScholesModelAsianOptionSensitivitiesTest">
               <metrics coveredelements="57" complexity="3" methods="3" testruns="2" statements="54" coveredconditionals="0" coveredmethods="3" elements="57" testfailures="0" testduration="1.001" conditionals="0" coveredstatements="54" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="55" testsuccess="true" count="2" testduration="0.495" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsageReset() : void" num="144" count="2" type="method"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsagePeak() : long" num="150" count="2" type="method"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="16" type="stmt"/>
            <line num="154" count="16" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs.java" name="MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="151" coveredmethods="0" methods="2" elements="58" classes="1" ncloc="90" statements="54" conditionals="2" coveredstatements="0"/>
            <class name="MonteCarloBlackScholesModelBermudanDigitalOptionSensitivitiesGraphs">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="58" statements="54" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="53" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="testProductAADSensitivities() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="1" loc="126" coveredmethods="1" methods="1" elements="40" classes="1" ncloc="71" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="MonteCarloBlackScholesModelBermudanOptionSensitivitiesTest">
               <metrics coveredelements="40" complexity="1" methods="1" testruns="2" statements="39" coveredconditionals="0" coveredmethods="1" elements="40" testfailures="0" testduration="2.186" conditionals="0" coveredstatements="39" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="51" testsuccess="true" count="2" testduration="1.048" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest.java">
            <metrics coveredelements="83" coveredconditionals="0" complexity="2" loc="205" coveredmethods="2" methods="2" elements="83" classes="1" ncloc="118" statements="81" conditionals="0" coveredstatements="81"/>
            <class name="MonteCarloBlackScholesModelDigitalOptionSensitivitiesTest">
               <metrics coveredelements="83" complexity="2" methods="2" testruns="4" statements="81" coveredconditionals="0" coveredmethods="2" elements="83" testfailures="0" testduration="49.679" conditionals="0" coveredstatements="81" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="53" testsuccess="true" count="2" testduration="12.139" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSensitivities() : void" num="145" testsuccess="true" count="2" testduration="12.504" type="method"/>
            <line num="147" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest.java" name="MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="3" loc="159" coveredmethods="3" methods="3" elements="57" classes="1" ncloc="97" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="MonteCarloBlackScholesModelEuropeanOptionSensitivitiesTest">
               <metrics coveredelements="57" complexity="3" methods="3" testruns="2" statements="54" coveredconditionals="0" coveredmethods="3" elements="57" testfailures="0" testduration="0.908" conditionals="0" coveredstatements="54" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="56" testsuccess="true" count="2" testduration="0.449" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsageReset() : void" num="145" count="2" type="method"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="memoryUsagePeak() : long" num="151" count="2" type="method"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="16" type="stmt"/>
            <line num="155" count="16" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelSensitivitiesTest.java" name="MonteCarloBlackScholesModelSensitivitiesTest.java">
            <metrics coveredelements="83" coveredconditionals="0" complexity="6" loc="219" coveredmethods="6" methods="6" elements="83" classes="1" ncloc="135" statements="77" conditionals="0" coveredstatements="77"/>
            <class name="MonteCarloBlackScholesModelSensitivitiesTest">
               <metrics coveredelements="83" complexity="6" methods="6" testruns="6" statements="77" coveredconditionals="0" coveredmethods="6" elements="83" testfailures="0" testduration="16.346" conditionals="0" coveredstatements="77" testpasses="6"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 49()" num="49" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="59" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="MonteCarloBlackScholesModelSensitivitiesTest(MonteCarloProduct)" num="85" count="6" type="method"/>
            <line num="86" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductAADSensitivities() : void" num="89" count="6" type="method"/>
            <line num="91" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line num="95" count="6" type="stmt"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line num="101" count="6" type="stmt"/>
            <line num="102" count="6" type="stmt"/>
            <line num="104" count="6" type="stmt"/>
            <line num="105" count="6" type="stmt"/>
            <line num="106" count="6" type="stmt"/>
            <line num="108" count="6" type="stmt"/>
            <line num="109" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="114" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="119" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSensitivitiesViaFiniteDifferences() : Map&lt;String, Double&gt;" num="122" count="6" type="method"/>
            <line num="123" count="6" type="stmt"/>
            <line num="126" count="6" type="stmt"/>
            <line num="127" count="6" type="stmt"/>
            <line num="128" count="6" type="stmt"/>
            <line num="131" count="6" type="stmt"/>
            <line num="134" count="6" type="stmt"/>
            <line num="137" count="6" type="stmt"/>
            <line num="140" count="6" type="stmt"/>
            <line num="145" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line num="158" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line num="168" count="6" type="stmt"/>
            <line num="170" count="6" type="stmt"/>
            <line num="171" count="6" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line num="173" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSensitivitiesViaAAD() : Map&lt;String, Double&gt;" num="179" count="6" type="method"/>
            <line num="180" count="6" type="stmt"/>
            <line num="183" count="6" type="stmt"/>
            <line num="184" count="6" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line num="191" count="6" type="stmt"/>
            <line num="194" count="6" type="stmt"/>
            <line num="197" count="6" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line num="204" count="6" type="stmt"/>
            <line num="206" count="6" type="stmt"/>
            <line num="207" count="6" type="stmt"/>
            <line num="208" count="6" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line num="211" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="213" count="6" type="stmt"/>
            <line num="214" count="6" type="stmt"/>
            <line num="215" count="6" type="stmt"/>
            <line num="217" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/MonteCarloBlackScholesModelTest.java" name="MonteCarloBlackScholesModelTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="2" loc="121" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="57" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="MonteCarloBlackScholesModelTest">
               <metrics coveredelements="25" complexity="2" methods="2" testruns="4" statements="23" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="0.693" conditionals="0" coveredstatements="23" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testDirectValuation() : void" num="49" testsuccess="true" count="2" testduration="0.227" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testProductImplementation() : void" num="78" testsuccess="true" count="2" testduration="0.118" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/VarianceGammaModelTest.java" name="VarianceGammaModelTest.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="2" loc="84" coveredmethods="1" methods="1" elements="15" classes="1" ncloc="47" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="VarianceGammaModelTest">
               <metrics coveredelements="15" complexity="2" methods="1" testruns="2" statements="12" coveredconditionals="2" coveredmethods="1" elements="15" testfailures="0" testduration="6.457000000000001" conditionals="2" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="42" testsuccess="true" count="2" testduration="3.257" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="61" type="cond"/>
            <line num="65" count="14" type="stmt"/>
            <line num="68" count="14" type="stmt"/>
            <line num="73" count="14" type="stmt"/>
            <line num="74" count="14" type="stmt"/>
            <line num="77" count="14" type="stmt"/>
            <line num="79" count="14" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.marketdata.model.volatilities">
         <metrics coveredelements="174" complexity="16" loc="446" methods="11" classes="3" statements="156" coveredconditionals="10" coveredmethods="10" elements="177" ncloc="289" files="3" conditionals="10" coveredstatements="154"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricCalibrationTest.java" name="CapletVolatilitiesParametricCalibrationTest.java">
            <metrics coveredelements="84" coveredconditionals="8" complexity="8" loc="252" coveredmethods="3" methods="4" elements="87" classes="1" ncloc="161" statements="75" conditionals="8" coveredstatements="73"/>
            <class name="CapletVolatilitiesParametricCalibrationTest">
               <metrics coveredelements="84" complexity="8" methods="4" testruns="4" statements="75" coveredconditionals="8" coveredmethods="3" elements="87" testfailures="0" testduration="952.713" conditionals="8" coveredstatements="73" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="61" count="4" type="method"/>
            <line num="64" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="CapletVolatilitiesParametricCalibrationTest(QuotingConvention)" num="71" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testVolatilityCalibration() : void" num="93" count="4" type="method"/>
            <line num="101" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="125" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line num="153" count="4" type="stmt"/>
            <line num="154" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line falsecount="4" truecount="52" num="158" type="cond"/>
            <line num="159" count="52" type="stmt"/>
            <line num="160" count="52" type="stmt"/>
            <line num="161" count="52" type="stmt"/>
            <line num="162" count="52" type="stmt"/>
            <line num="172" count="52" type="stmt"/>
            <line num="173" count="52" type="stmt"/>
            <line num="176" count="52" type="stmt"/>
            <line num="178" count="52" type="stmt"/>
            <line num="179" count="52" type="stmt"/>
            <line num="185" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line num="187" count="4" type="stmt"/>
            <line falsecount="4" truecount="52" num="187" type="cond"/>
            <line num="188" count="52" type="stmt"/>
            <line num="189" count="52" type="stmt"/>
            <line num="190" count="52" type="stmt"/>
            <line num="191" count="52" type="stmt"/>
            <line num="200" count="52" type="stmt"/>
            <line num="201" count="52" type="stmt"/>
            <line num="202" count="52" type="stmt"/>
            <line num="204" count="52" type="stmt"/>
            <line num="205" count="52" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="4" type="stmt"/>
            <line num="213" count="4" type="stmt"/>
            <line num="215" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line falsecount="4" truecount="52" num="216" type="cond"/>
            <line num="217" count="52" type="stmt"/>
            <line num="218" count="52" type="stmt"/>
            <line num="220" count="52" type="stmt"/>
            <line num="221" count="52" type="stmt"/>
            <line num="223" count="52" type="stmt"/>
            <line num="224" count="52" type="stmt"/>
            <line num="225" count="52" type="stmt"/>
            <line num="226" count="52" type="stmt"/>
            <line num="227" count="52" type="stmt"/>
            <line num="228" count="52" type="stmt"/>
            <line num="230" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="239" type="cond"/>
            <line num="241" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="247" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesParametricTest.java" name="CapletVolatilitiesParametricTest.java">
            <metrics coveredelements="62" coveredconditionals="2" complexity="7" loc="129" coveredmethods="6" methods="6" elements="62" classes="1" ncloc="86" statements="54" conditionals="2" coveredstatements="54"/>
            <class name="CapletVolatilitiesParametricTest">
               <metrics coveredelements="62" complexity="7" methods="6" testruns="10" statements="54" coveredconditionals="2" coveredmethods="6" elements="62" testfailures="0" testduration="0.52" conditionals="2" coveredstatements="54" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="testFlatVolatilityUsingD() : void" num="31" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatVolatilityUsingA() : void" num="44" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDecayVolatility() : void" num="57" testsuccess="true" count="2" testduration="0.008" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegratedFourParameterExponentialVolatilityParamSet1() : void" num="70" testsuccess="true" count="2" testduration="0.166" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegratedFourParameterExponentialVolatilityParamSetCZero() : void" num="80" testsuccess="true" count="2" testduration="0.057" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="testIntegratedFourParameterExponentialVolatility(double,double,double,double) : void" num="90" count="4" type="method"/>
            <line num="92" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line falsecount="4" truecount="4000" num="101" type="cond"/>
            <line num="103" count="4000" type="stmt"/>
            <line num="104" count="4000" type="stmt"/>
            <line num="105" count="4000" type="stmt"/>
            <line num="106" count="4000" type="stmt"/>
            <line num="108" count="4000" type="stmt"/>
            <line num="109" count="4000" type="stmt"/>
            <line num="110" count="4000" type="stmt"/>
            <line num="111" count="4000" type="stmt"/>
            <line num="113" count="4000" type="stmt"/>
            <line num="114" count="4000" type="stmt"/>
            <line num="115" count="4000" type="stmt"/>
            <line num="116" count="4000" type="stmt"/>
            <line num="118" count="4000" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/marketdata/model/volatilities/CapletVolatilitiesTest.java" name="CapletVolatilitiesTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="1" loc="65" coveredmethods="1" methods="1" elements="28" classes="1" ncloc="42" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="CapletVolatilitiesTest">
               <metrics coveredelements="28" complexity="1" methods="1" testruns="2" statements="27" coveredconditionals="0" coveredmethods="1" elements="28" testfailures="0" testduration="0.313" conditionals="0" coveredstatements="27" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testConversions() : void" num="25" testsuccess="true" count="2" testduration="0.16" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="16" type="stmt"/>
            <line num="49" count="144" type="stmt"/>
            <line num="52" count="144" type="stmt"/>
            <line num="53" count="144" type="stmt"/>
            <line num="54" count="144" type="stmt"/>
            <line num="55" count="144" type="stmt"/>
            <line num="56" count="144" type="stmt"/>
            <line num="57" count="144" type="stmt"/>
            <line num="59" count="144" type="stmt"/>
            <line num="60" count="144" type="stmt"/>
            <line num="61" count="144" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.assetderivativevaluation.products">
         <metrics coveredelements="181" complexity="27" loc="501" methods="12" classes="4" statements="179" coveredconditionals="10" coveredmethods="11" elements="219" ncloc="335" files="4" conditionals="28" coveredstatements="160"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/BlackScholesDeltaHedgedPortfolioTest.java" name="BlackScholesDeltaHedgedPortfolioTest.java">
            <metrics coveredelements="30" coveredconditionals="3" complexity="8" loc="106" coveredmethods="3" methods="3" elements="43" classes="1" ncloc="69" statements="30" conditionals="10" coveredstatements="24"/>
            <class name="BlackScholesDeltaHedgedPortfolioTest">
               <metrics coveredelements="30" complexity="8" methods="3" testruns="2" statements="30" coveredconditionals="3" coveredmethods="3" elements="43" testfailures="0" testduration="8.429" conditionals="10" coveredstatements="24" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="BlackScholesDeltaHedgedPortfolioTest()" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModel() : AssetModelMonteCarloSimulationModel" num="46" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="testHedgePerformance() : void" num="62" testsuccess="true" count="2" testduration="4.216" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="99" type="cond"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/DeltaHedgedPortfolioWithAADTest.java" name="DeltaHedgedPortfolioWithAADTest.java">
            <metrics coveredelements="88" coveredconditionals="7" complexity="15" loc="242" coveredmethods="5" methods="5" elements="111" classes="1" ncloc="161" statements="88" conditionals="18" coveredstatements="76"/>
            <class name="DeltaHedgedPortfolioWithAADTest">
               <metrics coveredelements="88" complexity="15" methods="5" testruns="4" statements="88" coveredconditionals="7" coveredmethods="5" elements="111" testfailures="0" testduration="249.88" conditionals="18" coveredstatements="76" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="70" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="DeltaHedgedPortfolioWithAADTest(AssetModelMonteCarloSimulationModel,AssetMonteCarloProduct)" num="98" count="4" type="method"/>
            <line num="99" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBlackScholesModel() : AssetModelMonteCarloSimulationModel" num="105" count="4" type="method"/>
            <line num="107" count="4" type="stmt"/>
            <line num="108" count="4" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line num="110" count="4" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="124" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHestonModel() : AssetModelMonteCarloSimulationModel" num="135" count="4" type="method"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="143" count="4" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line num="147" count="4" type="stmt"/>
            <line num="148" count="4" type="stmt"/>
            <line num="149" count="4" type="stmt"/>
            <line num="152" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line num="164" count="4" type="stmt"/>
            <line num="166" count="4" type="stmt"/>
            <line complexity="11" visibility="public" signature="testHedgePerformance() : void" num="169" count="4" type="method"/>
            <line num="172" count="4" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line num="176" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line num="182" count="4" type="stmt"/>
            <line num="183" count="4" type="stmt"/>
            <line num="184" count="4" type="stmt"/>
            <line num="186" count="4" type="stmt"/>
            <line num="188" count="4" type="stmt"/>
            <line num="189" count="4" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line num="193" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="217" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="217" type="cond"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line falsecount="2" truecount="8" num="221" type="cond"/>
            <line num="223" count="8" type="stmt"/>
            <line num="224" count="8" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="229" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="229" type="cond"/>
            <line num="230" count="4" type="stmt"/>
            <line num="231" count="4" type="stmt"/>
            <line num="232" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="237" count="4" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/EuropeanOptionVegaPathwiseTest.java" name="EuropeanOptionVegaPathwiseTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="3" loc="80" coveredmethods="2" methods="3" elements="25" classes="1" ncloc="49" statements="22" conditionals="0" coveredstatements="21"/>
            <class name="EuropeanOptionVegaPathwiseTest">
               <metrics coveredelements="23" complexity="3" methods="3" testruns="2" statements="22" coveredconditionals="0" coveredmethods="2" elements="25" testfailures="0" testduration="7.418" conditionals="0" coveredstatements="21" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="24" testsuccess="true" count="2" testduration="3.657" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getModel(double,double,double) : AssetModelMonteCarloSimulationModel" num="65" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/assetderivativevaluation/products/ForwardAgreementWithFundingRequirementTest.java" name="ForwardAgreementWithFundingRequirementTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="1" loc="73" coveredmethods="1" methods="1" elements="40" classes="1" ncloc="56" statements="39" conditionals="0" coveredstatements="39"/>
            <class name="ForwardAgreementWithFundingRequirementTest">
               <metrics coveredelements="40" complexity="1" methods="1" testruns="2" statements="39" coveredconditionals="0" coveredmethods="1" elements="40" testfailures="0" testduration="2.944" conditionals="0" coveredstatements="39" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="19" testsuccess="true" count="2" testduration="1.475" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.finitedifference">
         <metrics coveredelements="90" complexity="8" loc="183" methods="4" classes="2" statements="78" coveredconditionals="8" coveredmethods="4" elements="90" ncloc="156" files="2" conditionals="8" coveredstatements="78"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/finitedifference/BlackScholesThetaTest.java" name="BlackScholesThetaTest.java">
            <metrics coveredelements="44" coveredconditionals="4" complexity="4" loc="91" coveredmethods="2" methods="2" elements="44" classes="1" ncloc="76" statements="38" conditionals="4" coveredstatements="38"/>
            <class name="BlackScholesThetaTest">
               <metrics coveredelements="44" complexity="4" methods="2" testruns="4" statements="38" coveredconditionals="4" coveredmethods="2" elements="44" testfailures="0" testduration="0.769" conditionals="4" coveredstatements="38" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testEuropeanCallOption() : void" num="17" testsuccess="true" count="2" testduration="0.27" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line falsecount="2" truecount="238" num="45" type="cond"/>
            <line num="46" count="238" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanPutOption() : void" num="55" testsuccess="true" count="2" testduration="0.121" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line falsecount="2" truecount="238" num="82" type="cond"/>
            <line num="83" count="238" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/finitedifference/ConstantElasticityOfVarianceThetaTest.java" name="ConstantElasticityOfVarianceThetaTest.java">
            <metrics coveredelements="46" coveredconditionals="4" complexity="4" loc="92" coveredmethods="2" methods="2" elements="46" classes="1" ncloc="80" statements="40" conditionals="4" coveredstatements="40"/>
            <class name="ConstantElasticityOfVarianceThetaTest">
               <metrics coveredelements="46" complexity="4" methods="2" testruns="4" statements="40" coveredconditionals="4" coveredmethods="2" elements="46" testfailures="0" testduration="2.654" conditionals="4" coveredstatements="40" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testEuropeanCallOption() : void" num="17" testsuccess="true" count="2" testduration="0.757" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="2" truecount="318" num="47" type="cond"/>
            <line num="48" count="318" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEuropeanPutOption() : void" num="55" testsuccess="true" count="2" testduration="0.591" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="2" truecount="318" num="85" type="cond"/>
            <line num="86" count="318" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo">
         <metrics coveredelements="261" complexity="35" loc="683" methods="23" classes="4" statements="220" coveredconditionals="20" coveredmethods="23" elements="263" ncloc="432" files="4" conditionals="20" coveredstatements="218"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/BrownianMotionTest.java" name="BrownianMotionTest.java">
            <metrics coveredelements="128" coveredconditionals="12" complexity="16" loc="296" coveredmethods="8" methods="8" elements="130" classes="1" ncloc="205" statements="110" conditionals="12" coveredstatements="108"/>
            <class name="BrownianMotionTest">
               <metrics coveredelements="128" complexity="16" methods="8" testruns="40" statements="110" coveredconditionals="12" coveredmethods="8" elements="130" testfailures="0" testduration="816.433" conditionals="12" coveredstatements="108" testpasses="40"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="45" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="BrownianMotionTest(RandomVariableFactory)" num="56" count="40" type="method"/>
            <line num="57" count="40" type="stmt"/>
            <line num="58" count="40" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDensity() : void" num="65" count="8" type="method"/>
            <line num="67" count="8" type="stmt"/>
            <line num="68" count="8" type="stmt"/>
            <line num="69" count="8" type="stmt"/>
            <line num="70" count="8" type="stmt"/>
            <line num="71" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line num="74" count="8" type="stmt"/>
            <line falsecount="8" truecount="72" num="74" type="cond"/>
            <line num="75" count="72" type="stmt"/>
            <line num="76" count="72" type="stmt"/>
            <line num="78" count="72" type="stmt"/>
            <line num="79" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyAsDouble(double) : double" num="80" count="7272" type="method"/>
            <line num="81" count="7272" type="stmt"/>
            <line num="84" count="72" type="stmt"/>
            <line falsecount="72" truecount="7272" num="84" type="cond"/>
            <line num="85" count="7272" type="stmt"/>
            <line num="86" count="7272" type="stmt"/>
            <line num="88" count="7272" type="stmt"/>
            <line num="89" count="7272" type="stmt"/>
            <line num="91" count="7272" type="stmt"/>
            <line num="93" count="72" type="stmt"/>
            <line complexity="2" visibility="public" signature="testScalarValuedBrownianMotionTerminalDistribution() : void" num="97" count="8" type="method"/>
            <line num="100" count="8" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line num="104" count="8" type="stmt"/>
            <line num="107" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line falsecount="8" truecount="48" num="109" type="cond"/>
            <line num="112" count="48" type="stmt"/>
            <line num="120" count="48" type="stmt"/>
            <line num="122" count="48" type="stmt"/>
            <line num="124" count="48" type="stmt"/>
            <line num="125" count="48" type="stmt"/>
            <line num="127" count="48" type="stmt"/>
            <line num="129" count="48" type="stmt"/>
            <line num="130" count="48" type="stmt"/>
            <line num="132" count="48" type="stmt"/>
            <line num="135" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="testScalarValuedBrownianMotionWithJarqueBeraTest() : void" num="138" count="8" type="method"/>
            <line num="141" count="8" type="stmt"/>
            <line num="142" count="8" type="stmt"/>
            <line num="143" count="8" type="stmt"/>
            <line num="144" count="8" type="stmt"/>
            <line num="146" count="8" type="stmt"/>
            <line num="149" count="8" type="stmt"/>
            <line num="152" count="8" type="stmt"/>
            <line num="160" count="8" type="stmt"/>
            <line num="161" count="8" type="stmt"/>
            <line num="162" count="8" type="stmt"/>
            <line falsecount="8" truecount="1920" num="162" type="cond"/>
            <line num="163" count="1920" type="stmt"/>
            <line num="164" count="1920" type="stmt"/>
            <line num="166" count="1920" type="stmt"/>
            <line num="167" count="1920" type="stmt"/>
            <line falsecount="1744" truecount="176" num="167" type="cond"/>
            <line num="168" count="176" type="stmt"/>
            <line num="169" count="176" type="stmt"/>
            <line num="172" count="1744" type="stmt"/>
            <line num="176" count="8" type="stmt"/>
            <line num="178" count="8" type="stmt"/>
            <line num="180" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBrownianIncrementSquaredDrift() : void" num="183" count="8" type="method"/>
            <line num="186" count="8" type="stmt"/>
            <line num="187" count="8" type="stmt"/>
            <line num="189" count="8" type="stmt"/>
            <line num="190" count="8" type="stmt"/>
            <line num="193" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line num="204" count="8" type="stmt"/>
            <line num="205" count="8" type="stmt"/>
            <line num="207" count="8" type="stmt"/>
            <line num="208" count="8" type="stmt"/>
            <line num="209" count="8" type="stmt"/>
            <line falsecount="8" truecount="32000" num="209" type="cond"/>
            <line num="210" count="32000" type="stmt"/>
            <line num="211" count="32000" type="stmt"/>
            <line num="214" count="32000" type="stmt"/>
            <line num="215" count="32000" type="stmt"/>
            <line num="218" count="32000" type="stmt"/>
            <line num="219" count="32000" type="stmt"/>
            <line num="222" count="8" type="stmt"/>
            <line num="223" count="8" type="stmt"/>
            <line num="224" count="8" type="stmt"/>
            <line num="225" count="8" type="stmt"/>
            <line num="226" count="8" type="stmt"/>
            <line num="228" count="8" type="stmt"/>
            <line num="229" count="8" type="stmt"/>
            <line num="230" count="8" type="stmt"/>
            <line num="231" count="8" type="stmt"/>
            <line num="234" count="8" type="stmt"/>
            <line num="235" count="8" type="stmt"/>
            <line num="237" count="8" type="stmt"/>
            <line num="240" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSerialization() : void" num="243" count="8" type="method"/>
            <line num="246" count="8" type="stmt"/>
            <line num="247" count="8" type="stmt"/>
            <line num="249" count="8" type="stmt"/>
            <line num="250" count="8" type="stmt"/>
            <line num="253" count="8" type="stmt"/>
            <line num="256" count="8" type="stmt"/>
            <line num="264" count="8" type="stmt"/>
            <line num="269" count="8" type="stmt"/>
            <line num="270" count="8" type="stmt"/>
            <line num="271" count="8" type="stmt"/>
            <line num="272" count="8" type="stmt"/>
            <line num="273" count="8" type="stmt"/>
            <line num="274" count="8" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="282" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line num="284" count="8" type="stmt"/>
            <line num="285" count="8" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="8" type="stmt"/>
            <line num="292" count="8" type="stmt"/>
            <line num="293" count="8" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/GammaProcessTest.java" name="GammaProcessTest.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="2" loc="71" coveredmethods="1" methods="1" elements="20" classes="1" ncloc="47" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="GammaProcessTest">
               <metrics coveredelements="20" complexity="2" methods="1" testruns="2" statements="17" coveredconditionals="2" coveredmethods="1" elements="20" testfailures="0" testduration="11.951" conditionals="2" coveredstatements="17" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testScaling() : void" num="27" testsuccess="true" count="2" testduration="5.992" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line falsecount="2" truecount="20000" num="65" type="cond"/>
            <line num="66" count="20000" type="stmt"/>
            <line num="67" count="20000" type="stmt"/>
            <line num="68" count="20000" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/RandomVariableTest.java" name="RandomVariableTest.java">
            <metrics coveredelements="77" coveredconditionals="2" complexity="12" loc="229" coveredmethods="11" methods="11" elements="77" classes="1" ncloc="130" statements="64" conditionals="2" coveredstatements="64"/>
            <class name="RandomVariableTest">
               <metrics coveredelements="77" complexity="12" methods="11" testruns="90" statements="64" coveredconditionals="2" coveredmethods="11" elements="77" testfailures="0" testduration="64.902" conditionals="2" coveredstatements="64" testpasses="90"/>
            </class>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="33" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomVariableTest(RandomVariableFactory)" num="45" count="90" type="method"/>
            <line num="46" count="90" type="stmt"/>
            <line num="47" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableDeterministc() : void" num="51" count="10" type="method"/>
            <line num="55" count="10" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line num="59" count="10" type="stmt"/>
            <line num="60" count="10" type="stmt"/>
            <line num="61" count="10" type="stmt"/>
            <line num="62" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line num="68" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStochastic() : void" num="71" count="10" type="method"/>
            <line num="75" count="10" type="stmt"/>
            <line num="79" count="10" type="stmt"/>
            <line num="80" count="10" type="stmt"/>
            <line num="83" count="10" type="stmt"/>
            <line num="86" count="10" type="stmt"/>
            <line num="89" count="10" type="stmt"/>
            <line num="90" count="10" type="stmt"/>
            <line num="93" count="10" type="stmt"/>
            <line num="96" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSqrtPow() : void" num="99" count="10" type="method"/>
            <line num="103" count="10" type="stmt"/>
            <line num="106" count="10" type="stmt"/>
            <line num="109" count="10" type="stmt"/>
            <line num="110" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableArithmeticSquaredPow() : void" num="113" count="10" type="method"/>
            <line num="117" count="10" type="stmt"/>
            <line num="120" count="10" type="stmt"/>
            <line num="123" count="10" type="stmt"/>
            <line num="124" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomVariableStandardDeviation() : void" num="127" count="10" type="method"/>
            <line num="131" count="10" type="stmt"/>
            <line num="134" count="10" type="stmt"/>
            <line num="135" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetQuantile() : void" num="142" count="10" type="method"/>
            <line num="145" count="10" type="stmt"/>
            <line num="146" count="10" type="stmt"/>
            <line num="148" count="10" type="stmt"/>
            <line num="149" count="10" type="stmt"/>
            <line num="150" count="10" type="stmt"/>
            <line falsecount="10" truecount="100000000" num="150" type="cond"/>
            <line num="151" count="100000000" type="stmt"/>
            <line num="152" count="100000000" type="stmt"/>
            <line num="155" count="10" type="stmt"/>
            <line num="157" count="10" type="stmt"/>
            <line num="158" count="10" type="stmt"/>
            <line num="160" count="10" type="stmt"/>
            <line num="161" count="10" type="stmt"/>
            <line num="163" count="10" type="stmt"/>
            <line num="164" count="10" type="stmt"/>
            <line num="166" count="10" type="stmt"/>
            <line num="167" count="10" type="stmt"/>
            <line num="169" count="10" type="stmt"/>
            <line num="170" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="173" count="10" type="method"/>
            <line num="177" count="10" type="stmt"/>
            <line num="180" count="10" type="stmt"/>
            <line num="183" count="10" type="stmt"/>
            <line num="186" count="10" type="stmt"/>
            <line num="189" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCap() : void" num="192" count="10" type="method"/>
            <line num="196" count="10" type="stmt"/>
            <line num="199" count="10" type="stmt"/>
            <line num="202" count="10" type="stmt"/>
            <line num="205" count="10" type="stmt"/>
            <line num="208" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloor() : void" num="211" count="10" type="method"/>
            <line num="215" count="10" type="stmt"/>
            <line num="218" count="10" type="stmt"/>
            <line num="221" count="10" type="stmt"/>
            <line num="224" count="10" type="stmt"/>
            <line num="227" count="10" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/VarianceGammaTest.java" name="VarianceGammaTest.java">
            <metrics coveredelements="36" coveredconditionals="4" complexity="5" loc="87" coveredmethods="3" methods="3" elements="36" classes="1" ncloc="50" statements="29" conditionals="4" coveredstatements="29"/>
            <class name="VarianceGammaTest">
               <metrics coveredelements="36" complexity="5" methods="3" testruns="2" statements="29" coveredconditionals="4" coveredmethods="3" elements="36" testfailures="0" testduration="4.237" conditionals="4" coveredstatements="29" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="testCharacteristicFunction() : void" num="21" testsuccess="true" count="2" testduration="2.153" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="2" truecount="198" num="46" type="cond"/>
            <line num="47" count="198" type="stmt"/>
            <line num="49" count="198" type="stmt"/>
            <line num="50" count="198" type="stmt"/>
            <line num="52" count="198" type="stmt"/>
            <line num="54" count="198" type="stmt"/>
            <line complexity="2" visibility="public" signature="characteristicFunctionByMonteCarlo(Complex,RandomVariable) : Complex" num="60" count="198" type="method"/>
            <line num="62" count="198" type="stmt"/>
            <line num="64" count="198" type="stmt"/>
            <line num="66" count="198" type="stmt"/>
            <line falsecount="198" truecount="1980000" num="66" type="cond"/>
            <line num="67" count="1980000" type="stmt"/>
            <line num="70" count="198" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharacteristicFunction(double,Complex,VarianceGammaProcess) : Complex" num="76" count="198" type="method"/>
            <line num="78" count="198" type="stmt"/>
            <line num="79" count="198" type="stmt"/>
            <line num="80" count="198" type="stmt"/>
            <line num="82" count="198" type="stmt"/>
            <line num="83" count="198" type="stmt"/>
            <line num="85" count="198" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.functions">
         <metrics coveredelements="564" complexity="85" loc="1041" methods="33" classes="6" statements="447" coveredconditionals="89" coveredmethods="33" elements="572" ncloc="738" files="6" conditionals="92" coveredstatements="442"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/AnalyticFormulasTest.java" name="AnalyticFormulasTest.java">
            <metrics coveredelements="232" coveredconditionals="29" complexity="33" loc="371" coveredmethods="11" methods="11" elements="240" classes="1" ncloc="273" statements="197" conditionals="32" coveredstatements="192"/>
            <class name="AnalyticFormulasTest">
               <metrics coveredelements="232" complexity="33" methods="11" testruns="20" statements="197" coveredconditionals="29" coveredmethods="11" elements="240" testfailures="0" testduration="8.702" conditionals="32" coveredstatements="192" testpasses="20"/>
            </class>
            <line complexity="1" visibility="public" signature="testBlackModelDigitalCapletDelta() : void" num="29" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="testBachelierOptionImpliedVolatility() : void" num="50" testsuccess="true" count="2" testduration="0.972" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line falsecount="2" truecount="38" num="54" type="cond"/>
            <line num="55" count="38" type="stmt"/>
            <line falsecount="38" truecount="1444" num="55" type="cond"/>
            <line num="56" count="1444" type="stmt"/>
            <line falsecount="1444" truecount="36100" num="56" type="cond"/>
            <line num="58" count="36100" type="stmt"/>
            <line num="60" count="36100" type="stmt"/>
            <line num="61" count="36100" type="stmt"/>
            <line num="62" count="36100" type="stmt"/>
            <line num="63" count="36100" type="stmt"/>
            <line num="65" count="36100" type="stmt"/>
            <line num="66" count="36100" type="stmt"/>
            <line num="68" count="36100" type="stmt"/>
            <line falsecount="36100" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="36100" type="stmt"/>
            <line complexity="5" visibility="public" signature="testBachelierOptionDelta() : void" num="77" testsuccess="true" count="2" testduration="0.032" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line falsecount="2" truecount="38" num="81" type="cond"/>
            <line num="82" count="38" type="stmt"/>
            <line falsecount="38" truecount="1444" num="82" type="cond"/>
            <line num="83" count="1444" type="stmt"/>
            <line falsecount="1444" truecount="36100" num="83" type="cond"/>
            <line num="85" count="36100" type="stmt"/>
            <line num="87" count="36100" type="stmt"/>
            <line num="88" count="36100" type="stmt"/>
            <line num="89" count="36100" type="stmt"/>
            <line num="90" count="36100" type="stmt"/>
            <line num="92" count="36100" type="stmt"/>
            <line num="94" count="36100" type="stmt"/>
            <line num="95" count="36100" type="stmt"/>
            <line num="96" count="36100" type="stmt"/>
            <line num="97" count="36100" type="stmt"/>
            <line num="99" count="36100" type="stmt"/>
            <line falsecount="36100" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="36100" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSABRCalibration() : void" num="108" testsuccess="true" count="2" testduration="3.152" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line falsecount="2" truecount="1000" num="132" type="cond"/>
            <line num="133" count="1000" type="stmt"/>
            <line num="134" count="1000" type="stmt"/>
            <line num="135" count="1000" type="stmt"/>
            <line complexity="2" visibility="public" signature="setValues(double[],double[]) : void" num="138" count="989707" type="method"/>
            <line num="140" count="989712" type="stmt"/>
            <line falsecount="989558" truecount="6887937" num="140" type="cond"/>
            <line num="141" count="6888230" type="stmt"/>
            <line num="142" count="6887043" type="stmt"/>
            <line num="146" count="1000" type="stmt"/>
            <line num="148" count="1000" type="stmt"/>
            <line num="150" count="1000" type="stmt"/>
            <line num="152" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSABRSkewApproximation() : void" num="158" testsuccess="true" count="2" testduration="0.008" type="method"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="161" type="cond"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="182" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="6" type="stmt"/>
            <line num="197" count="6" type="stmt"/>
            <line num="198" count="6" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line num="200" count="6" type="stmt"/>
            <line num="202" count="6" type="stmt"/>
            <line num="203" count="6" type="stmt"/>
            <line num="205" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSABRCurvatureApproximation() : void" num="209" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="212" count="2" type="stmt"/>
            <line num="213" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="213" type="cond"/>
            <line num="214" count="6" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="243" count="2" type="stmt"/>
            <line num="245" count="2" type="stmt"/>
            <line num="248" count="6" type="stmt"/>
            <line num="253" count="6" type="stmt"/>
            <line num="254" count="6" type="stmt"/>
            <line num="255" count="6" type="stmt"/>
            <line num="256" count="6" type="stmt"/>
            <line num="257" count="6" type="stmt"/>
            <line num="259" count="6" type="stmt"/>
            <line num="260" count="6" type="stmt"/>
            <line num="262" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBlackScholesPutCallParityATM() : void" num="266" testsuccess="true" count="2" testduration="0.013" type="method"/>
            <line num="268" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="270" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBlackScholesNegativeForward() : void" num="280" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testBachelierRiskNeutralProbabilities() : void" num="304" testsuccess="true" count="2" testduration="0.008" type="method"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line num="313" count="2" type="stmt"/>
            <line num="316" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="323" count="2" type="stmt"/>
            <line falsecount="2" truecount="48" num="323" type="cond"/>
            <line num="325" count="48" type="stmt"/>
            <line num="326" count="48" type="stmt"/>
            <line num="328" count="48" type="stmt"/>
            <line num="329" count="48" type="stmt"/>
            <line num="330" count="48" type="stmt"/>
            <line num="332" count="48" type="stmt"/>
            <line num="333" count="48" type="stmt"/>
            <line num="334" count="48" type="stmt"/>
            <line num="336" count="48" type="stmt"/>
            <line num="343" count="48" type="stmt"/>
            <line falsecount="44" truecount="4" num="343" type="cond"/>
            <line num="344" count="4" type="stmt"/>
            <line num="346" count="48" type="stmt"/>
            <line falsecount="10" truecount="38" num="346" type="cond"/>
            <line num="347" count="38" type="stmt"/>
            <line num="348" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVolatilityConversionLognormalToNormal() : void" num="354" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="357" count="2" type="stmt"/>
            <line num="358" count="2" type="stmt"/>
            <line num="359" count="2" type="stmt"/>
            <line num="360" count="2" type="stmt"/>
            <line num="361" count="2" type="stmt"/>
            <line num="363" count="2" type="stmt"/>
            <line num="366" count="2" type="stmt"/>
            <line num="369" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/BachelierModelTest.java" name="BachelierModelTest.java">
            <metrics coveredelements="128" coveredconditionals="24" complexity="20" loc="283" coveredmethods="8" methods="8" elements="128" classes="1" ncloc="187" statements="96" conditionals="24" coveredstatements="96"/>
            <class name="BachelierModelTest">
               <metrics coveredelements="128" complexity="20" methods="8" testruns="16" statements="96" coveredconditionals="24" coveredmethods="8" elements="128" testfailures="0" testduration="0.30900000000000005" conditionals="24" coveredstatements="96" testpasses="16"/>
            </class>
            <line complexity="2" visibility="public" signature="testDelta() : void" num="38" testsuccess="true" count="2" testduration="0.004" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="49" type="cond"/>
            <line num="51" count="18" type="stmt"/>
            <line num="54" count="18" type="stmt"/>
            <line num="61" count="18" type="stmt"/>
            <line num="64" count="18" type="stmt"/>
            <line num="69" count="18" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testVega() : void" num="74" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="85" type="cond"/>
            <line num="87" count="18" type="stmt"/>
            <line num="90" count="18" type="stmt"/>
            <line num="97" count="18" type="stmt"/>
            <line num="100" count="18" type="stmt"/>
            <line num="105" count="18" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogenousDelta() : void" num="110" testsuccess="true" count="2" testduration="0.005" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="121" type="cond"/>
            <line num="123" count="18" type="stmt"/>
            <line num="126" count="18" type="stmt"/>
            <line num="133" count="18" type="stmt"/>
            <line num="136" count="18" type="stmt"/>
            <line num="141" count="18" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogenousVega() : void" num="146" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="157" type="cond"/>
            <line num="159" count="18" type="stmt"/>
            <line num="162" count="18" type="stmt"/>
            <line num="169" count="18" type="stmt"/>
            <line num="172" count="18" type="stmt"/>
            <line num="177" count="18" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHomogeneousRandomVariableImplementations() : void" num="182" testsuccess="true" count="2" testduration="0.004" type="method"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="190" type="cond"/>
            <line num="192" count="18" type="stmt"/>
            <line num="193" count="18" type="stmt"/>
            <line num="194" count="18" type="stmt"/>
            <line num="196" count="18" type="stmt"/>
            <line num="197" count="18" type="stmt"/>
            <line num="198" count="18" type="stmt"/>
            <line num="200" count="18" type="stmt"/>
            <line num="201" count="18" type="stmt"/>
            <line num="202" count="18" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInhomogeneousRandomVariableImplementations() : void" num="207" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="210" count="2" type="stmt"/>
            <line num="211" count="2" type="stmt"/>
            <line num="212" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line falsecount="2" truecount="18" num="215" type="cond"/>
            <line num="217" count="18" type="stmt"/>
            <line num="218" count="18" type="stmt"/>
            <line num="219" count="18" type="stmt"/>
            <line num="221" count="18" type="stmt"/>
            <line num="222" count="18" type="stmt"/>
            <line num="223" count="18" type="stmt"/>
            <line num="225" count="18" type="stmt"/>
            <line num="226" count="18" type="stmt"/>
            <line num="227" count="18" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testImpliedVolatility() : void" num="232" testsuccess="true" count="2" testduration="0.023" type="method"/>
            <line num="235" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="238" type="cond"/>
            <line num="239" count="10" type="stmt"/>
            <line falsecount="10" truecount="50" num="239" type="cond"/>
            <line num="240" count="50" type="stmt"/>
            <line falsecount="50" truecount="550" num="240" type="cond"/>
            <line num="242" count="550" type="stmt"/>
            <line num="243" count="550" type="stmt"/>
            <line num="245" count="550" type="stmt"/>
            <line num="246" count="550" type="stmt"/>
            <line num="248" count="550" type="stmt"/>
            <line num="252" count="550" type="stmt"/>
            <line complexity="4" visibility="public" signature="testInhomogeneousImpliedVolatility() : void" num="258" testsuccess="true" count="2" testduration="0.124" type="method"/>
            <line num="261" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="264" type="cond"/>
            <line num="265" count="10" type="stmt"/>
            <line falsecount="10" truecount="50" num="265" type="cond"/>
            <line num="266" count="50" type="stmt"/>
            <line falsecount="50" truecount="550" num="266" type="cond"/>
            <line num="268" count="550" type="stmt"/>
            <line num="269" count="550" type="stmt"/>
            <line num="271" count="550" type="stmt"/>
            <line num="272" count="550" type="stmt"/>
            <line num="274" count="550" type="stmt"/>
            <line num="278" count="550" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/BarrierOptionsTest.java" name="BarrierOptionsTest.java">
            <metrics coveredelements="136" coveredconditionals="32" complexity="24" loc="210" coveredmethods="8" methods="8" elements="136" classes="1" ncloc="166" statements="96" conditionals="32" coveredstatements="96"/>
            <class name="BarrierOptionsTest">
               <metrics coveredelements="136" complexity="24" methods="8" testruns="16" statements="96" coveredconditionals="32" coveredmethods="8" elements="136" testfailures="0" testduration="0.061" conditionals="32" coveredstatements="96" testpasses="16"/>
            </class>
            <line complexity="3" visibility="public" signature="testDownAndInPut() : void" num="26" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="38" type="cond"/>
            <line num="39" count="6" type="stmt"/>
            <line falsecount="6" truecount="12" num="39" type="cond"/>
            <line num="40" count="12" type="stmt"/>
            <line num="43" count="12" type="stmt"/>
            <line num="44" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndInCall() : void" num="49" testsuccess="true" count="2" testduration="0.022" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="61" type="cond"/>
            <line num="62" count="6" type="stmt"/>
            <line falsecount="6" truecount="12" num="62" type="cond"/>
            <line num="63" count="12" type="stmt"/>
            <line num="66" count="12" type="stmt"/>
            <line num="67" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndInPut() : void" num="73" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="85" type="cond"/>
            <line num="86" count="6" type="stmt"/>
            <line falsecount="6" truecount="6" num="86" type="cond"/>
            <line num="87" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndInCall() : void" num="96" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="108" type="cond"/>
            <line num="109" count="6" type="stmt"/>
            <line falsecount="6" truecount="6" num="109" type="cond"/>
            <line num="110" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="114" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndOutPut() : void" num="119" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="131" type="cond"/>
            <line num="132" count="6" type="stmt"/>
            <line falsecount="6" truecount="12" num="132" type="cond"/>
            <line num="133" count="12" type="stmt"/>
            <line num="136" count="12" type="stmt"/>
            <line num="137" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDownAndOutCall() : void" num="142" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="154" type="cond"/>
            <line num="155" count="6" type="stmt"/>
            <line falsecount="6" truecount="12" num="155" type="cond"/>
            <line num="156" count="12" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line num="160" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndOutPut() : void" num="165" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="177" type="cond"/>
            <line num="178" count="6" type="stmt"/>
            <line falsecount="6" truecount="6" num="178" type="cond"/>
            <line num="179" count="6" type="stmt"/>
            <line num="182" count="6" type="stmt"/>
            <line num="183" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testUpAndOutCall() : void" num="188" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line num="200" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="200" type="cond"/>
            <line num="201" count="6" type="stmt"/>
            <line falsecount="6" truecount="6" num="201" type="cond"/>
            <line num="202" count="6" type="stmt"/>
            <line num="205" count="6" type="stmt"/>
            <line num="206" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/JarqueBeraTestTest.java" name="JarqueBeraTestTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="JarqueBeraTestTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="2" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.175" conditionals="0" coveredstatements="3" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="24" testsuccess="true" count="2" testduration="0.094" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/LinearAlgebraTest.java" name="LinearAlgebraTest.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="3" loc="87" coveredmethods="3" methods="3" elements="39" classes="1" ncloc="66" statements="36" conditionals="0" coveredstatements="36"/>
            <class name="LinearAlgebraTest">
               <metrics coveredelements="39" complexity="3" methods="3" testruns="6" statements="36" coveredconditionals="0" coveredmethods="3" elements="39" testfailures="0" testduration="0.082" conditionals="0" coveredstatements="36" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse() : void" num="14" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse3() : void" num="31" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSolveLinearEquationLeastSquarePseudoInverse2() : void" num="47" testsuccess="true" count="2" testduration="0.038" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/functions/NormalDistributionTest.java" name="NormalDistributionTest.java">
            <metrics coveredelements="25" coveredconditionals="4" complexity="4" loc="57" coveredmethods="2" methods="2" elements="25" classes="1" ncloc="32" statements="19" conditionals="4" coveredstatements="19"/>
            <class name="NormalDistributionTest">
               <metrics coveredelements="25" complexity="4" methods="2" testruns="4" statements="19" coveredconditionals="4" coveredmethods="2" elements="25" testfailures="0" testduration="0.273" conditionals="4" coveredstatements="19" testpasses="4"/>
            </class>
            <line complexity="2" visibility="public" signature="testCumulativeDistribution() : void" num="19" testsuccess="true" count="2" testduration="0.096" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line falsecount="2" truecount="1602" num="24" type="cond"/>
            <line num="25" count="1602" type="stmt"/>
            <line num="26" count="1602" type="stmt"/>
            <line num="28" count="1602" type="stmt"/>
            <line num="29" count="1602" type="stmt"/>
            <line num="31" count="1602" type="stmt"/>
            <line num="32" count="1602" type="stmt"/>
            <line num="34" count="1602" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInverseCumulativeDistribution() : void" num="38" testsuccess="true" count="2" testduration="0.04" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="43" type="cond"/>
            <line num="44" count="2000" type="stmt"/>
            <line num="45" count="2000" type="stmt"/>
            <line num="47" count="2000" type="stmt"/>
            <line num="48" count="2000" type="stmt"/>
            <line num="49" count="2000" type="stmt"/>
            <line num="51" count="2000" type="stmt"/>
            <line num="52" count="2000" type="stmt"/>
            <line num="54" count="2000" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.convexityadjustment">
         <metrics coveredelements="48" complexity="2" loc="164" methods="2" classes="1" statements="46" coveredconditionals="0" coveredmethods="2" elements="48" ncloc="98" files="1" conditionals="0" coveredstatements="46"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/convexityadjustment/CMSOptionTest.java" name="CMSOptionTest.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="2" loc="164" coveredmethods="2" methods="2" elements="48" classes="1" ncloc="98" statements="46" conditionals="0" coveredstatements="46"/>
            <class name="CMSOptionTest">
               <metrics coveredelements="48" complexity="2" methods="2" testruns="2" statements="46" coveredconditionals="0" coveredmethods="2" elements="48" testfailures="0" testduration="11.030999999999999" conditionals="0" coveredstatements="46" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testCMSOption() : void" num="57" testsuccess="true" count="2" testduration="5.262" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLIBORModelMonteCarloSimulation(ForwardCurve) : LIBORMonteCarloSimulationFromLIBORModel" num="136" count="2" type="method"/>
            <line num="138" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.montecarlo.interestrate.modelplugins">
         <metrics coveredelements="34" complexity="2" loc="97" methods="1" classes="1" statements="31" coveredconditionals="2" coveredmethods="1" elements="34" ncloc="47" files="1" conditionals="2" coveredstatements="31"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/montecarlo/interestrate/modelplugins/LIBORVolatilityModelFourParameterExponentialFormIntegratedTest.java" name="LIBORVolatilityModelFourParameterExponentialFormIntegratedTest.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="2" loc="97" coveredmethods="1" methods="1" elements="34" classes="1" ncloc="47" statements="31" conditionals="2" coveredstatements="31"/>
            <class name="LIBORVolatilityModelFourParameterExponentialFormIntegratedTest">
               <metrics coveredelements="34" complexity="2" methods="1" testruns="2" statements="31" coveredconditionals="2" coveredmethods="1" elements="34" testfailures="0" testduration="1.741" conditionals="2" coveredstatements="31" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="31" testsuccess="true" count="2" testduration="0.878" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line falsecount="2" truecount="2000" num="55" type="cond"/>
            <line num="56" count="2000" type="stmt"/>
            <line num="57" count="2000" type="stmt"/>
            <line num="58" count="2000" type="stmt"/>
            <line num="59" count="2000" type="stmt"/>
            <line num="61" count="2000" type="stmt"/>
            <line num="62" count="2000" type="stmt"/>
            <line num="63" count="2000" type="stmt"/>
            <line num="65" count="2000" type="stmt"/>
            <line num="66" count="2000" type="stmt"/>
            <line num="68" count="2000" type="stmt"/>
            <line num="73" count="2000" type="stmt"/>
            <line num="74" count="2000" type="stmt"/>
            <line num="75" count="2000" type="stmt"/>
            <line num="76" count="2000" type="stmt"/>
            <line num="77" count="2000" type="stmt"/>
            <line num="78" count="2000" type="stmt"/>
            <line num="79" count="2000" type="stmt"/>
            <line num="80" count="2000" type="stmt"/>
            <line num="85" count="2000" type="stmt"/>
            <line num="92" count="2000" type="stmt"/>
         </file>
      </package>
      <package name="net.finmath.analytic.model.curves.test">
         <metrics coveredelements="199" complexity="17" loc="588" methods="10" classes="2" statements="181" coveredconditionals="13" coveredmethods="9" elements="205" ncloc="348" files="2" conditionals="14" coveredstatements="177"/>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/analytic/model/curves/test/CalibrationTest.java" name="CalibrationTest.java">
            <metrics coveredelements="75" coveredconditionals="4" complexity="7" loc="255" coveredmethods="4" methods="5" elements="79" classes="1" ncloc="144" statements="70" conditionals="4" coveredstatements="67"/>
            <class name="CalibrationTest">
               <metrics coveredelements="75" complexity="7" methods="5" testruns="12" statements="70" coveredconditionals="4" coveredmethods="4" elements="79" testfailures="0" testduration="1.034" conditionals="4" coveredstatements="67" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="CalibrationTest(InterpolationMethod)" num="51" count="12" type="method"/>
            <line num="53" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateData() : Collection&lt;Object[]&gt;" num="62" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForwardCurveFromDiscountCurve() : void" num="89" count="6" type="method"/>
            <line num="96" count="6" type="stmt"/>
            <line num="103" count="6" type="stmt"/>
            <line num="110" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="119" count="6" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCurvesAndCalibration() : void" num="128" count="6" type="method"/>
            <line num="137" count="6" type="stmt"/>
            <line num="140" count="6" type="stmt"/>
            <line num="150" count="6" type="stmt"/>
            <line num="157" count="6" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line num="160" count="6" type="stmt"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="168" count="6" type="stmt"/>
            <line num="169" count="6" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line num="173" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line num="184" count="6" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
            <line num="186" count="6" type="stmt"/>
            <line num="187" count="6" type="stmt"/>
            <line falsecount="6" truecount="24" num="187" type="cond"/>
            <line num="188" count="24" type="stmt"/>
            <line num="189" count="24" type="stmt"/>
            <line num="190" count="24" type="stmt"/>
            <line num="192" count="24" type="stmt"/>
            <line num="194" count="6" type="stmt"/>
            <line num="195" count="6" type="stmt"/>
            <line num="197" count="6" type="stmt"/>
            <line num="207" count="6" type="stmt"/>
            <line num="210" count="6" type="stmt"/>
            <line num="212" count="6" type="stmt"/>
            <line num="215" count="6" type="stmt"/>
            <line num="218" count="6" type="stmt"/>
            <line num="219" count="6" type="stmt"/>
            <line num="220" count="6" type="stmt"/>
            <line num="221" count="6" type="stmt"/>
            <line num="222" count="6" type="stmt"/>
            <line num="225" count="6" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="229" count="6" type="stmt"/>
            <line num="230" count="6" type="stmt"/>
            <line num="231" count="6" type="stmt"/>
            <line num="232" count="6" type="stmt"/>
            <line num="233" count="6" type="stmt"/>
            <line num="241" count="6" type="stmt"/>
            <line num="242" count="6" type="stmt"/>
            <line num="243" count="6" type="stmt"/>
            <line falsecount="6" truecount="30" num="243" type="cond"/>
            <line num="244" count="30" type="stmt"/>
            <line num="245" count="30" type="stmt"/>
            <line num="246" count="30" type="stmt"/>
            <line num="248" count="30" type="stmt"/>
            <line num="250" count="6" type="stmt"/>
            <line num="251" count="6" type="stmt"/>
            <line num="253" count="6" type="stmt"/>
         </file>
         <file path="/Users/fries/git/finmath-lib/target/checkout/src/test/java8/net/finmath/analytic/model/curves/test/TestCurvesFromLIBORModel.java" name="TestCurvesFromLIBORModel.java">
            <metrics coveredelements="124" coveredconditionals="9" complexity="10" loc="333" coveredmethods="5" methods="5" elements="126" classes="1" ncloc="204" statements="111" conditionals="10" coveredstatements="110"/>
            <class name="TestCurvesFromLIBORModel">
               <metrics coveredelements="124" complexity="10" methods="5" testruns="2" statements="111" coveredconditionals="9" coveredmethods="5" elements="126" testfailures="0" testduration="10.636" conditionals="10" coveredstatements="110" testpasses="2"/>
            </class>
            <line complexity="3" visibility="public" signature="testStochasticCurves() : void" num="55" testsuccess="true" count="2" testduration="5.627" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line falsecount="2" truecount="120" num="86" type="cond"/>
            <line num="87" count="120" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="getRegressionBasisFunctions(RandomVariable[]) : ArrayList&lt;RandomVariable&gt;" num="110" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line falsecount="2" truecount="120" num="114" type="cond"/>
            <line num="115" count="120" type="stmt"/>
            <line falsecount="120" truecount="240" num="115" type="cond"/>
            <line num="116" count="240" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="createLIBORMarketModel(RandomVariableFactory,int,int,double) : LIBORModelMonteCarloSimulationModel" num="123" count="2" type="method"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="158" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="167" count="2" type="stmt"/>
            <line falsecount="2" truecount="480" num="167" type="cond"/>
            <line num="168" count="480" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="194" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="204" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="208" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSwap(int,int,RandomVariableFactory) : TermStructureMonteCarloProduct" num="212" count="2" type="method"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="239" count="2" type="stmt"/>
            <line num="241" count="2" type="stmt"/>
            <line num="242" count="2" type="stmt"/>
            <line num="244" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="258" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSwapAnalytic(int,int) : AbstractAnalyticProduct" num="276" count="2" type="method"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="290" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="294" count="2" type="stmt"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="299" count="2" type="stmt"/>
            <line num="300" count="2" type="stmt"/>
            <line num="301" count="2" type="stmt"/>
            <line num="302" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="323" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
            <line num="326" count="2" type="stmt"/>
            <line num="327" count="2" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line num="331" count="2" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>